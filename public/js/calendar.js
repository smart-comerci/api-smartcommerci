(function webpackUniversalModuleDefinition(root, factory) {
  if (typeof exports === "object" && typeof module === "object")
    module.exports = factory();
  else if (typeof define === "function" && define.amd) define([], factory);
  else if (typeof exports === "object") exports["bulmaCalendar"] = factory();
  else root["bulmaCalendar"] = factory();
})(typeof self !== "undefined" ? self : this, function () {
  return /******/ (function (modules) {
    // webpackBootstrap
    /******/ // The module cache
    /******/ var installedModules = {};
    /******/
    /******/ // The require function
    /******/ function __webpack_require__(moduleId) {
      /******/
      /******/ // Check if module is in cache
      /******/ if (installedModules[moduleId]) {
        /******/ return installedModules[moduleId].exports;
        /******/
      }
      /******/ // Create a new module (and put it into the cache)
      /******/ var module = (installedModules[moduleId] = {
        /******/ i: moduleId,
        /******/ l: false,
        /******/ exports: {},
        /******/
      });
      /******/
      /******/ // Execute the module function
      /******/ modules[moduleId].call(
        module.exports,
        module,
        module.exports,
        __webpack_require__
      );
      /******/
      /******/ // Flag the module as loaded
      /******/ module.l = true;
      /******/
      /******/ // Return the exports of the module
      /******/ return module.exports;
      /******/
    }
    /******/
    /******/
    /******/ // expose the modules object (__webpack_modules__)
    /******/ __webpack_require__.m = modules;
    /******/
    /******/ // expose the module cache
    /******/ __webpack_require__.c = installedModules;
    /******/
    /******/ // define getter function for harmony exports
    /******/ __webpack_require__.d = function (exports, name, getter) {
      /******/ if (!__webpack_require__.o(exports, name)) {
        /******/ Object.defineProperty(exports, name, {
          /******/ configurable: false,
          /******/ enumerable: true,
          /******/ get: getter,
          /******/
        });
        /******/
      }
      /******/
    };
    /******/
    /******/ // getDefaultExport function for compatibility with non-harmony modules
    /******/ __webpack_require__.n = function (module) {
      /******/ var getter =
        module && module.__esModule
          ? /******/ function getDefault() {
              return module["default"];
            }
          : /******/ function getModuleExports() {
              return module;
            };
      /******/ __webpack_require__.d(getter, "a", getter);
      /******/ return getter;
      /******/
    };
    /******/
    /******/ // Object.prototype.hasOwnProperty.call
    /******/ __webpack_require__.o = function (object, property) {
      return Object.prototype.hasOwnProperty.call(object, property);
    };
    /******/
    /******/ // __webpack_public_path__
    /******/ __webpack_require__.p = "";
    /******/
    /******/ // Load entry module and return exports
    /******/ return __webpack_require__((__webpack_require__.s = 477));
    /******/
  })(
    /************************************************************************/
    /******/ [
      /* 0 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          requiredArgs;
        function requiredArgs(required, args) {
          if (args.length < required) {
            throw new TypeError(
              required +
                " argument" +
                (required > 1 ? "s" : "") +
                " required, but only " +
                args.length +
                " present"
            );
          }
        }

        /***/
      },
      /* 1 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = toDate;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name toDate
         * @category Common Helpers
         * @summary Convert the given argument to an instance of Date.
         *
         * @description
         * Convert the given argument to an instance of Date.
         *
         * If the argument is an instance of Date, the function returns its clone.
         *
         * If the argument is a number, it is treated as a timestamp.
         *
         * If the argument is none of the above, the function returns Invalid Date.
         *
         * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
         *
         * @param {Date|Number} argument - the value to convert
         * @returns {Date} the parsed date in the local time zone
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Clone the date:
         * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
         * //=> Tue Feb 11 2014 11:30:30
         *
         * @example
         * // Convert the timestamp to date:
         * const result = toDate(1392098430000)
         * //=> Tue Feb 11 2014 11:30:30
         */

        function toDate(argument) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var argStr = Object.prototype.toString.call(argument); // Clone the date

          if (
            argument instanceof Date ||
            (typeof argument === "object" && argStr === "[object Date]")
          ) {
            // Prevent the date to lose the milliseconds when passed to new Date() in IE10
            return new Date(argument.getTime());
          } else if (
            typeof argument === "number" ||
            argStr === "[object Number]"
          ) {
            return new Date(argument);
          } else {
            if (
              (typeof argument === "string" || argStr === "[object String]") &&
              typeof console !== "undefined"
            ) {
              // eslint-disable-next-line no-console
              console.warn(
                "Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"
              ); // eslint-disable-next-line no-console

              console.warn(new Error().stack);
            }

            return new Date(NaN);
          }
        }

        /***/
      },
      /* 2 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = buildFormatLongFn;

        function buildFormatLongFn(args) {
          return function (dirtyOptions) {
            var options = dirtyOptions || {};
            var width = options.width
              ? String(options.width)
              : args.defaultWidth;
            var format = args.formats[width] || args.formats[args.defaultWidth];
            return format;
          };
        }

        module.exports = exports.default;

        /***/
      },
      /* 3 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = buildLocalizeFn;

        function buildLocalizeFn(args) {
          return function (dirtyIndex, dirtyOptions) {
            var options = dirtyOptions || {};
            var context = options.context
              ? String(options.context)
              : "standalone";
            var valuesArray;

            if (context === "formatting" && args.formattingValues) {
              var defaultWidth =
                args.defaultFormattingWidth || args.defaultWidth;
              var width = options.width ? String(options.width) : defaultWidth;
              valuesArray =
                args.formattingValues[width] ||
                args.formattingValues[defaultWidth];
            } else {
              var _defaultWidth = args.defaultWidth;

              var _width = options.width
                ? String(options.width)
                : args.defaultWidth;

              valuesArray = args.values[_width] || args.values[_defaultWidth];
            }

            var index = args.argumentCallback
              ? args.argumentCallback(dirtyIndex)
              : dirtyIndex;
            return valuesArray[index];
          };
        }

        module.exports = exports.default;

        /***/
      },
      /* 4 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = buildMatchFn;

        function buildMatchFn(args) {
          return function (dirtyString, dirtyOptions) {
            var string = String(dirtyString);
            var options = dirtyOptions || {};
            var width = options.width;
            var matchPattern =
              (width && args.matchPatterns[width]) ||
              args.matchPatterns[args.defaultMatchWidth];
            var matchResult = string.match(matchPattern);

            if (!matchResult) {
              return null;
            }

            var matchedString = matchResult[0];
            var parsePatterns =
              (width && args.parsePatterns[width]) ||
              args.parsePatterns[args.defaultParseWidth];
            var value;

            if (
              Object.prototype.toString.call(parsePatterns) === "[object Array]"
            ) {
              value = findIndex(parsePatterns, function (pattern) {
                return pattern.test(matchedString);
              });
            } else {
              value = findKey(parsePatterns, function (pattern) {
                return pattern.test(matchedString);
              });
            }

            value = args.valueCallback ? args.valueCallback(value) : value;
            value = options.valueCallback
              ? options.valueCallback(value)
              : value;
            return {
              value: value,
              rest: string.slice(matchedString.length),
            };
          };
        }

        function findKey(object, predicate) {
          for (var key in object) {
            if (object.hasOwnProperty(key) && predicate(object[key])) {
              return key;
            }
          }
        }

        function findIndex(array, predicate) {
          for (var key = 0; key < array.length; key++) {
            if (predicate(array[key])) {
              return key;
            }
          }
        }

        module.exports = exports.default;

        /***/
      },
      /* 5 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = buildMatchPatternFn;

        function buildMatchPatternFn(args) {
          return function (dirtyString, dirtyOptions) {
            var string = String(dirtyString);
            var options = dirtyOptions || {};
            var matchResult = string.match(args.matchPattern);

            if (!matchResult) {
              return null;
            }

            var matchedString = matchResult[0];
            var parseResult = string.match(args.parsePattern);

            if (!parseResult) {
              return null;
            }

            var value = args.valueCallback
              ? args.valueCallback(parseResult[0])
              : parseResult[0];
            value = options.valueCallback
              ? options.valueCallback(value)
              : value;
            return {
              value: value,
              rest: string.slice(matchedString.length),
            };
          };
        }

        module.exports = exports.default;

        /***/
      },
      /* 6 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = toInteger;
        function toInteger(dirtyNumber) {
          if (
            dirtyNumber === null ||
            dirtyNumber === true ||
            dirtyNumber === false
          ) {
            return NaN;
          }

          var number = Number(dirtyNumber);

          if (isNaN(number)) {
            return number;
          }

          return number < 0 ? Math.ceil(number) : Math.floor(number);
        }

        /***/
      },
      /* 7 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = isSameUTCWeek;

        var _index = _interopRequireDefault(__webpack_require__(635));

        var _index2 = _interopRequireDefault(__webpack_require__(60));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376
        function isSameUTCWeek(dirtyDateLeft, dirtyDateRight, options) {
          (0, _index2.default)(2, arguments);
          var dateLeftStartOfWeek = (0, _index.default)(dirtyDateLeft, options);
          var dateRightStartOfWeek = (0, _index.default)(
            dirtyDateRight,
            options
          );
          return (
            dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()
          );
        }

        module.exports = exports.default;

        /***/
      },
      /* 8 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isValid;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isValid
         * @category Common Helpers
         * @summary Is the given date valid?
         *
         * @description
         * Returns false if argument is Invalid Date and true otherwise.
         * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
         * Invalid Date is a Date, whose time value is NaN.
         *
         * Time value of Date: http://es5.github.io/#x15.9.1.1
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - Now `isValid` doesn't throw an exception
         *   if the first argument is not an instance of Date.
         *   Instead, argument is converted beforehand using `toDate`.
         *
         *   Examples:
         *
         *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
         *   |---------------------------|---------------|---------------|
         *   | `new Date()`              | `true`        | `true`        |
         *   | `new Date('2016-01-01')`  | `true`        | `true`        |
         *   | `new Date('')`            | `false`       | `false`       |
         *   | `new Date(1488370835081)` | `true`        | `true`        |
         *   | `new Date(NaN)`           | `false`       | `false`       |
         *   | `'2016-01-01'`            | `TypeError`   | `false`       |
         *   | `''`                      | `TypeError`   | `false`       |
         *   | `1488370835081`           | `TypeError`   | `true`        |
         *   | `NaN`                     | `TypeError`   | `false`       |
         *
         *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
         *   that try to coerce arguments to the expected type
         *   (which is also the case with other *date-fns* functions).
         *
         * @param {*} date - the date to check
         * @returns {Boolean} the date is valid
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // For the valid date:
         * var result = isValid(new Date(2014, 1, 31))
         * //=> true
         *
         * @example
         * // For the value, convertable into a date:
         * var result = isValid(1393804800000)
         * //=> true
         *
         * @example
         * // For the invalid date:
         * var result = isValid(new Date(''))
         * //=> false
         */

        function isValid(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          return !isNaN(date);
        }

        /***/
      },
      /* 9 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addDays;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addDays
         * @category Day Helpers
         * @summary Add the specified number of days to the given date.
         *
         * @description
         * Add the specified number of days to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} - the new date with the days added
         * @throws {TypeError} - 2 arguments required
         *
         * @example
         * // Add 10 days to 1 September 2014:
         * const result = addDays(new Date(2014, 8, 1), 10)
         * //=> Thu Sep 11 2014 00:00:00
         */

        function addDays(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);

          if (isNaN(amount)) {
            return new Date(NaN);
          }

          if (!amount) {
            // If 0 days, no-op to avoid changing times in the hour before end of DST
            return date;
          }

          date.setDate(date.getDate() + amount);
          return date;
        }

        /***/
      },
      /* 10 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          getTimezoneOffsetInMilliseconds;
        /**
         * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
         * They usually appear for dates that denote time before the timezones were introduced
         * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
         * and GMT+01:00:00 after that date)
         *
         * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
         * which would lead to incorrect calculations.
         *
         * This function returns the timezone offset in milliseconds that takes seconds in account.
         */
        function getTimezoneOffsetInMilliseconds(date) {
          var utcDate = new Date(
            Date.UTC(
              date.getFullYear(),
              date.getMonth(),
              date.getDate(),
              date.getHours(),
              date.getMinutes(),
              date.getSeconds(),
              date.getMilliseconds()
            )
          );
          utcDate.setUTCFullYear(date.getFullYear());
          return date.getTime() - utcDate.getTime();
        }

        /***/
      },
      /* 11 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = startOfWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfWeek
         * @category Week Helpers
         * @summary Return the start of a week for the given date.
         *
         * @description
         * Return the start of a week for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Date} the start of a week
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // The start of a week for 2 September 2014 11:55:00:
         * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Sun Aug 31 2014 00:00:00
         *
         * @example
         * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
         * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
         * //=> Mon Sep 01 2014 00:00:00
         */

        function startOfWeek(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getDay();
          var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
          date.setDate(date.getDate() - diff);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 12 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = nextDay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getDay_index_js__ =
          __webpack_require__(54);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__toDate_index_js__ =
          __webpack_require__(1);

        var baseMap = [7, 6, 5, 4, 3, 2, 1];
        /**
         * @name nextDay
         * @category Weekday Helpers
         * @summary When is the next day of the week?
         *
         * @description
         * When is the next day of the week? 0-6 the day of the week, 0 represents Sunday.
         *
         * @param {Date | number} date - the date to check
         * @param {Day} day - day of the week
         * @returns {Date} - the date is the next day of week
         * @throws {TypeError} - 2 arguments required
         *
         * @example
         * // When is the next Monday after Mar, 20, 2020?
         * const result = nextDay(new Date(2020, 2, 20), 1)
         * //=> Mon Mar 23 2020 00:00:00
         *
         * @example
         * // When is the next Tuesday after Mar, 21, 2020?
         * const result = nextDay(new Date(2020, 2, 21), 2)
         * //=> Tue Mar 24 2020 00:00:00
         */

        function nextDay(date, day) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var map = genMap(day);
          return Object(
            __WEBPACK_IMPORTED_MODULE_2__addDays_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_3__toDate_index_js__["a" /* default */]
            )(date),
            map[
              Object(
                __WEBPACK_IMPORTED_MODULE_1__getDay_index_js__[
                  "a" /* default */
                ]
              )(
                Object(
                  __WEBPACK_IMPORTED_MODULE_3__toDate_index_js__[
                    "a" /* default */
                  ]
                )(date)
              )
            ]
          );
        }

        function genMap(daysToMove) {
          if (daysToMove === 0) {
            return baseMap;
          } else {
            var mapStart = baseMap.slice(-daysToMove);
            var mapEnd = baseMap.slice(0, baseMap.length - daysToMove);
            return mapStart.concat(mapEnd);
          }
        }

        /***/
      },
      /* 13 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'last' eeee 'at' p",
          yesterday: "'yesterday at' p",
          today: "'today at' p",
          tomorrow: "'tomorrow at' p",
          nextWeek: "eeee 'at' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 14 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["B", "A"],
          abbreviated: ["BC", "AD"],
          wide: ["Before Christ", "Anno Domini"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "T", "W", "T", "F", "S"],
          short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
          abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mi",
            noon: "n",
            morning: "morning",
            afternoon: "afternoon",
            evening: "evening",
            night: "night",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "midnight",
            noon: "noon",
            morning: "morning",
            afternoon: "afternoon",
            evening: "evening",
            night: "night",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnight",
            noon: "noon",
            morning: "morning",
            afternoon: "afternoon",
            evening: "evening",
            night: "night",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mi",
            noon: "n",
            morning: "in the morning",
            afternoon: "in the afternoon",
            evening: "in the evening",
            night: "at night",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "midnight",
            noon: "noon",
            morning: "in the morning",
            afternoon: "in the afternoon",
            evening: "in the evening",
            night: "at night",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnight",
            noon: "noon",
            morning: "in the morning",
            afternoon: "in the afternoon",
            evening: "in the evening",
            night: "at night",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          var rem100 = number % 100;

          if (rem100 > 20 || rem100 < 10) {
            switch (rem100 % 10) {
              case 1:
                return number + "st";

              case 2:
                return number + "nd";

              case 3:
                return number + "rd";
            }
          }

          return number + "th";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 15 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(b|a)/i,
          abbreviated:
            /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
          wide: /^(before christ|before common era|anno domini|common era)/i,
        };
        var parseEraPatterns = {
          any: [/^b/i, /^(a|c)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](th|st|nd|rd)? quarter/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
          wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtwf]/i,
          short: /^(su|mo|tu|we|th|fr|sa)/i,
          abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
          wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
          any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
          any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mi/i,
            noon: /^no/i,
            morning: /morning/i,
            afternoon: /afternoon/i,
            evening: /evening/i,
            night: /night/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 16 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfISOWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfISOWeek
         * @category ISO Week Helpers
         * @summary Return the start of an ISO week for the given date.
         *
         * @description
         * Return the start of an ISO week for the given date.
         * The result will be in the local timezone.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of an ISO week
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of an ISO week for 2 September 2014 11:55:00:
         * var result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Mon Sep 01 2014 00:00:00
         */

        function startOfISOWeek(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, {
            weekStartsOn: 1,
          });
        }

        /***/
      },
      /* 17 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInCalendarDays;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfDay_index_js__ =
          __webpack_require__(32);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_DAY = 86400000;
        /**
         * @name differenceInCalendarDays
         * @category Day Helpers
         * @summary Get the number of calendar days between the given dates.
         *
         * @description
         * Get the number of calendar days between the given dates. This means that the times are removed
         * from the dates and then the difference in days is calculated.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of calendar days
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many calendar days are between
         * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
         * const result = differenceInCalendarDays(
         *   new Date(2012, 6, 2, 0, 0),
         *   new Date(2011, 6, 2, 23, 0)
         * )
         * //=> 366
         * // How many calendar days are between
         * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
         * const result = differenceInCalendarDays(
         *   new Date(2011, 6, 3, 0, 1),
         *   new Date(2011, 6, 2, 23, 59)
         * )
         * //=> 1
         */

        function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var startOfDayLeft = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfDay_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var startOfDayRight = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfDay_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          var timestampLeft =
            startOfDayLeft.getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(startOfDayLeft);
          var timestampRight =
            startOfDayRight.getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(startOfDayRight); // Round the number of days to the nearest integer
          // because the number of milliseconds in a day is not constant
          // (e.g. it's different in the day of the daylight saving time clock shift)

          return Math.round(
            (timestampLeft - timestampRight) / MILLISECONDS_IN_DAY
          );
        }

        /***/
      },
      /* 18 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = compareAsc;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name compareAsc
         * @category Common Helpers
         * @summary Compare the two dates and return -1, 0 or 1.
         *
         * @description
         * Compare the two dates and return 1 if the first date is after the second,
         * -1 if the first date is before the second or 0 if dates are equal.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to compare
         * @param {Date|Number} dateRight - the second date to compare
         * @returns {Number} the result of the comparison
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Compare 11 February 1987 and 10 July 1989:
         * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))
         * //=> -1
         *
         * @example
         * // Sort the array of dates:
         * const result = [
         *   new Date(1995, 6, 2),
         *   new Date(1987, 1, 11),
         *   new Date(1989, 6, 10)
         * ].sort(compareAsc)
         * //=> [
         * //   Wed Feb 11 1987 00:00:00,
         * //   Mon Jul 10 1989 00:00:00,
         * //   Sun Jul 02 1995 00:00:00
         * // ]
         */

        function compareAsc(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var diff = dateLeft.getTime() - dateRight.getTime();

          if (diff < 0) {
            return -1;
          } else if (diff > 0) {
            return 1; // Return 0 if diff is 0; return NaN if diff is NaN
          } else {
            return diff;
          }
        }

        /***/
      },
      /* 19 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "less than a second",
            other: "less than {{count}} seconds",
          },
          xSeconds: {
            one: "1 second",
            other: "{{count}} seconds",
          },
          halfAMinute: "half a minute",
          lessThanXMinutes: {
            one: "less than a minute",
            other: "less than {{count}} minutes",
          },
          xMinutes: {
            one: "1 minute",
            other: "{{count}} minutes",
          },
          aboutXHours: {
            one: "about 1 hour",
            other: "about {{count}} hours",
          },
          xHours: {
            one: "1 hour",
            other: "{{count}} hours",
          },
          xDays: {
            one: "1 day",
            other: "{{count}} days",
          },
          aboutXWeeks: {
            one: "about 1 week",
            other: "about {{count}} weeks",
          },
          xWeeks: {
            one: "1 week",
            other: "{{count}} weeks",
          },
          aboutXMonths: {
            one: "about 1 month",
            other: "about {{count}} months",
          },
          xMonths: {
            one: "1 month",
            other: "{{count}} months",
          },
          aboutXYears: {
            one: "about 1 year",
            other: "about {{count}} years",
          },
          xYears: {
            one: "1 year",
            other: "{{count}} years",
          },
          overXYears: {
            one: "over 1 year",
            other: "over {{count}} years",
          },
          almostXYears: {
            one: "almost 1 year",
            other: "almost {{count}} years",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "in " + result;
            } else {
              return result + " ago";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 20 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__add_index_js__ =
          __webpack_require__(478);
        /* unused harmony reexport add */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addBusinessDays_index_js__ =
          __webpack_require__(70);
        /* unused harmony reexport addBusinessDays */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "a",
          function () {
            return __WEBPACK_IMPORTED_MODULE_2__addDays_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__addHours_index_js__ =
          __webpack_require__(42);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "b",
          function () {
            return __WEBPACK_IMPORTED_MODULE_3__addHours_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addISOWeekYears_index_js__ =
          __webpack_require__(72);
        /* unused harmony reexport addISOWeekYears */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__addMilliseconds_index_js__ =
          __webpack_require__(26);
        /* unused harmony reexport addMilliseconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__addMinutes_index_js__ =
          __webpack_require__(43);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "c",
          function () {
            return __WEBPACK_IMPORTED_MODULE_6__addMinutes_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__addMonths_index_js__ =
          __webpack_require__(25);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "d",
          function () {
            return __WEBPACK_IMPORTED_MODULE_7__addMonths_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__addQuarters_index_js__ =
          __webpack_require__(44);
        /* unused harmony reexport addQuarters */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__addSeconds_index_js__ =
          __webpack_require__(74);
        /* unused harmony reexport addSeconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__addWeeks_index_js__ =
          __webpack_require__(33);
        /* unused harmony reexport addWeeks */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__addYears_index_js__ =
          __webpack_require__(75);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "e",
          function () {
            return __WEBPACK_IMPORTED_MODULE_11__addYears_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__areIntervalsOverlapping_index_js__ =
          __webpack_require__(479);
        /* unused harmony reexport areIntervalsOverlapping */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__closestIndexTo_index_js__ =
          __webpack_require__(480);
        /* unused harmony reexport closestIndexTo */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__closestTo_index_js__ =
          __webpack_require__(481);
        /* unused harmony reexport closestTo */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__compareAsc_index_js__ =
          __webpack_require__(18);
        /* unused harmony reexport compareAsc */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__compareDesc_index_js__ =
          __webpack_require__(482);
        /* unused harmony reexport compareDesc */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__differenceInBusinessDays_index_js__ =
          __webpack_require__(483);
        /* unused harmony reexport differenceInBusinessDays */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__differenceInCalendarDays_index_js__ =
          __webpack_require__(17);
        /* unused harmony reexport differenceInCalendarDays */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_19__differenceInCalendarISOWeekYears_index_js__ =
          __webpack_require__(76);
        /* unused harmony reexport differenceInCalendarISOWeekYears */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_20__differenceInCalendarISOWeeks_index_js__ =
          __webpack_require__(484);
        /* unused harmony reexport differenceInCalendarISOWeeks */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_21__differenceInCalendarMonths_index_js__ =
          __webpack_require__(77);
        /* unused harmony reexport differenceInCalendarMonths */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_22__differenceInCalendarQuarters_index_js__ =
          __webpack_require__(485);
        /* unused harmony reexport differenceInCalendarQuarters */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_23__differenceInCalendarWeeks_index_js__ =
          __webpack_require__(79);
        /* unused harmony reexport differenceInCalendarWeeks */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_24__differenceInCalendarYears_index_js__ =
          __webpack_require__(80);
        /* unused harmony reexport differenceInCalendarYears */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_25__differenceInDays_index_js__ =
          __webpack_require__(45);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "f",
          function () {
            return __WEBPACK_IMPORTED_MODULE_25__differenceInDays_index_js__[
              "a"
            ];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_26__differenceInHours_index_js__ =
          __webpack_require__(81);
        /* unused harmony reexport differenceInHours */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_27__differenceInISOWeekYears_index_js__ =
          __webpack_require__(486);
        /* unused harmony reexport differenceInISOWeekYears */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_28__differenceInMilliseconds_index_js__ =
          __webpack_require__(34);
        /* unused harmony reexport differenceInMilliseconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_29__differenceInMinutes_index_js__ =
          __webpack_require__(83);
        /* unused harmony reexport differenceInMinutes */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_30__differenceInMonths_index_js__ =
          __webpack_require__(35);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "g",
          function () {
            return __WEBPACK_IMPORTED_MODULE_30__differenceInMonths_index_js__[
              "a"
            ];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_31__differenceInQuarters_index_js__ =
          __webpack_require__(487);
        /* unused harmony reexport differenceInQuarters */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_32__differenceInSeconds_index_js__ =
          __webpack_require__(48);
        /* unused harmony reexport differenceInSeconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_33__differenceInWeeks_index_js__ =
          __webpack_require__(488);
        /* unused harmony reexport differenceInWeeks */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_34__differenceInYears_index_js__ =
          __webpack_require__(85);
        /* unused harmony reexport differenceInYears */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_35__eachDayOfInterval_index_js__ =
          __webpack_require__(86);
        /* unused harmony reexport eachDayOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_36__eachHourOfInterval_index_js__ =
          __webpack_require__(489);
        /* unused harmony reexport eachHourOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_37__eachMinuteOfInterval_index_js__ =
          __webpack_require__(490);
        /* unused harmony reexport eachMinuteOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_38__eachMonthOfInterval_index_js__ =
          __webpack_require__(491);
        /* unused harmony reexport eachMonthOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_39__eachQuarterOfInterval_index_js__ =
          __webpack_require__(492);
        /* unused harmony reexport eachQuarterOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_40__eachWeekOfInterval_index_js__ =
          __webpack_require__(493);
        /* unused harmony reexport eachWeekOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_41__eachWeekendOfInterval_index_js__ =
          __webpack_require__(51);
        /* unused harmony reexport eachWeekendOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_42__eachWeekendOfMonth_index_js__ =
          __webpack_require__(494);
        /* unused harmony reexport eachWeekendOfMonth */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_43__eachWeekendOfYear_index_js__ =
          __webpack_require__(495);
        /* unused harmony reexport eachWeekendOfYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_44__eachYearOfInterval_index_js__ =
          __webpack_require__(496);
        /* unused harmony reexport eachYearOfInterval */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_45__endOfDay_index_js__ =
          __webpack_require__(46);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "h",
          function () {
            return __WEBPACK_IMPORTED_MODULE_45__endOfDay_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_46__endOfDecade_index_js__ =
          __webpack_require__(497);
        /* unused harmony reexport endOfDecade */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_47__endOfHour_index_js__ =
          __webpack_require__(498);
        /* unused harmony reexport endOfHour */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_48__endOfISOWeek_index_js__ =
          __webpack_require__(499);
        /* unused harmony reexport endOfISOWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_49__endOfISOWeekYear_index_js__ =
          __webpack_require__(500);
        /* unused harmony reexport endOfISOWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_50__endOfMinute_index_js__ =
          __webpack_require__(501);
        /* unused harmony reexport endOfMinute */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_51__endOfMonth_index_js__ =
          __webpack_require__(47);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "i",
          function () {
            return __WEBPACK_IMPORTED_MODULE_51__endOfMonth_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_52__endOfQuarter_index_js__ =
          __webpack_require__(502);
        /* unused harmony reexport endOfQuarter */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_53__endOfSecond_index_js__ =
          __webpack_require__(503);
        /* unused harmony reexport endOfSecond */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_54__endOfToday_index_js__ =
          __webpack_require__(504);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "j",
          function () {
            return __WEBPACK_IMPORTED_MODULE_54__endOfToday_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_55__endOfTomorrow_index_js__ =
          __webpack_require__(505);
        /* unused harmony reexport endOfTomorrow */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_56__endOfWeek_index_js__ =
          __webpack_require__(88);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "k",
          function () {
            return __WEBPACK_IMPORTED_MODULE_56__endOfWeek_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_57__endOfYear_index_js__ =
          __webpack_require__(87);
        /* unused harmony reexport endOfYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_58__endOfYesterday_index_js__ =
          __webpack_require__(506);
        /* unused harmony reexport endOfYesterday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_59__format_index_js__ =
          __webpack_require__(89);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "l",
          function () {
            return __WEBPACK_IMPORTED_MODULE_59__format_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_60__formatDistance_index_js__ =
          __webpack_require__(96);
        /* unused harmony reexport formatDistance */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_61__formatDistanceStrict_index_js__ =
          __webpack_require__(99);
        /* unused harmony reexport formatDistanceStrict */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_62__formatDistanceToNow_index_js__ =
          __webpack_require__(520);
        /* unused harmony reexport formatDistanceToNow */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_63__formatDistanceToNowStrict_index_js__ =
          __webpack_require__(521);
        /* unused harmony reexport formatDistanceToNowStrict */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_64__formatDuration_index_js__ =
          __webpack_require__(522);
        /* unused harmony reexport formatDuration */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_65__formatISO_index_js__ =
          __webpack_require__(523);
        /* unused harmony reexport formatISO */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_66__formatISO9075_index_js__ =
          __webpack_require__(524);
        /* unused harmony reexport formatISO9075 */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_67__formatISODuration_index_js__ =
          __webpack_require__(525);
        /* unused harmony reexport formatISODuration */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_68__formatRFC3339_index_js__ =
          __webpack_require__(526);
        /* unused harmony reexport formatRFC3339 */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_69__formatRFC7231_index_js__ =
          __webpack_require__(527);
        /* unused harmony reexport formatRFC7231 */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_70__formatRelative_index_js__ =
          __webpack_require__(528);
        /* unused harmony reexport formatRelative */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_71__fromUnixTime_index_js__ =
          __webpack_require__(529);
        /* unused harmony reexport fromUnixTime */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_72__getDate_index_js__ =
          __webpack_require__(100);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "m",
          function () {
            return __WEBPACK_IMPORTED_MODULE_72__getDate_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_73__getDay_index_js__ =
          __webpack_require__(54);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "n",
          function () {
            return __WEBPACK_IMPORTED_MODULE_73__getDay_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_74__getDayOfYear_index_js__ =
          __webpack_require__(530);
        /* unused harmony reexport getDayOfYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_75__getDaysInMonth_index_js__ =
          __webpack_require__(101);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "o",
          function () {
            return __WEBPACK_IMPORTED_MODULE_75__getDaysInMonth_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_76__getDaysInYear_index_js__ =
          __webpack_require__(531);
        /* unused harmony reexport getDaysInYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_77__getDecade_index_js__ =
          __webpack_require__(532);
        /* unused harmony reexport getDecade */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_78__getHours_index_js__ =
          __webpack_require__(533);
        /* unused harmony reexport getHours */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_79__getISODay_index_js__ =
          __webpack_require__(103);
        /* unused harmony reexport getISODay */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_80__getISOWeek_index_js__ =
          __webpack_require__(104);
        /* unused harmony reexport getISOWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_81__getISOWeekYear_index_js__ =
          __webpack_require__(21);
        /* unused harmony reexport getISOWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_82__getISOWeeksInYear_index_js__ =
          __webpack_require__(534);
        /* unused harmony reexport getISOWeeksInYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_83__getMilliseconds_index_js__ =
          __webpack_require__(535);
        /* unused harmony reexport getMilliseconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_84__getMinutes_index_js__ =
          __webpack_require__(536);
        /* unused harmony reexport getMinutes */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_85__getMonth_index_js__ =
          __webpack_require__(537);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "p",
          function () {
            return __WEBPACK_IMPORTED_MODULE_85__getMonth_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_86__getOverlappingDaysInIntervals_index_js__ =
          __webpack_require__(538);
        /* unused harmony reexport getOverlappingDaysInIntervals */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_87__getQuarter_index_js__ =
          __webpack_require__(78);
        /* unused harmony reexport getQuarter */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_88__getSeconds_index_js__ =
          __webpack_require__(539);
        /* unused harmony reexport getSeconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_89__getTime_index_js__ =
          __webpack_require__(105);
        /* unused harmony reexport getTime */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_90__getUnixTime_index_js__ =
          __webpack_require__(540);
        /* unused harmony reexport getUnixTime */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_91__getWeek_index_js__ =
          __webpack_require__(106);
        /* unused harmony reexport getWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_92__getWeekOfMonth_index_js__ =
          __webpack_require__(541);
        /* unused harmony reexport getWeekOfMonth */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_93__getWeekYear_index_js__ =
          __webpack_require__(107);
        /* unused harmony reexport getWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_94__getWeeksInMonth_index_js__ =
          __webpack_require__(542);
        /* unused harmony reexport getWeeksInMonth */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_95__getYear_index_js__ =
          __webpack_require__(543);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "q",
          function () {
            return __WEBPACK_IMPORTED_MODULE_95__getYear_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_96__intervalToDuration_index_js__ =
          __webpack_require__(544);
        /* unused harmony reexport intervalToDuration */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_97__intlFormat_index_js__ =
          __webpack_require__(545);
        /* unused harmony reexport intlFormat */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_98__isAfter_index_js__ =
          __webpack_require__(546);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "r",
          function () {
            return __WEBPACK_IMPORTED_MODULE_98__isAfter_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_99__isBefore_index_js__ =
          __webpack_require__(547);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "s",
          function () {
            return __WEBPACK_IMPORTED_MODULE_99__isBefore_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_100__isDate_index_js__ =
          __webpack_require__(548);
        /* unused harmony reexport isDate */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_101__isEqual_index_js__ =
          __webpack_require__(549);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "t",
          function () {
            return __WEBPACK_IMPORTED_MODULE_101__isEqual_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_102__isExists_index_js__ =
          __webpack_require__(550);
        /* unused harmony reexport isExists */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_103__isFirstDayOfMonth_index_js__ =
          __webpack_require__(551);
        /* unused harmony reexport isFirstDayOfMonth */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_104__isFriday_index_js__ =
          __webpack_require__(552);
        /* unused harmony reexport isFriday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_105__isFuture_index_js__ =
          __webpack_require__(553);
        /* unused harmony reexport isFuture */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_106__isLastDayOfMonth_index_js__ =
          __webpack_require__(84);
        /* unused harmony reexport isLastDayOfMonth */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_107__isLeapYear_index_js__ =
          __webpack_require__(102);
        /* unused harmony reexport isLeapYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_108__isMatch_index_js__ =
          __webpack_require__(554);
        /* unused harmony reexport isMatch */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_109__isMonday_index_js__ =
          __webpack_require__(560);
        /* unused harmony reexport isMonday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_110__isPast_index_js__ =
          __webpack_require__(561);
        /* unused harmony reexport isPast */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_111__isSameDay_index_js__ =
          __webpack_require__(28);
        /* unused harmony reexport isSameDay */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_112__isSameHour_index_js__ =
          __webpack_require__(112);
        /* unused harmony reexport isSameHour */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_113__isSameISOWeek_index_js__ =
          __webpack_require__(114);
        /* unused harmony reexport isSameISOWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_114__isSameISOWeekYear_index_js__ =
          __webpack_require__(562);
        /* unused harmony reexport isSameISOWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_115__isSameMinute_index_js__ =
          __webpack_require__(115);
        /* unused harmony reexport isSameMinute */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_116__isSameMonth_index_js__ =
          __webpack_require__(116);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "u",
          function () {
            return __WEBPACK_IMPORTED_MODULE_116__isSameMonth_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_117__isSameQuarter_index_js__ =
          __webpack_require__(117);
        /* unused harmony reexport isSameQuarter */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_118__isSameSecond_index_js__ =
          __webpack_require__(118);
        /* unused harmony reexport isSameSecond */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_119__isSameWeek_index_js__ =
          __webpack_require__(57);
        /* unused harmony reexport isSameWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_120__isSameYear_index_js__ =
          __webpack_require__(120);
        /* unused harmony reexport isSameYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_121__isSaturday_index_js__ =
          __webpack_require__(71);
        /* unused harmony reexport isSaturday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_122__isSunday_index_js__ =
          __webpack_require__(41);
        /* unused harmony reexport isSunday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_123__isThisHour_index_js__ =
          __webpack_require__(563);
        /* unused harmony reexport isThisHour */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_124__isThisISOWeek_index_js__ =
          __webpack_require__(564);
        /* unused harmony reexport isThisISOWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_125__isThisMinute_index_js__ =
          __webpack_require__(565);
        /* unused harmony reexport isThisMinute */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_126__isThisMonth_index_js__ =
          __webpack_require__(566);
        /* unused harmony reexport isThisMonth */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_127__isThisQuarter_index_js__ =
          __webpack_require__(567);
        /* unused harmony reexport isThisQuarter */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_128__isThisSecond_index_js__ =
          __webpack_require__(568);
        /* unused harmony reexport isThisSecond */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_129__isThisWeek_index_js__ =
          __webpack_require__(569);
        /* unused harmony reexport isThisWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_130__isThisYear_index_js__ =
          __webpack_require__(570);
        /* unused harmony reexport isThisYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_131__isThursday_index_js__ =
          __webpack_require__(571);
        /* unused harmony reexport isThursday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_132__isToday_index_js__ =
          __webpack_require__(572);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "v",
          function () {
            return __WEBPACK_IMPORTED_MODULE_132__isToday_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_133__isTomorrow_index_js__ =
          __webpack_require__(573);
        /* unused harmony reexport isTomorrow */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_134__isTuesday_index_js__ =
          __webpack_require__(574);
        /* unused harmony reexport isTuesday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_135__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "w",
          function () {
            return __WEBPACK_IMPORTED_MODULE_135__isValid_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_136__isWednesday_index_js__ =
          __webpack_require__(575);
        /* unused harmony reexport isWednesday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_137__isWeekend_index_js__ =
          __webpack_require__(31);
        /* unused harmony reexport isWeekend */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_138__isWithinInterval_index_js__ =
          __webpack_require__(576);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "x",
          function () {
            return __WEBPACK_IMPORTED_MODULE_138__isWithinInterval_index_js__[
              "a"
            ];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_139__isYesterday_index_js__ =
          __webpack_require__(577);
        /* unused harmony reexport isYesterday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_140__lastDayOfDecade_index_js__ =
          __webpack_require__(578);
        /* unused harmony reexport lastDayOfDecade */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_141__lastDayOfISOWeek_index_js__ =
          __webpack_require__(579);
        /* unused harmony reexport lastDayOfISOWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_142__lastDayOfISOWeekYear_index_js__ =
          __webpack_require__(580);
        /* unused harmony reexport lastDayOfISOWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_143__lastDayOfMonth_index_js__ =
          __webpack_require__(108);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "y",
          function () {
            return __WEBPACK_IMPORTED_MODULE_143__lastDayOfMonth_index_js__[
              "a"
            ];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_144__lastDayOfQuarter_index_js__ =
          __webpack_require__(581);
        /* unused harmony reexport lastDayOfQuarter */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_145__lastDayOfWeek_index_js__ =
          __webpack_require__(121);
        /* unused harmony reexport lastDayOfWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_146__lastDayOfYear_index_js__ =
          __webpack_require__(582);
        /* unused harmony reexport lastDayOfYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_147__lightFormat_index_js__ =
          __webpack_require__(583);
        /* unused harmony reexport lightFormat */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_148__max_index_js__ =
          __webpack_require__(584);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "z",
          function () {
            return __WEBPACK_IMPORTED_MODULE_148__max_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_149__milliseconds_index_js__ =
          __webpack_require__(585);
        /* unused harmony reexport milliseconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_150__min_index_js__ =
          __webpack_require__(586);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "A",
          function () {
            return __WEBPACK_IMPORTED_MODULE_150__min_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_151__nextDay_index_js__ =
          __webpack_require__(12);
        /* unused harmony reexport nextDay */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_152__nextFriday_index_js__ =
          __webpack_require__(587);
        /* unused harmony reexport nextFriday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_153__nextMonday_index_js__ =
          __webpack_require__(588);
        /* unused harmony reexport nextMonday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_154__nextSaturday_index_js__ =
          __webpack_require__(589);
        /* unused harmony reexport nextSaturday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_155__nextSunday_index_js__ =
          __webpack_require__(590);
        /* unused harmony reexport nextSunday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_156__nextThursday_index_js__ =
          __webpack_require__(591);
        /* unused harmony reexport nextThursday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_157__nextTuesday_index_js__ =
          __webpack_require__(592);
        /* unused harmony reexport nextTuesday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_158__nextWednesday_index_js__ =
          __webpack_require__(593);
        /* unused harmony reexport nextWednesday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_159__parse_index_js__ =
          __webpack_require__(111);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "B",
          function () {
            return __WEBPACK_IMPORTED_MODULE_159__parse_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_160__parseISO_index_js__ =
          __webpack_require__(594);
        /* unused harmony reexport parseISO */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_161__parseJSON_index_js__ =
          __webpack_require__(595);
        /* unused harmony reexport parseJSON */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_162__roundToNearestMinutes_index_js__ =
          __webpack_require__(596);
        /* unused harmony reexport roundToNearestMinutes */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_163__set_index_js__ =
          __webpack_require__(597);
        /* unused harmony reexport set */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_164__setDate_index_js__ =
          __webpack_require__(598);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "C",
          function () {
            return __WEBPACK_IMPORTED_MODULE_164__setDate_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_165__setDay_index_js__ =
          __webpack_require__(599);
        /* unused harmony reexport setDay */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_166__setDayOfYear_index_js__ =
          __webpack_require__(600);
        /* unused harmony reexport setDayOfYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_167__setHours_index_js__ =
          __webpack_require__(601);
        /* unused harmony reexport setHours */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_168__setISODay_index_js__ =
          __webpack_require__(602);
        /* unused harmony reexport setISODay */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_169__setISOWeek_index_js__ =
          __webpack_require__(603);
        /* unused harmony reexport setISOWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_170__setISOWeekYear_index_js__ =
          __webpack_require__(73);
        /* unused harmony reexport setISOWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_171__setMilliseconds_index_js__ =
          __webpack_require__(604);
        /* unused harmony reexport setMilliseconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_172__setMinutes_index_js__ =
          __webpack_require__(605);
        /* unused harmony reexport setMinutes */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_173__setMonth_index_js__ =
          __webpack_require__(58);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "D",
          function () {
            return __WEBPACK_IMPORTED_MODULE_173__setMonth_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_174__setQuarter_index_js__ =
          __webpack_require__(606);
        /* unused harmony reexport setQuarter */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_175__setSeconds_index_js__ =
          __webpack_require__(607);
        /* unused harmony reexport setSeconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_176__setWeek_index_js__ =
          __webpack_require__(608);
        /* unused harmony reexport setWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_177__setWeekYear_index_js__ =
          __webpack_require__(609);
        /* unused harmony reexport setWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_178__setYear_index_js__ =
          __webpack_require__(610);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "E",
          function () {
            return __WEBPACK_IMPORTED_MODULE_178__setYear_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_179__startOfDay_index_js__ =
          __webpack_require__(32);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "F",
          function () {
            return __WEBPACK_IMPORTED_MODULE_179__startOfDay_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_180__startOfDecade_index_js__ =
          __webpack_require__(611);
        /* unused harmony reexport startOfDecade */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_181__startOfHour_index_js__ =
          __webpack_require__(113);
        /* unused harmony reexport startOfHour */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_182__startOfISOWeek_index_js__ =
          __webpack_require__(16);
        /* unused harmony reexport startOfISOWeek */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_183__startOfISOWeekYear_index_js__ =
          __webpack_require__(27);
        /* unused harmony reexport startOfISOWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_184__startOfMinute_index_js__ =
          __webpack_require__(49);
        /* unused harmony reexport startOfMinute */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_185__startOfMonth_index_js__ =
          __webpack_require__(36);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "G",
          function () {
            return __WEBPACK_IMPORTED_MODULE_185__startOfMonth_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_186__startOfQuarter_index_js__ =
          __webpack_require__(50);
        /* unused harmony reexport startOfQuarter */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_187__startOfSecond_index_js__ =
          __webpack_require__(119);
        /* unused harmony reexport startOfSecond */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_188__startOfToday_index_js__ =
          __webpack_require__(612);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "H",
          function () {
            return __WEBPACK_IMPORTED_MODULE_188__startOfToday_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_189__startOfTomorrow_index_js__ =
          __webpack_require__(613);
        /* unused harmony reexport startOfTomorrow */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_190__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "I",
          function () {
            return __WEBPACK_IMPORTED_MODULE_190__startOfWeek_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_191__startOfWeekYear_index_js__ =
          __webpack_require__(55);
        /* unused harmony reexport startOfWeekYear */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_192__startOfYear_index_js__ =
          __webpack_require__(52);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "J",
          function () {
            return __WEBPACK_IMPORTED_MODULE_192__startOfYear_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_193__startOfYesterday_index_js__ =
          __webpack_require__(614);
        /* unused harmony reexport startOfYesterday */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_194__sub_index_js__ =
          __webpack_require__(109);
        /* unused harmony reexport sub */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_195__subBusinessDays_index_js__ =
          __webpack_require__(615);
        /* unused harmony reexport subBusinessDays */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_196__subDays_index_js__ =
          __webpack_require__(56);
        /* unused harmony reexport subDays */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_197__subHours_index_js__ =
          __webpack_require__(616);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "K",
          function () {
            return __WEBPACK_IMPORTED_MODULE_197__subHours_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_198__subISOWeekYears_index_js__ =
          __webpack_require__(82);
        /* unused harmony reexport subISOWeekYears */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_199__subMilliseconds_index_js__ =
          __webpack_require__(29);
        /* unused harmony reexport subMilliseconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_200__subMinutes_index_js__ =
          __webpack_require__(617);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "L",
          function () {
            return __WEBPACK_IMPORTED_MODULE_200__subMinutes_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_201__subMonths_index_js__ =
          __webpack_require__(110);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "M",
          function () {
            return __WEBPACK_IMPORTED_MODULE_201__subMonths_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_202__subQuarters_index_js__ =
          __webpack_require__(618);
        /* unused harmony reexport subQuarters */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_203__subSeconds_index_js__ =
          __webpack_require__(619);
        /* unused harmony reexport subSeconds */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_204__subWeeks_index_js__ =
          __webpack_require__(620);
        /* unused harmony reexport subWeeks */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_205__subYears_index_js__ =
          __webpack_require__(621);
        /* harmony reexport (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "N",
          function () {
            return __WEBPACK_IMPORTED_MODULE_205__subYears_index_js__["a"];
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_206__toDate_index_js__ =
          __webpack_require__(1);
        /* unused harmony reexport toDate */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_207__constants_index_js__ =
          __webpack_require__(622);
        /* unused harmony namespace reexport */
        // This file is generated automatically by `scripts/build/indices.js`. Please, don't change it.

        /***/
      },
      /* 21 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          getISOWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getISOWeekYear
         * @category ISO Week-Numbering Year Helpers
         * @summary Get the ISO week-numbering year of the given date.
         *
         * @description
         * Get the ISO week-numbering year of the given date,
         * which always starts 3 days before the year's first Thursday.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `getISOYear` to `getISOWeekYear`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the ISO week-numbering year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which ISO-week numbering year is 2 January 2005?
         * const result = getISOWeekYear(new Date(2005, 0, 2))
         * //=> 2004
         */

        function getISOWeekYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          var fourthOfJanuaryOfNextYear = new Date(0);
          fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
          fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
          var startOfNextYear = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuaryOfNextYear);
          var fourthOfJanuaryOfThisYear = new Date(0);
          fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);
          fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);
          var startOfThisYear = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuaryOfThisYear);

          if (date.getTime() >= startOfNextYear.getTime()) {
            return year + 1;
          } else if (date.getTime() >= startOfThisYear.getTime()) {
            return year;
          } else {
            return year - 1;
          }
        }

        /***/
      },
      /* 22 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_formatDistance_index_js__ =
          __webpack_require__(507);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_formatLong_index_js__ =
          __webpack_require__(508);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_formatRelative_index_js__ =
          __webpack_require__(510);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_localize_index_js__ =
          __webpack_require__(511);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_match_index_js__ =
          __webpack_require__(513);

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (United States).
         * @language English
         * @iso-639-2 eng
         * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
         * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
         */

        var locale = {
          code: "pt-BR",
          formatDistance:
            __WEBPACK_IMPORTED_MODULE_0__lib_formatDistance_index_js__[
              "a" /* default */
            ],
          formatLong:
            __WEBPACK_IMPORTED_MODULE_1__lib_formatLong_index_js__[
              "a" /* default */
            ],
          formatRelative:
            __WEBPACK_IMPORTED_MODULE_2__lib_formatRelative_index_js__[
              "a" /* default */
            ],
          localize:
            __WEBPACK_IMPORTED_MODULE_3__lib_localize_index_js__[
              "a" /* default */
            ],
          match:
            __WEBPACK_IMPORTED_MODULE_4__lib_match_index_js__[
              "a" /* default */
            ],
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        /* harmony default export */ __webpack_exports__["a"] = locale;

        /***/
      },
      /* 23 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          addLeadingZeros;
        function addLeadingZeros(number, targetLength) {
          var sign = number < 0 ? "-" : "";
          var output = Math.abs(number).toString();

          while (output.length < targetLength) {
            output = "0" + output;
          }

          return sign + output;
        }

        /***/
      },
      /* 24 */
      /***/ function (module, exports, __webpack_require__) {
        var map = {
          "./_lib/buildFormatLongFn/index.js": 2,
          "./_lib/buildLocalizeFn/index.js": 3,
          "./_lib/buildMatchFn/index.js": 4,
          "./_lib/buildMatchPatternFn/index.js": 5,
          "./af/_lib/formatDistance/index.js": 122,
          "./af/_lib/formatLong/index.js": 123,
          "./af/_lib/formatRelative/index.js": 124,
          "./af/_lib/localize/index.js": 125,
          "./af/_lib/match/index.js": 126,
          "./af/index.js": 630,
          "./ar-DZ/_lib/formatDistance/index.js": 127,
          "./ar-DZ/_lib/formatLong/index.js": 128,
          "./ar-DZ/_lib/formatRelative/index.js": 129,
          "./ar-DZ/_lib/localize/index.js": 130,
          "./ar-DZ/_lib/match/index.js": 131,
          "./ar-DZ/index.js": 631,
          "./ar-MA/_lib/formatDistance/index.js": 132,
          "./ar-MA/_lib/formatLong/index.js": 133,
          "./ar-MA/_lib/formatRelative/index.js": 134,
          "./ar-MA/_lib/localize/index.js": 135,
          "./ar-MA/_lib/match/index.js": 136,
          "./ar-MA/index.js": 632,
          "./ar-SA/_lib/formatDistance/index.js": 137,
          "./ar-SA/_lib/formatLong/index.js": 138,
          "./ar-SA/_lib/formatRelative/index.js": 139,
          "./ar-SA/_lib/localize/index.js": 140,
          "./ar-SA/_lib/match/index.js": 141,
          "./ar-SA/index.js": 633,
          "./az/_lib/formatDistance/index.js": 142,
          "./az/_lib/formatLong/index.js": 143,
          "./az/_lib/formatRelative/index.js": 144,
          "./az/_lib/localize/index.js": 145,
          "./az/_lib/match/index.js": 146,
          "./az/index.js": 634,
          "./be/_lib/formatDistance/index.js": 147,
          "./be/_lib/formatLong/index.js": 148,
          "./be/_lib/formatRelative/index.js": 149,
          "./be/_lib/localize/index.js": 150,
          "./be/_lib/match/index.js": 151,
          "./be/index.js": 638,
          "./bg/_lib/formatDistance/index.js": 152,
          "./bg/_lib/formatLong/index.js": 153,
          "./bg/_lib/formatRelative/index.js": 154,
          "./bg/_lib/localize/index.js": 155,
          "./bg/_lib/match/index.js": 156,
          "./bg/index.js": 639,
          "./bn/_lib/formatDistance/index.js": 157,
          "./bn/_lib/formatLong/index.js": 158,
          "./bn/_lib/formatRelative/index.js": 159,
          "./bn/_lib/localize/index.js": 61,
          "./bn/_lib/match/index.js": 160,
          "./bn/index.js": 640,
          "./ca/_lib/formatDistance/index.js": 161,
          "./ca/_lib/formatLong/index.js": 162,
          "./ca/_lib/formatRelative/index.js": 163,
          "./ca/_lib/localize/index.js": 164,
          "./ca/_lib/match/index.js": 165,
          "./ca/index.js": 641,
          "./cs/_lib/formatDistance/index.js": 166,
          "./cs/_lib/formatLong/index.js": 167,
          "./cs/_lib/formatRelative/index.js": 168,
          "./cs/_lib/localize/index.js": 169,
          "./cs/_lib/match/index.js": 170,
          "./cs/index.js": 642,
          "./cy/_lib/formatDistance/index.js": 171,
          "./cy/_lib/formatLong/index.js": 172,
          "./cy/_lib/formatRelative/index.js": 173,
          "./cy/_lib/localize/index.js": 174,
          "./cy/_lib/match/index.js": 175,
          "./cy/index.js": 643,
          "./da/_lib/formatDistance/index.js": 176,
          "./da/_lib/formatLong/index.js": 177,
          "./da/_lib/formatRelative/index.js": 178,
          "./da/_lib/localize/index.js": 179,
          "./da/_lib/match/index.js": 180,
          "./da/index.js": 644,
          "./de-AT/_lib/localize/index.js": 181,
          "./de-AT/index.js": 645,
          "./de/_lib/formatDistance/index.js": 62,
          "./de/_lib/formatLong/index.js": 63,
          "./de/_lib/formatRelative/index.js": 64,
          "./de/_lib/localize/index.js": 182,
          "./de/_lib/match/index.js": 65,
          "./de/index.js": 646,
          "./el/_lib/formatDistance/index.js": 183,
          "./el/_lib/formatLong/index.js": 184,
          "./el/_lib/formatRelative/index.js": 185,
          "./el/_lib/localize/index.js": 186,
          "./el/_lib/match/index.js": 187,
          "./el/index.js": 647,
          "./en-AU/_lib/formatLong/index.js": 188,
          "./en-AU/index.js": 648,
          "./en-CA/_lib/formatDistance/index.js": 189,
          "./en-CA/_lib/formatLong/index.js": 190,
          "./en-CA/index.js": 649,
          "./en-GB/_lib/formatLong/index.js": 191,
          "./en-GB/index.js": 650,
          "./en-IN/_lib/formatLong/index.js": 192,
          "./en-IN/index.js": 651,
          "./en-NZ/_lib/formatLong/index.js": 193,
          "./en-NZ/index.js": 652,
          "./pt-BR/_lib/formatDistance/index.js": 19,
          "./pt-BR/_lib/formatLong/index.js": 194,
          "./pt-BR/_lib/formatRelative/index.js": 13,
          "./pt-BR/_lib/localize/index.js": 14,
          "./pt-BR/_lib/match/index.js": 15,
          "./pt-BR/index.js": 653,
          "./en-ZA/_lib/formatLong/index.js": 195,
          "./en-ZA/index.js": 654,
          "./eo/_lib/formatDistance/index.js": 196,
          "./eo/_lib/formatLong/index.js": 197,
          "./eo/_lib/formatRelative/index.js": 198,
          "./eo/_lib/localize/index.js": 199,
          "./eo/_lib/match/index.js": 200,
          "./eo/index.js": 655,
          "./es/_lib/formatDistance/index.js": 201,
          "./es/_lib/formatLong/index.js": 202,
          "./es/_lib/formatRelative/index.js": 203,
          "./es/_lib/localize/index.js": 204,
          "./es/_lib/match/index.js": 205,
          "./es/index.js": 656,
          "./et/_lib/formatDistance/index.js": 206,
          "./et/_lib/formatLong/index.js": 207,
          "./et/_lib/formatRelative/index.js": 208,
          "./et/_lib/localize/index.js": 209,
          "./et/_lib/match/index.js": 210,
          "./et/index.js": 657,
          "./eu/_lib/formatDistance/index.js": 211,
          "./eu/_lib/formatLong/index.js": 212,
          "./eu/_lib/formatRelative/index.js": 213,
          "./eu/_lib/localize/index.js": 214,
          "./eu/_lib/match/index.js": 215,
          "./eu/index.js": 658,
          "./fa-IR/_lib/formatDistance/index.js": 216,
          "./fa-IR/_lib/formatLong/index.js": 217,
          "./fa-IR/_lib/formatRelative/index.js": 218,
          "./fa-IR/_lib/localize/index.js": 219,
          "./fa-IR/_lib/match/index.js": 220,
          "./fa-IR/index.js": 659,
          "./fi/_lib/formatDistance/index.js": 221,
          "./fi/_lib/formatLong/index.js": 222,
          "./fi/_lib/formatRelative/index.js": 223,
          "./fi/_lib/localize/index.js": 224,
          "./fi/_lib/match/index.js": 225,
          "./fi/index.js": 660,
          "./fr-CA/_lib/formatLong/index.js": 226,
          "./fr-CA/index.js": 661,
          "./fr-CH/_lib/formatDistance/index.js": 227,
          "./fr-CH/_lib/formatLong/index.js": 228,
          "./fr-CH/_lib/formatRelative/index.js": 229,
          "./fr-CH/_lib/formatters/index.js": 662,
          "./fr-CH/_lib/localize/index.js": 230,
          "./fr-CH/_lib/match/index.js": 231,
          "./fr-CH/index.js": 663,
          "./fr/_lib/formatDistance/index.js": 66,
          "./fr/_lib/formatLong/index.js": 232,
          "./fr/_lib/formatRelative/index.js": 67,
          "./fr/_lib/formatters/index.js": 664,
          "./fr/_lib/localize/index.js": 68,
          "./fr/_lib/match/index.js": 69,
          "./fr/index.js": 665,
          "./gd/_lib/formatDistance/index.js": 233,
          "./gd/_lib/formatLong/index.js": 234,
          "./gd/_lib/formatRelative/index.js": 235,
          "./gd/_lib/localize/index.js": 236,
          "./gd/_lib/match/index.js": 237,
          "./gd/index.js": 666,
          "./gl/_lib/formatDistance/index.js": 238,
          "./gl/_lib/formatLong/index.js": 239,
          "./gl/_lib/formatRelative/index.js": 240,
          "./gl/_lib/localize/index.js": 241,
          "./gl/_lib/match/index.js": 242,
          "./gl/index.js": 667,
          "./gu/_lib/formatDistance/index.js": 243,
          "./gu/_lib/formatLong/index.js": 244,
          "./gu/_lib/formatRelative/index.js": 245,
          "./gu/_lib/localize/index.js": 246,
          "./gu/_lib/match/index.js": 247,
          "./gu/index.js": 668,
          "./he/_lib/formatDistance/index.js": 248,
          "./he/_lib/formatLong/index.js": 249,
          "./he/_lib/formatRelative/index.js": 250,
          "./he/_lib/localize/index.js": 251,
          "./he/_lib/match/index.js": 252,
          "./he/index.js": 669,
          "./hi/_lib/formatDistance/index.js": 253,
          "./hi/_lib/formatLong/index.js": 254,
          "./hi/_lib/formatRelative/index.js": 255,
          "./hi/_lib/localize/index.js": 39,
          "./hi/_lib/match/index.js": 256,
          "./hi/index.js": 670,
          "./hr/_lib/formatDistance/index.js": 257,
          "./hr/_lib/formatLong/index.js": 258,
          "./hr/_lib/formatRelative/index.js": 259,
          "./hr/_lib/localize/index.js": 260,
          "./hr/_lib/match/index.js": 261,
          "./hr/index.js": 671,
          "./ht/_lib/formatDistance/index.js": 262,
          "./ht/_lib/formatLong/index.js": 263,
          "./ht/_lib/formatRelative/index.js": 264,
          "./ht/_lib/formatters/index.js": 672,
          "./ht/_lib/localize/index.js": 265,
          "./ht/_lib/match/index.js": 266,
          "./ht/index.js": 673,
          "./hu/_lib/formatDistance/index.js": 267,
          "./hu/_lib/formatLong/index.js": 268,
          "./hu/_lib/formatRelative/index.js": 269,
          "./hu/_lib/localize/index.js": 270,
          "./hu/_lib/match/index.js": 271,
          "./hu/index.js": 674,
          "./hy/_lib/formatDistance/index.js": 272,
          "./hy/_lib/formatLong/index.js": 273,
          "./hy/_lib/formatRelative/index.js": 274,
          "./hy/_lib/localize/index.js": 275,
          "./hy/_lib/match/index.js": 276,
          "./hy/index.js": 675,
          "./id/_lib/formatDistance/index.js": 277,
          "./id/_lib/formatLong/index.js": 278,
          "./id/_lib/formatRelative/index.js": 279,
          "./id/_lib/localize/index.js": 280,
          "./id/_lib/match/index.js": 281,
          "./id/index.js": 676,
          "./is/_lib/formatDistance/index.js": 282,
          "./is/_lib/formatLong/index.js": 283,
          "./is/_lib/formatRelative/index.js": 284,
          "./is/_lib/localize/index.js": 285,
          "./is/_lib/match/index.js": 286,
          "./is/index.js": 677,
          "./it/_lib/formatDistance/index.js": 287,
          "./it/_lib/formatLong/index.js": 288,
          "./it/_lib/formatRelative/index.js": 289,
          "./it/_lib/localize/index.js": 290,
          "./it/_lib/match/index.js": 291,
          "./it/index.js": 678,
          "./ja/_lib/formatDistance/index.js": 292,
          "./ja/_lib/formatLong/index.js": 293,
          "./ja/_lib/formatRelative/index.js": 294,
          "./ja/_lib/localize/index.js": 295,
          "./ja/_lib/match/index.js": 296,
          "./ja/index.js": 679,
          "./ka/_lib/formatDistance/index.js": 297,
          "./ka/_lib/formatLong/index.js": 298,
          "./ka/_lib/formatRelative/index.js": 299,
          "./ka/_lib/localize/index.js": 300,
          "./ka/_lib/match/index.js": 301,
          "./ka/index.js": 680,
          "./kk/_lib/formatDistance/index.js": 302,
          "./kk/_lib/formatLong/index.js": 303,
          "./kk/_lib/formatRelative/index.js": 304,
          "./kk/_lib/localize/index.js": 305,
          "./kk/_lib/match/index.js": 306,
          "./kk/index.js": 681,
          "./kn/_lib/formatDistance/index.js": 307,
          "./kn/_lib/formatLong/index.js": 308,
          "./kn/_lib/formatRelative/index.js": 309,
          "./kn/_lib/localize/index.js": 310,
          "./kn/_lib/match/index.js": 311,
          "./kn/index.js": 682,
          "./ko/_lib/formatDistance/index.js": 312,
          "./ko/_lib/formatLong/index.js": 313,
          "./ko/_lib/formatRelative/index.js": 314,
          "./ko/_lib/localize/index.js": 315,
          "./ko/_lib/match/index.js": 316,
          "./ko/index.js": 683,
          "./lb/_lib/formatDistance/index.js": 317,
          "./lb/_lib/formatLong/index.js": 318,
          "./lb/_lib/formatRelative/index.js": 319,
          "./lb/_lib/localize/index.js": 320,
          "./lb/_lib/match/index.js": 321,
          "./lb/index.js": 684,
          "./lt/_lib/formatDistance/index.js": 322,
          "./lt/_lib/formatLong/index.js": 323,
          "./lt/_lib/formatRelative/index.js": 324,
          "./lt/_lib/localize/index.js": 325,
          "./lt/_lib/match/index.js": 326,
          "./lt/index.js": 685,
          "./lv/_lib/formatDistance/index.js": 327,
          "./lv/_lib/formatLong/index.js": 328,
          "./lv/_lib/formatRelative/index.js": 329,
          "./lv/_lib/localize/index.js": 330,
          "./lv/_lib/match/index.js": 331,
          "./lv/index.js": 686,
          "./mk/_lib/formatDistance/index.js": 332,
          "./mk/_lib/formatLong/index.js": 333,
          "./mk/_lib/formatRelative/index.js": 334,
          "./mk/_lib/localize/index.js": 335,
          "./mk/_lib/match/index.js": 336,
          "./mk/index.js": 687,
          "./mn/_lib/formatDistance/index.js": 337,
          "./mn/_lib/formatLong/index.js": 338,
          "./mn/_lib/formatRelative/index.js": 339,
          "./mn/_lib/localize/index.js": 340,
          "./mn/_lib/match/index.js": 341,
          "./mn/index.js": 688,
          "./ms/_lib/formatDistance/index.js": 342,
          "./ms/_lib/formatLong/index.js": 343,
          "./ms/_lib/formatRelative/index.js": 344,
          "./ms/_lib/localize/index.js": 345,
          "./ms/_lib/match/index.js": 346,
          "./ms/index.js": 689,
          "./mt/_lib/formatDistance/index.js": 347,
          "./mt/_lib/formatLong/index.js": 348,
          "./mt/_lib/formatRelative/index.js": 349,
          "./mt/_lib/localize/index.js": 350,
          "./mt/_lib/match/index.js": 351,
          "./mt/index.js": 690,
          "./nb/_lib/formatDistance/index.js": 352,
          "./nb/_lib/formatLong/index.js": 353,
          "./nb/_lib/formatRelative/index.js": 354,
          "./nb/_lib/localize/index.js": 355,
          "./nb/_lib/match/index.js": 356,
          "./nb/index.js": 691,
          "./nl-BE/_lib/formatDistance/index.js": 357,
          "./nl-BE/_lib/formatLong/index.js": 358,
          "./nl-BE/_lib/formatRelative/index.js": 359,
          "./nl-BE/_lib/localize/index.js": 360,
          "./nl-BE/_lib/match/index.js": 361,
          "./nl-BE/index.js": 692,
          "./nl/_lib/formatDistance/index.js": 362,
          "./nl/_lib/formatLong/index.js": 363,
          "./nl/_lib/formatRelative/index.js": 364,
          "./nl/_lib/localize/index.js": 365,
          "./nl/_lib/match/index.js": 366,
          "./nl/index.js": 693,
          "./nn/_lib/formatDistance/index.js": 367,
          "./nn/_lib/formatLong/index.js": 368,
          "./nn/_lib/formatRelative/index.js": 369,
          "./nn/_lib/localize/index.js": 370,
          "./nn/_lib/match/index.js": 371,
          "./nn/index.js": 694,
          "./pl/_lib/formatDistance/index.js": 372,
          "./pl/_lib/formatLong/index.js": 373,
          "./pl/_lib/formatRelative/index.js": 374,
          "./pl/_lib/localize/index.js": 375,
          "./pl/_lib/match/index.js": 376,
          "./pl/index.js": 695,
          "./pt-BR/_lib/formatDistance/index.js": 377,
          "./pt-BR/_lib/formatLong/index.js": 378,
          "./pt-BR/_lib/formatRelative/index.js": 379,
          "./pt-BR/_lib/localize/index.js": 380,
          "./pt-BR/_lib/match/index.js": 381,
          "./pt-BR/index.js": 696,
          "./pt/_lib/formatDistance/index.js": 382,
          "./pt/_lib/formatLong/index.js": 383,
          "./pt/_lib/formatRelative/index.js": 384,
          "./pt/_lib/localize/index.js": 385,
          "./pt/_lib/match/index.js": 386,
          "./pt/index.js": 697,
          "./ro/_lib/formatDistance/index.js": 387,
          "./ro/_lib/formatLong/index.js": 388,
          "./ro/_lib/formatRelative/index.js": 389,
          "./ro/_lib/localize/index.js": 390,
          "./ro/_lib/match/index.js": 391,
          "./ro/index.js": 698,
          "./ru/_lib/formatDistance/index.js": 392,
          "./ru/_lib/formatLong/index.js": 393,
          "./ru/_lib/formatRelative/index.js": 394,
          "./ru/_lib/localize/index.js": 395,
          "./ru/_lib/match/index.js": 396,
          "./ru/index.js": 699,
          "./sk/_lib/formatDistance/index.js": 397,
          "./sk/_lib/formatLong/index.js": 398,
          "./sk/_lib/formatRelative/index.js": 399,
          "./sk/_lib/localize/index.js": 400,
          "./sk/_lib/match/index.js": 401,
          "./sk/index.js": 700,
          "./sl/_lib/formatDistance/index.js": 402,
          "./sl/_lib/formatLong/index.js": 403,
          "./sl/_lib/formatRelative/index.js": 404,
          "./sl/_lib/localize/index.js": 405,
          "./sl/_lib/match/index.js": 406,
          "./sl/index.js": 701,
          "./sq/_lib/formatDistance/index.js": 407,
          "./sq/_lib/formatLong/index.js": 408,
          "./sq/_lib/formatRelative/index.js": 409,
          "./sq/_lib/localize/index.js": 410,
          "./sq/_lib/match/index.js": 411,
          "./sq/index.js": 702,
          "./sr-Latn/_lib/formatDistance/index.js": 412,
          "./sr-Latn/_lib/formatLong/index.js": 413,
          "./sr-Latn/_lib/formatRelative/index.js": 414,
          "./sr-Latn/_lib/localize/index.js": 415,
          "./sr-Latn/_lib/match/index.js": 416,
          "./sr-Latn/index.js": 703,
          "./sr/_lib/formatDistance/index.js": 417,
          "./sr/_lib/formatLong/index.js": 418,
          "./sr/_lib/formatRelative/index.js": 419,
          "./sr/_lib/localize/index.js": 420,
          "./sr/_lib/match/index.js": 421,
          "./sr/index.js": 704,
          "./sv/_lib/formatDistance/index.js": 422,
          "./sv/_lib/formatLong/index.js": 423,
          "./sv/_lib/formatRelative/index.js": 424,
          "./sv/_lib/localize/index.js": 425,
          "./sv/_lib/match/index.js": 426,
          "./sv/index.js": 705,
          "./ta/_lib/formatDistance/index.js": 427,
          "./ta/_lib/formatLong/index.js": 428,
          "./ta/_lib/formatRelative/index.js": 429,
          "./ta/_lib/localize/index.js": 430,
          "./ta/_lib/match/index.js": 431,
          "./ta/index.js": 706,
          "./te/_lib/formatDistance/index.js": 432,
          "./te/_lib/formatLong/index.js": 433,
          "./te/_lib/formatRelative/index.js": 434,
          "./te/_lib/localize/index.js": 435,
          "./te/_lib/match/index.js": 436,
          "./te/index.js": 707,
          "./th/_lib/formatDistance/index.js": 437,
          "./th/_lib/formatLong/index.js": 438,
          "./th/_lib/formatRelative/index.js": 439,
          "./th/_lib/localize/index.js": 440,
          "./th/_lib/match/index.js": 441,
          "./th/index.js": 708,
          "./tr/_lib/formatDistance/index.js": 442,
          "./tr/_lib/formatLong/index.js": 443,
          "./tr/_lib/formatRelative/index.js": 444,
          "./tr/_lib/localize/index.js": 445,
          "./tr/_lib/match/index.js": 446,
          "./tr/index.js": 709,
          "./ug/_lib/formatDistance/index.js": 447,
          "./ug/_lib/formatLong/index.js": 448,
          "./ug/_lib/formatRelative/index.js": 449,
          "./ug/_lib/localize/index.js": 450,
          "./ug/_lib/match/index.js": 451,
          "./ug/index.js": 710,
          "./uk/_lib/formatDistance/index.js": 452,
          "./uk/_lib/formatLong/index.js": 453,
          "./uk/_lib/formatRelative/index.js": 454,
          "./uk/_lib/localize/index.js": 455,
          "./uk/_lib/match/index.js": 456,
          "./uk/index.js": 711,
          "./uz/_lib/formatDistance/index.js": 457,
          "./uz/_lib/formatLong/index.js": 458,
          "./uz/_lib/formatRelative/index.js": 459,
          "./uz/_lib/localize/index.js": 460,
          "./uz/_lib/match/index.js": 461,
          "./uz/index.js": 712,
          "./vi/_lib/formatDistance/index.js": 462,
          "./vi/_lib/formatLong/index.js": 463,
          "./vi/_lib/formatRelative/index.js": 464,
          "./vi/_lib/localize/index.js": 465,
          "./vi/_lib/match/index.js": 466,
          "./vi/index.js": 713,
          "./zh-CN/_lib/formatDistance/index.js": 467,
          "./zh-CN/_lib/formatLong/index.js": 468,
          "./zh-CN/_lib/formatRelative/index.js": 469,
          "./zh-CN/_lib/localize/index.js": 470,
          "./zh-CN/_lib/match/index.js": 471,
          "./zh-CN/index.js": 714,
          "./zh-TW/_lib/formatDistance/index.js": 472,
          "./zh-TW/_lib/formatLong/index.js": 473,
          "./zh-TW/_lib/formatRelative/index.js": 474,
          "./zh-TW/_lib/localize/index.js": 475,
          "./zh-TW/_lib/match/index.js": 476,
          "./zh-TW/index.js": 715,
        };
        function webpackContext(req) {
          return __webpack_require__(webpackContextResolve(req));
        }
        function webpackContextResolve(req) {
          var id = map[req];
          if (!(id + 1))
            // check for number or string
            throw new Error("Cannot find module '" + req + "'.");
          return id;
        }
        webpackContext.keys = function webpackContextKeys() {
          return Object.keys(map);
        };
        webpackContext.resolve = webpackContextResolve;
        module.exports = webpackContext;
        webpackContext.id = 24;

        /***/
      },
      /* 25 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addMonths;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addMonths
         * @category Month Helpers
         * @summary Add the specified number of months to the given date.
         *
         * @description
         * Add the specified number of months to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the months added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 5 months to 1 September 2014:
         * const result = addMonths(new Date(2014, 8, 1), 5)
         * //=> Sun Feb 01 2015 00:00:00
         */

        function addMonths(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);

          if (isNaN(amount)) {
            return new Date(NaN);
          }

          if (!amount) {
            // If 0 months, no-op to avoid changing times in the hour before end of DST
            return date;
          }

          var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
          // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
          // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
          // want except that dates will wrap around the end of a month, meaning that
          // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
          // we'll default to the end of the desired month by adding 1 to the desired
          // month and using a date of 0 to back up one day to the end of the desired
          // month.

          var endOfDesiredMonth = new Date(date.getTime());
          endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
          var daysInMonth = endOfDesiredMonth.getDate();

          if (dayOfMonth >= daysInMonth) {
            // If we're already at the end of the month, then this is the correct date
            // and we're done.
            return endOfDesiredMonth;
          } else {
            // Otherwise, we now know that setting the original day-of-month value won't
            // cause an overflow, so set the desired day-of-month. Note that we can't
            // just set the date of `endOfDesiredMonth` because that object may have had
            // its time changed in the unusual case where where a DST transition was on
            // the last day of the month and its local time was in the hour skipped or
            // repeated next to a DST transition.  So we use `date` instead which is
            // guaranteed to still have the original time.
            date.setFullYear(
              endOfDesiredMonth.getFullYear(),
              endOfDesiredMonth.getMonth(),
              dayOfMonth
            );
            return date;
          }
        }

        /***/
      },
      /* 26 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          addMilliseconds;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addMilliseconds
         * @category Millisecond Helpers
         * @summary Add the specified number of milliseconds to the given date.
         *
         * @description
         * Add the specified number of milliseconds to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the milliseconds added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
         * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
         * //=> Thu Jul 10 2014 12:45:30.750
         */

        function addMilliseconds(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var timestamp = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate).getTime();
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return new Date(timestamp + amount);
        }

        /***/
      },
      /* 27 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfISOWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__ =
          __webpack_require__(21);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfISOWeekYear
         * @category ISO Week-Numbering Year Helpers
         * @summary Return the start of an ISO week-numbering year for the given date.
         *
         * @description
         * Return the start of an ISO week-numbering year,
         * which always starts 3 days before the year's first Thursday.
         * The result will be in the local timezone.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of an ISO week-numbering year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of an ISO week-numbering year for 2 July 2005:
         * const result = startOfISOWeekYear(new Date(2005, 6, 2))
         * //=> Mon Jan 03 2005 00:00:00
         */

        function startOfISOWeekYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var year = Object(
            __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          var fourthOfJanuary = new Date(0);
          fourthOfJanuary.setFullYear(year, 0, 4);
          fourthOfJanuary.setHours(0, 0, 0, 0);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuary);
          return date;
        }

        /***/
      },
      /* 28 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isSameDay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfDay_index_js__ =
          __webpack_require__(32);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameDay
         * @category Day Helpers
         * @summary Are the given dates in the same day?
         *
         * @description
         * Are the given dates in the same day?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same day
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?
         * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))
         * //=> true
         */

        function isSameDay(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeftStartOfDay = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfDay_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var dateRightStartOfDay = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfDay_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
        }

        /***/
      },
      /* 29 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          subMilliseconds;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__ =
          __webpack_require__(26);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subMilliseconds
         * @category Millisecond Helpers
         * @summary Subtract the specified number of milliseconds from the given date.
         *
         * @description
         * Subtract the specified number of milliseconds from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the milliseconds subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
         * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
         * //=> Thu Jul 10 2014 12:45:29.250
         */

        function subMilliseconds(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 30 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "c",
          function () {
            return isFunction;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "e",
          function () {
            return isString;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "b",
          function () {
            return isDate;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "d",
          function () {
            return isObject;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "a",
          function () {
            return BooleanParse;
          }
        );
        var _typeof =
          typeof Symbol === "function" && typeof Symbol.iterator === "symbol"
            ? function (obj) {
                return typeof obj;
              }
            : function (obj) {
                return obj &&
                  typeof Symbol === "function" &&
                  obj.constructor === Symbol &&
                  obj !== Symbol.prototype
                  ? "symbol"
                  : typeof obj;
              };

        var isFunction = function isFunction(unknown) {
          return typeof unknown === "function";
        };
        var isString = function isString(unknown) {
          return (
            typeof unknown === "string" ||
            (!!unknown &&
              (typeof unknown === "undefined"
                ? "undefined"
                : _typeof(unknown)) === "object" &&
              Object.prototype.toString.call(unknown) === "[object String]")
          );
        };
        var isDate = function isDate(unknown) {
          return (
            (Object.prototype.toString.call(unknown) === "[object Date]" ||
              unknown instanceof Date) &&
            !isNaN(unknown.valueOf())
          );
        };
        var isObject = function isObject(unknown) {
          return (
            (typeof unknown === "function" ||
              ((typeof unknown === "undefined"
                ? "undefined"
                : _typeof(unknown)) === "object" &&
                !!unknown)) &&
            !Array.isArray(unknown)
          );
        };

        var falsy = /^(?:f(?:alse)?|no?|0+)$/i;
        var BooleanParse = function BooleanParse(val) {
          return !falsy.test(val) && !!val;
        };

        /***/
      },
      /* 31 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isWeekend;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isWeekend
         * @category Weekday Helpers
         * @summary Does the given date fall on a weekend?
         *
         * @description
         * Does the given date fall on a weekend?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date falls on a weekend
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Does 5 October 2014 fall on a weekend?
         * const result = isWeekend(new Date(2014, 9, 5))
         * //=> true
         */

        function isWeekend(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getDay();
          return day === 0 || day === 6;
        }

        /***/
      },
      /* 32 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = startOfDay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfDay
         * @category Day Helpers
         * @summary Return the start of a day for the given date.
         *
         * @description
         * Return the start of a day for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of a day
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of a day for 2 September 2014 11:55:00:
         * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Tue Sep 02 2014 00:00:00
         */

        function startOfDay(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 33 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addWeeks;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addWeeks
         * @category Week Helpers
         * @summary Add the specified number of weeks to the given date.
         *
         * @description
         * Add the specified number of week to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the weeks added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 4 weeks to 1 September 2014:
         * const result = addWeeks(new Date(2014, 8, 1), 4)
         * //=> Mon Sep 29 2014 00:00:00
         */

        function addWeeks(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          var days = amount * 7;
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addDays_index_js__["a" /* default */]
          )(dirtyDate, days);
        }

        /***/
      },
      /* 34 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInMilliseconds;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInMilliseconds
         * @category Millisecond Helpers
         * @summary Get the number of milliseconds between the given dates.
         *
         * @description
         * Get the number of milliseconds between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of milliseconds
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many milliseconds are between
         * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?
         * const result = differenceInMilliseconds(
         *   new Date(2014, 6, 2, 12, 30, 21, 700),
         *   new Date(2014, 6, 2, 12, 30, 20, 600)
         * )
         * //=> 1100
         */

        function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          return dateLeft.getTime() - dateRight.getTime();
        }

        /***/
      },
      /* 35 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInMonths;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarMonths_index_js__ =
          __webpack_require__(77);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isLastDayOfMonth_index_js__ =
          __webpack_require__(84);

        /**
         * @name differenceInMonths
         * @category Month Helpers
         * @summary Get the number of full months between the given dates.
         *
         * @description
         * Get the number of full months between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of full months
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many full months are between 31 January 2014 and 1 September 2014?
         * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))
         * //=> 7
         */

        function differenceInMonths(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var sign = Object(
            __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__[
              "a" /* default */
            ]
          )(dateLeft, dateRight);
          var difference = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarMonths_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight)
          );
          var result; // Check for the difference of less than month

          if (difference < 1) {
            result = 0;
          } else {
            if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {
              // This will check if the date is end of Feb and assign a higher end of month date
              // to compare it with Jan
              dateLeft.setDate(30);
            }

            dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full
            // If so, result must be decreased by 1 in absolute value

            var isLastMonthNotFull =
              Object(
                __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__[
                  "a" /* default */
                ]
              )(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month

            if (
              Object(
                __WEBPACK_IMPORTED_MODULE_4__isLastDayOfMonth_index_js__[
                  "a" /* default */
                ]
              )(
                Object(
                  __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__[
                    "a" /* default */
                  ]
                )(dirtyDateLeft)
              ) &&
              difference === 1 &&
              Object(
                __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__[
                  "a" /* default */
                ]
              )(dirtyDateLeft, dateRight) === 1
            ) {
              isLastMonthNotFull = false;
            }

            result = sign * (difference - Number(isLastMonthNotFull));
          } // Prevent negative zero

          return result === 0 ? 0 : result;
        }

        /***/
      },
      /* 36 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfMonth
         * @category Month Helpers
         * @summary Return the start of a month for the given date.
         *
         * @description
         * Return the start of a month for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of a month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of a month for 2 September 2014 11:55:00:
         * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Mon Sep 01 2014 00:00:00
         */

        function startOfMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setDate(1);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 37 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfUTCISOWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function startOfUTCISOWeek(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var weekStartsOn = 1;
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getUTCDay();
          var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
          date.setUTCDate(date.getUTCDate() - diff);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 38 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfUTCWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function startOfUTCWeek(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getUTCDay();
          var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
          date.setUTCDate(date.getUTCDate() - diff);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 39 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var numberValues = {
          locale: {
            1: "à¥§",
            2: "à¥¨",
            3: "à¥©",
            4: "à¥ª",
            5: "à¥«",
            6: "à¥¬",
            7: "à¥­",
            8: "à¥®",
            9: "à¥¯",
            0: "à¥¦",
          },
          number: {
            "à¥§": "1",
            "à¥¨": "2",
            "à¥©": "3",
            "à¥ª": "4",
            "à¥«": "5",
            "à¥¬": "6",
            "à¥­": "7",
            "à¥®": "8",
            "à¥¯": "9",
            "à¥¦": "0",
          }, // CLDR #1585 - #1592
        };
        var eraValues = {
          narrow: ["à¤ˆà¤¸à¤¾-à¤ªà¥‚à¤°à¥à¤µ", "à¤ˆà¤¸à¥à¤µà¥€"],
          abbreviated: ["à¤ˆà¤¸à¤¾-à¤ªà¥‚à¤°à¥à¤µ", "à¤ˆà¤¸à¥à¤µà¥€"],
          wide: ["à¤ˆà¤¸à¤¾-à¤ªà¥‚à¤°à¥à¤µ", "à¤ˆà¤¸à¤µà¥€ à¤¸à¤¨"], // CLDR #1593 - #1616
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["à¤¤à¤¿1", "à¤¤à¤¿2", "à¤¤à¤¿3", "à¤¤à¤¿4"],
          wide: [
            "à¤ªà¤¹à¤²à¥€ à¤¤à¤¿à¤®à¤¾à¤¹à¥€",
            "à¤¦à¥‚à¤¸à¤°à¥€ à¤¤à¤¿à¤®à¤¾à¤¹à¥€",
            "à¤¤à¥€à¤¸à¤°à¥€ à¤¤à¤¿à¤®à¤¾à¤¹à¥€",
            "à¤šà¥Œà¤¥à¥€ à¤¤à¤¿à¤®à¤¾à¤¹à¥€",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
          // https://www.unicode.org/cldr/charts/32/summary/hi.html
          // CLDR #1617 - #1688
        };
        var monthValues = {
          narrow: [
            "à¤œ",
            "à¤«à¤¼",
            "à¤®à¤¾",
            "à¤…",
            "à¤®à¤ˆ",
            "à¤œà¥‚",
            "à¤œà¥",
            "à¤…à¤—",
            "à¤¸à¤¿",
            "à¤…à¤•à¥à¤¤à¥‚",
            "à¤¨",
            "à¤¦à¤¿",
          ],
          abbreviated: [
            "à¤œà¤¨",
            "à¤«à¤¼à¤°",
            "à¤®à¤¾à¤°à¥à¤š",
            "à¤…à¤ªà¥à¤°à¥ˆà¤²",
            "à¤®à¤ˆ",
            "à¤œà¥‚à¤¨",
            "à¤œà¥à¤²",
            "à¤…à¤—",
            "à¤¸à¤¿à¤¤",
            "à¤…à¤•à¥à¤¤à¥‚",
            "à¤¨à¤µ",
            "à¤¦à¤¿à¤¸",
          ],
          wide: [
            "à¤œà¤¨à¤µà¤°à¥€",
            "à¤«à¤¼à¤°à¤µà¤°à¥€",
            "à¤®à¤¾à¤°à¥à¤š",
            "à¤…à¤ªà¥à¤°à¥ˆà¤²",
            "à¤®à¤ˆ",
            "à¤œà¥‚à¤¨",
            "à¤œà¥à¤²à¤¾à¤ˆ",
            "à¤…à¤—à¤¸à¥à¤¤",
            "à¤¸à¤¿à¤¤à¤‚à¤¬à¤°",
            "à¤…à¤•à¥à¤¤à¥‚à¤¬à¤°",
            "à¤¨à¤µà¤‚à¤¬à¤°",
            "à¤¦à¤¿à¤¸à¤‚à¤¬à¤°",
          ], // CLDR #1689 - #1744
        };
        var dayValues = {
          narrow: ["à¤°", "à¤¸à¥‹", "à¤®à¤‚", "à¤¬à¥", "à¤—à¥", "à¤¶à¥", "à¤¶"],
          short: ["à¤°", "à¤¸à¥‹", "à¤®à¤‚", "à¤¬à¥", "à¤—à¥", "à¤¶à¥", "à¤¶"],
          abbreviated: [
            "à¤°à¤µà¤¿",
            "à¤¸à¥‹à¤®",
            "à¤®à¤‚à¤—à¤²",
            "à¤¬à¥à¤§",
            "à¤—à¥à¤°à¥",
            "à¤¶à¥à¤•à¥à¤°",
            "à¤¶à¤¨à¤¿",
          ],
          wide: [
            "à¤°à¤µà¤¿à¤µà¤¾à¤°",
            "à¤¸à¥‹à¤®à¤µà¤¾à¤°",
            "à¤®à¤‚à¤—à¤²à¤µà¤¾à¤°",
            "à¤¬à¥à¤§à¤µà¤¾à¤°",
            "à¤—à¥à¤°à¥à¤µà¤¾à¤°",
            "à¤¶à¥à¤•à¥à¤°à¤µà¤¾à¤°",
            "à¤¶à¤¨à¤¿à¤µà¤¾à¤°",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨",
            pm: "à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨",
            midnight: "à¤®à¤§à¥à¤¯à¤°à¤¾à¤¤à¥à¤°à¤¿",
            noon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            morning: "à¤¸à¥à¤¬à¤¹",
            afternoon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            evening: "à¤¶à¤¾à¤®",
            night: "à¤°à¤¾à¤¤",
          },
          abbreviated: {
            am: "à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨",
            pm: "à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨",
            midnight: "à¤®à¤§à¥à¤¯à¤°à¤¾à¤¤à¥à¤°à¤¿",
            noon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            morning: "à¤¸à¥à¤¬à¤¹",
            afternoon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            evening: "à¤¶à¤¾à¤®",
            night: "à¤°à¤¾à¤¤",
          },
          wide: {
            am: "à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨",
            pm: "à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨",
            midnight: "à¤®à¤§à¥à¤¯à¤°à¤¾à¤¤à¥à¤°à¤¿",
            noon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            morning: "à¤¸à¥à¤¬à¤¹",
            afternoon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            evening: "à¤¶à¤¾à¤®",
            night: "à¤°à¤¾à¤¤",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨",
            pm: "à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨",
            midnight: "à¤®à¤§à¥à¤¯à¤°à¤¾à¤¤à¥à¤°à¤¿",
            noon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            morning: "à¤¸à¥à¤¬à¤¹",
            afternoon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            evening: "à¤¶à¤¾à¤®",
            night: "à¤°à¤¾à¤¤",
          },
          abbreviated: {
            am: "à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨",
            pm: "à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨",
            midnight: "à¤®à¤§à¥à¤¯à¤°à¤¾à¤¤à¥à¤°à¤¿",
            noon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            morning: "à¤¸à¥à¤¬à¤¹",
            afternoon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            evening: "à¤¶à¤¾à¤®",
            night: "à¤°à¤¾à¤¤",
          },
          wide: {
            am: "à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨",
            pm: "à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨",
            midnight: "à¤®à¤§à¥à¤¯à¤°à¤¾à¤¤à¥à¤°à¤¿",
            noon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            morning: "à¤¸à¥à¤¬à¤¹",
            afternoon: "à¤¦à¥‹à¤ªà¤¹à¤°",
            evening: "à¤¶à¤¾à¤®",
            night: "à¤°à¤¾à¤¤",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = localize.localeToNumber(dirtyNumber);
          var localeNumber = localize.numberToLocale(number);
          var rem10 = number % 10;

          switch (rem10) {
            case 2:
            case 3:
            case 4:
            case 6:
            case 1:
            case 5:
            case 7:
            case 8:
            case 9:
            case 0:
              return localeNumber;
          }
        }

        function localeToNumber(locale) {
          var number = locale
            .toString()
            .replace(/[à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯à¥¦]/g, function (match) {
              return numberValues.number[match];
            });
          return Number(number);
        }

        function numberToLocale(number) {
          return number.toString().replace(/\d/g, function (match) {
            return numberValues.locale[match];
          });
        }

        var localize = {
          localeToNumber: localeToNumber,
          numberToLocale: numberToLocale,
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 40 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "c",
          function () {
            return uuid;
          }
        );
        /* unused harmony export deepMerge */
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "a",
          function () {
            return detectSupportsPassive;
          }
        );
        /* harmony export (binding) */ __webpack_require__.d(
          __webpack_exports__,
          "b",
          function () {
            return newDate;
          }
        );
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__type__ =
          __webpack_require__(30);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_date_fns__ =
          __webpack_require__(20);
        var _extends =
          Object.assign ||
          function (target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _slicedToArray = (function () {
          function sliceIterator(arr, i) {
            var _arr = [];
            var _n = true;
            var _d = false;
            var _e = undefined;
            try {
              for (
                var _i = arr[Symbol.iterator](), _s;
                !(_n = (_s = _i.next()).done);
                _n = true
              ) {
                _arr.push(_s.value);
                if (i && _arr.length === i) break;
              }
            } catch (err) {
              _d = true;
              _e = err;
            } finally {
              try {
                if (!_n && _i["return"]) _i["return"]();
              } finally {
                if (_d) throw _e;
              }
            }
            return _arr;
          }
          return function (arr, i) {
            if (Array.isArray(arr)) {
              return arr;
            } else if (Symbol.iterator in Object(arr)) {
              return sliceIterator(arr, i);
            } else {
              throw new TypeError(
                "Invalid attempt to destructure non-iterable instance"
              );
            }
          };
        })();

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        function _toConsumableArray(arr) {
          if (Array.isArray(arr)) {
            for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
              arr2[i] = arr[i];
            }
            return arr2;
          } else {
            return Array.from(arr);
          }
        }

        var uuid = function uuid() {
          var prefix =
            arguments.length > 0 && arguments[0] !== undefined
              ? arguments[0]
              : "";
          return (
            prefix +
            ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(
              /[018]/g,
              function (c) {
                return (
                  c ^
                  ((window.crypto || window.msCrypto).getRandomValues(
                    new Uint8Array(1)
                  )[0] &
                    (15 >> (c / 4)))
                ).toString(16);
              }
            )
          );
        };
        var deepMerge = function deepMerge() {
          for (
            var _len = arguments.length, sources = Array(_len), _key = 0;
            _key < _len;
            _key++
          ) {
            sources[_key] = arguments[_key];
          }

          var acc = {};
          var _iteratorNormalCompletion = true;
          var _didIteratorError = false;
          var _iteratorError = undefined;

          try {
            for (
              var _iterator = sources[Symbol.iterator](), _step;
              !(_iteratorNormalCompletion = (_step = _iterator.next()).done);
              _iteratorNormalCompletion = true
            ) {
              var source = _step.value;

              if (source instanceof Array) {
                if (!(acc instanceof Array)) {
                  acc = [];
                }
                acc = [].concat(
                  _toConsumableArray(acc),
                  _toConsumableArray(source)
                );
              } else if (source instanceof Object) {
                var _iteratorNormalCompletion2 = true;
                var _didIteratorError2 = false;
                var _iteratorError2 = undefined;

                try {
                  for (
                    var _iterator2 = Object.entries(source)[Symbol.iterator](),
                      _step2;
                    !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next())
                      .done);
                    _iteratorNormalCompletion2 = true
                  ) {
                    var _ref = _step2.value;

                    var _ref2 = _slicedToArray(_ref, 2);

                    var key = _ref2[0];
                    var value = _ref2[1];

                    if (value instanceof Object && key in acc) {
                      value = deepMerge(acc[key], value);
                    }
                    acc = _extends({}, acc, _defineProperty({}, key, value));
                  }
                } catch (err) {
                  _didIteratorError2 = true;
                  _iteratorError2 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                      _iterator2.return();
                    }
                  } finally {
                    if (_didIteratorError2) {
                      throw _iteratorError2;
                    }
                  }
                }
              }
            }
          } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
          } finally {
            try {
              if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
              }
            } finally {
              if (_didIteratorError) {
                throw _iteratorError;
              }
            }
          }

          return acc;
        };

        var detectSupportsPassive = function detectSupportsPassive() {
          var supportsPassive = false;

          try {
            var opts = Object.defineProperty({}, "passive", {
              get: function get() {
                supportsPassive = true;
              },
            });

            window.addEventListener("testPassive", null, opts);
            window.removeEventListener("testPassive", null, opts);
          } catch (e) {}

          return supportsPassive;
        };

        var newDate = function newDate(date, format) {
          var fallback =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : "yyyy-MM-dd HH:mm";

          if (!date) {
            return undefined;
          }

          // Clone Date
          if (__WEBPACK_IMPORTED_MODULE_0__type__["b" /* isDate */](date)) {
            return new Date(date.getTime());
          }

          // Parse Date
          var result = __WEBPACK_IMPORTED_MODULE_1_date_fns__["B" /* parse */](
            date,
            format,
            new Date()
          );

          if (!__WEBPACK_IMPORTED_MODULE_0__type__["b" /* isDate */](result)) {
            result = __WEBPACK_IMPORTED_MODULE_1_date_fns__["B" /* parse */](
              date,
              fallback,
              new Date()
            );
          }

          return result;
        };

        /***/
      },
      /* 41 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isSunday;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSunday
         * @category Weekday Helpers
         * @summary Is the given date Sunday?
         *
         * @description
         * Is the given date Sunday?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is Sunday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 21 September 2014 Sunday?
         * var result = isSunday(new Date(2014, 8, 21))
         * //=> true
         */

        function isSunday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getDay() === 0
          );
        }

        /***/
      },
      /* 42 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addHours;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__ =
          __webpack_require__(26);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_HOUR = 3600000;
        /**
         * @name addHours
         * @category Hour Helpers
         * @summary Add the specified number of hours to the given date.
         *
         * @description
         * Add the specified number of hours to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the hours added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 2 hours to 10 July 2014 23:00:00:
         * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)
         * //=> Fri Jul 11 2014 01:00:00
         */

        function addHours(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, amount * MILLISECONDS_IN_HOUR);
        }

        /***/
      },
      /* 43 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addMinutes;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__ =
          __webpack_require__(26);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_MINUTE = 60000;
        /**
         * @name addMinutes
         * @category Minute Helpers
         * @summary Add the specified number of minutes to the given date.
         *
         * @description
         * Add the specified number of minutes to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the minutes added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 30 minutes to 10 July 2014 12:00:00:
         * const result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)
         * //=> Thu Jul 10 2014 12:30:00
         */

        function addMinutes(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, amount * MILLISECONDS_IN_MINUTE);
        }

        /***/
      },
      /* 44 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addQuarters;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__ =
          __webpack_require__(25);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addQuarters
         * @category Quarter Helpers
         * @summary Add the specified number of year quarters to the given date.
         *
         * @description
         * Add the specified number of year quarters to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the quarters added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 1 quarter to 1 September 2014:
         * const result = addQuarters(new Date(2014, 8, 1), 1)
         * //=> Mon Dec 01 2014 00:00:00
         */

        function addQuarters(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          var months = amount * 3;
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__["a" /* default */]
          )(dirtyDate, months);
        }

        /***/
      },
      /* 45 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInDays;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarDays_index_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        // Like `compareAsc` but uses local time not UTC, which is needed
        // for accurate equality comparisons of UTC timestamps that end up
        // having the same representation in local time, e.g. one hour before
        // DST ends vs. the instant that DST ends.

        function compareLocalAsc(dateLeft, dateRight) {
          var diff =
            dateLeft.getFullYear() - dateRight.getFullYear() ||
            dateLeft.getMonth() - dateRight.getMonth() ||
            dateLeft.getDate() - dateRight.getDate() ||
            dateLeft.getHours() - dateRight.getHours() ||
            dateLeft.getMinutes() - dateRight.getMinutes() ||
            dateLeft.getSeconds() - dateRight.getSeconds() ||
            dateLeft.getMilliseconds() - dateRight.getMilliseconds();

          if (diff < 0) {
            return -1;
          } else if (diff > 0) {
            return 1; // Return 0 if diff is 0; return NaN if diff is NaN
          } else {
            return diff;
          }
        }
        /**
 * @name differenceInDays
 * @category Day Helpers
 * @summary Get the number of full days between the given dates.
 *
 * @description
 * Get the number of full day periods between two dates. Fractional days are
 * truncated towards zero.
 *
 * One "full day" is the distance between a local time in one day to the same
 * local time on the next or previous day. A full day can sometimes be less than
 * or more than 24 hours if a daylight savings change happens between two dates.
 *
 * To ignore DST and only measure exact 24-hour periods, use this instead:
 * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.
 *
 *
 * ### v2.0.0 breaking changes:
 *
 * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
 *
 * @param {Date|Number} dateLeft - the later date
 * @param {Date|Number} dateRight - the earlier date
 * @returns {Number} the number of full days according to the local timezone
 * @throws {TypeError} 2 arguments required
 *
 * @example
 * // How many full days are between
 * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
 * const result = differenceInDays(
 *   new Date(2012, 6, 2, 0, 0),
 *   new Date(2011, 6, 2, 23, 0)
 * )
 * //=> 365
 * // How many full days are between
 * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
 * const result = differenceInDays(
 *   new Date(2011, 6, 3, 0, 1),
 *   new Date(2011, 6, 2, 23, 59)
 * )
 * //=> 0
 * // How many full days are between
 * // 1 March 2020 0:00 and 1 June 2020 0:00 ?
 * // Note: because local time is used, the
 * // result will always be 92 days, even in
 * // time zones where DST starts and the
 * // period has only 92*24-1 hours.
 * const result = differenceInDays(
 *   new Date(2020, 5, 1),
 *   new Date(2020, 2, 1)
 * )
//=> 92
 */

        function differenceInDays(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var sign = compareLocalAsc(dateLeft, dateRight);
          var difference = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarDays_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight)
          );
          dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
          // If so, result must be decreased by 1 in absolute value

          var isLastDayNotFull = Number(
            compareLocalAsc(dateLeft, dateRight) === -sign
          );
          var result = sign * (difference - isLastDayNotFull); // Prevent negative zero

          return result === 0 ? 0 : result;
        }

        /***/
      },
      /* 46 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = endOfDay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfDay
         * @category Day Helpers
         * @summary Return the end of a day for the given date.
         *
         * @description
         * Return the end of a day for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of a day
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of a day for 2 September 2014 11:55:00:
         * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Tue Sep 02 2014 23:59:59.999
         */

        function endOfDay(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 47 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = endOfMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfMonth
         * @category Month Helpers
         * @summary Return the end of a month for the given date.
         *
         * @description
         * Return the end of a month for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of a month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of a month for 2 September 2014 11:55:00:
         * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Tue Sep 30 2014 23:59:59.999
         */

        function endOfMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var month = date.getMonth();
          date.setFullYear(date.getFullYear(), month + 1, 0);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 48 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInSeconds;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInMilliseconds_index_js__ =
          __webpack_require__(34);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInSeconds
         * @category Second Helpers
         * @summary Get the number of seconds between the given dates.
         *
         * @description
         * Get the number of seconds between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of seconds
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many seconds are between
         * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?
         * const result = differenceInSeconds(
         *   new Date(2014, 6, 2, 12, 30, 20, 0),
         *   new Date(2014, 6, 2, 12, 30, 7, 999)
         * )
         * //=> 12
         */

        function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__differenceInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(dirtyDateLeft, dirtyDateRight) / 1000;
          return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
        }

        /***/
      },
      /* 49 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfMinute;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfMinute
         * @category Minute Helpers
         * @summary Return the start of a minute for the given date.
         *
         * @description
         * Return the start of a minute for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of a minute
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of a minute for 1 December 2014 22:15:45.400:
         * const result = startOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
         * //=> Mon Dec 01 2014 22:15:00
         */

        function startOfMinute(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setSeconds(0, 0);
          return date;
        }

        /***/
      },
      /* 50 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfQuarter;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfQuarter
         * @category Quarter Helpers
         * @summary Return the start of a year quarter for the given date.
         *
         * @description
         * Return the start of a year quarter for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of a quarter
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of a quarter for 2 September 2014 11:55:00:
         * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Tue Jul 01 2014 00:00:00
         */

        function startOfQuarter(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var currentMonth = date.getMonth();
          var month = currentMonth - (currentMonth % 3);
          date.setMonth(month, 1);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 51 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          eachWeekendOfInterval;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__eachDayOfInterval_index_js__ =
          __webpack_require__(86);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isSunday_index_js__ =
          __webpack_require__(41);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__isWeekend_index_js__ =
          __webpack_require__(31);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachWeekendOfInterval
         * @category Interval Helpers
         * @summary List all the Saturdays and Sundays in the given date interval.
         *
         * @description
         * Get all the Saturdays and Sundays in the given date interval.
         *
         * @param {Interval} interval - the given interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @returns {Date[]} an array containing all the Saturdays and Sundays
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Lists all Saturdays and Sundays in the given date interval
         * const result = eachWeekendOfInterval({
         *   start: new Date(2018, 8, 17),
         *   end: new Date(2018, 8, 30)
         * })
         * //=> [
         * //   Sat Sep 22 2018 00:00:00,
         * //   Sun Sep 23 2018 00:00:00,
         * //   Sat Sep 29 2018 00:00:00,
         * //   Sun Sep 30 2018 00:00:00
         * // ]
         */

        function eachWeekendOfInterval(interval) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var dateInterval = Object(
            __WEBPACK_IMPORTED_MODULE_0__eachDayOfInterval_index_js__[
              "a" /* default */
            ]
          )(interval);
          var weekends = [];
          var index = 0;

          while (index < dateInterval.length) {
            var date = dateInterval[index++];

            if (
              Object(
                __WEBPACK_IMPORTED_MODULE_2__isWeekend_index_js__[
                  "a" /* default */
                ]
              )(date)
            ) {
              weekends.push(date);
              if (
                Object(
                  __WEBPACK_IMPORTED_MODULE_1__isSunday_index_js__[
                    "a" /* default */
                  ]
                )(date)
              )
                index = index + 5;
            }
          }

          return weekends;
        }

        /***/
      },
      /* 52 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = startOfYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfYear
         * @category Year Helpers
         * @summary Return the start of a year for the given date.
         *
         * @description
         * Return the start of a year for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of a year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of a year for 2 September 2014 11:55:00:
         * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))
         * //=> Wed Jan 01 2014 00:00:00
         */

        function startOfYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var cleanDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var date = new Date(0);
          date.setFullYear(cleanDate.getFullYear(), 0, 1);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 53 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          getUTCWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__ =
          __webpack_require__(38);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function getUTCWeekYear(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate, dirtyOptions);
          var year = date.getUTCFullYear();
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeFirstWeekContainsDate =
            locale && locale.options && locale.options.firstWeekContainsDate;
          var defaultFirstWeekContainsDate =
            localeFirstWeekContainsDate == null
              ? 1
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeFirstWeekContainsDate);
          var firstWeekContainsDate =
            options.firstWeekContainsDate == null
              ? defaultFirstWeekContainsDate
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

          if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
            throw new RangeError(
              "firstWeekContainsDate must be between 1 and 7 inclusively"
            );
          }

          var firstWeekOfNextYear = new Date(0);
          firstWeekOfNextYear.setUTCFullYear(
            year + 1,
            0,
            firstWeekContainsDate
          );
          firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
          var startOfNextYear = Object(
            __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__[
              "a" /* default */
            ]
          )(firstWeekOfNextYear, dirtyOptions);
          var firstWeekOfThisYear = new Date(0);
          firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
          firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
          var startOfThisYear = Object(
            __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__[
              "a" /* default */
            ]
          )(firstWeekOfThisYear, dirtyOptions);

          if (date.getTime() >= startOfNextYear.getTime()) {
            return year + 1;
          } else if (date.getTime() >= startOfThisYear.getTime()) {
            return year;
          } else {
            return year - 1;
          }
        }

        /***/
      },
      /* 54 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getDay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getDay
         * @category Weekday Helpers
         * @summary Get the day of the week of the given date.
         *
         * @description
         * Get the day of the week of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which day of the week is 29 February 2012?
         * const result = getDay(new Date(2012, 1, 29))
         * //=> 3
         */

        function getDay(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getDay();
          return day;
        }

        /***/
      },
      /* 55 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWeekYear_index_js__ =
          __webpack_require__(107);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfWeekYear
         * @category Week-Numbering Year Helpers
         * @summary Return the start of a local week-numbering year for the given date.
         *
         * @description
         * Return the start of a local week-numbering year.
         * The exact calculation depends on the values of
         * `options.weekStartsOn` (which is the index of the first day of the week)
         * and `options.firstWeekContainsDate` (which is the day of January, which is always in
         * the first week of the week-numbering year)
         *
         * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
         * @returns {Date} the start of a week-numbering year
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         *
         * @example
         * // The start of an a week-numbering year for 2 July 2005 with default settings:
         * var result = startOfWeekYear(new Date(2005, 6, 2))
         * //=> Sun Dec 26 2004 00:00:00
         *
         * @example
         * // The start of a week-numbering year for 2 July 2005
         * // if Monday is the first day of week
         * // and 4 January is always in the first week of the year:
         * var result = startOfWeekYear(new Date(2005, 6, 2), {
         *   weekStartsOn: 1,
         *   firstWeekContainsDate: 4
         * })
         * //=> Mon Jan 03 2005 00:00:00
         */

        function startOfWeekYear(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeFirstWeekContainsDate =
            locale && locale.options && locale.options.firstWeekContainsDate;
          var defaultFirstWeekContainsDate =
            localeFirstWeekContainsDate == null
              ? 1
              : Object(
                  __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeFirstWeekContainsDate);
          var firstWeekContainsDate =
            options.firstWeekContainsDate == null
              ? defaultFirstWeekContainsDate
              : Object(
                  __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.firstWeekContainsDate);
          var year = Object(
            __WEBPACK_IMPORTED_MODULE_0__getWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, dirtyOptions);
          var firstWeek = new Date(0);
          firstWeek.setFullYear(year, 0, firstWeekContainsDate);
          firstWeek.setHours(0, 0, 0, 0);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(firstWeek, dirtyOptions);
          return date;
        }

        /***/
      },
      /* 56 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = subDays;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subDays
         * @category Day Helpers
         * @summary Subtract the specified number of days from the given date.
         *
         * @description
         * Subtract the specified number of days from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the days subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 10 days from 1 September 2014:
         * const result = subDays(new Date(2014, 8, 1), 10)
         * //=> Fri Aug 22 2014 00:00:00
         */

        function subDays(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addDays_index_js__["a" /* default */]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 57 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isSameWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameWeek
         * @category Week Helpers
         * @summary Are the given dates in the same week?
         *
         * @description
         * Are the given dates in the same week?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Boolean} the dates are in the same week
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // Are 31 August 2014 and 4 September 2014 in the same week?
         * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))
         * //=> true
         *
         * @example
         * // If week starts with Monday,
         * // are 31 August 2014 and 4 September 2014 in the same week?
         * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {
         *   weekStartsOn: 1
         * })
         * //=> false
         */
        function isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeftStartOfWeek = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft, dirtyOptions);
          var dateRightStartOfWeek = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight, dirtyOptions);
          return (
            dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime()
          );
        }

        /***/
      },
      /* 58 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = setMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getDaysInMonth_index_js__ =
          __webpack_require__(101);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setMonth
         * @category Month Helpers
         * @summary Set the month to the given date.
         *
         * @description
         * Set the month to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} month - the month of the new date
         * @returns {Date} the new date with the month set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set February to 1 September 2014:
         * const result = setMonth(new Date(2014, 8, 1), 1)
         * //=> Sat Feb 01 2014 00:00:00
         */

        function setMonth(dirtyDate, dirtyMonth) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var month = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyMonth);
          var year = date.getFullYear();
          var day = date.getDate();
          var dateWithDesiredMonth = new Date(0);
          dateWithDesiredMonth.setFullYear(year, month, 15);
          dateWithDesiredMonth.setHours(0, 0, 0, 0);
          var daysInMonth = Object(
            __WEBPACK_IMPORTED_MODULE_2__getDaysInMonth_index_js__[
              "a" /* default */
            ]
          )(dateWithDesiredMonth); // Set the last day of the new month
          // if the original date was the last day of the longer month

          date.setMonth(month, Math.min(day, daysInMonth));
          return date;
        }

        /***/
      },
      /* 59 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var _createClass = (function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        var EventEmitter = (function () {
          function EventEmitter() {
            var listeners =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : [];

            _classCallCheck(this, EventEmitter);

            this._listeners = new Map(listeners);
            this._middlewares = new Map();
          }

          _createClass(EventEmitter, [
            {
              key: "listenerCount",
              value: function listenerCount(eventName) {
                if (!this._listeners.has(eventName)) {
                  return 0;
                }

                var eventListeners = this._listeners.get(eventName);
                return eventListeners.length;
              },
            },
            {
              key: "removeListeners",
              value: function removeListeners() {
                var _this = this;

                var eventName =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : null;
                var middleware =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : false;

                if (eventName !== null) {
                  if (Array.isArray(eventName)) {
                    name.forEach(function (e) {
                      return _this.removeListeners(e, middleware);
                    });
                  } else {
                    this._listeners.delete(eventName);

                    if (middleware) {
                      this.removeMiddleware(eventName);
                    }
                  }
                } else {
                  this._listeners = new Map();
                }
              },
            },
            {
              key: "middleware",
              value: function middleware(eventName, fn) {
                var _this2 = this;

                if (Array.isArray(eventName)) {
                  name.forEach(function (e) {
                    return _this2.middleware(e, fn);
                  });
                } else {
                  if (!Array.isArray(this._middlewares.get(eventName))) {
                    this._middlewares.set(eventName, []);
                  }

                  this._middlewares.get(eventName).push(fn);
                }
              },
            },
            {
              key: "removeMiddleware",
              value: function removeMiddleware() {
                var _this3 = this;

                var eventName =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : null;

                if (eventName !== null) {
                  if (Array.isArray(eventName)) {
                    name.forEach(function (e) {
                      return _this3.removeMiddleware(e);
                    });
                  } else {
                    this._middlewares.delete(eventName);
                  }
                } else {
                  this._middlewares = new Map();
                }
              },
            },
            {
              key: "on",
              value: function on(name, callback) {
                var _this4 = this;

                var once =
                  arguments.length > 2 && arguments[2] !== undefined
                    ? arguments[2]
                    : false;

                if (Array.isArray(name)) {
                  name.forEach(function (e) {
                    return _this4.on(e, callback);
                  });
                } else {
                  name = name.toString();
                  var split = name.split(/,|, | /);

                  if (split.length > 1) {
                    split.forEach(function (e) {
                      return _this4.on(e, callback);
                    });
                  } else {
                    if (!Array.isArray(this._listeners.get(name))) {
                      this._listeners.set(name, []);
                    }

                    this._listeners.get(name).push({
                      once: once,
                      callback: callback,
                    });
                  }
                }
              },
            },
            {
              key: "once",
              value: function once(name, callback) {
                this.on(name, callback, true);
              },
            },
            {
              key: "emit",
              value: function emit(name, data) {
                var _this5 = this;

                var silent =
                  arguments.length > 2 && arguments[2] !== undefined
                    ? arguments[2]
                    : false;

                name = name.toString();
                var listeners = this._listeners.get(name);
                var middlewares = null;
                var doneCount = 0;
                var execute = silent;

                if (Array.isArray(listeners)) {
                  listeners.forEach(function (listener, index) {
                    // Start Middleware checks unless we're doing a silent emit
                    if (!silent) {
                      middlewares = _this5._middlewares.get(name);
                      // Check and execute Middleware
                      if (Array.isArray(middlewares)) {
                        middlewares.forEach(function (middleware) {
                          middleware(
                            data,
                            function () {
                              var newData =
                                arguments.length > 0 &&
                                arguments[0] !== undefined
                                  ? arguments[0]
                                  : null;

                              if (newData !== null) {
                                data = newData;
                              }
                              doneCount++;
                            },
                            name
                          );
                        });

                        if (doneCount >= middlewares.length) {
                          execute = true;
                        }
                      } else {
                        execute = true;
                      }
                    }

                    // If Middleware checks have been passed, execute
                    if (execute) {
                      if (listener.once) {
                        listeners[index] = null;
                      }
                      listener.callback({
                        type: name,
                        timeStamp: new Date().getTime(),
                        data: data,
                      });
                    }
                  });

                  // Dirty way of removing used Events
                  while (listeners.indexOf(null) !== -1) {
                    listeners.splice(listeners.indexOf(null), 1);
                  }
                }
              },
            },
          ]);

          return EventEmitter;
        })();

        /* harmony default export */ __webpack_exports__["a"] = EventEmitter;

        /***/
      },
      /* 60 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = requiredArgs;

        function requiredArgs(required, args) {
          if (args.length < required) {
            throw new TypeError(
              required +
                " argument" +
                (required > 1 ? "s" : "") +
                " required, but only " +
                args.length +
                " present"
            );
          }
        }

        module.exports = exports.default;

        /***/
      },
      /* 61 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var numberValues = {
          locale: {
            1: "à§§",
            2: "à§¨",
            3: "à§©",
            4: "à§ª",
            5: "à§«",
            6: "à§¬",
            7: "à§­",
            8: "à§®",
            9: "à§¯",
            0: "à§¦",
          },
          number: {
            "à§§": "1",
            "à§¨": "2",
            "à§©": "3",
            "à§ª": "4",
            "à§«": "5",
            "à§¬": "6",
            "à§­": "7",
            "à§®": "8",
            "à§¯": "9",
            "à§¦": "0",
          },
        };
        var eraValues = {
          narrow: ["à¦–à§à¦°à¦¿à¦ƒà¦ªà§‚à¦ƒ", "à¦–à§à¦°à¦¿à¦ƒ"],
          abbreviated: ["à¦–à§à¦°à¦¿à¦ƒà¦ªà§‚à¦°à§à¦¬", "à¦–à§à¦°à¦¿à¦ƒ"],
          wide: [
            "à¦–à§à¦°à¦¿à¦¸à§à¦Ÿà¦ªà§‚à¦°à§à¦¬",
            "à¦–à§à¦°à¦¿à¦¸à§à¦Ÿà¦¾à¦¬à§à¦¦",
          ],
        };
        var quarterValues = {
          narrow: ["à§§", "à§¨", "à§©", "à§ª"],
          abbreviated: [
            "à§§à¦¤à§à¦°à§ˆ",
            "à§¨à¦¤à§à¦°à§ˆ",
            "à§©à¦¤à§à¦°à§ˆ",
            "à§ªà¦¤à§à¦°à§ˆ",
          ],
          wide: [
            "à§§à¦® à¦¤à§à¦°à§ˆà¦®à¦¾à¦¸à¦¿à¦•",
            "à§¨à§Ÿ à¦¤à§à¦°à§ˆà¦®à¦¾à¦¸à¦¿à¦•",
            "à§©à§Ÿ à¦¤à§à¦°à§ˆà¦®à¦¾à¦¸à¦¿à¦•",
            "à§ªà¦°à§à¦¥ à¦¤à§à¦°à§ˆà¦®à¦¾à¦¸à¦¿à¦•",
          ],
        };
        var monthValues = {
          narrow: [
            "à¦œà¦¾à¦¨à§",
            "à¦«à§‡à¦¬à§à¦°à§",
            "à¦®à¦¾à¦°à§à¦š",
            "à¦à¦ªà§à¦°à¦¿à¦²",
            "à¦®à§‡",
            "à¦œà§à¦¨",
            "à¦œà§à¦²à¦¾à¦‡",
            "à¦†à¦—à¦¸à§à¦Ÿ",
            "à¦¸à§‡à¦ªà§à¦Ÿ",
            "à¦…à¦•à§à¦Ÿà§‹",
            "à¦¨à¦­à§‡",
            "à¦¡à¦¿à¦¸à§‡",
          ],
          abbreviated: [
            "à¦œà¦¾à¦¨à§",
            "à¦«à§‡à¦¬à§à¦°à§",
            "à¦®à¦¾à¦°à§à¦š",
            "à¦à¦ªà§à¦°à¦¿à¦²",
            "à¦®à§‡",
            "à¦œà§à¦¨",
            "à¦œà§à¦²à¦¾à¦‡",
            "à¦†à¦—à¦¸à§à¦Ÿ",
            "à¦¸à§‡à¦ªà§à¦Ÿ",
            "à¦…à¦•à§à¦Ÿà§‹",
            "à¦¨à¦­à§‡",
            "à¦¡à¦¿à¦¸à§‡",
          ],
          wide: [
            "à¦œà¦¾à¦¨à§à§Ÿà¦¾à¦°à¦¿",
            "à¦«à§‡à¦¬à§à¦°à§à§Ÿà¦¾à¦°à¦¿",
            "à¦®à¦¾à¦°à§à¦š",
            "à¦à¦ªà§à¦°à¦¿à¦²",
            "à¦®à§‡",
            "à¦œà§à¦¨",
            "à¦œà§à¦²à¦¾à¦‡",
            "à¦†à¦—à¦¸à§à¦Ÿ",
            "à¦¸à§‡à¦ªà§à¦Ÿà§‡à¦®à§à¦¬à¦°",
            "à¦…à¦•à§à¦Ÿà§‹à¦¬à¦°",
            "à¦¨à¦­à§‡à¦®à§à¦¬à¦°",
            "à¦¡à¦¿à¦¸à§‡à¦®à§à¦¬à¦°",
          ],
        };
        var dayValues = {
          narrow: ["à¦°", "à¦¸à§‹", "à¦®", "à¦¬à§", "à¦¬à§ƒ", "à¦¶à§", "à¦¶"],
          short: [
            "à¦°à¦¬à¦¿",
            "à¦¸à§‹à¦®",
            "à¦®à¦™à§à¦—à¦²",
            "à¦¬à§à¦§",
            "à¦¬à§ƒà¦¹",
            "à¦¶à§à¦•à§à¦°",
            "à¦¶à¦¨à¦¿",
          ],
          abbreviated: [
            "à¦°à¦¬à¦¿",
            "à¦¸à§‹à¦®",
            "à¦®à¦™à§à¦—à¦²",
            "à¦¬à§à¦§",
            "à¦¬à§ƒà¦¹",
            "à¦¶à§à¦•à§à¦°",
            "à¦¶à¦¨à¦¿",
          ],
          wide: [
            "à¦°à¦¬à¦¿à¦¬à¦¾à¦°",
            "à¦¸à§‹à¦®à¦¬à¦¾à¦°",
            "à¦®à¦™à§à¦—à¦²à¦¬à¦¾à¦°",
            "à¦¬à§à¦§à¦¬à¦¾à¦°",
            "à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à¦¿à¦¬à¦¾à¦° ",
            "à¦¶à§à¦•à§à¦°à¦¬à¦¾à¦°",
            "à¦¶à¦¨à¦¿à¦¬à¦¾à¦°",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "à¦ªà§‚",
            pm: "à¦…à¦ª",
            midnight: "à¦®à¦§à§à¦¯à¦°à¦¾à¦¤",
            noon: "à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨",
            morning: "à¦¸à¦•à¦¾à¦²",
            afternoon: "à¦¬à¦¿à¦•à¦¾à¦²",
            evening: "à¦¸à¦¨à§à¦§à§à¦¯à¦¾",
            night: "à¦°à¦¾à¦¤",
          },
          abbreviated: {
            am: "à¦ªà§‚à¦°à§à¦¬à¦¾à¦¹à§à¦¨",
            pm: "à¦…à¦ªà¦°à¦¾à¦¹à§à¦¨",
            midnight: "à¦®à¦§à§à¦¯à¦°à¦¾à¦¤",
            noon: "à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨",
            morning: "à¦¸à¦•à¦¾à¦²",
            afternoon: "à¦¬à¦¿à¦•à¦¾à¦²",
            evening: "à¦¸à¦¨à§à¦§à§à¦¯à¦¾",
            night: "à¦°à¦¾à¦¤",
          },
          wide: {
            am: "à¦ªà§‚à¦°à§à¦¬à¦¾à¦¹à§à¦¨",
            pm: "à¦…à¦ªà¦°à¦¾à¦¹à§à¦¨",
            midnight: "à¦®à¦§à§à¦¯à¦°à¦¾à¦¤",
            noon: "à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨",
            morning: "à¦¸à¦•à¦¾à¦²",
            afternoon: "à¦¬à¦¿à¦•à¦¾à¦²",
            evening: "à¦¸à¦¨à§à¦§à§à¦¯à¦¾",
            night: "à¦°à¦¾à¦¤",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "à¦ªà§‚",
            pm: "à¦…à¦ª",
            midnight: "à¦®à¦§à§à¦¯à¦°à¦¾à¦¤",
            noon: "à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨",
            morning: "à¦¸à¦•à¦¾à¦²",
            afternoon: "à¦¬à¦¿à¦•à¦¾à¦²",
            evening: "à¦¸à¦¨à§à¦§à§à¦¯à¦¾",
            night: "à¦°à¦¾à¦¤",
          },
          abbreviated: {
            am: "à¦ªà§‚à¦°à§à¦¬à¦¾à¦¹à§à¦¨",
            pm: "à¦…à¦ªà¦°à¦¾à¦¹à§à¦¨",
            midnight: "à¦®à¦§à§à¦¯à¦°à¦¾à¦¤",
            noon: "à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨",
            morning: "à¦¸à¦•à¦¾à¦²",
            afternoon: "à¦¬à¦¿à¦•à¦¾à¦²",
            evening: "à¦¸à¦¨à§à¦§à§à¦¯à¦¾",
            night: "à¦°à¦¾à¦¤",
          },
          wide: {
            am: "à¦ªà§‚à¦°à§à¦¬à¦¾à¦¹à§à¦¨",
            pm: "à¦…à¦ªà¦°à¦¾à¦¹à§à¦¨",
            midnight: "à¦®à¦§à§à¦¯à¦°à¦¾à¦¤",
            noon: "à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨",
            morning: "à¦¸à¦•à¦¾à¦²",
            afternoon: "à¦¬à¦¿à¦•à¦¾à¦²",
            evening: "à¦¸à¦¨à§à¦§à§à¦¯à¦¾",
            night: "à¦°à¦¾à¦¤",
          },
        };

        function dateOrdinalNumber(number, localeNumber) {
          if (number > 18 && number <= 31) {
            return localeNumber + "à¦¶à§‡";
          } else {
            switch (number) {
              case 1:
                return localeNumber + "à¦²à¦¾";

              case 2:
              case 3:
                return localeNumber + "à¦°à¦¾";

              case 4:
                return localeNumber + "à¦ à¦¾";

              default:
                return localeNumber + "à¦‡";
            }
          }
        }

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = localize.localeToNumber(dirtyNumber);
          var localeNumber = localize.numberToLocale(number);
          var unit = dirtyOptions.unit;

          if (unit === "date") {
            return dateOrdinalNumber(number, localeNumber);
          }

          if (number > 10 || number === 0) return localeNumber + "à¦¤à¦®";
          var rem10 = number % 10;

          switch (rem10) {
            case 2:
            case 3:
              return localeNumber + "à§Ÿ";

            case 4:
              return localeNumber + "à¦°à§à¦¥";

            case 6:
              return localeNumber + "à¦·à§à¦ ";

            case 1:
            case 5:
            case 7:
            case 8:
            case 9:
            case 0:
              return localeNumber + "à¦®";
          }
        }

        function localeToNumber(locale) {
          var number = locale
            .toString()
            .replace(/[à§§à§¨à§©à§ªà§«à§¬à§­à§®à§¯à§¦]/g, function (match) {
              return numberValues.number[match];
            });
          return Number(number);
        }

        function numberToLocale(number) {
          return number.toString().replace(/\d/g, function (match) {
            return numberValues.locale[match];
          });
        }

        var localize = {
          localeToNumber: localeToNumber,
          numberToLocale: numberToLocale,
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 62 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            standalone: {
              one: "weniger als eine Sekunde",
              other: "weniger als {{count}} Sekunden",
            },
            withPreposition: {
              one: "weniger als einer Sekunde",
              other: "weniger als {{count}} Sekunden",
            },
          },
          xSeconds: {
            standalone: {
              one: "eine Sekunde",
              other: "{{count}} Sekunden",
            },
            withPreposition: {
              one: "einer Sekunde",
              other: "{{count}} Sekunden",
            },
          },
          halfAMinute: {
            standalone: "eine halbe Minute",
            withPreposition: "einer halben Minute",
          },
          lessThanXMinutes: {
            standalone: {
              one: "weniger als eine Minute",
              other: "weniger als {{count}} Minuten",
            },
            withPreposition: {
              one: "weniger als einer Minute",
              other: "weniger als {{count}} Minuten",
            },
          },
          xMinutes: {
            standalone: {
              one: "eine Minute",
              other: "{{count}} Minuten",
            },
            withPreposition: {
              one: "einer Minute",
              other: "{{count}} Minuten",
            },
          },
          aboutXHours: {
            standalone: {
              one: "etwa eine Stunde",
              other: "etwa {{count}} Stunden",
            },
            withPreposition: {
              one: "etwa einer Stunde",
              other: "etwa {{count}} Stunden",
            },
          },
          xHours: {
            standalone: {
              one: "eine Stunde",
              other: "{{count}} Stunden",
            },
            withPreposition: {
              one: "einer Stunde",
              other: "{{count}} Stunden",
            },
          },
          xDays: {
            standalone: {
              one: "ein Tag",
              other: "{{count}} Tage",
            },
            withPreposition: {
              one: "einem Tag",
              other: "{{count}} Tagen",
            },
          },
          aboutXWeeks: {
            standalone: {
              one: "etwa ein Woche",
              other: "etwa {{count}} Wochen",
            },
            withPreposition: {
              one: "etwa einem Woche",
              other: "etwa {{count}} Wochen",
            },
          },
          xWeeks: {
            standalone: {
              one: "ein Woche",
              other: "{{count}} Wochen",
            },
            withPreposition: {
              one: "einem Woche",
              other: "{{count}} Wochen",
            },
          },
          aboutXMonths: {
            standalone: {
              one: "etwa ein Monat",
              other: "etwa {{count}} Monate",
            },
            withPreposition: {
              one: "etwa einem Monat",
              other: "etwa {{count}} Monaten",
            },
          },
          xMonths: {
            standalone: {
              one: "ein Monat",
              other: "{{count}} Monate",
            },
            withPreposition: {
              one: "einem Monat",
              other: "{{count}} Monaten",
            },
          },
          aboutXYears: {
            standalone: {
              one: "etwa ein Jahr",
              other: "etwa {{count}} Jahre",
            },
            withPreposition: {
              one: "etwa einem Jahr",
              other: "etwa {{count}} Jahren",
            },
          },
          xYears: {
            standalone: {
              one: "ein Jahr",
              other: "{{count}} Jahre",
            },
            withPreposition: {
              one: "einem Jahr",
              other: "{{count}} Jahren",
            },
          },
          overXYears: {
            standalone: {
              one: "mehr als ein Jahr",
              other: "mehr als {{count}} Jahre",
            },
            withPreposition: {
              one: "mehr als einem Jahr",
              other: "mehr als {{count}} Jahren",
            },
          },
          almostXYears: {
            standalone: {
              one: "fast ein Jahr",
              other: "fast {{count}} Jahre",
            },
            withPreposition: {
              one: "fast einem Jahr",
              other: "fast {{count}} Jahren",
            },
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var usageGroup = options.addSuffix
            ? formatDistanceLocale[token].withPreposition
            : formatDistanceLocale[token].standalone;
          var result;

          if (typeof usageGroup === "string") {
            result = usageGroup;
          } else if (count === 1) {
            result = usageGroup.one;
          } else {
            result = usageGroup.other.replace("{{count}}", count);
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "in " + result;
            } else {
              return "vor " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 63 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008
        var dateFormats = {
          full: "EEEE, do MMMM y",
          // Montag, 7. Januar 2018
          long: "do MMMM y",
          // 7. Januar 2018
          medium: "do MMM. y",
          // 7. Jan. 2018
          short: "dd.MM.y", // 07.01.2018
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'um' {{time}}",
          long: "{{date}} 'um' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 64 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'letzten' eeee 'um' p",
          yesterday: "'gestern um' p",
          today: "'heute um' p",
          tomorrow: "'morgen um' p",
          nextWeek: "eeee 'um' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 65 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
          abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
          wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i,
        };
        var parseEraPatterns = {
          any: [/^v/i, /^n/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](\.)? Quartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|feb|má¤r|apr|mai|jun|jul|aug|sep|okt|nov|dez)/i,
          wide: /^(januar|februar|má¤rz|april|mai|juni|juli|august|september|oktober|november|dezember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^má¤r/i,
            /^ap/i,
            /^mai/i,
            /^jun/i,
            /^jul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smdmf]/i,
          short: /^(so|mo|di|mi|do|fr|sa)/i,
          abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\.?/i,
          wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i,
        };
        var parseDayPatterns = {
          any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(vm\.?|nm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
          abbreviated:
            /^(vorm\.?|nachm\.?|Mitternacht|Mittag|morgens|nachm\.?|abends|nachts)/i,
          wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^v/i,
            pm: /^n/i,
            midnight: /^Mitte/i,
            noon: /^Mitta/i,
            morning: /morgens/i,
            afternoon: /nachmittags/i,
            // will never be matched. Afternoon is matched by `pm`
            evening: /abends/i,
            night: /nachts/i, // will never be matched. Night is matched by `pm`
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 66 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "moins dâ€™une seconde",
            other: "moins de {{count}} secondes",
          },
          xSeconds: {
            one: "1 seconde",
            other: "{{count}} secondes",
          },
          halfAMinute: "30 secondes",
          lessThanXMinutes: {
            one: "moins dâ€™une minute",
            other: "moins de {{count}} minutes",
          },
          xMinutes: {
            one: "1 minute",
            other: "{{count}} minutes",
          },
          aboutXHours: {
            one: "environ 1 heure",
            other: "environ {{count}} heures",
          },
          xHours: {
            one: "1 heure",
            other: "{{count}} heures",
          },
          xDays: {
            one: "1 jour",
            other: "{{count}} jours",
          },
          aboutXWeeks: {
            one: "environ 1 semaine",
            other: "environ {{count}} semaines",
          },
          xWeeks: {
            one: "1 semaine",
            other: "{{count}} semaines",
          },
          aboutXMonths: {
            one: "environ 1 mois",
            other: "environ {{count}} mois",
          },
          xMonths: {
            one: "1 mois",
            other: "{{count}} mois",
          },
          aboutXYears: {
            one: "environ 1 an",
            other: "environ {{count}} ans",
          },
          xYears: {
            one: "1 an",
            other: "{{count}} ans",
          },
          overXYears: {
            one: "plus dâ€™un an",
            other: "plus de {{count}} ans",
          },
          almostXYears: {
            one: "presquâ€™un an",
            other: "presque {{count}} ans",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "dans " + result;
            } else {
              return "il y a " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 67 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'dernier á ' p",
          yesterday: "'hier á ' p",
          today: "'aujourdâ€™hui á ' p",
          tomorrow: "'demain á ' p'",
          nextWeek: "eeee 'prochain á ' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 68 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["av. J.-C", "ap. J.-C"],
          abbreviated: ["av. J.-C", "ap. J.-C"],
          wide: ["avant Já©sus-Christ", "aprá¨s Já©sus-Christ"],
        };
        var quarterValues = {
          narrow: ["T1", "T2", "T3", "T4"],
          abbreviated: [
            "1er trim.",
            "2á¨me trim.",
            "3á¨me trim.",
            "4á¨me trim.",
          ],
          wide: [
            "1er trimestre",
            "2á¨me trimestre",
            "3á¨me trimestre",
            "4á¨me trimestre",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "janv.",
            "fá©vr.",
            "mars",
            "avr.",
            "mai",
            "juin",
            "juil.",
            "aoá»t",
            "sept.",
            "oct.",
            "nov.",
            "dá©c.",
          ],
          wide: [
            "janvier",
            "fá©vrier",
            "mars",
            "avril",
            "mai",
            "juin",
            "juillet",
            "aoá»t",
            "septembre",
            "octobre",
            "novembre",
            "dá©cembre",
          ],
        };
        var dayValues = {
          narrow: ["D", "L", "M", "M", "J", "V", "S"],
          short: ["di", "lu", "ma", "me", "je", "ve", "sa"],
          abbreviated: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
          wide: [
            "dimanche",
            "lundi",
            "mardi",
            "mercredi",
            "jeudi",
            "vendredi",
            "samedi",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "minuit",
            noon: "midi",
            morning: "mat.",
            afternoon: "ap.m.",
            evening: "soir",
            night: "mat.",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "minuit",
            noon: "midi",
            morning: "matin",
            afternoon: "aprá¨s-midi",
            evening: "soir",
            night: "matin",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "minuit",
            noon: "midi",
            morning: "du matin",
            afternoon: "de lâ€™aprá¨s-midi",
            evening: "du soir",
            night: "du matin",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber);
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var suffix;

          if (number === 0) {
            return number;
          }

          if (unit === "year" || unit === "hour" || unit === "week") {
            if (number === 1) {
              suffix = "á¨re";
            } else {
              suffix = "á¨me";
            }
          } else {
            if (number === 1) {
              suffix = "er";
            } else {
              suffix = "á¨me";
            }
          }

          return number + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 69 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(iá¨me|á¨re|á¨me|er|e)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,
          abbreviated: /^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
          wide: /^(avant Já©sus-Christ|aprá¨s Já©sus-Christ)/i,
        };
        var parseEraPatterns = {
          any: [/^av/i, /^ap/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^t[1234]/i,
          wide: /^[1234](er|á¨me|e)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(janv|fá©vr|mars|avr|mai|juin|juill|juil|aoá»t|sept|oct|nov|dá©c)\.?/i,
          wide: /^(janvier|fá©vrier|mars|avril|mai|juin|juillet|aoá»t|septembre|octobre|novembre|dá©cembre)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^av/i,
            /^ma/i,
            /^juin/i,
            /^juil/i,
            /^ao/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[lmjvsd]/i,
          short: /^(di|lu|ma|me|je|ve|sa)/i,
          abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,
          wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
          any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,
          any: /^([ap]\.?\s?m\.?|du matin|de l'aprá¨s[-\s]midi|du soir|de la nuit)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^min/i,
            noon: /^mid/i,
            morning: /mat/i,
            afternoon: /ap/i,
            evening: /soir/i,
            night: /nuit/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 70 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          addBusinessDays;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isWeekend_index_js__ =
          __webpack_require__(31);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__isSunday_index_js__ =
          __webpack_require__(41);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__isSaturday_index_js__ =
          __webpack_require__(71);

        /**
         * @name addBusinessDays
         * @category Day Helpers
         * @summary Add the specified number of business days (mon - fri) to the given date.
         *
         * @description
         * Add the specified number of business days (mon - fri) to the given date, ignoring weekends.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of business days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the business days added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 10 business days to 1 September 2014:
         * const result = addBusinessDays(new Date(2014, 8, 1), 10)
         * //=> Mon Sep 15 2014 00:00:00 (skipped weekend days)
         */

        function addBusinessDays(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var startedOnWeekend = Object(
            __WEBPACK_IMPORTED_MODULE_0__isWeekend_index_js__["a" /* default */]
          )(date);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          if (isNaN(amount)) return new Date(NaN);
          var hours = date.getHours();
          var sign = amount < 0 ? -1 : 1;
          var fullWeeks = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(amount / 5);
          date.setDate(date.getDate() + fullWeeks * 7); // Get remaining days not part of a full week

          var restDays = Math.abs(amount % 5); // Loops over remaining days

          while (restDays > 0) {
            date.setDate(date.getDate() + sign);
            if (
              !Object(
                __WEBPACK_IMPORTED_MODULE_0__isWeekend_index_js__[
                  "a" /* default */
                ]
              )(date)
            )
              restDays -= 1;
          } // If the date is a weekend day and we reduce a dividable of
          // 5 from it, we land on a weekend date.
          // To counter this, we add days accordingly to land on the next business day

          if (
            startedOnWeekend &&
            Object(
              __WEBPACK_IMPORTED_MODULE_0__isWeekend_index_js__[
                "a" /* default */
              ]
            )(date) &&
            amount !== 0
          ) {
            // If we're reducing days, we want to add days until we land on a weekday
            // If we're adding days we want to reduce days until we land on a weekday
            if (
              Object(
                __WEBPACK_IMPORTED_MODULE_5__isSaturday_index_js__[
                  "a" /* default */
                ]
              )(date)
            )
              date.setDate(date.getDate() + (sign < 0 ? 2 : -1));
            if (
              Object(
                __WEBPACK_IMPORTED_MODULE_4__isSunday_index_js__[
                  "a" /* default */
                ]
              )(date)
            )
              date.setDate(date.getDate() + (sign < 0 ? 1 : -2));
          } // Restore hours to avoid DST lag

          date.setHours(hours);
          return date;
        }

        /***/
      },
      /* 71 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isSaturday;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSaturday
         * @category Weekday Helpers
         * @summary Is the given date Saturday?
         *
         * @description
         * Is the given date Saturday?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is Saturday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 27 September 2014 Saturday?
         * var result = isSaturday(new Date(2014, 8, 27))
         * //=> true
         */

        function isSaturday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getDay() === 6
          );
        }

        /***/
      },
      /* 72 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          addISOWeekYears;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getISOWeekYear_index_js__ =
          __webpack_require__(21);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__setISOWeekYear_index_js__ =
          __webpack_require__(73);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addISOWeekYears
         * @category ISO Week-Numbering Year Helpers
         * @summary Add the specified number of ISO week-numbering years to the given date.
         *
         * @description
         * Add the specified number of ISO week-numbering years to the given date.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `addISOYears` to `addISOWeekYears`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of ISO week-numbering years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the ISO week-numbering years added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 5 ISO week-numbering years to 2 July 2010:
         * const result = addISOWeekYears(new Date(2010, 6, 2), 5)
         * //=> Fri Jun 26 2015 00:00:00
         */

        function addISOWeekYears(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_2__setISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(
            dirtyDate,
            Object(
              __WEBPACK_IMPORTED_MODULE_1__getISOWeekYear_index_js__[
                "a" /* default */
              ]
            )(dirtyDate) + amount
          );
        }

        /***/
      },
      /* 73 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          setISOWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfISOWeekYear_index_js__ =
          __webpack_require__(27);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__differenceInCalendarDays_index_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setISOWeekYear
         * @category ISO Week-Numbering Year Helpers
         * @summary Set the ISO week-numbering year to the given date.
         *
         * @description
         * Set the ISO week-numbering year to the given date,
         * saving the week number and the weekday number.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `setISOYear` to `setISOWeekYear`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} isoWeekYear - the ISO week-numbering year of the new date
         * @returns {Date} the new date with the ISO week-numbering year set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set ISO week-numbering year 2007 to 29 December 2008:
         * const result = setISOWeekYear(new Date(2008, 11, 29), 2007)
         * //=> Mon Jan 01 2007 00:00:00
         */

        function setISOWeekYear(dirtyDate, dirtyISOWeekYear) {
          Object(
            __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var isoWeekYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyISOWeekYear);
          var diff = Object(
            __WEBPACK_IMPORTED_MODULE_3__differenceInCalendarDays_index_js__[
              "a" /* default */
            ]
          )(
            date,
            Object(
              __WEBPACK_IMPORTED_MODULE_2__startOfISOWeekYear_index_js__[
                "a" /* default */
              ]
            )(date)
          );
          var fourthOfJanuary = new Date(0);
          fourthOfJanuary.setFullYear(isoWeekYear, 0, 4);
          fourthOfJanuary.setHours(0, 0, 0, 0);
          date = Object(
            __WEBPACK_IMPORTED_MODULE_2__startOfISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuary);
          date.setDate(date.getDate() + diff);
          return date;
        }

        /***/
      },
      /* 74 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addSeconds;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__ =
          __webpack_require__(26);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addSeconds
         * @category Second Helpers
         * @summary Add the specified number of seconds to the given date.
         *
         * @description
         * Add the specified number of seconds to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the seconds added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 30 seconds to 10 July 2014 12:45:00:
         * const result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
         * //=> Thu Jul 10 2014 12:45:30
         */

        function addSeconds(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMilliseconds_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, amount * 1000);
        }

        /***/
      },
      /* 75 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = addYears;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__ =
          __webpack_require__(25);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name addYears
         * @category Year Helpers
         * @summary Add the specified number of years to the given date.
         *
         * @description
         * Add the specified number of years to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the years added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add 5 years to 1 September 2014:
         * const result = addYears(new Date(2014, 8, 1), 5)
         * //=> Sun Sep 01 2019 00:00:00
         */

        function addYears(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__["a" /* default */]
          )(dirtyDate, amount * 12);
        }

        /***/
      },
      /* 76 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInCalendarISOWeekYears;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__ =
          __webpack_require__(21);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInCalendarISOWeekYears
         * @category ISO Week-Numbering Year Helpers
         * @summary Get the number of calendar ISO week-numbering years between the given dates.
         *
         * @description
         * Get the number of calendar ISO week-numbering years between the given dates.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `differenceInCalendarISOYears` to `differenceInCalendarISOWeekYears`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of calendar ISO week-numbering years
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many calendar ISO week-numbering years are 1 January 2010 and 1 January 2012?
         * const result = differenceInCalendarISOWeekYears(
         *   new Date(2012, 0, 1),
         *   new Date(2010, 0, 1)
         * )
         * //=> 2
         */

        function differenceInCalendarISOWeekYears(
          dirtyDateLeft,
          dirtyDateRight
        ) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__[
                "a" /* default */
              ]
            )(dirtyDateLeft) -
            Object(
              __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__[
                "a" /* default */
              ]
            )(dirtyDateRight)
          );
        }

        /***/
      },
      /* 77 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInCalendarMonths;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInCalendarMonths
         * @category Month Helpers
         * @summary Get the number of calendar months between the given dates.
         *
         * @description
         * Get the number of calendar months between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of calendar months
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many calendar months are between 31 January 2014 and 1 September 2014?
         * var result = differenceInCalendarMonths(
         *   new Date(2014, 8, 1),
         *   new Date(2014, 0, 31)
         * )
         * //=> 8
         */

        function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
          var monthDiff = dateLeft.getMonth() - dateRight.getMonth();
          return yearDiff * 12 + monthDiff;
        }

        /***/
      },
      /* 78 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getQuarter;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getQuarter
         * @category Quarter Helpers
         * @summary Get the year quarter of the given date.
         *
         * @description
         * Get the year quarter of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the quarter
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which quarter is 2 July 2014?
         * const result = getQuarter(new Date(2014, 6, 2))
         * //=> 3
         */

        function getQuarter(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var quarter = Math.floor(date.getMonth() / 3) + 1;
          return quarter;
        }

        /***/
      },
      /* 79 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInCalendarWeeks;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_WEEK = 604800000;
        /**
         * @name differenceInCalendarWeeks
         * @category Week Helpers
         * @summary Get the number of calendar weeks between the given dates.
         *
         * @description
         * Get the number of calendar weeks between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Number} the number of calendar weeks
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // How many calendar weeks are between 5 July 2014 and 20 July 2014?
         * const result = differenceInCalendarWeeks(
         *   new Date(2014, 6, 20),
         *   new Date(2014, 6, 5)
         * )
         * //=> 3
         *
         * @example
         * // If the week starts on Monday,
         * // how many calendar weeks are between 5 July 2014 and 20 July 2014?
         * const result = differenceInCalendarWeeks(
         *   new Date(2014, 6, 20),
         *   new Date(2014, 6, 5),
         *   { weekStartsOn: 1 }
         * )
         * //=> 2
         */

        function differenceInCalendarWeeks(
          dirtyDateLeft,
          dirtyDateRight,
          dirtyOptions
        ) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var startOfWeekLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft, dirtyOptions);
          var startOfWeekRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight, dirtyOptions);
          var timestampLeft =
            startOfWeekLeft.getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_1__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(startOfWeekLeft);
          var timestampRight =
            startOfWeekRight.getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_1__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(startOfWeekRight); // Round the number of days to the nearest integer
          // because the number of milliseconds in a week is not constant
          // (e.g. it's different in the week of the daylight saving time clock shift)

          return Math.round(
            (timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK
          );
        }

        /***/
      },
      /* 80 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInCalendarYears;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInCalendarYears
         * @category Year Helpers
         * @summary Get the number of calendar years between the given dates.
         *
         * @description
         * Get the number of calendar years between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of calendar years
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many calendar years are between 31 December 2013 and 11 February 2015?
         * const result = differenceInCalendarYears(
         *   new Date(2015, 1, 11),
         *   new Date(2013, 11, 31)
         * )
         * //=> 2
         */

        function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          return dateLeft.getFullYear() - dateRight.getFullYear();
        }

        /***/
      },
      /* 81 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInHours;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInMilliseconds_index_js__ =
          __webpack_require__(34);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_HOUR = 3600000;
        /**
         * @name differenceInHours
         * @category Hour Helpers
         * @summary Get the number of hours between the given dates.
         *
         * @description
         * Get the number of hours between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of hours
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?
         * var result = differenceInHours(
         *   new Date(2014, 6, 2, 19, 0),
         *   new Date(2014, 6, 2, 6, 50)
         * )
         * //=> 12
         */

        function differenceInHours(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__differenceInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;
          return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
        }

        /***/
      },
      /* 82 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          subISOWeekYears;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addISOWeekYears_index_js__ =
          __webpack_require__(72);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subISOWeekYears
         * @category ISO Week-Numbering Year Helpers
         * @summary Subtract the specified number of ISO week-numbering years from the given date.
         *
         * @description
         * Subtract the specified number of ISO week-numbering years from the given date.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `subISOYears` to `subISOWeekYears`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `setWeekYear`.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of ISO week-numbering years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the ISO week-numbering years subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 5 ISO week-numbering years from 1 September 2014:
         * const result = subISOWeekYears(new Date(2014, 8, 1), 5)
         * //=> Mon Aug 31 2009 00:00:00
         */

        function subISOWeekYears(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addISOWeekYears_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 83 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInMinutes;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInMilliseconds_index_js__ =
          __webpack_require__(34);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_MINUTE = 60000;
        /**
         * @name differenceInMinutes
         * @category Minute Helpers
         * @summary Get the number of minutes between the given dates.
         *
         * @description
         * Get the signed number of full (rounded towards 0) minutes between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of minutes
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?
         * var result = differenceInMinutes(
         *   new Date(2014, 6, 2, 12, 20, 0),
         *   new Date(2014, 6, 2, 12, 7, 59)
         * )
         * //=> 12
         *
         * @example
         * // How many minutes are from 10:01:59 to 10:00:00
         * var result = differenceInMinutes(
         *   new Date(2000, 0, 1, 10, 0, 0),
         *   new Date(2000, 0, 1, 10, 1, 59)
         * )
         * //=> -1
         */

        function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__differenceInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;
          return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
        }

        /***/
      },
      /* 84 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          isLastDayOfMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__endOfDay_index_js__ =
          __webpack_require__(46);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__endOfMonth_index_js__ =
          __webpack_require__(47);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isLastDayOfMonth
         * @category Month Helpers
         * @summary Is the given date the last day of a month?
         *
         * @description
         * Is the given date the last day of a month?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is the last day of a month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 28 February 2014 the last day of a month?
         * var result = isLastDayOfMonth(new Date(2014, 1, 28))
         * //=> true
         */

        function isLastDayOfMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_1__endOfDay_index_js__[
                "a" /* default */
              ]
            )(date).getTime() ===
            Object(
              __WEBPACK_IMPORTED_MODULE_2__endOfMonth_index_js__[
                "a" /* default */
              ]
            )(date).getTime()
          );
        }

        /***/
      },
      /* 85 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          differenceInYears;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarYears_index_js__ =
          __webpack_require__(80);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInYears
         * @category Year Helpers
         * @summary Get the number of full years between the given dates.
         *
         * @description
         * Get the number of full years between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of full years
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many full years are between 31 December 2013 and 11 February 2015?
         * const result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))
         * //=> 1
         */

        function differenceInYears(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var sign = Object(
            __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__[
              "a" /* default */
            ]
          )(dateLeft, dateRight);
          var difference = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarYears_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight)
          ); // Set both dates to a valid leap year for accurate comparison when dealing
          // with leap days

          dateLeft.setFullYear(1584);
          dateRight.setFullYear(1584); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full
          // If so, result must be decreased by 1 in absolute value

          var isLastYearNotFull =
            Object(
              __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight) === -sign;
          var result = sign * (difference - Number(isLastYearNotFull)); // Prevent negative zero

          return result === 0 ? 0 : result;
        }

        /***/
      },
      /* 86 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          eachDayOfInterval;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachDayOfInterval
         * @category Interval Helpers
         * @summary Return the array of dates within the specified time interval.
         *
         * @description
         * Return the array of dates within the specified time interval.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `eachDay` to `eachDayOfInterval`.
         *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
         *
         *   ```
         *   2.1.3
         *   time interval
         *   part of the time axis limited by two instants
         *   ```
         *
         *   Also, this function now accepts an object with `start` and `end` properties
         *   instead of two arguments as an interval.
         *   This function now throws `RangeError` if the start of the interval is after its end
         *   or if any date in the interval is `Invalid Date`.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))
         *
         *   // v2.0.0 onward
         *
         *   eachDayOfInterval(
         *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }
         *   )
         *   ```
         *
         * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @param {Object} [options] - an object with options.
         * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
         * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.step` must be a number greater than 1
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Each day between 6 October 2014 and 10 October 2014:
         * const result = eachDayOfInterval({
         *   start: new Date(2014, 9, 6),
         *   end: new Date(2014, 9, 10)
         * })
         * //=> [
         * //   Mon Oct 06 2014 00:00:00,
         * //   Tue Oct 07 2014 00:00:00,
         * //   Wed Oct 08 2014 00:00:00,
         * //   Thu Oct 09 2014 00:00:00,
         * //   Fri Oct 10 2014 00:00:00
         * // ]
         */

        function eachDayOfInterval(dirtyInterval, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var interval = dirtyInterval || {};
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.start);
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.end);
          var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (!(startDate.getTime() <= endTime)) {
            throw new RangeError("Invalid interval");
          }

          var dates = [];
          var currentDate = startDate;
          currentDate.setHours(0, 0, 0, 0);
          var step = options && "step" in options ? Number(options.step) : 1;
          if (step < 1 || isNaN(step))
            throw new RangeError(
              "`options.step` must be a number greater than 1"
            );

          while (currentDate.getTime() <= endTime) {
            dates.push(
              Object(
                __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__[
                  "a" /* default */
                ]
              )(currentDate)
            );
            currentDate.setDate(currentDate.getDate() + step);
            currentDate.setHours(0, 0, 0, 0);
          }

          return dates;
        }

        /***/
      },
      /* 87 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = endOfYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfYear
         * @category Year Helpers
         * @summary Return the end of a year for the given date.
         *
         * @description
         * Return the end of a year for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of a year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of a year for 2 September 2014 11:55:00:
         * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))
         * //=> Wed Dec 31 2014 23:59:59.999
         */

        function endOfYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          date.setFullYear(year + 1, 0, 0);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 88 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = endOfWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfWeek
         * @category Week Helpers
         * @summary Return the end of a week for the given date.
         *
         * @description
         * Return the end of a week for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Date} the end of a week
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // The end of a week for 2 September 2014 11:55:00:
         * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Sat Sep 06 2014 23:59:59.999
         *
         * @example
         * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
         * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
         * //=> Sun Sep 07 2014 23:59:59.999
         */
        function endOfWeek(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getDay();
          var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
          date.setDate(date.getDate() + diff);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 89 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = format;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__locale_en_US_index_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__subMilliseconds_index_js__ =
          __webpack_require__(29);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_format_formatters_index_js__ =
          __webpack_require__(516);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_format_longFormatters_index_js__ =
          __webpack_require__(94);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__ =
          __webpack_require__(95);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        // This RegExp consists of three parts separated by `|`:
        // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
        //   (one of the certain letters followed by `o`)
        // - (\w)\1* matches any sequences of the same letter
        // - '' matches two quote characters in a row
        // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
        //   except a single quote symbol, which ends the sequence.
        //   Two quote characters do not end the sequence.
        //   If there is no matching single quote
        //   then the sequence will continue until the end of the string.
        // - . matches any single character unmatched by previous parts of the RegExps

        var formattingTokensRegExp =
          /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
        // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

        var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
        var escapedStringRegExp = /^'([^]*?)'?$/;
        var doubleQuoteRegExp = /''/g;
        var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
        /**
         * @name format
         * @category Common Helpers
         * @summary Format the date.
         *
         * @description
         * Return the formatted date string in the given format. The result may vary by locale.
         *
         * > âš ï¸ Please note that the `format` tokens differ from Moment.js and other libraries.
         * > See: https://git.io/fxCyr
         *
         * The characters wrapped between two single quotes characters (') are escaped.
         * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
         * (see the last example)
         *
         * Format of the string is based on Unicode Technical Standard #35:
         * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
         * with a few additions (see note 7 below the table).
         *
         * Accepted patterns:
         * | Unit                            | Pattern | Result examples                   | Notes |
         * |---------------------------------|---------|-----------------------------------|-------|
         * | Era                             | G..GGG  | AD, BC                            |       |
         * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
         * |                                 | GGGGG   | A, B                              |       |
         * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
         * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
         * |                                 | yy      | 44, 01, 00, 17                    | 5     |
         * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
         * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
         * |                                 | yyyyy   | ...                               | 3,5   |
         * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
         * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
         * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
         * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
         * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
         * |                                 | YYYYY   | ...                               | 3,5   |
         * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
         * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
         * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
         * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
         * |                                 | RRRRR   | ...                               | 3,5,7 |
         * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
         * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
         * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
         * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
         * |                                 | uuuuu   | ...                               | 3,5   |
         * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
         * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
         * |                                 | QQ      | 01, 02, 03, 04                    |       |
         * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
         * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
         * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
         * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
         * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
         * |                                 | qq      | 01, 02, 03, 04                    |       |
         * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
         * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
         * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
         * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
         * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
         * |                                 | MM      | 01, 02, ..., 12                   |       |
         * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
         * |                                 | MMMM    | January, February, ..., December  | 2     |
         * |                                 | MMMMM   | J, F, ..., D                      |       |
         * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
         * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
         * |                                 | LL      | 01, 02, ..., 12                   |       |
         * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
         * |                                 | LLLL    | January, February, ..., December  | 2     |
         * |                                 | LLLLL   | J, F, ..., D                      |       |
         * | Local week of year              | w       | 1, 2, ..., 53                     |       |
         * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
         * |                                 | ww      | 01, 02, ..., 53                   |       |
         * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
         * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
         * |                                 | II      | 01, 02, ..., 53                   | 7     |
         * | Day of month                    | d       | 1, 2, ..., 31                     |       |
         * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
         * |                                 | dd      | 01, 02, ..., 31                   |       |
         * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
         * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
         * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
         * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
         * |                                 | DDDD    | ...                               | 3     |
         * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
         * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
         * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
         * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
         * |                                 | ii      | 01, 02, ..., 07                   | 7     |
         * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
         * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
         * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
         * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |
         * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
         * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
         * |                                 | ee      | 02, 03, ..., 01                   |       |
         * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
         * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
         * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
         * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
         * |                                 | cc      | 02, 03, ..., 01                   |       |
         * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
         * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
         * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | AM, PM                          | a..aa   | AM, PM                            |       |
         * |                                 | aaa     | am, pm                            |       |
         * |                                 | aaaa    | a.m., p.m.                        | 2     |
         * |                                 | aaaaa   | a, p                              |       |
         * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
         * |                                 | bbb     | am, pm, noon, midnight            |       |
         * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
         * |                                 | bbbbb   | a, p, n, mi                       |       |
         * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
         * |                                 | BBBB    | at night, in the morning, ...     | 2     |
         * |                                 | BBBBB   | at night, in the morning, ...     |       |
         * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
         * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
         * |                                 | hh      | 01, 02, ..., 11, 12               |       |
         * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
         * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
         * |                                 | HH      | 00, 01, 02, ..., 23               |       |
         * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
         * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
         * |                                 | KK      | 01, 02, ..., 11, 00               |       |
         * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
         * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
         * |                                 | kk      | 24, 01, 02, ..., 23               |       |
         * | Minute                          | m       | 0, 1, ..., 59                     |       |
         * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
         * |                                 | mm      | 00, 01, ..., 59                   |       |
         * | Second                          | s       | 0, 1, ..., 59                     |       |
         * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
         * |                                 | ss      | 00, 01, ..., 59                   |       |
         * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
         * |                                 | SS      | 00, 01, ..., 99                   |       |
         * |                                 | SSS     | 000, 001, ..., 999                |       |
         * |                                 | SSSS    | ...                               | 3     |
         * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
         * |                                 | XX      | -0800, +0530, Z                   |       |
         * |                                 | XXX     | -08:00, +05:30, Z                 |       |
         * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
         * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
         * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
         * |                                 | xx      | -0800, +0530, +0000               |       |
         * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
         * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
         * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
         * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
         * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
         * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
         * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
         * | Seconds timestamp               | t       | 512969520                         | 7     |
         * |                                 | tt      | ...                               | 3,7   |
         * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
         * |                                 | TT      | ...                               | 3,7   |
         * | Long localized date             | P       | 04/29/1453                        | 7     |
         * |                                 | PP      | Apr 29, 1453                      | 7     |
         * |                                 | PPP     | April 29th, 1453                  | 7     |
         * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
         * | Long localized time             | p       | 12:00 AM                          | 7     |
         * |                                 | pp      | 12:00:00 AM                       | 7     |
         * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
         * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
         * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
         * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
         * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
         * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
         * Notes:
         * 1. "Formatting" units (e.g. formatting quarter) in the default pt-BR locale
         *    are the same as "stand-alone" units, but are different in some languages.
         *    "Formatting" units are declined according to the rules of the language
         *    in the context of a date. "Stand-alone" units are always nominative singular:
         *
         *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
         *
         *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
         *
         * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
         *    the single quote characters (see below).
         *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
         *    the output will be the same as default pattern for this unit, usually
         *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
         *    are marked with "2" in the last column of the table.
         *
         *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
         *
         *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
         *
         *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
         *
         *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
         *
         *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
         *
         * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
         *    The output will be padded with zeros to match the length of the pattern.
         *
         *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
         *
         * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
         *    These tokens represent the shortest form of the quarter.
         *
         * 5. The main difference between `y` and `u` patterns are B.C. years:
         *
         *    | Year | `y` | `u` |
         *    |------|-----|-----|
         *    | AC 1 |   1 |   1 |
         *    | BC 1 |   1 |   0 |
         *    | BC 2 |   2 |  -1 |
         *
         *    Also `yy` always returns the last two digits of a year,
         *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
         *
         *    | Year | `yy` | `uu` |
         *    |------|------|------|
         *    | 1    |   01 |   01 |
         *    | 14   |   14 |   14 |
         *    | 376  |   76 |  376 |
         *    | 1453 |   53 | 1453 |
         *
         *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
         *    except local week-numbering years are dependent on `options.weekStartsOn`
         *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
         *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
         *
         * 6. Specific non-location timezones are currently unavailable in `date-fns`,
         *    so right now these tokens fall back to GMT timezones.
         *
         * 7. These patterns are not in the Unicode Technical Standard #35:
         *    - `i`: ISO day of week
         *    - `I`: ISO week of year
         *    - `R`: ISO week-numbering year
         *    - `t`: seconds timestamp
         *    - `T`: milliseconds timestamp
         *    - `o`: ordinal number modifier
         *    - `P`: long localized date
         *    - `p`: long localized time
         *
         * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
         *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
         *
         * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
         *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The second argument is now required for the sake of explicitness.
         *
         *   ```javascript
         *   // Before v2.0.0
         *   format(new Date(2016, 0, 1))
         *
         *   // v2.0.0 onward
         *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
         *   ```
         *
         * - New format string API for `format` function
         *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
         *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
         *
         * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
         *
         * @param {Date|Number} date - the original date
         * @param {String} format - the string of tokens
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
         * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
         *   see: https://git.io/fxCyr
         * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
         *   see: https://git.io/fxCyr
         * @returns {String} the formatted date string
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `options.locale` must contain `localize` property
         * @throws {RangeError} `options.locale` must contain `formatLong` property
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} format string contains an unescaped latin alphabet character
         *
         * @example
         * // Represent 11 February 2014 in middle-endian format:
         * var result = format(new Date(2014, 1, 11), 'd/M/yy')
         * //=> '02/11/2014'
         *
         * @example
         * // Represent 2 July 2014 in Esperanto:
         * import { eoLocale } from 'date-fns/locale/eo'
         * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
         *   locale: eoLocale
         * })
         * //=> '2-a de julio 2014'
         *
         * @example
         * // Escape string by single quote characters:
         * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
         * //=> "3 o'clock"
         */

        function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_9__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var formatStr = String(dirtyFormatStr);
          var options = dirtyOptions || {};
          var locale =
            options.locale ||
            __WEBPACK_IMPORTED_MODULE_1__locale_en_US_index_js__[
              "a" /* default */
            ];
          var localeFirstWeekContainsDate =
            locale.options && locale.options.firstWeekContainsDate;
          var defaultFirstWeekContainsDate =
            localeFirstWeekContainsDate == null
              ? 1
              : Object(
                  __WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeFirstWeekContainsDate);
          var firstWeekContainsDate =
            options.firstWeekContainsDate == null
              ? defaultFirstWeekContainsDate
              : Object(
                  __WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

          if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
            throw new RangeError(
              "firstWeekContainsDate must be between 1 and 7 inclusively"
            );
          }

          var localeWeekStartsOn =
            locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_8__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          if (!locale.localize) {
            throw new RangeError("locale must contain localize property");
          }

          if (!locale.formatLong) {
            throw new RangeError("locale must contain formatLong property");
          }

          var originalDate = Object(
            __WEBPACK_IMPORTED_MODULE_3__toDate_index_js__["a" /* default */]
          )(dirtyDate);

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_0__isValid_index_js__["a" /* default */]
            )(originalDate)
          ) {
            throw new RangeError("Invalid time value");
          } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
          // This ensures that when UTC functions will be implemented, locales will be compatible with them.
          // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376

          var timezoneOffset = Object(
            __WEBPACK_IMPORTED_MODULE_6__lib_getTimezoneOffsetInMilliseconds_index_js__[
              "a" /* default */
            ]
          )(originalDate);
          var utcDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__subMilliseconds_index_js__[
              "a" /* default */
            ]
          )(originalDate, timezoneOffset);
          var formatterOptions = {
            firstWeekContainsDate: firstWeekContainsDate,
            weekStartsOn: weekStartsOn,
            locale: locale,
            _originalDate: originalDate,
          };
          var result = formatStr
            .match(longFormattingTokensRegExp)
            .map(function (substring) {
              var firstCharacter = substring[0];

              if (firstCharacter === "p" || firstCharacter === "P") {
                var longFormatter =
                  __WEBPACK_IMPORTED_MODULE_5__lib_format_longFormatters_index_js__[
                    "a" /* default */
                  ][firstCharacter];
                return longFormatter(
                  substring,
                  locale.formatLong,
                  formatterOptions
                );
              }

              return substring;
            })
            .join("")
            .match(formattingTokensRegExp)
            .map(function (substring) {
              // Replace two single quote characters with one single quote character
              if (substring === "''") {
                return "'";
              }

              var firstCharacter = substring[0];

              if (firstCharacter === "'") {
                return cleanEscapedString(substring);
              }

              var formatter =
                __WEBPACK_IMPORTED_MODULE_4__lib_format_formatters_index_js__[
                  "a" /* default */
                ][firstCharacter];

              if (formatter) {
                if (
                  !options.useAdditionalWeekYearTokens &&
                  Object(
                    __WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__[
                      "b" /* isProtectedWeekYearToken */
                    ]
                  )(substring)
                ) {
                  Object(
                    __WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__[
                      "c" /* throwProtectedError */
                    ]
                  )(substring, dirtyFormatStr, dirtyDate);
                }

                if (
                  !options.useAdditionalDayOfYearTokens &&
                  Object(
                    __WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__[
                      "a" /* isProtectedDayOfYearToken */
                    ]
                  )(substring)
                ) {
                  Object(
                    __WEBPACK_IMPORTED_MODULE_7__lib_protectedTokens_index_js__[
                      "c" /* throwProtectedError */
                    ]
                  )(substring, dirtyFormatStr, dirtyDate);
                }

                return formatter(
                  utcDate,
                  substring,
                  locale.localize,
                  formatterOptions
                );
              }

              if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
                throw new RangeError(
                  "Format string contains an unescaped latin alphabet character `" +
                    firstCharacter +
                    "`"
                );
              }

              return substring;
            })
            .join("");
          return result;
        }

        function cleanEscapedString(input) {
          return input
            .match(escapedStringRegExp)[1]
            .replace(doubleQuoteRegExp, "'");
        }

        /***/
      },
      /* 90 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__ =
          __webpack_require__(23);

        /*
         * |     | Unit                           |     | Unit                           |
         * |-----|--------------------------------|-----|--------------------------------|
         * |  a  | AM, PM                         |  A* |                                |
         * |  d  | Day of month                   |  D  |                                |
         * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
         * |  m  | Minute                         |  M  | Month                          |
         * |  s  | Second                         |  S  | Fraction of second             |
         * |  y  | Year (abs)                     |  Y  |                                |
         *
         * Letters marked by * are not implemented but reserved by Unicode standard.
         */

        var formatters = {
          // Year
          y: function (date, token) {
            // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
            // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
            // |----------|-------|----|-------|-------|-------|
            // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
            // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
            // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
            // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
            // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
            var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

            var year = signedYear > 0 ? signedYear : 1 - signedYear;
            return Object(
              __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(token === "yy" ? year % 100 : year, token.length);
          },
          // Month
          M: function (date, token) {
            var month = date.getUTCMonth();
            return token === "M"
              ? String(month + 1)
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                    "a" /* default */
                  ]
                )(month + 1, 2);
          },
          // Day of the month
          d: function (date, token) {
            return Object(
              __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(date.getUTCDate(), token.length);
          },
          // AM or PM
          a: function (date, token) {
            var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";

            switch (token) {
              case "a":
              case "aa":
                return dayPeriodEnumValue.toUpperCase();

              case "aaa":
                return dayPeriodEnumValue;

              case "aaaaa":
                return dayPeriodEnumValue[0];

              case "aaaa":
              default:
                return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
            }
          },
          // Hour [1-12]
          h: function (date, token) {
            return Object(
              __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(date.getUTCHours() % 12 || 12, token.length);
          },
          // Hour [0-23]
          H: function (date, token) {
            return Object(
              __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(date.getUTCHours(), token.length);
          },
          // Minute
          m: function (date, token) {
            return Object(
              __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(date.getUTCMinutes(), token.length);
          },
          // Second
          s: function (date, token) {
            return Object(
              __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(date.getUTCSeconds(), token.length);
          },
          // Fraction of second
          S: function (date, token) {
            var numberOfDigits = token.length;
            var milliseconds = date.getUTCMilliseconds();
            var fractionalSeconds = Math.floor(
              milliseconds * Math.pow(10, numberOfDigits - 3)
            );
            return Object(
              __WEBPACK_IMPORTED_MODULE_0__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(fractionalSeconds, token.length);
          },
        };
        /* harmony default export */ __webpack_exports__["a"] = formatters;

        /***/
      },
      /* 91 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          getUTCISOWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__ =
          __webpack_require__(37);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCISOWeekYear_index_js__ =
          __webpack_require__(518);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function getUTCISOWeek(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__[
                "a" /* default */
              ]
            )(date).getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_2__startOfUTCISOWeekYear_index_js__[
                "a" /* default */
              ]
            )(date).getTime(); // Round the number of days to the nearest integer
          // because the number of milliseconds in a week is not constant
          // (e.g. it's different in the week of the daylight saving time clock shift)

          return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
        }

        /***/
      },
      /* 92 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          getUTCISOWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__ =
          __webpack_require__(37);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function getUTCISOWeekYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getUTCFullYear();
          var fourthOfJanuaryOfNextYear = new Date(0);
          fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
          fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
          var startOfNextYear = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuaryOfNextYear);
          var fourthOfJanuaryOfThisYear = new Date(0);
          fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
          fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
          var startOfThisYear = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuaryOfThisYear);

          if (date.getTime() >= startOfNextYear.getTime()) {
            return year + 1;
          } else if (date.getTime() >= startOfThisYear.getTime()) {
            return year;
          } else {
            return year - 1;
          }
        }

        /***/
      },
      /* 93 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getUTCWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCWeek_index_js__ =
          __webpack_require__(38);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeekYear_index_js__ =
          __webpack_require__(519);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function getUTCWeek(dirtyDate, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_1__startOfUTCWeek_index_js__[
                "a" /* default */
              ]
            )(date, options).getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeekYear_index_js__[
                "a" /* default */
              ]
            )(date, options).getTime(); // Round the number of days to the nearest integer
          // because the number of milliseconds in a week is not constant
          // (e.g. it's different in the week of the daylight saving time clock shift)

          return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
        }

        /***/
      },
      /* 94 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        function dateLongFormatter(pattern, formatLong) {
          switch (pattern) {
            case "P":
              return formatLong.date({
                width: "short",
              });

            case "PP":
              return formatLong.date({
                width: "medium",
              });

            case "PPP":
              return formatLong.date({
                width: "long",
              });

            case "PPPP":
            default:
              return formatLong.date({
                width: "full",
              });
          }
        }

        function timeLongFormatter(pattern, formatLong) {
          switch (pattern) {
            case "p":
              return formatLong.time({
                width: "short",
              });

            case "pp":
              return formatLong.time({
                width: "medium",
              });

            case "ppp":
              return formatLong.time({
                width: "long",
              });

            case "pppp":
            default:
              return formatLong.time({
                width: "full",
              });
          }
        }

        function dateTimeLongFormatter(pattern, formatLong) {
          var matchResult = pattern.match(/(P+)(p+)?/);
          var datePattern = matchResult[1];
          var timePattern = matchResult[2];

          if (!timePattern) {
            return dateLongFormatter(pattern, formatLong);
          }

          var dateTimeFormat;

          switch (datePattern) {
            case "P":
              dateTimeFormat = formatLong.dateTime({
                width: "short",
              });
              break;

            case "PP":
              dateTimeFormat = formatLong.dateTime({
                width: "medium",
              });
              break;

            case "PPP":
              dateTimeFormat = formatLong.dateTime({
                width: "long",
              });
              break;

            case "PPPP":
            default:
              dateTimeFormat = formatLong.dateTime({
                width: "full",
              });
              break;
          }

          return dateTimeFormat
            .replace("{{date}}", dateLongFormatter(datePattern, formatLong))
            .replace("{{time}}", timeLongFormatter(timePattern, formatLong));
        }

        var longFormatters = {
          p: timeLongFormatter,
          P: dateTimeLongFormatter,
        };
        /* harmony default export */ __webpack_exports__["a"] = longFormatters;

        /***/
      },
      /* 95 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          isProtectedDayOfYearToken;
        /* harmony export (immutable) */ __webpack_exports__["b"] =
          isProtectedWeekYearToken;
        /* harmony export (immutable) */ __webpack_exports__["c"] =
          throwProtectedError;
        var protectedDayOfYearTokens = ["D", "DD"];
        var protectedWeekYearTokens = ["YY", "YYYY"];
        function isProtectedDayOfYearToken(token) {
          return protectedDayOfYearTokens.indexOf(token) !== -1;
        }
        function isProtectedWeekYearToken(token) {
          return protectedWeekYearTokens.indexOf(token) !== -1;
        }
        function throwProtectedError(token, format, input) {
          if (token === "YYYY") {
            throw new RangeError(
              "Use `yyyy` instead of `YYYY` (in `"
                .concat(format, "`) for formatting years to the input `")
                .concat(input, "`; see: https://git.io/fxCyr")
            );
          } else if (token === "YY") {
            throw new RangeError(
              "Use `yy` instead of `YY` (in `"
                .concat(format, "`) for formatting years to the input `")
                .concat(input, "`; see: https://git.io/fxCyr")
            );
          } else if (token === "D") {
            throw new RangeError(
              "Use `d` instead of `D` (in `"
                .concat(
                  format,
                  "`) for formatting days of the month to the input `"
                )
                .concat(input, "`; see: https://git.io/fxCyr")
            );
          } else if (token === "DD") {
            throw new RangeError(
              "Use `dd` instead of `DD` (in `"
                .concat(
                  format,
                  "`) for formatting days of the month to the input `"
                )
                .concat(input, "`; see: https://git.io/fxCyr")
            );
          }
        }

        /***/
      },
      /* 96 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          formatDistance;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compareAsc_index_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__differenceInMonths_index_js__ =
          __webpack_require__(35);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__differenceInSeconds_index_js__ =
          __webpack_require__(48);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__locale_en_US_index_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_cloneObject_index_js__ =
          __webpack_require__(97);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MINUTES_IN_DAY = 1440;
        var MINUTES_IN_ALMOST_TWO_DAYS = 2520;
        var MINUTES_IN_MONTH = 43200;
        var MINUTES_IN_TWO_MONTHS = 86400;
        /**
         * @name formatDistance
         * @category Common Helpers
         * @summary Return the distance between the given dates in words.
         *
         * @description
         * Return the distance between the given dates in words.
         *
         * | Distance between dates                                            | Result              |
         * |-------------------------------------------------------------------|---------------------|
         * | 0 ... 30 secs                                                     | less than a minute  |
         * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
         * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
         * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
         * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
         * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
         * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
         * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
         * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
         * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
         * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
         * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
         * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
         * | N yrs ... N yrs 3 months                                          | about N years       |
         * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
         * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
         *
         * With `options.includeSeconds == true`:
         * | Distance between dates | Result               |
         * |------------------------|----------------------|
         * | 0 secs ... 5 secs      | less than 5 seconds  |
         * | 5 secs ... 10 secs     | less than 10 seconds |
         * | 10 secs ... 20 secs    | less than 20 seconds |
         * | 20 secs ... 40 secs    | half a minute        |
         * | 40 secs ... 60 secs    | less than a minute   |
         * | 60 secs ... 90 secs    | 1 minute             |
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `distanceInWords ` to `formatDistance`
         *   to make its name consistent with `format` and `formatRelative`.
         *
         * - The order of arguments is swapped to make the function
         *   consistent with `differenceIn...` functions.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   distanceInWords(
         *     new Date(1986, 3, 4, 10, 32, 0),
         *     new Date(1986, 3, 4, 11, 32, 0),
         *     { addSuffix: true }
         *   ) //=> 'in about 1 hour'
         *
         *   // v2.0.0 onward
         *
         *   formatDistance(
         *     new Date(1986, 3, 4, 11, 32, 0),
         *     new Date(1986, 3, 4, 10, 32, 0),
         *     { addSuffix: true }
         *   ) //=> 'in about 1 hour'
         *   ```
         *
         * @param {Date|Number} date - the date
         * @param {Date|Number} baseDate - the date to compare with
         * @param {Object} [options] - an object with options.
         * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
         * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @returns {String} the distance in words
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `baseDate` must not be Invalid Date
         * @throws {RangeError} `options.locale` must contain `formatDistance` property
         *
         * @example
         * // What is the distance between 2 July 2014 and 1 January 2015?
         * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))
         * //=> '6 months'
         *
         * @example
         * // What is the distance between 1 January 2015 00:00:15
         * // and 1 January 2015 00:00:00, including seconds?
         * const result = formatDistance(
         *   new Date(2015, 0, 1, 0, 0, 15),
         *   new Date(2015, 0, 1, 0, 0, 0),
         *   { includeSeconds: true }
         * )
         * //=> 'less than 20 seconds'
         *
         * @example
         * // What is the distance from 1 January 2016
         * // to 1 January 2015, with a suffix?
         * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {
         *   addSuffix: true
         * })
         * //=> 'about 1 year ago'
         *
         * @example
         * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
         * import { eoLocale } from 'date-fns/locale/eo'
         * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {
         *   locale: eoLocale
         * })
         * //=> 'pli ol 1 jaro'
         */

        function formatDistance(dirtyDate, dirtyBaseDate) {
          var options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {};
          Object(
            __WEBPACK_IMPORTED_MODULE_7__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var locale =
            options.locale ||
            __WEBPACK_IMPORTED_MODULE_3__locale_en_US_index_js__[
              "a" /* default */
            ];

          if (!locale.formatDistance) {
            throw new RangeError("locale must contain formatDistance property");
          }

          var comparison = Object(
            __WEBPACK_IMPORTED_MODULE_0__compareAsc_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, dirtyBaseDate);

          if (isNaN(comparison)) {
            throw new RangeError("Invalid time value");
          }

          var localizeOptions = Object(
            __WEBPACK_IMPORTED_MODULE_5__lib_cloneObject_index_js__[
              "a" /* default */
            ]
          )(options);
          localizeOptions.addSuffix = Boolean(options.addSuffix);
          localizeOptions.comparison = comparison;
          var dateLeft;
          var dateRight;

          if (comparison > 0) {
            dateLeft = Object(
              __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__["a" /* default */]
            )(dirtyBaseDate);
            dateRight = Object(
              __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__["a" /* default */]
            )(dirtyDate);
          } else {
            dateLeft = Object(
              __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__["a" /* default */]
            )(dirtyDate);
            dateRight = Object(
              __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__["a" /* default */]
            )(dirtyBaseDate);
          }

          var seconds = Object(
            __WEBPACK_IMPORTED_MODULE_2__differenceInSeconds_index_js__[
              "a" /* default */
            ]
          )(dateRight, dateLeft);
          var offsetInSeconds =
            (Object(
              __WEBPACK_IMPORTED_MODULE_6__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(dateRight) -
              Object(
                __WEBPACK_IMPORTED_MODULE_6__lib_getTimezoneOffsetInMilliseconds_index_js__[
                  "a" /* default */
                ]
              )(dateLeft)) /
            1000;
          var minutes = Math.round((seconds - offsetInSeconds) / 60);
          var months; // 0 up to 2 mins

          if (minutes < 2) {
            if (options.includeSeconds) {
              if (seconds < 5) {
                return locale.formatDistance(
                  "lessThanXSeconds",
                  5,
                  localizeOptions
                );
              } else if (seconds < 10) {
                return locale.formatDistance(
                  "lessThanXSeconds",
                  10,
                  localizeOptions
                );
              } else if (seconds < 20) {
                return locale.formatDistance(
                  "lessThanXSeconds",
                  20,
                  localizeOptions
                );
              } else if (seconds < 40) {
                return locale.formatDistance(
                  "halfAMinute",
                  null,
                  localizeOptions
                );
              } else if (seconds < 60) {
                return locale.formatDistance(
                  "lessThanXMinutes",
                  1,
                  localizeOptions
                );
              } else {
                return locale.formatDistance("xMinutes", 1, localizeOptions);
              }
            } else {
              if (minutes === 0) {
                return locale.formatDistance(
                  "lessThanXMinutes",
                  1,
                  localizeOptions
                );
              } else {
                return locale.formatDistance(
                  "xMinutes",
                  minutes,
                  localizeOptions
                );
              }
            } // 2 mins up to 0.75 hrs
          } else if (minutes < 45) {
            return locale.formatDistance("xMinutes", minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs
          } else if (minutes < 90) {
            return locale.formatDistance("aboutXHours", 1, localizeOptions); // 1.5 hrs up to 24 hrs
          } else if (minutes < MINUTES_IN_DAY) {
            var hours = Math.round(minutes / 60);
            return locale.formatDistance("aboutXHours", hours, localizeOptions); // 1 day up to 1.75 days
          } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {
            return locale.formatDistance("xDays", 1, localizeOptions); // 1.75 days up to 30 days
          } else if (minutes < MINUTES_IN_MONTH) {
            var days = Math.round(minutes / MINUTES_IN_DAY);
            return locale.formatDistance("xDays", days, localizeOptions); // 1 month up to 2 months
          } else if (minutes < MINUTES_IN_TWO_MONTHS) {
            months = Math.round(minutes / MINUTES_IN_MONTH);
            return locale.formatDistance(
              "aboutXMonths",
              months,
              localizeOptions
            );
          }

          months = Object(
            __WEBPACK_IMPORTED_MODULE_1__differenceInMonths_index_js__[
              "a" /* default */
            ]
          )(dateRight, dateLeft); // 2 months up to 12 months

          if (months < 12) {
            var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);
            return locale.formatDistance(
              "xMonths",
              nearestMonth,
              localizeOptions
            ); // 1 year up to max Date
          } else {
            var monthsSinceStartOfYear = months % 12;
            var years = Math.floor(months / 12); // N years up to 1 years 3 months

            if (monthsSinceStartOfYear < 3) {
              return locale.formatDistance(
                "aboutXYears",
                years,
                localizeOptions
              ); // N years 3 months up to N years 9 months
            } else if (monthsSinceStartOfYear < 9) {
              return locale.formatDistance(
                "overXYears",
                years,
                localizeOptions
              ); // N years 9 months up to N year 12 months
            } else {
              return locale.formatDistance(
                "almostXYears",
                years + 1,
                localizeOptions
              );
            }
          }
        }

        /***/
      },
      /* 97 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = cloneObject;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__assign_index_js__ =
          __webpack_require__(98);

        function cloneObject(dirtyObject) {
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__assign_index_js__["a" /* default */]
          )({}, dirtyObject);
        }

        /***/
      },
      /* 98 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = assign;
        function assign(target, dirtyObject) {
          if (target == null) {
            throw new TypeError(
              "assign requires that input parameter not be null or undefined"
            );
          }

          dirtyObject = dirtyObject || {};

          for (var property in dirtyObject) {
            if (dirtyObject.hasOwnProperty(property)) {
              target[property] = dirtyObject[property];
            }
          }

          return target;
        }

        /***/
      },
      /* 99 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          formatDistanceStrict;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__compareAsc_index_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_cloneObject_index_js__ =
          __webpack_require__(97);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__locale_en_US_index_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_MINUTE = 1000 * 60;
        var MINUTES_IN_DAY = 60 * 24;
        var MINUTES_IN_MONTH = MINUTES_IN_DAY * 30;
        var MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;
        /**
         * @name formatDistanceStrict
         * @category Common Helpers
         * @summary Return the distance between the given dates in words.
         *
         * @description
         * Return the distance between the given dates in words, using strict units.
         * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
         * 'less than' and the like.
         *
         * | Distance between dates | Result              |
         * |------------------------|---------------------|
         * | 0 ... 59 secs          | [0..59] seconds     |
         * | 1 ... 59 mins          | [1..59] minutes     |
         * | 1 ... 23 hrs           | [1..23] hours       |
         * | 1 ... 29 days          | [1..29] days        |
         * | 1 ... 11 months        | [1..11] months      |
         * | 1 ... N years          | [1..N]  years       |
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `distanceInWordsStrict` to `formatDistanceStrict`
         *   to make its name consistent with `format` and `formatRelative`.
         *
         * - The order of arguments is swapped to make the function
         *   consistent with `differenceIn...` functions.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   distanceInWordsStrict(
         *     new Date(2015, 0, 2),
         *     new Date(2014, 6, 2)
         *   ) //=> '6 months'
         *
         *   // v2.0.0 onward
         *
         *   formatDistanceStrict(
         *     new Date(2014, 6, 2),
         *     new Date(2015, 0, 2)
         *   ) //=> '6 months'
         *   ```
         *
         * - `partialMethod` option is renamed to `roundingMethod`.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   distanceInWordsStrict(
         *     new Date(1986, 3, 4, 10, 32, 0),
         *     new Date(1986, 3, 4, 10, 33, 1),
         *     { partialMethod: 'ceil' }
         *   ) //=> '2 minutes'
         *
         *   // v2.0.0 onward
         *
         *   formatDistanceStrict(
         *     new Date(1986, 3, 4, 10, 33, 1),
         *     new Date(1986, 3, 4, 10, 32, 0),
         *     { roundingMethod: 'ceil' }
         *   ) //=> '2 minutes'
         *   ```
         *
         * - If `roundingMethod` is not specified, it now defaults to `round` instead of `floor`.
         *
         * - `unit` option now accepts one of the strings:
         *   'second', 'minute', 'hour', 'day', 'month' or 'year' instead of 's', 'm', 'h', 'd', 'M' or 'Y'
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   distanceInWordsStrict(
         *     new Date(1986, 3, 4, 10, 32, 0),
         *     new Date(1986, 3, 4, 10, 33, 1),
         *     { unit: 'm' }
         *   )
         *
         *   // v2.0.0 onward
         *
         *   formatDistanceStrict(
         *     new Date(1986, 3, 4, 10, 33, 1),
         *     new Date(1986, 3, 4, 10, 32, 0),
         *     { unit: 'minute' }
         *   )
         *   ```
         *
         * @param {Date|Number} date - the date
         * @param {Date|Number} baseDate - the date to compare with
         * @param {Object} [options] - an object with options.
         * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
         * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit
         * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @returns {String} the distance in words
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `baseDate` must not be Invalid Date
         * @throws {RangeError} `options.roundingMethod` must be 'floor', 'ceil' or 'round'
         * @throws {RangeError} `options.unit` must be 'second', 'minute', 'hour', 'day', 'month' or 'year'
         * @throws {RangeError} `options.locale` must contain `formatDistance` property
         *
         * @example
         * // What is the distance between 2 July 2014 and 1 January 2015?
         * const result = formatDistanceStrict(new Date(2014, 6, 2), new Date(2015, 0, 2))
         * //=> '6 months'
         *
         * @example
         * // What is the distance between 1 January 2015 00:00:15
         * // and 1 January 2015 00:00:00?
         * const result = formatDistanceStrict(
         *   new Date(2015, 0, 1, 0, 0, 15),
         *   new Date(2015, 0, 1, 0, 0, 0)
         * )
         * //=> '15 seconds'
         *
         * @example
         * // What is the distance from 1 January 2016
         * // to 1 January 2015, with a suffix?
         * const result = formatDistanceStrict(new Date(2015, 0, 1), new Date(2016, 0, 1), {
         *   addSuffix: true
         * })
         * //=> '1 year ago'
         *
         * @example
         * // What is the distance from 1 January 2016
         * // to 1 January 2015, in minutes?
         * const result = formatDistanceStrict(new Date(2016, 0, 1), new Date(2015, 0, 1), {
         *   unit: 'minute'
         * })
         * //=> '525600 minutes'
         *
         * @example
         * // What is the distance from 1 January 2015
         * // to 28 January 2015, in months, rounded up?
         * const result = formatDistanceStrict(new Date(2015, 0, 28), new Date(2015, 0, 1), {
         *   unit: 'month',
         *   roundingMethod: 'ceil'
         * })
         * //=> '1 month'
         *
         * @example
         * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?
         * import { eoLocale } from 'date-fns/locale/eo'
         * const result = formatDistanceStrict(new Date(2016, 7, 1), new Date(2015, 0, 1), {
         *   locale: eoLocale
         * })
         * //=> '1 jaro'
         */

        function formatDistanceStrict(dirtyDate, dirtyBaseDate) {
          var options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {};
          Object(
            __WEBPACK_IMPORTED_MODULE_5__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var locale =
            options.locale ||
            __WEBPACK_IMPORTED_MODULE_4__locale_en_US_index_js__[
              "a" /* default */
            ];

          if (!locale.formatDistance) {
            throw new RangeError(
              "locale must contain localize.formatDistance property"
            );
          }

          var comparison = Object(
            __WEBPACK_IMPORTED_MODULE_1__compareAsc_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, dirtyBaseDate);

          if (isNaN(comparison)) {
            throw new RangeError("Invalid time value");
          }

          var localizeOptions = Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_cloneObject_index_js__[
              "a" /* default */
            ]
          )(options);
          localizeOptions.addSuffix = Boolean(options.addSuffix);
          localizeOptions.comparison = comparison;
          var dateLeft;
          var dateRight;

          if (comparison > 0) {
            dateLeft = Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(dirtyBaseDate);
            dateRight = Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(dirtyDate);
          } else {
            dateLeft = Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(dirtyDate);
            dateRight = Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(dirtyBaseDate);
          }

          var roundingMethod =
            options.roundingMethod == null
              ? "round"
              : String(options.roundingMethod);
          var roundingMethodFn;

          if (roundingMethod === "floor") {
            roundingMethodFn = Math.floor;
          } else if (roundingMethod === "ceil") {
            roundingMethodFn = Math.ceil;
          } else if (roundingMethod === "round") {
            roundingMethodFn = Math.round;
          } else {
            throw new RangeError(
              "roundingMethod must be 'floor', 'ceil' or 'round'"
            );
          }

          var milliseconds = dateRight.getTime() - dateLeft.getTime();
          var minutes = milliseconds / MILLISECONDS_IN_MINUTE;
          var timezoneOffset =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(dateRight) -
            Object(
              __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(dateLeft); // Use DST-normalized difference in minutes for years, months and days;
          // use regular difference in minutes for hours, minutes and seconds.

          var dstNormalizedMinutes =
            (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE;
          var unit;

          if (options.unit == null) {
            if (minutes < 1) {
              unit = "second";
            } else if (minutes < 60) {
              unit = "minute";
            } else if (minutes < MINUTES_IN_DAY) {
              unit = "hour";
            } else if (dstNormalizedMinutes < MINUTES_IN_MONTH) {
              unit = "day";
            } else if (dstNormalizedMinutes < MINUTES_IN_YEAR) {
              unit = "month";
            } else {
              unit = "year";
            }
          } else {
            unit = String(options.unit);
          } // 0 up to 60 seconds

          if (unit === "second") {
            var seconds = roundingMethodFn(milliseconds / 1000);
            return locale.formatDistance("xSeconds", seconds, localizeOptions); // 1 up to 60 mins
          } else if (unit === "minute") {
            var roundedMinutes = roundingMethodFn(minutes);
            return locale.formatDistance(
              "xMinutes",
              roundedMinutes,
              localizeOptions
            ); // 1 up to 24 hours
          } else if (unit === "hour") {
            var hours = roundingMethodFn(minutes / 60);
            return locale.formatDistance("xHours", hours, localizeOptions); // 1 up to 30 days
          } else if (unit === "day") {
            var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);
            return locale.formatDistance("xDays", days, localizeOptions); // 1 up to 12 months
          } else if (unit === "month") {
            var months = roundingMethodFn(
              dstNormalizedMinutes / MINUTES_IN_MONTH
            );
            return months === 12 && options.unit !== "month"
              ? locale.formatDistance("xYears", 1, localizeOptions)
              : locale.formatDistance("xMonths", months, localizeOptions); // 1 year up to max Date
          } else if (unit === "year") {
            var years = roundingMethodFn(
              dstNormalizedMinutes / MINUTES_IN_YEAR
            );
            return locale.formatDistance("xYears", years, localizeOptions);
          }

          throw new RangeError(
            "unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'"
          );
        }

        /***/
      },
      /* 100 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getDate;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getDate
         * @category Day Helpers
         * @summary Get the day of the month of the given date.
         *
         * @description
         * Get the day of the month of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the day of month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which day of the month is 29 February 2012?
         * const result = getDate(new Date(2012, 1, 29))
         * //=> 29
         */

        function getDate(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var dayOfMonth = date.getDate();
          return dayOfMonth;
        }

        /***/
      },
      /* 101 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          getDaysInMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getDaysInMonth
         * @category Month Helpers
         * @summary Get the number of days in a month of the given date.
         *
         * @description
         * Get the number of days in a month of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the number of days in a month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // How many days are in February 2000?
         * const result = getDaysInMonth(new Date(2000, 1))
         * //=> 29
         */

        function getDaysInMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          var monthIndex = date.getMonth();
          var lastDayOfMonth = new Date(0);
          lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);
          lastDayOfMonth.setHours(0, 0, 0, 0);
          return lastDayOfMonth.getDate();
        }

        /***/
      },
      /* 102 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isLeapYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isLeapYear
         * @category Year Helpers
         * @summary Is the given date in the leap year?
         *
         * @description
         * Is the given date in the leap year?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in the leap year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 1 September 2012 in the leap year?
         * var result = isLeapYear(new Date(2012, 8, 1))
         * //=> true
         */

        function isLeapYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
        }

        /***/
      },
      /* 103 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getISODay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getISODay
         * @category Weekday Helpers
         * @summary Get the day of the ISO week of the given date.
         *
         * @description
         * Get the day of the ISO week of the given date,
         * which is 7 for Sunday, 1 for Monday etc.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the day of ISO week
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which day of the ISO week is 26 February 2012?
         * const result = getISODay(new Date(2012, 1, 26))
         * //=> 7
         */

        function getISODay(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getDay();

          if (day === 0) {
            day = 7;
          }

          return day;
        }

        /***/
      },
      /* 104 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getISOWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfISOWeekYear_index_js__ =
          __webpack_require__(27);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_WEEK = 604800000;
        /**
         * @name getISOWeek
         * @category ISO Week Helpers
         * @summary Get the ISO week of the given date.
         *
         * @description
         * Get the ISO week of the given date.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the ISO week
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which week of the ISO-week numbering year is 2 January 2005?
         * const result = getISOWeek(new Date(2005, 0, 2))
         * //=> 53
         */

        function getISOWeek(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
                "a" /* default */
              ]
            )(date).getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_2__startOfISOWeekYear_index_js__[
                "a" /* default */
              ]
            )(date).getTime(); // Round the number of days to the nearest integer
          // because the number of milliseconds in a week is not constant
          // (e.g. it's different in the week of the daylight saving time clock shift)

          return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
        }

        /***/
      },
      /* 105 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getTime;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getTime
         * @category Timestamp Helpers
         * @summary Get the milliseconds timestamp of the given date.
         *
         * @description
         * Get the milliseconds timestamp of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the timestamp
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Get the timestamp of 29 February 2012 11:45:05.123:
         * const result = getTime(new Date(2012, 1, 29, 11, 45, 5, 123))
         * //=> 1330515905123
         */

        function getTime(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var timestamp = date.getTime();
          return timestamp;
        }

        /***/
      },
      /* 106 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfWeekYear_index_js__ =
          __webpack_require__(55);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_WEEK = 604800000;
        /**
         * @name getWeek
         * @category Week Helpers
         * @summary Get the local week index of the given date.
         *
         * @description
         * Get the local week index of the given date.
         * The exact calculation depends on the values of
         * `options.weekStartsOn` (which is the index of the first day of the week)
         * and `options.firstWeekContainsDate` (which is the day of January, which is always in
         * the first week of the week-numbering year)
         *
         * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
         * @returns {Number} the week
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         *
         * @example
         * // Which week of the local week numbering year is 2 January 2005 with default options?
         * const result = getISOWeek(new Date(2005, 0, 2))
         * //=> 2
         *
         * // Which week of the local week numbering year is 2 January 2005,
         * // if Monday is the first day of the week,
         * // and the first week of the year always contains 4 January?
         * const result = getISOWeek(new Date(2005, 0, 2), {
         *   weekStartsOn: 1,
         *   firstWeekContainsDate: 4
         * })
         * //=> 53
         */

        function getWeek(dirtyDate, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
                "a" /* default */
              ]
            )(date, options).getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_1__startOfWeekYear_index_js__[
                "a" /* default */
              ]
            )(date, options).getTime(); // Round the number of days to the nearest integer
          // because the number of milliseconds in a week is not constant
          // (e.g. it's different in the week of the daylight saving time clock shift)

          return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
        }

        /***/
      },
      /* 107 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getWeekYear
         * @category Week-Numbering Year Helpers
         * @summary Get the local week-numbering year of the given date.
         *
         * @description
         * Get the local week-numbering year of the given date.
         * The exact calculation depends on the values of
         * `options.weekStartsOn` (which is the index of the first day of the week)
         * and `options.firstWeekContainsDate` (which is the day of January, which is always in
         * the first week of the week-numbering year)
         *
         * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
         * @returns {Number} the local week-numbering year
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         *
         * @example
         * // Which week numbering year is 26 December 2004 with the default settings?
         * const result = getWeekYear(new Date(2004, 11, 26))
         * //=> 2005
         *
         * @example
         * // Which week numbering year is 26 December 2004 if week starts on Saturday?
         * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })
         * //=> 2004
         *
         * @example
         * // Which week numbering year is 26 December 2004 if the first week contains 4 January?
         * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })
         * //=> 2004
         */
        function getWeekYear(dirtyDate, options) {
          var _options$locale, _options$locale$optio;

          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          var localeFirstWeekContainsDate =
            options === null || options === void 0
              ? void 0
              : (_options$locale = options.locale) === null ||
                _options$locale === void 0
              ? void 0
              : (_options$locale$optio = _options$locale.options) === null ||
                _options$locale$optio === void 0
              ? void 0
              : _options$locale$optio.firstWeekContainsDate;
          var defaultFirstWeekContainsDate =
            localeFirstWeekContainsDate == null
              ? 1
              : Object(
                  __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeFirstWeekContainsDate);
          var firstWeekContainsDate =
            (options === null || options === void 0
              ? void 0
              : options.firstWeekContainsDate) == null
              ? defaultFirstWeekContainsDate
              : Object(
                  __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

          if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
            throw new RangeError(
              "firstWeekContainsDate must be between 1 and 7 inclusively"
            );
          }

          var firstWeekOfNextYear = new Date(0);
          firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
          firstWeekOfNextYear.setHours(0, 0, 0, 0);
          var startOfNextYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(firstWeekOfNextYear, options);
          var firstWeekOfThisYear = new Date(0);
          firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
          firstWeekOfThisYear.setHours(0, 0, 0, 0);
          var startOfThisYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(firstWeekOfThisYear, options);

          if (date.getTime() >= startOfNextYear.getTime()) {
            return year + 1;
          } else if (date.getTime() >= startOfThisYear.getTime()) {
            return year;
          } else {
            return year - 1;
          }
        }

        /***/
      },
      /* 108 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          lastDayOfMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name lastDayOfMonth
         * @category Month Helpers
         * @summary Return the last day of a month for the given date.
         *
         * @description
         * Return the last day of a month for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the last day of a month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The last day of a month for 2 September 2014 11:55:00:
         * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Tue Sep 30 2014 00:00:00
         */

        function lastDayOfMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var month = date.getMonth();
          date.setFullYear(date.getFullYear(), month + 1, 0);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 109 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = sub;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__subDays_index_js__ =
          __webpack_require__(56);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subMonths_index_js__ =
          __webpack_require__(110);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__ =
          __webpack_require__(6);

        /**
         * @name sub
         * @category Common Helpers
         * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
         *
         * @description
         * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be subtracted
         *
         * | Key     | Description                        |
         * |---------|------------------------------------|
         * | years   | Amount of years to be subtracted   |
         * | months  | Amount of months to be subtracted  |
         * | weeks   | Amount of weeks to be subtracted   |
         * | days    | Amount of days to be subtracted    |
         * | hours   | Amount of hours to be subtracted   |
         * | minutes | Amount of minutes to be subtracted |
         * | seconds | Amount of seconds to be subtracted |
         *
         * All values default to 0
         *
         * @returns {Date} the new date with the seconds subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract the following duration from 15 June 2017 15:29:20
         * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {
         *   years: 2,
         *   months: 9,
         *   weeks: 1,
         *   days: 7,
         *   hours: 5,
         *   minutes: 9,
         *   seconds: 30
         * })
         * //=> Mon Sep 1 2014 10:19:50
         */

        function sub(dirtyDate, duration) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          if (!duration || typeof duration !== "object") return new Date(NaN);
          var years =
            "years" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.years)
              : 0;
          var months =
            "months" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.months)
              : 0;
          var weeks =
            "weeks" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.weeks)
              : 0;
          var days =
            "days" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.days)
              : 0;
          var hours =
            "hours" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.hours)
              : 0;
          var minutes =
            "minutes" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.minutes)
              : 0;
          var seconds =
            "seconds" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.seconds)
              : 0; // Subtract years and months

          var dateWithoutMonths = Object(
            __WEBPACK_IMPORTED_MODULE_1__subMonths_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(dirtyDate),
            months + years * 12
          ); // Subtract weeks and days

          var dateWithoutDays = Object(
            __WEBPACK_IMPORTED_MODULE_0__subDays_index_js__["a" /* default */]
          )(dateWithoutMonths, days + weeks * 7); // Subtract hours, minutes and seconds

          var minutestoSub = minutes + hours * 60;
          var secondstoSub = seconds + minutestoSub * 60;
          var mstoSub = secondstoSub * 1000;
          var finalDate = new Date(dateWithoutDays.getTime() - mstoSub);
          return finalDate;
        }

        /***/
      },
      /* 110 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = subMonths;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__ =
          __webpack_require__(25);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subMonths
         * @category Month Helpers
         * @summary Subtract the specified number of months from the given date.
         *
         * @description
         * Subtract the specified number of months from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the months subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 5 months from 1 February 2015:
         * const result = subMonths(new Date(2015, 1, 1), 5)
         * //=> Mon Sep 01 2014 00:00:00
         */

        function subMonths(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__["a" /* default */]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 111 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = parse;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__locale_en_US_index_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subMilliseconds_index_js__ =
          __webpack_require__(29);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_assign_index_js__ =
          __webpack_require__(98);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_format_longFormatters_index_js__ =
          __webpack_require__(94);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_protectedTokens_index_js__ =
          __webpack_require__(95);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__lib_parsers_index_js__ =
          __webpack_require__(555);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:
        // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
        //   (one of the certain letters followed by `o`)
        // - (\w)\1* matches any sequences of the same letter
        // - '' matches two quote characters in a row
        // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
        //   except a single quote symbol, which ends the sequence.
        //   Two quote characters do not end the sequence.
        //   If there is no matching single quote
        //   then the sequence will continue until the end of the string.
        // - . matches any single character unmatched by previous parts of the RegExps

        var formattingTokensRegExp =
          /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
        // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

        var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
        var escapedStringRegExp = /^'([^]*?)'?$/;
        var doubleQuoteRegExp = /''/g;
        var notWhitespaceRegExp = /\S/;
        var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
        /**
         * @name parse
         * @category Common Helpers
         * @summary Parse the date.
         *
         * @description
         * Return the date parsed from string using the given format string.
         *
         * > âš ï¸ Please note that the `format` tokens differ from Moment.js and other libraries.
         * > See: https://git.io/fxCyr
         *
         * The characters in the format string wrapped between two single quotes characters (') are escaped.
         * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
         *
         * Format of the format string is based on Unicode Technical Standard #35:
         * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
         * with a few additions (see note 5 below the table).
         *
         * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
         * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
         *
         * ```javascript
         * parse('23 AM', 'HH a', new Date())
         * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
         * ```
         *
         * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
         *
         * Accepted format string patterns:
         * | Unit                            |Prior| Pattern | Result examples                   | Notes |
         * |---------------------------------|-----|---------|-----------------------------------|-------|
         * | Era                             | 140 | G..GGG  | AD, BC                            |       |
         * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
         * |                                 |     | GGGGG   | A, B                              |       |
         * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
         * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
         * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
         * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
         * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
         * |                                 |     | yyyyy   | ...                               | 2,4   |
         * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
         * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
         * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
         * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
         * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
         * |                                 |     | YYYYY   | ...                               | 2,4   |
         * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
         * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
         * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
         * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
         * |                                 |     | RRRRR   | ...                               | 2,4,5 |
         * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
         * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
         * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
         * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
         * |                                 |     | uuuuu   | ...                               | 2,4   |
         * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
         * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
         * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
         * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
         * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
         * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
         * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
         * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
         * |                                 |     | qq      | 01, 02, 03, 04                    |       |
         * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
         * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
         * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
         * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
         * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
         * |                                 |     | MM      | 01, 02, ..., 12                   |       |
         * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
         * |                                 |     | MMMM    | January, February, ..., December  | 2     |
         * |                                 |     | MMMMM   | J, F, ..., D                      |       |
         * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
         * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
         * |                                 |     | LL      | 01, 02, ..., 12                   |       |
         * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
         * |                                 |     | LLLL    | January, February, ..., December  | 2     |
         * |                                 |     | LLLLL   | J, F, ..., D                      |       |
         * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
         * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
         * |                                 |     | ww      | 01, 02, ..., 53                   |       |
         * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
         * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
         * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
         * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
         * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
         * |                                 |     | dd      | 01, 02, ..., 31                   |       |
         * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
         * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
         * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
         * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
         * |                                 |     | DDDD    | ...                               | 2     |
         * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
         * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
         * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
         * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
         * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
         * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |
         * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
         * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
         * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
         * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
         * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
         * |                                 |     | ee      | 02, 03, ..., 01                   |       |
         * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |
         * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
         * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
         * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
         * |                                 |     | cc      | 02, 03, ..., 01                   |       |
         * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |
         * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
         * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
         * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
         * |                                 |     | aaaaa   | a, p                              |       |
         * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
         * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
         * |                                 |     | bbbbb   | a, p, n, mi                       |       |
         * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
         * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
         * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
         * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
         * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
         * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
         * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
         * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
         * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
         * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
         * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
         * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
         * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
         * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
         * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
         * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
         * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
         * |                                 |     | mm      | 00, 01, ..., 59                   |       |
         * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
         * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
         * |                                 |     | ss      | 00, 01, ..., 59                   |       |
         * | Seconds timestamp               |  40 | t       | 512969520                         |       |
         * |                                 |     | tt      | ...                               | 2     |
         * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
         * |                                 |     | SS      | 00, 01, ..., 99                   |       |
         * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
         * |                                 |     | SSSS    | ...                               | 2     |
         * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
         * |                                 |     | TT      | ...                               | 2     |
         * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
         * |                                 |     | XX      | -0800, +0530, Z                   |       |
         * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
         * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
         * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
         * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
         * |                                 |     | xx      | -0800, +0530, +0000               |       |
         * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
         * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
         * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
         * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
         * |                                 |     | PP      | May 29, 1453                      |       |
         * |                                 |     | PPP     | May 29th, 1453                    |       |
         * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
         * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
         * |                                 |     | pp      | 12:00:00 AM                       |       |
         * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
         * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
         * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
         * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
         * Notes:
         * 1. "Formatting" units (e.g. formatting quarter) in the default pt-BR locale
         *    are the same as "stand-alone" units, but are different in some languages.
         *    "Formatting" units are declined according to the rules of the language
         *    in the context of a date. "Stand-alone" units are always nominative singular.
         *    In `format` function, they will produce different result:
         *
         *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
         *
         *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
         *
         *    `parse` will try to match both formatting and stand-alone units interchangably.
         *
         * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
         *    the single quote characters (see below).
         *    If the sequence is longer than listed in table:
         *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number
         *      as wide as the sequence
         *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.
         *      These variations are marked with "2" in the last column of the table.
         *
         * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
         *    These tokens represent the shortest form of the quarter.
         *
         * 4. The main difference between `y` and `u` patterns are B.C. years:
         *
         *    | Year | `y` | `u` |
         *    |------|-----|-----|
         *    | AC 1 |   1 |   1 |
         *    | BC 1 |   1 |   0 |
         *    | BC 2 |   2 |  -1 |
         *
         *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
         *
         *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`
         *
         *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`
         *
         *    while `uu` will just assign the year as is:
         *
         *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`
         *
         *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`
         *
         *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
         *    except local week-numbering years are dependent on `options.weekStartsOn`
         *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
         *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
         *
         * 5. These patterns are not in the Unicode Technical Standard #35:
         *    - `i`: ISO day of week
         *    - `I`: ISO week of year
         *    - `R`: ISO week-numbering year
         *    - `o`: ordinal number modifier
         *    - `P`: long localized date
         *    - `p`: long localized time
         *
         * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
         *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
         *
         * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
         *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
         *
         * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
         *    on the given locale.
         *
         *    using `pt-BR` locale: `P` => `d/M/yy`
         *    using `pt-BR` locale: `p` => `hh:mm a`
         *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
         *    using `pt-BR` locale: `p` => `HH:mm`
         *
         * Values will be assigned to the date in the descending order of its unit's priority.
         * Units of an equal priority overwrite each other in the order of appearance.
         *
         * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),
         * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.
         *
         * `referenceDate` must be passed for correct work of the function.
         * If you're not sure which `referenceDate` to supply, create a new instance of Date:
         * `parse('02/11/2014', 'd/M/yy', new Date())`
         * In this case parsing will be done in the context of the current date.
         * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,
         * then `Invalid Date` will be returned.
         *
         * The result may vary by locale.
         *
         * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
         *
         * If parsing failed, `Invalid Date` will be returned.
         * Invalid Date is a Date, whose time value is NaN.
         * Time value of Date: http://es5.github.io/#x15.9.1.1
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - Old `parse` was renamed to `toDate`.
         *   Now `parse` is a new function which parses a string using a provided format.
         *
         *   ```javascript
         *   // Before v2.0.0
         *   parse('2016-01-01')
         *
         *   // v2.0.0 onward (toDate no longer accepts a string)
         *   toDate(1392098430000) // Unix to timestamp
         *   toDate(new Date(2014, 1, 11, 11, 30, 30)) // Cloning the date
         *   parse('2016-01-01', 'yyyy-MM-dd', new Date())
         *   ```
         *
         * @param {String} dateString - the string to parse
         * @param {String} formatString - the string of tokens
         * @param {Date|Number} referenceDate - defines values missing from the parsed dateString
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
         * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
         *   see: https://git.io/fxCyr
         * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
         *   see: https://git.io/fxCyr
         * @returns {Date} the parsed date
         * @throws {TypeError} 3 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         * @throws {RangeError} `options.locale` must contain `match` property
         * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
         * @throws {RangeError} format string contains an unescaped latin alphabet character
         *
         * @example
         * // Parse 11 February 2014 from middle-endian format:
         * var result = parse('02/11/2014', 'd/M/yy', new Date())
         * //=> Tue Feb 11 2014 00:00:00
         *
         * @example
         * // Parse 28th of February in Esperanto locale in the context of 2010 year:
         * import eo from 'date-fns/locale/eo'
         * var result = parse('28-a de februaro', "do 'de' MMMM", new Date(2010, 0, 1), {
         *   locale: eo
         * })
         * //=> Sun Feb 28 2010 00:00:00
         */

        function parse(
          dirtyDateString,
          dirtyFormatString,
          dirtyReferenceDate,
          dirtyOptions
        ) {
          Object(
            __WEBPACK_IMPORTED_MODULE_9__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(3, arguments);
          var dateString = String(dirtyDateString);
          var formatString = String(dirtyFormatString);
          var options = dirtyOptions || {};
          var locale =
            options.locale ||
            __WEBPACK_IMPORTED_MODULE_0__locale_en_US_index_js__[
              "a" /* default */
            ];

          if (!locale.match) {
            throw new RangeError("locale must contain match property");
          }

          var localeFirstWeekContainsDate =
            locale.options && locale.options.firstWeekContainsDate;
          var defaultFirstWeekContainsDate =
            localeFirstWeekContainsDate == null
              ? 1
              : Object(
                  __WEBPACK_IMPORTED_MODULE_7__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeFirstWeekContainsDate);
          var firstWeekContainsDate =
            options.firstWeekContainsDate == null
              ? defaultFirstWeekContainsDate
              : Object(
                  __WEBPACK_IMPORTED_MODULE_7__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

          if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
            throw new RangeError(
              "firstWeekContainsDate must be between 1 and 7 inclusively"
            );
          }

          var localeWeekStartsOn =
            locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_7__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_7__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          if (formatString === "") {
            if (dateString === "") {
              return Object(
                __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__[
                  "a" /* default */
                ]
              )(dirtyReferenceDate);
            } else {
              return new Date(NaN);
            }
          }

          var subFnOptions = {
            firstWeekContainsDate: firstWeekContainsDate,
            weekStartsOn: weekStartsOn,
            locale: locale, // If timezone isn't specified, it will be set to the system timezone
          };
          var setters = [
            {
              priority: TIMEZONE_UNIT_PRIORITY,
              subPriority: -1,
              set: dateToSystemTimezone,
              index: 0,
            },
          ];
          var i;
          var tokens = formatString
            .match(longFormattingTokensRegExp)
            .map(function (substring) {
              var firstCharacter = substring[0];

              if (firstCharacter === "p" || firstCharacter === "P") {
                var longFormatter =
                  __WEBPACK_IMPORTED_MODULE_4__lib_format_longFormatters_index_js__[
                    "a" /* default */
                  ][firstCharacter];
                return longFormatter(
                  substring,
                  locale.formatLong,
                  subFnOptions
                );
              }

              return substring;
            })
            .join("")
            .match(formattingTokensRegExp);
          var usedTokens = [];

          for (i = 0; i < tokens.length; i++) {
            var token = tokens[i];

            if (
              !options.useAdditionalWeekYearTokens &&
              Object(
                __WEBPACK_IMPORTED_MODULE_6__lib_protectedTokens_index_js__[
                  "b" /* isProtectedWeekYearToken */
                ]
              )(token)
            ) {
              Object(
                __WEBPACK_IMPORTED_MODULE_6__lib_protectedTokens_index_js__[
                  "c" /* throwProtectedError */
                ]
              )(token, formatString, dirtyDateString);
            }

            if (
              !options.useAdditionalDayOfYearTokens &&
              Object(
                __WEBPACK_IMPORTED_MODULE_6__lib_protectedTokens_index_js__[
                  "a" /* isProtectedDayOfYearToken */
                ]
              )(token)
            ) {
              Object(
                __WEBPACK_IMPORTED_MODULE_6__lib_protectedTokens_index_js__[
                  "c" /* throwProtectedError */
                ]
              )(token, formatString, dirtyDateString);
            }

            var firstCharacter = token[0];
            var parser =
              __WEBPACK_IMPORTED_MODULE_8__lib_parsers_index_js__[
                "a" /* default */
              ][firstCharacter];

            if (parser) {
              var incompatibleTokens = parser.incompatibleTokens;

              if (Array.isArray(incompatibleTokens)) {
                var incompatibleToken = void 0;

                for (var _i = 0; _i < usedTokens.length; _i++) {
                  var usedToken = usedTokens[_i].token;

                  if (
                    incompatibleTokens.indexOf(usedToken) !== -1 ||
                    usedToken === firstCharacter
                  ) {
                    incompatibleToken = usedTokens[_i];
                    break;
                  }
                }

                if (incompatibleToken) {
                  throw new RangeError(
                    "The format string mustn't contain `"
                      .concat(incompatibleToken.fullToken, "` and `")
                      .concat(token, "` at the same time")
                  );
                }
              } else if (
                parser.incompatibleTokens === "*" &&
                usedTokens.length
              ) {
                throw new RangeError(
                  "The format string mustn't contain `".concat(
                    token,
                    "` and any other token at the same time"
                  )
                );
              }

              usedTokens.push({
                token: firstCharacter,
                fullToken: token,
              });
              var parseResult = parser.parse(
                dateString,
                token,
                locale.match,
                subFnOptions
              );

              if (!parseResult) {
                return new Date(NaN);
              }

              setters.push({
                priority: parser.priority,
                subPriority: parser.subPriority || 0,
                set: parser.set,
                validate: parser.validate,
                value: parseResult.value,
                index: setters.length,
              });
              dateString = parseResult.rest;
            } else {
              if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
                throw new RangeError(
                  "Format string contains an unescaped latin alphabet character `" +
                    firstCharacter +
                    "`"
                );
              } // Replace two single quote characters with one single quote character

              if (token === "''") {
                token = "'";
              } else if (firstCharacter === "'") {
                token = cleanEscapedString(token);
              } // Cut token from string, or, if string doesn't match the token, return Invalid Date

              if (dateString.indexOf(token) === 0) {
                dateString = dateString.slice(token.length);
              } else {
                return new Date(NaN);
              }
            }
          } // Check if the remaining input contains something other than whitespace

          if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {
            return new Date(NaN);
          }

          var uniquePrioritySetters = setters
            .map(function (setter) {
              return setter.priority;
            })
            .sort(function (a, b) {
              return b - a;
            })
            .filter(function (priority, index, array) {
              return array.indexOf(priority) === index;
            })
            .map(function (priority) {
              return setters
                .filter(function (setter) {
                  return setter.priority === priority;
                })
                .sort(function (a, b) {
                  return b.subPriority - a.subPriority;
                });
            })
            .map(function (setterArray) {
              return setterArray[0];
            });
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(dirtyReferenceDate);

          if (isNaN(date)) {
            return new Date(NaN);
          } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
          // This ensures that when UTC functions will be implemented, locales will be compatible with them.
          // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37

          var utcDate = Object(
            __WEBPACK_IMPORTED_MODULE_1__subMilliseconds_index_js__[
              "a" /* default */
            ]
          )(
            date,
            Object(
              __WEBPACK_IMPORTED_MODULE_5__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(date)
          );
          var flags = {};

          for (i = 0; i < uniquePrioritySetters.length; i++) {
            var setter = uniquePrioritySetters[i];

            if (
              setter.validate &&
              !setter.validate(utcDate, setter.value, subFnOptions)
            ) {
              return new Date(NaN);
            }

            var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)

            if (result[0]) {
              utcDate = result[0];
              Object(
                __WEBPACK_IMPORTED_MODULE_3__lib_assign_index_js__[
                  "a" /* default */
                ]
              )(flags, result[1]); // Result is date
            } else {
              utcDate = result;
            }
          }

          return utcDate;
        }

        function dateToSystemTimezone(date, flags) {
          if (flags.timestampIsSet) {
            return date;
          }

          var convertedDate = new Date(0);
          convertedDate.setFullYear(
            date.getUTCFullYear(),
            date.getUTCMonth(),
            date.getUTCDate()
          );
          convertedDate.setHours(
            date.getUTCHours(),
            date.getUTCMinutes(),
            date.getUTCSeconds(),
            date.getUTCMilliseconds()
          );
          return convertedDate;
        }

        function cleanEscapedString(input) {
          return input
            .match(escapedStringRegExp)[1]
            .replace(doubleQuoteRegExp, "'");
        }

        /***/
      },
      /* 112 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isSameHour;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfHour_index_js__ =
          __webpack_require__(113);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameHour
         * @category Hour Helpers
         * @summary Are the given dates in the same hour?
         *
         * @description
         * Are the given dates in the same hour?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same hour
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?
         * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))
         * //=> true
         */

        function isSameHour(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeftStartOfHour = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfHour_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var dateRightStartOfHour = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfHour_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          return (
            dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime()
          );
        }

        /***/
      },
      /* 113 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = startOfHour;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfHour
         * @category Hour Helpers
         * @summary Return the start of an hour for the given date.
         *
         * @description
         * Return the start of an hour for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of an hour
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of an hour for 2 September 2014 11:55:00:
         * const result = startOfHour(new Date(2014, 8, 2, 11, 55))
         * //=> Tue Sep 02 2014 11:00:00
         */

        function startOfHour(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setMinutes(0, 0, 0);
          return date;
        }

        /***/
      },
      /* 114 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          isSameISOWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameWeek_index_js__ =
          __webpack_require__(57);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameISOWeek
         * @category ISO Week Helpers
         * @summary Are the given dates in the same ISO week?
         *
         * @description
         * Are the given dates in the same ISO week?
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same ISO week
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 1 September 2014 and 7 September 2014 in the same ISO week?
         * var result = isSameISOWeek(new Date(2014, 8, 1), new Date(2014, 8, 7))
         * //=> true
         */

        function isSameISOWeek(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft, dirtyDateRight, {
            weekStartsOn: 1,
          });
        }

        /***/
      },
      /* 115 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          isSameMinute;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfMinute_index_js__ =
          __webpack_require__(49);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameMinute
         * @category Minute Helpers
         * @summary Are the given dates in the same minute?
         *
         * @description
         * Are the given dates in the same minute?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same minute
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 4 September 2014 06:30:00 and 4 September 2014 06:30:15
         * // in the same minute?
         * var result = isSameMinute(
         *   new Date(2014, 8, 4, 6, 30),
         *   new Date(2014, 8, 4, 6, 30, 15)
         * )
         * //=> true
         */

        function isSameMinute(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeftStartOfMinute = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfMinute_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var dateRightStartOfMinute = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfMinute_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          return (
            dateLeftStartOfMinute.getTime() === dateRightStartOfMinute.getTime()
          );
        }

        /***/
      },
      /* 116 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isSameMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameMonth
         * @category Month Helpers
         * @summary Are the given dates in the same month?
         *
         * @description
         * Are the given dates in the same month?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same month
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 2 September 2014 and 25 September 2014 in the same month?
         * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))
         * //=> true
         */

        function isSameMonth(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          return (
            dateLeft.getFullYear() === dateRight.getFullYear() &&
            dateLeft.getMonth() === dateRight.getMonth()
          );
        }

        /***/
      },
      /* 117 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          isSameQuarter;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfQuarter_index_js__ =
          __webpack_require__(50);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameQuarter
         * @category Quarter Helpers
         * @summary Are the given dates in the same year quarter?
         *
         * @description
         * Are the given dates in the same year quarter?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same quarter
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 1 January 2014 and 8 March 2014 in the same quarter?
         * var result = isSameQuarter(new Date(2014, 0, 1), new Date(2014, 2, 8))
         * //=> true
         */

        function isSameQuarter(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeftStartOfQuarter = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfQuarter_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var dateRightStartOfQuarter = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfQuarter_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          return (
            dateLeftStartOfQuarter.getTime() ===
            dateRightStartOfQuarter.getTime()
          );
        }

        /***/
      },
      /* 118 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          isSameSecond;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfSecond_index_js__ =
          __webpack_require__(119);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameSecond
         * @category Second Helpers
         * @summary Are the given dates in the same second?
         *
         * @description
         * Are the given dates in the same second?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same second
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 4 September 2014 06:30:15.000 and 4 September 2014 06:30.15.500
         * // in the same second?
         * var result = isSameSecond(
         *   new Date(2014, 8, 4, 6, 30, 15),
         *   new Date(2014, 8, 4, 6, 30, 15, 500)
         * )
         * //=> true
         */

        function isSameSecond(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeftStartOfSecond = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfSecond_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var dateRightStartOfSecond = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfSecond_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          return (
            dateLeftStartOfSecond.getTime() === dateRightStartOfSecond.getTime()
          );
        }

        /***/
      },
      /* 119 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfSecond;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfSecond
         * @category Second Helpers
         * @summary Return the start of a second for the given date.
         *
         * @description
         * Return the start of a second for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of a second
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of a second for 1 December 2014 22:15:45.400:
         * const result = startOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
         * //=> Mon Dec 01 2014 22:15:45.000
         */

        function startOfSecond(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setMilliseconds(0);
          return date;
        }

        /***/
      },
      /* 120 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isSameYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameYear
         * @category Year Helpers
         * @summary Are the given dates in the same year?
         *
         * @description
         * Are the given dates in the same year?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same year
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 2 September 2014 and 25 September 2014 in the same year?
         * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))
         * //=> true
         */

        function isSameYear(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          return dateLeft.getFullYear() === dateRight.getFullYear();
        }

        /***/
      },
      /* 121 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          lastDayOfWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name lastDayOfWeek
         * @category Week Helpers
         * @summary Return the last day of a week for the given date.
         *
         * @description
         * Return the last day of a week for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Date} the last day of a week
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // The last day of a week for 2 September 2014 11:55:00:
         * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Sat Sep 06 2014 00:00:00
         *
         * @example
         * // If the week starts on Monday, the last day of the week for 2 September 2014 11:55:00:
         * var result = lastDayOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
         * //=> Sun Sep 07 2014 00:00:00
         */
        function lastDayOfWeek(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError("weekStartsOn must be between 0 and 6");
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = date.getDay();
          var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
          date.setHours(0, 0, 0, 0);
          date.setDate(date.getDate() + diff);
          return date;
        }

        /***/
      },
      /* 122 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "minder as 'n sekonde",
            other: "minder as {{count}} sekondes",
          },
          xSeconds: {
            one: "1 sekonde",
            other: "{{count}} sekondes",
          },
          halfAMinute: "'n halwe minuut",
          lessThanXMinutes: {
            one: "minder as 'n minuut",
            other: "minder as {{count}} minute",
          },
          xMinutes: {
            one: "'n minuut",
            other: "{{count}} minute",
          },
          aboutXHours: {
            one: "ongeveer 1 uur",
            other: "ongeveer {{count}} ure",
          },
          xHours: {
            one: "1 uur",
            other: "{{count}} ure",
          },
          xDays: {
            one: "1 dag",
            other: "{{count}} dae",
          },
          aboutXWeeks: {
            one: "ongeveer 1 week",
            other: "ongeveer {{count}} weke",
          },
          xWeeks: {
            one: "1 week",
            other: "{{count}} weke",
          },
          aboutXMonths: {
            one: "ongeveer 1 maand",
            other: "ongeveer {{count}} maande",
          },
          xMonths: {
            one: "1 maand",
            other: "{{count}} maande",
          },
          aboutXYears: {
            one: "ongeveer 1 jaar",
            other: "ongeveer {{count}} jaar",
          },
          xYears: {
            one: "1 jaar",
            other: "{{count}} jaar",
          },
          overXYears: {
            one: "meer as 1 jaar",
            other: "meer as {{count}} jaar",
          },
          almostXYears: {
            one: "byna 1 jaar",
            other: "byna {{count}} jaar",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "oor " + result;
            } else {
              return result + " gelede";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 123 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "yyyy/MM/dd",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'om' {{time}}",
          long: "{{date}} 'om' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 124 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'verlede' eeee 'om' p",
          yesterday: "'gister om' p",
          today: "'vandag om' p",
          tomorrow: "'má´re om' p",
          nextWeek: "eeee 'om' p",
          other: "P",
        };

        function formatRelative(token) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 125 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["vC", "nC"],
          abbreviated: ["vC", "nC"],
          wide: ["voor Christus", "na Christus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: [
            "1ste kwartaal",
            "2de kwartaal",
            "3de kwartaal",
            "4de kwartaal",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Feb",
            "Mrt",
            "Apr",
            "Mei",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Okt",
            "Nov",
            "Des",
          ],
          wide: [
            "Januarie",
            "Februarie",
            "Maart",
            "April",
            "Mei",
            "Junie",
            "Julie",
            "Augustus",
            "September",
            "Oktober",
            "November",
            "Desember",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "D", "W", "D", "V", "S"],
          short: ["So", "Ma", "Di", "Wo", "Do", "Vr", "Sa"],
          abbreviated: ["Son", "Maa", "Din", "Woe", "Don", "Vry", "Sat"],
          wide: [
            "Sondag",
            "Maandag",
            "Dinsdag",
            "Woensdag",
            "Donderdag",
            "Vrydag",
            "Saterdag",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "vm",
            pm: "nm",
            midnight: "middernag",
            noon: "middaguur",
            morning: "oggend",
            afternoon: "middag",
            evening: "laat middag",
            night: "aand",
          },
          abbreviated: {
            am: "vm",
            pm: "nm",
            midnight: "middernag",
            noon: "middaguur",
            morning: "oggend",
            afternoon: "middag",
            evening: "laat middag",
            night: "aand",
          },
          wide: {
            am: "vm",
            pm: "nm",
            midnight: "middernag",
            noon: "middaguur",
            morning: "oggend",
            afternoon: "middag",
            evening: "laat middag",
            night: "aand",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "vm",
            pm: "nm",
            midnight: "middernag",
            noon: "uur die middag",
            morning: "uur die oggend",
            afternoon: "uur die middag",
            evening: "uur die aand",
            night: "uur die aand",
          },
          abbreviated: {
            am: "vm",
            pm: "nm",
            midnight: "middernag",
            noon: "uur die middag",
            morning: "uur die oggend",
            afternoon: "uur die middag",
            evening: "uur die aand",
            night: "uur die aand",
          },
          wide: {
            am: "vm",
            pm: "nm",
            midnight: "middernag",
            noon: "uur die middag",
            morning: "uur die oggend",
            afternoon: "uur die middag",
            evening: "uur die aand",
            night: "uur die aand",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          var rem100 = number % 100;

          if (rem100 < 20) {
            switch (rem100) {
              case 1:
              case 8:
                return number + "ste";

              default:
                return number + "de";
            }
          }

          return number + "ste";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 126 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(ste|de)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^([vn]\.? ?C\.?)/,
          abbreviated: /^([vn]\. ?C\.?)/,
          wide: /^((voor|na) Christus)/,
        };
        var parseEraPatterns = {
          any: [/^v/, /^n/],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^K[1234]/i,
          wide: /^[1234](st|d)e kwartaal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(Jan|Feb|Mrt|Apr|Mei|Jun|Jul|Aug|Sep|Okt|Nov|Dec)\.?/i,
          wide: /^(Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^J/i,
            /^F/i,
            /^M/i,
            /^A/i,
            /^M/i,
            /^J/i,
            /^J/i,
            /^A/i,
            /^S/i,
            /^O/i,
            /^N/i,
            /^D/i,
          ],
          any: [
            /^Jan/i,
            /^Feb/i,
            /^Mrt/i,
            /^Apr/i,
            /^Mei/i,
            /^Jun/i,
            /^Jul/i,
            /^Aug/i,
            /^Sep/i,
            /^Okt/i,
            /^Nov/i,
            /^Dec/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smdwv]/i,
          short: /^(So|Ma|Di|Wo|Do|Vr|Sa)/i,
          abbreviated: /^(Son|Maa|Din|Woe|Don|Vry|Sat)/i,
          wide: /^(Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag)/i,
        };
        var parseDayPatterns = {
          narrow: [/^S/i, /^M/i, /^D/i, /^W/i, /^D/i, /^V/i, /^S/i],
          any: [/^So/i, /^Ma/i, /^Di/i, /^Wo/i, /^Do/i, /^Vr/i, /^Sa/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(vm|nm|middernag|(?:uur )?die (oggend|middag|aand))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^vm/i,
            pm: /^nm/i,
            midnight: /^middernag/i,
            noon: /^middaguur/i,
            morning: /oggend/i,
            afternoon: /middag/i,
            evening: /laat middag/i,
            night: /aand/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 127 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ØªÙŠÙ†",
            threeToTen: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø«ÙˆØ§Ù†ÙŠ",
            other: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø«Ø§Ù†ÙŠØ©",
          },
          xSeconds: {
            one: "Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø«Ø§Ù†ØªÙŠÙ†",
            threeToTen: "{{count}} Ø«ÙˆØ§Ù†ÙŠ",
            other: "{{count}} Ø«Ø§Ù†ÙŠØ©",
          },
          halfAMinute: "Ù†ØµÙ Ø¯Ù‚ÙŠÙ‚Ø©",
          lessThanXMinutes: {
            one: "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚Ø©",
            two: "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†",
            threeToTen: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø¯Ù‚Ø§Ø¦Ù‚",
            other: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø¯Ù‚ÙŠÙ‚Ø©",
          },
          xMinutes: {
            one: "Ø¯Ù‚ÙŠÙ‚Ø© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†",
            threeToTen: "{{count}} Ø¯Ù‚Ø§Ø¦Ù‚",
            other: "{{count}} Ø¯Ù‚ÙŠÙ‚Ø©",
          },
          aboutXHours: {
            one: "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø© ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø³Ø§Ø¹ØªÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø³Ø§Ø¹Ø§Øª ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø³Ø§Ø¹Ø© ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xHours: {
            one: "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø³Ø§Ø¹ØªÙŠÙ†",
            threeToTen: "{{count}} Ø³Ø§Ø¹Ø§Øª",
            other: "{{count}} Ø³Ø§Ø¹Ø©",
          },
          xDays: {
            one: "ÙŠÙˆÙ… ÙˆØ§Ø­Ø¯",
            two: "ÙŠÙˆÙ…ÙŠÙ†",
            threeToTen: "{{count}} Ø£ÙŠØ§Ù…",
            other: "{{count}} ÙŠÙˆÙ…",
          },
          aboutXWeeks: {
            one: "Ø£Ø³Ø¨ÙˆØ¹ ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø£Ø³Ø¨ÙˆØ¹ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø³Ø§Ø¨ÙŠØ¹ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø£Ø³Ø¨ÙˆØ¹ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xWeeks: {
            one: "Ø£Ø³Ø¨ÙˆØ¹ ÙˆØ§Ø­Ø¯",
            two: "Ø£Ø³Ø¨ÙˆØ¹ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø³Ø§Ø¨ÙŠØ¹",
            other: "{{count}} Ø£Ø³Ø¨ÙˆØ¹",
          },
          aboutXMonths: {
            one: "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø´Ù‡Ø±ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø´Ù‡Ø± ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø´Ù‡Ø± ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xMonths: {
            one: "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯",
            two: "Ø´Ù‡Ø±ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø´Ù‡Ø±",
            other: "{{count}} Ø´Ù‡Ø±",
          },
          aboutXYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø¹Ø§Ù…ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø¹Ø§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯",
            two: "Ø¹Ø§Ù…ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù…",
            other: "{{count}} Ø¹Ø§Ù…",
          },
          overXYears: {
            one: "Ø£ÙƒØ«Ø± Ù…Ù† Ø¹Ø§Ù…",
            two: "Ø£ÙƒØ«Ø± Ù…Ù† Ø¹Ø§Ù…ÙŠÙ†",
            threeToTen: "Ø£ÙƒØ«Ø± Ù…Ù† {{count}} Ø£Ø¹ÙˆØ§Ù…",
            other: "Ø£ÙƒØ«Ø± Ù…Ù† {{count}} Ø¹Ø§Ù…",
          },
          almostXYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø¹Ø§Ù…ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø¹Ø§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 2) {
            result = formatDistanceLocale[token].two;
          } else if (count <= 10) {
            result = formatDistanceLocale[token].threeToTen.replace(
              "{{count}}",
              count
            );
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "ÙÙŠ Ø®Ù„Ø§Ù„ " + result;
            } else {
              return "Ù…Ù†Ø° " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 128 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Ø¹Ù†Ø¯' {{time}}",
          long: "{{date}} 'Ø¹Ù†Ø¯' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 129 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'Ø£Ø®Ø±' eeee 'Ø¹Ù†Ø¯' p",
          yesterday: "'Ø£Ù…Ø³ Ø¹Ù†Ø¯' p",
          today: "'Ø§Ù„ÙŠÙˆÙ… Ø¹Ù†Ø¯' p",
          tomorrow: "'ØºØ¯Ø§Ù‹ Ø¹Ù†Ø¯' p",
          nextWeek: "eeee 'Ø¹Ù†Ø¯' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 130 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ù‚", "Ø¨"],
          abbreviated: ["Ù‚.Ù….", "Ø¨.Ù…."],
          wide: ["Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯", "Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Ø±1", "Ø±2", "Ø±3", "Ø±4"],
          wide: [
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø£ÙˆÙ„",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø«Ø§Ù†ÙŠ",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø«Ø§Ù„Ø«",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø±Ø§Ø¨Ø¹",
          ],
        };
        var monthValues = {
          narrow: [
            "Ø¬",
            "Ù",
            "Ù…",
            "Ø£",
            "Ù…",
            "Ø¬",
            "Ø¬",
            "Ø£",
            "Ø³",
            "Ø£",
            "Ù†",
            "Ø¯",
          ],
          abbreviated: [
            "Ø¬Ø§Ù†Ù€",
            "ÙÙŠÙÙ€",
            "Ù…Ø§Ø±Ø³",
            "Ø£ÙØ±ÙŠÙ„",
            "Ù…Ø§ÙŠÙ€",
            "Ø¬ÙˆØ§Ù†Ù€",
            "Ø¬ÙˆÙŠÙ€",
            "Ø£ÙˆØª",
            "Ø³Ø¨ØªÙ€",
            "Ø£ÙƒØªÙ€",
            "Ù†ÙˆÙÙ€",
            "Ø¯ÙŠØ³Ù€",
          ],
          wide: [
            "Ø¬Ø§Ù†ÙÙŠ",
            "ÙÙŠÙØ±ÙŠ",
            "Ù…Ø§Ø±Ø³",
            "Ø£ÙØ±ÙŠÙ„",
            "Ù…Ø§ÙŠ",
            "Ø¬ÙˆØ§Ù†",
            "Ø¬ÙˆÙŠÙ„ÙŠØ©",
            "Ø£ÙˆØª",
            "Ø³Ø¨ØªÙ…Ø¨Ø±",
            "Ø£ÙƒØªÙˆØ¨Ø±",
            "Ù†ÙˆÙÙ…Ø¨Ø±",
            "Ø¯ÙŠØ³Ù…Ø¨Ø±",
          ],
        };
        var dayValues = {
          narrow: ["Ø­", "Ù†", "Ø«", "Ø±", "Ø®", "Ø¬", "Ø³"],
          short: [
            "Ø£Ø­Ø¯",
            "Ø§Ø«Ù†ÙŠÙ†",
            "Ø«Ù„Ø§Ø«Ø§Ø¡",
            "Ø£Ø±Ø¨Ø¹Ø§Ø¡",
            "Ø®Ù…ÙŠØ³",
            "Ø¬Ù…Ø¹Ø©",
            "Ø³Ø¨Øª",
          ],
          abbreviated: [
            "Ø£Ø­Ø¯",
            "Ø§Ø«Ù†Ù€",
            "Ø«Ù„Ø§",
            "Ø£Ø±Ø¨Ù€",
            "Ø®Ù…ÙŠÙ€",
            "Ø¬Ù…Ø¹Ø©",
            "Ø³Ø¨Øª",
          ],
          wide: [
            "Ø§Ù„Ø£Ø­Ø¯",
            "Ø§Ù„Ø§Ø«Ù†ÙŠÙ†",
            "Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡",
            "Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡",
            "Ø§Ù„Ø®Ù…ÙŠØ³",
            "Ø§Ù„Ø¬Ù…Ø¹Ø©",
            "Ø§Ù„Ø³Ø¨Øª",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
          abbreviated: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
          wide: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "ÙÙŠ Ø§Ù„ØµØ¨Ø§Ø­",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù€Ù‡Ø±",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
          abbreviated: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ÙÙŠ Ø§Ù„ØµØ¨Ø§Ø­",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
          wide: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù€Ù‡Ø±",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
        };

        function ordinalNumber(dirtyNumber) {
          return String(dirtyNumber);
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 131 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ù‚|Ø¨)/i,
          abbreviated: /^(Ù‚\.?\s?Ù…\.?|Ù‚\.?\s?Ù…\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
          wide: /^(Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯)/i,
        };
        var parseEraPatterns = {
          any: [/^Ù‚Ø¨Ù„/i, /^Ø¨Ø¹Ø¯/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Ø±[1234]/i,
          wide: /^Ø§Ù„Ø±Ø¨Ø¹ [1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[Ø¬ÙÙ…Ø£Ø³Ù†Ø¯]/i,
          abbreviated:
            /^(Ø¬Ø§Ù†|ÙÙŠÙ|Ù…Ø§Ø±|Ø£ÙØ±|Ù…Ø§ÙŠ|Ø¬ÙˆØ§|Ø¬ÙˆÙŠ|Ø£ÙˆØª|Ø³Ø¨Øª|Ø£ÙƒØª|Ù†ÙˆÙ|Ø¯ÙŠØ³)/i,
          wide: /^(Ø¬Ø§Ù†ÙÙŠ|ÙÙŠÙØ±ÙŠ|Ù…Ø§Ø±Ø³|Ø£ÙØ±ÙŠÙ„|Ù…Ø§ÙŠ|Ø¬ÙˆØ§Ù†|Ø¬ÙˆÙŠÙ„ÙŠØ©|Ø£ÙˆØª|Ø³Ø¨ØªÙ…Ø¨Ø±|Ø£ÙƒØªÙˆØ¨Ø±|Ù†ÙˆÙÙ…Ø¨Ø±|Ø¯ÙŠØ³Ù…Ø¨Ø±)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^Ø¬/i,
            /^Ù/i,
            /^Ù…/i,
            /^Ø£/i,
            /^Ù…/i,
            /^Ø¬/i,
            /^Ø¬/i,
            /^Ø£/i,
            /^Ø³/i,
            /^Ø£/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
          any: [
            /^Ø¬Ø§Ù†/i,
            /^ÙÙŠÙ/i,
            /^Ù…Ø§Ø±/i,
            /^Ø£ÙØ±/i,
            /^Ù…Ø§ÙŠ/i,
            /^Ø¬ÙˆØ§/i,
            /^Ø¬ÙˆÙŠ/i,
            /^Ø£ÙˆØª/i,
            /^Ø³Ø¨Øª/i,
            /^Ø£ÙƒØª/i,
            /^Ù†ÙˆÙ/i,
            /^Ø¯ÙŠØ³/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ø­Ù†Ø«Ø±Ø®Ø¬Ø³]/i,
          short:
            /^(Ø£Ø­Ø¯|Ø§Ø«Ù†ÙŠÙ†|Ø«Ù„Ø§Ø«Ø§Ø¡|Ø£Ø±Ø¨Ø¹Ø§Ø¡|Ø®Ù…ÙŠØ³|Ø¬Ù…Ø¹Ø©|Ø³Ø¨Øª)/i,
          abbreviated: /^(Ø£Ø­Ø¯|Ø§Ø«Ù†|Ø«Ù„Ø§|Ø£Ø±Ø¨|Ø®Ù…ÙŠ|Ø¬Ù…Ø¹Ø©|Ø³Ø¨Øª)/i,
          wide: /^(Ø§Ù„Ø£Ø­Ø¯|Ø§Ù„Ø§Ø«Ù†ÙŠÙ†|Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡|Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡|Ø§Ù„Ø®Ù…ÙŠØ³|Ø§Ù„Ø¬Ù…Ø¹Ø©|Ø§Ù„Ø³Ø¨Øª)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ø­/i, /^Ù†/i, /^Ø«/i, /^Ø±/i, /^Ø®/i, /^Ø¬/i, /^Ø³/i],
          wide: [
            /^Ø§Ù„Ø£Ø­Ø¯/i,
            /^Ø§Ù„Ø§Ø«Ù†ÙŠÙ†/i,
            /^Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡/i,
            /^Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡/i,
            /^Ø§Ù„Ø®Ù…ÙŠØ³/i,
            /^Ø§Ù„Ø¬Ù…Ø¹Ø©/i,
            /^Ø§Ù„Ø³Ø¨Øª/i,
          ],
          any: [/^Ø£Ø­/i, /^Ø§Ø«/i, /^Ø«/i, /^Ø£Ø±/i, /^Ø®/i, /^Ø¬/i, /^Ø³/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
          any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mi/i,
            noon: /^no/i,
            morning: /morning/i,
            afternoon: /afternoon/i,
            evening: /evening/i,
            night: /night/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 132 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ØªÙŠÙ†",
            threeToTen: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø«ÙˆØ§Ù†ÙŠ",
            other: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø«Ø§Ù†ÙŠØ©",
          },
          xSeconds: {
            one: "Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø«Ø§Ù†ØªÙŠÙ†",
            threeToTen: "{{count}} Ø«ÙˆØ§Ù†ÙŠ",
            other: "{{count}} Ø«Ø§Ù†ÙŠØ©",
          },
          halfAMinute: "Ù†ØµÙ Ø¯Ù‚ÙŠÙ‚Ø©",
          lessThanXMinutes: {
            one: "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚Ø©",
            two: "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†",
            threeToTen: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø¯Ù‚Ø§Ø¦Ù‚",
            other: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø¯Ù‚ÙŠÙ‚Ø©",
          },
          xMinutes: {
            one: "Ø¯Ù‚ÙŠÙ‚Ø© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†",
            threeToTen: "{{count}} Ø¯Ù‚Ø§Ø¦Ù‚",
            other: "{{count}} Ø¯Ù‚ÙŠÙ‚Ø©",
          },
          aboutXHours: {
            one: "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø© ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø³Ø§Ø¹ØªÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø³Ø§Ø¹Ø§Øª ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø³Ø§Ø¹Ø© ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xHours: {
            one: "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø³Ø§Ø¹ØªÙŠÙ†",
            threeToTen: "{{count}} Ø³Ø§Ø¹Ø§Øª",
            other: "{{count}} Ø³Ø§Ø¹Ø©",
          },
          xDays: {
            one: "ÙŠÙˆÙ… ÙˆØ§Ø­Ø¯",
            two: "ÙŠÙˆÙ…ÙŠÙ†",
            threeToTen: "{{count}} Ø£ÙŠØ§Ù…",
            other: "{{count}} ÙŠÙˆÙ…",
          },
          aboutXWeeks: {
            one: "Ø£Ø³Ø¨ÙˆØ¹ ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø£Ø³Ø¨ÙˆØ¹ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø³Ø§Ø¨ÙŠØ¹ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø£Ø³Ø¨ÙˆØ¹ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xWeeks: {
            one: "Ø£Ø³Ø¨ÙˆØ¹ ÙˆØ§Ø­Ø¯",
            two: "Ø£Ø³Ø¨ÙˆØ¹ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø³Ø§Ø¨ÙŠØ¹",
            other: "{{count}} Ø£Ø³Ø¨ÙˆØ¹",
          },
          aboutXMonths: {
            one: "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø´Ù‡Ø±ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø´Ù‡Ø± ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø´Ù‡Ø± ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xMonths: {
            one: "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯",
            two: "Ø´Ù‡Ø±ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø´Ù‡Ø±",
            other: "{{count}} Ø´Ù‡Ø±",
          },
          aboutXYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø¹Ø§Ù…ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø¹Ø§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯",
            two: "Ø¹Ø§Ù…ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù…",
            other: "{{count}} Ø¹Ø§Ù…",
          },
          overXYears: {
            one: "Ø£ÙƒØ«Ø± Ù…Ù† Ø¹Ø§Ù…",
            two: "Ø£ÙƒØ«Ø± Ù…Ù† Ø¹Ø§Ù…ÙŠÙ†",
            threeToTen: "Ø£ÙƒØ«Ø± Ù…Ù† {{count}} Ø£Ø¹ÙˆØ§Ù…",
            other: "Ø£ÙƒØ«Ø± Ù…Ù† {{count}} Ø¹Ø§Ù…",
          },
          almostXYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø¹Ø§Ù…ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø¹Ø§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 2) {
            result = formatDistanceLocale[token].two;
          } else if (count <= 10) {
            result = formatDistanceLocale[token].threeToTen.replace(
              "{{count}}",
              count
            );
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "ÙÙŠ Ø®Ù„Ø§Ù„ " + result;
            } else {
              return "Ù…Ù†Ø° " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 133 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Ø¹Ù†Ø¯' {{time}}",
          long: "{{date}} 'Ø¹Ù†Ø¯' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 134 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'Ø£Ø®Ø±' eeee 'Ø¹Ù†Ø¯' p",
          yesterday: "'Ø£Ù…Ø³ Ø¹Ù†Ø¯' p",
          today: "'Ø§Ù„ÙŠÙˆÙ… Ø¹Ù†Ø¯' p",
          tomorrow: "'ØºØ¯Ø§Ù‹ Ø¹Ù†Ø¯' p",
          nextWeek: "eeee 'Ø¹Ù†Ø¯' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 135 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ù‚", "Ø¨"],
          abbreviated: ["Ù‚.Ù….", "Ø¨.Ù…."],
          wide: ["Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯", "Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Ø±1", "Ø±2", "Ø±3", "Ø±4"],
          wide: [
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø£ÙˆÙ„",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø«Ø§Ù†ÙŠ",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø«Ø§Ù„Ø«",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø±Ø§Ø¨Ø¹",
          ],
        };
        var monthValues = {
          narrow: [
            "ÙŠ",
            "Ù",
            "Ù…",
            "Ø£",
            "Ù…",
            "ÙŠ",
            "ÙŠ",
            "Øº",
            "Ø´",
            "Ø£",
            "Ù†",
            "Ø¯",
          ],
          abbreviated: [
            "ÙŠÙ†Ø§",
            "ÙØ¨Ø±",
            "Ù…Ø§Ø±Ø³",
            "Ø£Ø¨Ø±ÙŠÙ„",
            "Ù…Ø§ÙŠ",
            "ÙŠÙˆÙ†Ù€",
            "ÙŠÙˆÙ„Ù€",
            "ØºØ´Øª",
            "Ø´ØªÙ†Ù€",
            "Ø£ÙƒØªÙ€",
            "Ù†ÙˆÙ†Ù€",
            "Ø¯Ø¬Ù†Ù€",
          ],
          wide: [
            "ÙŠÙ†Ø§ÙŠØ±",
            "ÙØ¨Ø±Ø§ÙŠØ±",
            "Ù…Ø§Ø±Ø³",
            "Ø£Ø¨Ø±ÙŠÙ„",
            "Ù…Ø§ÙŠ",
            "ÙŠÙˆÙ†ÙŠÙˆ",
            "ÙŠÙˆÙ„ÙŠÙˆØ²",
            "ØºØ´Øª",
            "Ø´ØªÙ†Ø¨Ø±",
            "Ø£ÙƒØªÙˆØ¨Ø±",
            "Ù†ÙˆÙ†Ø¨Ø±",
            "Ø¯Ø¬Ù†Ø¨Ø±",
          ],
        };
        var dayValues = {
          narrow: ["Ø­", "Ù†", "Ø«", "Ø±", "Ø®", "Ø¬", "Ø³"],
          short: [
            "Ø£Ø­Ø¯",
            "Ø§Ø«Ù†ÙŠÙ†",
            "Ø«Ù„Ø§Ø«Ø§Ø¡",
            "Ø£Ø±Ø¨Ø¹Ø§Ø¡",
            "Ø®Ù…ÙŠØ³",
            "Ø¬Ù…Ø¹Ø©",
            "Ø³Ø¨Øª",
          ],
          abbreviated: [
            "Ø£Ø­Ø¯",
            "Ø§Ø«Ù†Ù€",
            "Ø«Ù„Ø§",
            "Ø£Ø±Ø¨Ù€",
            "Ø®Ù…ÙŠÙ€",
            "Ø¬Ù…Ø¹Ø©",
            "Ø³Ø¨Øª",
          ],
          wide: [
            "Ø§Ù„Ø£Ø­Ø¯",
            "Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†",
            "Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡",
            "Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡",
            "Ø§Ù„Ø®Ù…ÙŠØ³",
            "Ø§Ù„Ø¬Ù…Ø¹Ø©",
            "Ø§Ù„Ø³Ø¨Øª",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
          abbreviated: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
          wide: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "ÙÙŠ Ø§Ù„ØµØ¨Ø§Ø­",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù€Ù‡Ø±",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
          abbreviated: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ÙÙŠ Ø§Ù„ØµØ¨Ø§Ø­",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
          wide: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù€Ù‡Ø±",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
        };

        function ordinalNumber(dirtyNumber) {
          return String(dirtyNumber);
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 136 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ù‚|Ø¨)/i,
          abbreviated: /^(Ù‚\.?\s?Ù…\.?|Ù‚\.?\s?Ù…\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
          wide: /^(Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯)/i,
        };
        var parseEraPatterns = {
          any: [/^Ù‚Ø¨Ù„/i, /^Ø¨Ø¹Ø¯/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Ø±[1234]/i,
          wide: /^Ø§Ù„Ø±Ø¨Ø¹ [1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[ÙŠÙÙ…Ø£Ù…Ø³Ù†Ø¯]/i,
          abbreviated:
            /^(ÙŠÙ†|Ù|Ù…Ø§Ø±|Ø£Ø¨|Ù…Ø§ÙŠ|ÙŠÙˆÙ†|ÙŠÙˆÙ„|ØºØ´|Ø´Øª|Ø£Ùƒ|Ù†|Ø¯)/i,
          wide: /^(ÙŠÙ†|Ù|Ù…Ø§Ø±|Ø£Ø¨|Ù…Ø§ÙŠ|ÙŠÙˆÙ†|ÙŠÙˆÙ„|ØºØ´|Ø´Øª|Ø£Ùƒ|Ù†|Ø¯)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^ÙŠ/i,
            /^Ù/i,
            /^Ù…/i,
            /^Ø£/i,
            /^Ù…/i,
            /^ÙŠ/i,
            /^ÙŠ/i,
            /^Øº/i,
            /^Ø´/i,
            /^Ø£/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
          any: [
            /^ÙŠÙ†/i,
            /^ÙØ¨/i,
            /^Ù…Ø§Ø±/i,
            /^Ø£Ø¨/i,
            /^Ù…Ø§ÙŠ/i,
            /^ÙŠÙˆÙ†/i,
            /^ÙŠÙˆÙ„/i,
            /^ØºØ´Øª/i,
            /^Ø´/i,
            /^Ø£Ùƒ/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ø­Ù†Ø«Ø±Ø®Ø¬Ø³]/i,
          short:
            /^(Ø£Ø­Ø¯|Ø¥Ø«Ù†ÙŠÙ†|Ø«Ù„Ø§Ø«Ø§Ø¡|Ø£Ø±Ø¨Ø¹Ø§Ø¡|Ø®Ù…ÙŠØ³|Ø¬Ù…Ø¹Ø©|Ø³Ø¨Øª)/i,
          abbreviated: /^(Ø£Ø­Ø¯|Ø¥Ø«Ù†|Ø«Ù„Ø§|Ø£Ø±Ø¨|Ø®Ù…ÙŠ|Ø¬Ù…Ø¹Ø©|Ø³Ø¨Øª)/i,
          wide: /^(Ø§Ù„Ø£Ø­Ø¯|Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†|Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡|Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡|Ø§Ù„Ø®Ù…ÙŠØ³|Ø§Ù„Ø¬Ù…Ø¹Ø©|Ø§Ù„Ø³Ø¨Øª)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ø­/i, /^Ù†/i, /^Ø«/i, /^Ø±/i, /^Ø®/i, /^Ø¬/i, /^Ø³/i],
          wide: [
            /^Ø§Ù„Ø£Ø­Ø¯/i,
            /^Ø§Ù„Ø¥Ø«Ù†ÙŠÙ†/i,
            /^Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡/i,
            /^Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡/i,
            /^Ø§Ù„Ø®Ù…ÙŠØ³/i,
            /^Ø§Ù„Ø¬Ù…Ø¹Ø©/i,
            /^Ø§Ù„Ø³Ø¨Øª/i,
          ],
          any: [/^Ø£Ø­/i, /^Ø¥Ø«/i, /^Ø«/i, /^Ø£Ø±/i, /^Ø®/i, /^Ø¬/i, /^Ø³/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
          any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mi/i,
            noon: /^no/i,
            morning: /morning/i,
            afternoon: /afternoon/i,
            evening: /evening/i,
            night: /night/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 137 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø£Ù‚Ù„ Ù…Ù† Ø«Ø§Ù†ØªÙŠÙ†",
            threeToTen: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø«ÙˆØ§Ù†ÙŠ",
            other: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø«Ø§Ù†ÙŠØ©",
          },
          xSeconds: {
            one: "Ø«Ø§Ù†ÙŠØ© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø«Ø§Ù†ØªÙŠÙ†",
            threeToTen: "{{count}} Ø«ÙˆØ§Ù†ÙŠ",
            other: "{{count}} Ø«Ø§Ù†ÙŠØ©",
          },
          halfAMinute: "Ù†ØµÙ Ø¯Ù‚ÙŠÙ‚Ø©",
          lessThanXMinutes: {
            one: "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚Ø©",
            two: "Ø£Ù‚Ù„ Ù…Ù† Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†",
            threeToTen: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø¯Ù‚Ø§Ø¦Ù‚",
            other: "Ø£Ù‚Ù„ Ù…Ù† {{count}} Ø¯Ù‚ÙŠÙ‚Ø©",
          },
          xMinutes: {
            one: "Ø¯Ù‚ÙŠÙ‚Ø© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø¯Ù‚ÙŠÙ‚ØªÙŠÙ†",
            threeToTen: "{{count}} Ø¯Ù‚Ø§Ø¦Ù‚",
            other: "{{count}} Ø¯Ù‚ÙŠÙ‚Ø©",
          },
          aboutXHours: {
            one: "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø© ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø³Ø§Ø¹ØªÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø³Ø§Ø¹Ø§Øª ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø³Ø§Ø¹Ø© ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xHours: {
            one: "Ø³Ø§Ø¹Ø© ÙˆØ§Ø­Ø¯Ø©",
            two: "Ø³Ø§Ø¹ØªÙŠÙ†",
            threeToTen: "{{count}} Ø³Ø§Ø¹Ø§Øª",
            other: "{{count}} Ø³Ø§Ø¹Ø©",
          },
          xDays: {
            one: "ÙŠÙˆÙ… ÙˆØ§Ø­Ø¯",
            two: "ÙŠÙˆÙ…ÙŠÙ†",
            threeToTen: "{{count}} Ø£ÙŠØ§Ù…",
            other: "{{count}} ÙŠÙˆÙ…",
          },
          aboutXWeeks: {
            one: "Ø£Ø³Ø¨ÙˆØ¹ ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø£Ø³Ø¨ÙˆØ¹ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø³Ø§Ø¨ÙŠØ¹ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø£Ø³Ø¨ÙˆØ¹ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xWeeks: {
            one: "Ø£Ø³Ø¨ÙˆØ¹ ÙˆØ§Ø­Ø¯",
            two: "Ø£Ø³Ø¨ÙˆØ¹ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø³Ø§Ø¨ÙŠØ¹",
            other: "{{count}} Ø£Ø³Ø¨ÙˆØ¹",
          },
          aboutXMonths: {
            one: "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø´Ù‡Ø±ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø´Ù‡Ø± ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø´Ù‡Ø± ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xMonths: {
            one: "Ø´Ù‡Ø± ÙˆØ§Ø­Ø¯",
            two: "Ø´Ù‡Ø±ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø´Ù‡Ø±",
            other: "{{count}} Ø´Ù‡Ø±",
          },
          aboutXYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø¹Ø§Ù…ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø¹Ø§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
          xYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯",
            two: "Ø¹Ø§Ù…ÙŠÙ†",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù…",
            other: "{{count}} Ø¹Ø§Ù…",
          },
          overXYears: {
            one: "Ø£ÙƒØ«Ø± Ù…Ù† Ø¹Ø§Ù…",
            two: "Ø£ÙƒØ«Ø± Ù…Ù† Ø¹Ø§Ù…ÙŠÙ†",
            threeToTen: "Ø£ÙƒØ«Ø± Ù…Ù† {{count}} Ø£Ø¹ÙˆØ§Ù…",
            other: "Ø£ÙƒØ«Ø± Ù…Ù† {{count}} Ø¹Ø§Ù…",
          },
          almostXYears: {
            one: "Ø¹Ø§Ù… ÙˆØ§Ø­Ø¯ ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            two: "Ø¹Ø§Ù…ÙŠÙ† ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            threeToTen: "{{count}} Ø£Ø¹ÙˆØ§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
            other: "{{count}} Ø¹Ø§Ù… ØªÙ‚Ø±ÙŠØ¨Ø§Ù‹",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 2) {
            result = formatDistanceLocale[token].two;
          } else if (count <= 10) {
            result = formatDistanceLocale[token].threeToTen.replace(
              "{{count}}",
              count
            );
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "ÙÙŠ Ø®Ù„Ø§Ù„ " + result;
            } else {
              return "Ù…Ù†Ø° " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 138 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Ø¹Ù†Ø¯' {{time}}",
          long: "{{date}} 'Ø¹Ù†Ø¯' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 139 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'Ø£Ø®Ø±' eeee 'Ø¹Ù†Ø¯' p",
          yesterday: "'Ø£Ù…Ø³ Ø¹Ù†Ø¯' p",
          today: "'Ø§Ù„ÙŠÙˆÙ… Ø¹Ù†Ø¯' p",
          tomorrow: "'ØºØ¯Ø§Ù‹ Ø¹Ù†Ø¯' p",
          nextWeek: "eeee 'Ø¹Ù†Ø¯' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 140 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ù‚", "Ø¨"],
          abbreviated: ["Ù‚.Ù….", "Ø¨.Ù…."],
          wide: ["Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯", "Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Ø±1", "Ø±2", "Ø±3", "Ø±4"],
          wide: [
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø£ÙˆÙ„",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø«Ø§Ù†ÙŠ",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø«Ø§Ù„Ø«",
            "Ø§Ù„Ø±Ø¨Ø¹ Ø§Ù„Ø±Ø§Ø¨Ø¹",
          ],
        };
        var monthValues = {
          narrow: [
            "ÙŠ",
            "Ù",
            "Ù…",
            "Ø£",
            "Ù…",
            "ÙŠ",
            "ÙŠ",
            "Ø£",
            "Ø³",
            "Ø£",
            "Ù†",
            "Ø¯",
          ],
          abbreviated: [
            "ÙŠÙ†Ø§",
            "ÙØ¨Ø±",
            "Ù…Ø§Ø±Ø³",
            "Ø£Ø¨Ø±ÙŠÙ„",
            "Ù…Ø§ÙŠÙˆ",
            "ÙŠÙˆÙ†Ù€",
            "ÙŠÙˆÙ„Ù€",
            "Ø£ØºØ³Ù€",
            "Ø³Ø¨ØªÙ€",
            "Ø£ÙƒØªÙ€",
            "Ù†ÙˆÙÙ€",
            "Ø¯ÙŠØ³Ù€",
          ],
          wide: [
            "ÙŠÙ†Ø§ÙŠØ±",
            "ÙØ¨Ø±Ø§ÙŠØ±",
            "Ù…Ø§Ø±Ø³",
            "Ø£Ø¨Ø±ÙŠÙ„",
            "Ù…Ø§ÙŠÙˆ",
            "ÙŠÙˆÙ†ÙŠÙˆ",
            "ÙŠÙˆÙ„ÙŠÙˆ",
            "Ø£ØºØ³Ø·Ø³",
            "Ø³Ø¨ØªÙ…Ø¨Ø±",
            "Ø£ÙƒØªÙˆØ¨Ø±",
            "Ù†ÙˆÙÙ…Ø¨Ø±",
            "Ø¯ÙŠØ³Ù…Ø¨Ø±",
          ],
        };
        var dayValues = {
          narrow: ["Ø­", "Ù†", "Ø«", "Ø±", "Ø®", "Ø¬", "Ø³"],
          short: [
            "Ø£Ø­Ø¯",
            "Ø§Ø«Ù†ÙŠÙ†",
            "Ø«Ù„Ø§Ø«Ø§Ø¡",
            "Ø£Ø±Ø¨Ø¹Ø§Ø¡",
            "Ø®Ù…ÙŠØ³",
            "Ø¬Ù…Ø¹Ø©",
            "Ø³Ø¨Øª",
          ],
          abbreviated: [
            "Ø£Ø­Ø¯",
            "Ø§Ø«Ù†Ù€",
            "Ø«Ù„Ø§",
            "Ø£Ø±Ø¨Ù€",
            "Ø®Ù…ÙŠÙ€",
            "Ø¬Ù…Ø¹Ø©",
            "Ø³Ø¨Øª",
          ],
          wide: [
            "Ø§Ù„Ø£Ø­Ø¯",
            "Ø§Ù„Ø§Ø«Ù†ÙŠÙ†",
            "Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡",
            "Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡",
            "Ø§Ù„Ø®Ù…ÙŠØ³",
            "Ø§Ù„Ø¬Ù…Ø¹Ø©",
            "Ø§Ù„Ø³Ø¨Øª",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
          abbreviated: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
          wide: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø§Ø­Ø§Ù‹",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù‡Ø±",
            evening: "Ù…Ø³Ø§Ø¡Ø§Ù‹",
            night: "Ù„ÙŠÙ„Ø§Ù‹",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "ÙÙŠ Ø§Ù„ØµØ¨Ø§Ø­",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù€Ù‡Ø±",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
          abbreviated: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            morning: "ÙÙŠ Ø§Ù„ØµØ¨Ø§Ø­",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
          wide: {
            am: "Øµ",
            pm: "Ù…",
            midnight: "Ù†ØµÙ Ø§Ù„Ù„ÙŠÙ„",
            noon: "Ø¸Ù‡Ø±",
            afternoon: "Ø¨Ø¹Ø¯ Ø§Ù„Ø¸Ù€Ù‡Ø±",
            evening: "ÙÙŠ Ø§Ù„Ù…Ø³Ø§Ø¡",
            night: "ÙÙŠ Ø§Ù„Ù„ÙŠÙ„",
          },
        };

        function ordinalNumber(dirtyNumber) {
          return String(dirtyNumber);
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 141 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ù‚|Ø¨)/i,
          abbreviated: /^(Ù‚\.?\s?Ù…\.?|Ù‚\.?\s?Ù…\.?\s?|a\.?\s?d\.?|c\.?\s?)/i,
          wide: /^(Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ù‚Ø¨Ù„ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯|Ø¨Ø¹Ø¯ Ø§Ù„Ù…ÙŠÙ„Ø§Ø¯)/i,
        };
        var parseEraPatterns = {
          any: [/^Ù‚Ø¨Ù„/i, /^Ø¨Ø¹Ø¯/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Ø±[1234]/i,
          wide: /^Ø§Ù„Ø±Ø¨Ø¹ [1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[ÙŠÙÙ…Ø£Ù…Ø³Ù†Ø¯]/i,
          abbreviated:
            /^(ÙŠÙ†|Ù|Ù…Ø§Ø±|Ø£Ø¨|Ù…Ø§ÙŠ|ÙŠÙˆÙ†|ÙŠÙˆÙ„|Ø£Øº|Ø³|Ø£Ùƒ|Ù†|Ø¯)/i,
          wide: /^(ÙŠÙ†|Ù|Ù…Ø§Ø±|Ø£Ø¨|Ù…Ø§ÙŠ|ÙŠÙˆÙ†|ÙŠÙˆÙ„|Ø£Øº|Ø³|Ø£Ùƒ|Ù†|Ø¯)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^ÙŠ/i,
            /^Ù/i,
            /^Ù…/i,
            /^Ø£/i,
            /^Ù…/i,
            /^ÙŠ/i,
            /^ÙŠ/i,
            /^Ø£/i,
            /^Ø³/i,
            /^Ø£/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
          any: [
            /^ÙŠÙ†/i,
            /^Ù/i,
            /^Ù…Ø§Ø±/i,
            /^Ø£Ø¨/i,
            /^Ù…Ø§ÙŠ/i,
            /^ÙŠÙˆÙ†/i,
            /^ÙŠÙˆÙ„/i,
            /^Ø£Øº/i,
            /^Ø³/i,
            /^Ø£Ùƒ/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ø­Ù†Ø«Ø±Ø®Ø¬Ø³]/i,
          short:
            /^(Ø£Ø­Ø¯|Ø§Ø«Ù†ÙŠÙ†|Ø«Ù„Ø§Ø«Ø§Ø¡|Ø£Ø±Ø¨Ø¹Ø§Ø¡|Ø®Ù…ÙŠØ³|Ø¬Ù…Ø¹Ø©|Ø³Ø¨Øª)/i,
          abbreviated: /^(Ø£Ø­Ø¯|Ø§Ø«Ù†|Ø«Ù„Ø§|Ø£Ø±Ø¨|Ø®Ù…ÙŠ|Ø¬Ù…Ø¹Ø©|Ø³Ø¨Øª)/i,
          wide: /^(Ø§Ù„Ø£Ø­Ø¯|Ø§Ù„Ø§Ø«Ù†ÙŠÙ†|Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡|Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡|Ø§Ù„Ø®Ù…ÙŠØ³|Ø§Ù„Ø¬Ù…Ø¹Ø©|Ø§Ù„Ø³Ø¨Øª)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ø­/i, /^Ù†/i, /^Ø«/i, /^Ø±/i, /^Ø®/i, /^Ø¬/i, /^Ø³/i],
          wide: [
            /^Ø§Ù„Ø£Ø­Ø¯/i,
            /^Ø§Ù„Ø§Ø«Ù†ÙŠÙ†/i,
            /^Ø§Ù„Ø«Ù„Ø§Ø«Ø§Ø¡/i,
            /^Ø§Ù„Ø£Ø±Ø¨Ø¹Ø§Ø¡/i,
            /^Ø§Ù„Ø®Ù…ÙŠØ³/i,
            /^Ø§Ù„Ø¬Ù…Ø¹Ø©/i,
            /^Ø§Ù„Ø³Ø¨Øª/i,
          ],
          any: [/^Ø£Ø­/i, /^Ø§Ø«/i, /^Ø«/i, /^Ø£Ø±/i, /^Ø®/i, /^Ø¬/i, /^Ø³/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
          any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mi/i,
            noon: /^no/i,
            morning: /morning/i,
            afternoon: /afternoon/i,
            evening: /evening/i,
            night: /night/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 142 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "bir saniyÉ™dÉ™n az",
            other: "{{count}} bir saniyÉ™dÉ™n az",
          },
          xSeconds: {
            one: "1 saniyÉ™",
            other: "{{count}} saniyÉ™",
          },
          halfAMinute: "yarÄ±m dÉ™qiqÉ™",
          lessThanXMinutes: {
            one: "bir dÉ™qiqÉ™dÉ™n az",
            other: "{{count}} bir dÉ™qiqÉ™dÉ™n az",
          },
          xMinutes: {
            one: "bir dÉ™qiqÉ™",
            other: "{{count}} dÉ™qiqÉ™",
          },
          aboutXHours: {
            one: "tÉ™xminÉ™n 1 saat",
            other: "tÉ™xminÉ™n {{count}} saat",
          },
          xHours: {
            one: "1 saat",
            other: "{{count}} saat",
          },
          xDays: {
            one: "1 gá¼n",
            other: "{{count}} gá¼n",
          },
          aboutXWeeks: {
            one: "tÉ™xminÉ™n 1 hÉ™ftÉ™",
            other: "tÉ™xminÉ™n {{count}} hÉ™ftÉ™",
          },
          xWeeks: {
            one: "1 hÉ™ftÉ™",
            other: "{{count}} hÉ™ftÉ™",
          },
          aboutXMonths: {
            one: "tÉ™xminÉ™n 1 ay",
            other: "tÉ™xminÉ™n {{count}} ay",
          },
          xMonths: {
            one: "1 ay",
            other: "{{count}} ay",
          },
          aboutXYears: {
            one: "tÉ™xminÉ™n 1 il",
            other: "tÉ™xminÉ™n {{count}} il",
          },
          xYears: {
            one: "1 il",
            other: "{{count}} il",
          },
          overXYears: {
            one: "1 ildÉ™n á§ox",
            other: "{{count}} ildÉ™n á§ox",
          },
          almostXYears: {
            one: "demÉ™k olar ki 1 il",
            other: "demÉ™k olar ki {{count}} il",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " É™vvÉ™l";
            } else {
              return result + " sonra";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 143 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM y 'il'",
          long: "do MMMM y 'il'",
          medium: "d MMM y 'il'",
          short: "dd.MM.yyyy",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}} - 'dÉ™'",
          long: "{{date}} {{time}} - 'dÉ™'",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 144 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'sonuncu' eeee p -'dÉ™'",
          yesterday: "'dá¼nÉ™n' p -'dÉ™'",
          today: "'bugá¼n' p -'dÉ™'",
          tomorrow: "'sabah' p -'dÉ™'",
          nextWeek: "eeee p -'dÉ™'",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 145 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["B", "A"],
          abbreviated: ["BC", "AD"],
          wide: ["Hz. Ä°sa'dan á¶ncÉ™", "Anno Domini"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: ["1ci kvartal", "2ci kvartal", "3cá¼ kvartal", "4cá¼ kvartal"], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Yan",
            "Fev",
            "Mar",
            "Apr",
            "May",
            "Ä°yun",
            "Ä°yul",
            "Avq",
            "Sen",
            "Okt",
            "Noy",
            "Dek",
          ],
          wide: [
            "Yanvar",
            "Fevral",
            "Mart",
            "Aprel",
            "May",
            "Ä°yun",
            "Ä°yul",
            "Avqust",
            "Sentyabr",
            "Oktyabr",
            "Noyabr",
            "Dekabr",
          ],
        };
        var dayValues = {
          narrow: ["B.", "B.e", "á‡.a", "á‡.", "C.a", "C.", "Åž."],
          short: ["B.", "B.e", "á‡.a", "á‡.", "C.a", "C.", "Åž."],
          abbreviated: [
            "Baz",
            "Baz.e",
            "á‡É™r.a",
            "á‡É™r",
            "Cá¼m.a",
            "Cá¼m",
            "ÅžÉ™",
          ],
          wide: [
            "Bazar",
            "Bazar ertÉ™si",
            "á‡É™rÅŸÉ™nbÉ™ axÅŸamÄ±",
            "á‡É™rÅŸÉ™nbÉ™",
            "Cá¼mÉ™ axÅŸamÄ±",
            "Cá¼mÉ™",
            "ÅžÉ™nbÉ™",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "gecÉ™yarÄ±",
            noon: "gá¼n",
            morning: "sÉ™hÉ™r",
            afternoon: "gá¼ndá¼z",
            evening: "axÅŸam",
            night: "gecÉ™",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "gecÉ™yarÄ±",
            noon: "gá¼n",
            morning: "sÉ™hÉ™r",
            afternoon: "gá¼ndá¼z",
            evening: "axÅŸam",
            night: "gecÉ™",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "gecÉ™yarÄ±",
            noon: "gá¼n",
            morning: "sÉ™hÉ™r",
            afternoon: "gá¼ndá¼z",
            evening: "axÅŸam",
            night: "gecÉ™",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "gecÉ™yarÄ±",
            noon: "gá¼n",
            morning: "sÉ™hÉ™r",
            afternoon: "gá¼ndá¼z",
            evening: "axÅŸam",
            night: "gecÉ™",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "gecÉ™yarÄ±",
            noon: "gá¼n",
            morning: "sÉ™hÉ™r",
            afternoon: "gá¼ndá¼z",
            evening: "axÅŸam",
            night: "gecÉ™",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "gecÉ™yarÄ±",
            noon: "gá¼n",
            morning: "sÉ™hÉ™r",
            afternoon: "gá¼ndá¼z",
            evening: "axÅŸam",
            night: "gecÉ™",
          },
        };
        var suffixes = {
          1: "-inci",
          5: "-inci",
          8: "-inci",
          70: "-inci",
          80: "-inci",
          2: "-nci",
          7: "-nci",
          20: "-nci",
          50: "-nci",
          3: "-á¼ncá¼",
          4: "-á¼ncá¼",
          100: "-á¼ncá¼",
          6: "-ncÄ±",
          9: "-uncu",
          10: "-uncu",
          30: "-uncu",
          60: "-Ä±ncÄ±",
          90: "-Ä±ncÄ±",
        };

        function getSuffix(number) {
          if (number === 0) {
            // special case for zero
            return number + "-Ä±ncÄ±";
          }

          var a = number % 10,
            b = (number % 100) - a,
            c = number >= 100 ? 100 : null;
          return suffixes[a] || suffixes[b] || suffixes[c];
        }

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          var suffix = getSuffix(number);
          return number + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 146 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern =
          /^(\d+)(-?(ci|inci|nci|uncu|á¼ncá¼|ncÄ±))?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(b|a)$/i,
          abbreviated:
            /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)$/i,
          wide: /^(Hz. Ä°sa'dan á¶ncÉ™|á¼mumi eradan É™vvÉ™l|anno domini|á¼mumi dá¶vr)$/i,
        };
        var parseEraPatterns = {
          any: [/^b$/i, /^(a|c)$/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]$/i,
          abbreviated: /^K[1234]$/i,
          wide: /^[1234](ci)? kvartal$/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[(?-i)yfmaisond]$/i,
          abbreviated:
            /^(Yan|Fev|Mar|Apr|May|Ä°yun|Ä°yul|Avq|Sen|Okt|Noy|Dek)$/i,
          wide: /^(Yanvar|Fevral|Mart|Aprel|May|Ä°yun|Ä°yul|Avgust|Sentyabr|Oktyabr|Noyabr|Dekabr)$/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^[(?-i)y]$/i,
            /^[(?-i)f]$/i,
            /^[(?-i)m]$/i,
            /^[(?-i)a]$/i,
            /^[(?-i)m]$/i,
            /^[(?-i)i]$/i,
            /^[(?-i)i]$/i,
            /^[(?-i)a]$/i,
            /^[(?-i)s]$/i,
            /^[(?-i)o]$/i,
            /^[(?-i)n]$/i,
            /^[(?-i)d]$/i,
          ],
          abbreviated: [
            /^Yan$/i,
            /^Fev$/i,
            /^Mar$/i,
            /^Apr$/i,
            /^May$/i,
            /^Ä°yun$/i,
            /^Ä°yul$/i,
            /^Avg$/i,
            /^Sen$/i,
            /^Okt$/i,
            /^Noy$/i,
            /^Dek$/i,
          ],
          wide: [
            /^Yanvar$/i,
            /^Fevral$/i,
            /^Mart$/i,
            /^Aprel$/i,
            /^May$/i,
            /^Ä°yun$/i,
            /^Ä°yul$/i,
            /^Avgust$/i,
            /^Sentyabr$/i,
            /^Oktyabr$/i,
            /^Noyabr$/i,
            /^Dekabr$/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(B\.|B\.e|á‡\.a|á‡\.|C\.a|C\.|Åž\.)$/i,
          short: /^(B\.|B\.e|á‡\.a|á‡\.|C\.a|C\.|Åž\.)$/i,
          abbreviated: /^(Baz\.e|á‡É™r|á‡É™r\.a|Cá¼m|Cá¼m\.a|ÅžÉ™)$/i,
          wide: /^(Bazar|Bazar ertÉ™si|á‡É™rÅŸÉ™nbÉ™ axÅŸamÄ±|á‡É™rÅŸÉ™nbÉ™|Cá¼mÉ™ axÅŸamÄ±|Cá¼mÉ™|ÅžÉ™nbÉ™)$/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^B\.$/i,
            /^B\.e$/i,
            /^á‡\.a$/i,
            /^á‡\.$/i,
            /^C\.a$/i,
            /^C\.$/i,
            /^Åž\.$/i,
          ],
          abbreviated: [
            /^Baz\.e$/i,
            /^á‡É™r$/i,
            /^á‡É™r\.a$/i,
            /^Cá¼m$/i,
            /^Cá¼m\.a$/i,
            /^ÅžÉ™$/i,
          ],
          wide: [
            /^Bazar$/i,
            /^Bazar ertÉ™si$/i,
            /^á‡É™rÅŸÉ™nbÉ™ axÅŸamÄ±$/i,
            /^á‡É™rÅŸÉ™nbÉ™$/i,
            /^Cá¼mÉ™ axÅŸamÄ±$/i,
            /^Cá¼mÉ™$/i,
            /^ÅžÉ™nbÉ™$/i,
          ],
          any: [
            /^B\.$/i,
            /^B\.e$/i,
            /^á‡\.a$/i,
            /^á‡\.$/i,
            /^C\.a$/i,
            /^C\.$/i,
            /^Åž\.$/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|gecÉ™yarÄ±|gá¼n|sÉ™hÉ™r|gá¼ndá¼z|axÅŸam|gecÉ™)$/i,
          any: /^(am|pm|a\.m\.|p\.m\.|AM|PM|gecÉ™yarÄ±|gá¼n|sÉ™hÉ™r|gá¼ndá¼z|axÅŸam|gecÉ™)$/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a$/i,
            pm: /^p$/i,
            midnight: /^gecÉ™yarÄ±$/i,
            noon: /^gá¼n$/i,
            morning: /sÉ™hÉ™r$/i,
            afternoon: /gá¼ndá¼z$/i,
            evening: /axÅŸam$/i,
            night: /gecÉ™$/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 147 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        function declension(scheme, count) {
          // scheme for count=1 exists
          if (scheme.one !== undefined && count === 1) {
            return scheme.one;
          }

          var rem10 = count % 10;
          var rem100 = count % 100; // 1, 21, 31, ...

          if (rem10 === 1 && rem100 !== 11) {
            return scheme.singularNominative.replace("{{count}}", count); // 2, 3, 4, 22, 23, 24, 32 ...
          } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
            return scheme.singularGenitive.replace("{{count}}", count); // 5, 6, 7, 8, 9, 10, 11, ...
          } else {
            return scheme.pluralGenitive.replace("{{count}}", count);
          }
        }

        function buildLocalizeTokenFn(scheme) {
          return function (count, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                if (scheme.future) {
                  return declension(scheme.future, count);
                } else {
                  return "Ð¿Ñ€Ð°Ð· " + declension(scheme.regular, count);
                }
              } else {
                if (scheme.past) {
                  return declension(scheme.past, count);
                } else {
                  return declension(scheme.regular, count) + " Ñ‚Ð°Ð¼Ñƒ";
                }
              }
            } else {
              return declension(scheme.regular, count);
            }
          };
        }

        var formatDistanceLocale = {
          lessThanXSeconds: buildLocalizeTokenFn({
            regular: {
              one: "Ð¼ÐµÐ½Ñˆ Ð·Ð° ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularNominative: "Ð¼ÐµÐ½Ñˆ Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularGenitive: "Ð¼ÐµÐ½Ñˆ Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              pluralGenitive: "Ð¼ÐµÐ½Ñˆ Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
            future: {
              one: "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularNominative:
                "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularGenitive:
                "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              pluralGenitive: "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
          }),
          xSeconds: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð°",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
            past: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ Ñ‚Ð°Ð¼Ñƒ",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹ Ñ‚Ð°Ð¼Ñƒ",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´ Ñ‚Ð°Ð¼Ñƒ",
            },
            future: {
              singularNominative: "Ð¿Ñ€Ð°Ð· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularGenitive: "Ð¿Ñ€Ð°Ð· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              pluralGenitive: "Ð¿Ñ€Ð°Ð· {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
          }),
          halfAMinute: function (_, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                return "Ð¿Ñ€Ð°Ð· Ð¿Ð°ÑžÑ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹";
              } else {
                return "Ð¿Ð°ÑžÑ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹ Ñ‚Ð°Ð¼Ñƒ";
              }
            }

            return "Ð¿Ð°ÑžÑ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹";
          },
          lessThanXMinutes: buildLocalizeTokenFn({
            regular: {
              one: "Ð¼ÐµÐ½Ñˆ Ð·Ð° Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ",
              singularNominative: "Ð¼ÐµÐ½Ñˆ Ð·Ð° {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ",
              singularGenitive: "Ð¼ÐµÐ½Ñˆ Ð·Ð° {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹",
              pluralGenitive: "Ð¼ÐµÐ½Ñˆ Ð·Ð° {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½",
            },
            future: {
              one: "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ",
              singularNominative:
                "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ",
              singularGenitive:
                "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹",
              pluralGenitive:
                "Ð¼ÐµÐ½Ñˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½",
            },
          }),
          xMinutes: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ð°",
              singularGenitive: "{{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹",
              pluralGenitive: "{{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½",
            },
            past: {
              singularNominative: "{{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ Ñ‚Ð°Ð¼Ñƒ",
              singularGenitive: "{{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹ Ñ‚Ð°Ð¼Ñƒ",
              pluralGenitive: "{{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½ Ñ‚Ð°Ð¼Ñƒ",
            },
            future: {
              singularNominative: "Ð¿Ñ€Ð°Ð· {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñƒ",
              singularGenitive: "Ð¿Ñ€Ð°Ð· {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½Ñ‹",
              pluralGenitive: "Ð¿Ñ€Ð°Ð· {{count}} Ñ…Ð²Ñ–Ð»Ñ–Ð½",
            },
          }),
          aboutXHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "ÐºÐ°Ð»Ñ {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹",
              singularGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½",
              pluralGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñƒ",
              singularGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹",
              pluralGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½",
            },
          }),
          xHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ð°",
              singularGenitive: "{{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹",
              pluralGenitive: "{{count}} Ð³Ð°Ð´Ð·Ñ–Ð½",
            },
            past: {
              singularNominative: "{{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñƒ Ñ‚Ð°Ð¼Ñƒ",
              singularGenitive: "{{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹ Ñ‚Ð°Ð¼Ñƒ",
              pluralGenitive: "{{count}} Ð³Ð°Ð´Ð·Ñ–Ð½ Ñ‚Ð°Ð¼Ñƒ",
            },
            future: {
              singularNominative: "Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñƒ",
              singularGenitive: "Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½Ñ‹",
              pluralGenitive: "Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð·Ñ–Ð½",
            },
          }),
          xDays: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð´Ð·ÐµÐ½ÑŒ",
              singularGenitive: "{{count}} Ð´Ð½Ñ–",
              pluralGenitive: "{{count}} Ð´Ð·Ñ‘Ð½",
            },
          }),
          aboutXWeeks: buildLocalizeTokenFn({
            regular: {
              singularNominative: "ÐºÐ°Ð»Ñ {{count}} Ð¼ÐµÑÑÑ†Ð°",
              // TODO
              singularGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð¼ÐµÑÑÑ†Ð°Ñž",
              // TODO
              pluralGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð¼ÐµÑÑÑ†Ð°Ñž", // TODO
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð¼ÐµÑÑÑ†",
              // TODO
              singularGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð¼ÐµÑÑÑ†Ñ‹",
              // TODO
              pluralGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð¼ÐµÑÑÑ†Ð°Ñž", // TODO
            },
          }),
          xWeeks: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¼ÐµÑÑÑ†",
              singularGenitive: "{{count}} Ð¼ÐµÑÑÑ†Ñ‹",
              pluralGenitive: "{{count}} Ð¼ÐµÑÑÑ†Ð°Ñž",
            },
          }),
          aboutXMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "ÐºÐ°Ð»Ñ {{count}} Ð¼ÐµÑÑÑ†Ð°",
              singularGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð¼ÐµÑÑÑ†Ð°Ñž",
              pluralGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð¼ÐµÑÑÑ†Ð°Ñž",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð¼ÐµÑÑÑ†",
              singularGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð¼ÐµÑÑÑ†Ñ‹",
              pluralGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð¼ÐµÑÑÑ†Ð°Ñž",
            },
          }),
          xMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¼ÐµÑÑÑ†",
              singularGenitive: "{{count}} Ð¼ÐµÑÑÑ†Ñ‹",
              pluralGenitive: "{{count}} Ð¼ÐµÑÑÑ†Ð°Ñž",
            },
          }),
          aboutXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "ÐºÐ°Ð»Ñ {{count}} Ð³Ð¾Ð´Ð°",
              singularGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð³Ð°Ð´Ð¾Ñž",
              pluralGenitive: "ÐºÐ°Ð»Ñ {{count}} Ð³Ð°Ð´Ð¾Ñž",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð¾Ð´",
              singularGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ñ‹",
              pluralGenitive:
                "Ð¿Ñ€Ñ‹Ð±Ð»Ñ–Ð·Ð½Ð° Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð¾Ñž",
            },
          }),
          xYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð³Ð¾Ð´",
              singularGenitive: "{{count}} Ð³Ð°Ð´Ñ‹",
              pluralGenitive: "{{count}} Ð³Ð°Ð´Ð¾Ñž",
            },
          }),
          overXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð±Ð¾Ð»ÑŒÑˆ Ð·Ð° {{count}} Ð³Ð¾Ð´",
              singularGenitive: "Ð±Ð¾Ð»ÑŒÑˆ Ð·Ð° {{count}} Ð³Ð°Ð´Ñ‹",
              pluralGenitive: "Ð±Ð¾Ð»ÑŒÑˆ Ð·Ð° {{count}} Ð³Ð°Ð´Ð¾Ñž",
            },
            future: {
              singularNominative:
                "Ð±Ð¾Ð»ÑŒÑˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð¾Ð´",
              singularGenitive:
                "Ð±Ð¾Ð»ÑŒÑˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ñ‹",
              pluralGenitive:
                "Ð±Ð¾Ð»ÑŒÑˆ, Ñ‡Ñ‹Ð¼ Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð¾Ñž",
            },
          }),
          almostXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð°Ð¼Ð°Ð»ÑŒ {{count}} Ð³Ð¾Ð´",
              singularGenitive: "Ð°Ð¼Ð°Ð»ÑŒ {{count}} Ð³Ð°Ð´Ñ‹",
              pluralGenitive: "Ð°Ð¼Ð°Ð»ÑŒ {{count}} Ð³Ð°Ð´Ð¾Ñž",
            },
            future: {
              singularNominative: "Ð°Ð¼Ð°Ð»ÑŒ Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð¾Ð´",
              singularGenitive: "Ð°Ð¼Ð°Ð»ÑŒ Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ñ‹",
              pluralGenitive: "Ð°Ð¼Ð°Ð»ÑŒ Ð¿Ñ€Ð°Ð· {{count}} Ð³Ð°Ð´Ð¾Ñž",
            },
          }),
        };

        function formatDistance(token, count, options) {
          options = options || {};
          return formatDistanceLocale[token](count, options);
        }

        module.exports = exports.default;

        /***/
      },
      /* 148 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM y 'Ð³.'",
          long: "d MMMM y 'Ð³.'",
          medium: "d MMM y 'Ð³.'",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          any: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "any",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 149 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var accusativeWeekdays = [
          "Ð½ÑÐ´Ð·ÐµÐ»ÑŽ",
          "Ð¿Ð°Ð½ÑÐ´Ð·ÐµÐ»Ð°Ðº",
          "Ð°ÑžÑ‚Ð¾Ñ€Ð°Ðº",
          "ÑÐµÑ€Ð°Ð´Ñƒ",
          "Ñ‡Ð°Ñ†Ð²ÐµÑ€",
          "Ð¿ÑÑ‚Ð½Ñ–Ñ†Ñƒ",
          "ÑÑƒÐ±Ð¾Ñ‚Ñƒ",
        ];

        function lastWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 5:
            case 6:
              return "'Ñƒ Ð¼Ñ–Ð½ÑƒÐ»ÑƒÑŽ " + weekday + " Ð°' p";

            case 1:
            case 2:
            case 4:
              return "'Ñƒ Ð¼Ñ–Ð½ÑƒÐ»Ñ‹ " + weekday + " Ð°' p";
          }
        }

        function thisWeek(day) {
          var weekday = accusativeWeekdays[day];
          return "'Ñƒ " + weekday + " Ð°' p";
        }

        function nextWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 5:
            case 6:
              return "'Ñƒ Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½ÑƒÑŽ " + weekday + " Ð°' p";

            case 1:
            case 2:
            case 4:
              return "'Ñƒ Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½Ñ‹ " + weekday + " Ð°' p";
          }
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'ÑƒÑ‡Ð¾Ñ€Ð° Ð°' p",
          today: "'ÑÑ‘Ð½Ð½Ñ Ð°' p",
          tomorrow: "'Ð·Ð°ÑžÑ‚Ñ€Ð° Ð°' p",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 150 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ð´Ð° Ð½.Ñ.", "Ð½.Ñ."],
          abbreviated: ["Ð´Ð° Ð½. Ñ.", "Ð½. Ñ."],
          wide: ["Ð´Ð° Ð½Ð°ÑˆÐ°Ð¹ ÑÑ€Ñ‹", "Ð½Ð°ÑˆÐ°Ð¹ ÑÑ€Ñ‹"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1-Ñ‹ ÐºÐ².", "2-Ñ– ÐºÐ².", "3-Ñ– ÐºÐ².", "4-Ñ‹ ÐºÐ²."],
          wide: [
            "1-Ñ‹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "2-Ñ– ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "3-Ñ– ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "4-Ñ‹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
          ],
        };
        var monthValues = {
          narrow: [
            "Ð¡",
            "Ð›",
            "Ð¡",
            "Ðš",
            "Ðœ",
            "Ð§",
            "Ð›",
            "Ð–",
            "Ð’",
            "Ðš",
            "Ð›",
            "Ð¡",
          ],
          abbreviated: [
            "ÑÑ‚ÑƒÐ´Ð·.",
            "Ð»ÑŽÑ‚.",
            "ÑÐ°Ðº.",
            "ÐºÑ€Ð°Ñ.",
            "Ð¼Ð°Ð¹",
            "Ñ‡ÑÑ€Ð².",
            "Ð»Ñ–Ð¿.",
            "Ð¶Ð½.",
            "Ð²ÐµÑ€.",
            "ÐºÐ°ÑÑ‚Ñ€.",
            "Ð»Ñ–ÑÑ‚.",
            "ÑÐ½ÐµÐ¶.",
          ],
          wide: [
            "ÑÑ‚ÑƒÐ´Ð·ÐµÐ½ÑŒ",
            "Ð»ÑŽÑ‚Ñ‹",
            "ÑÐ°ÐºÐ°Ð²Ñ–Ðº",
            "ÐºÑ€Ð°ÑÐ°Ð²Ñ–Ðº",
            "Ð¼Ð°Ð¹",
            "Ñ‡ÑÑ€Ð²ÐµÐ½ÑŒ",
            "Ð»Ñ–Ð¿ÐµÐ½ÑŒ",
            "Ð¶Ð½Ñ–Ð²ÐµÐ½ÑŒ",
            "Ð²ÐµÑ€Ð°ÑÐµÐ½ÑŒ",
            "ÐºÐ°ÑÑ‚Ñ€Ñ‹Ñ‡Ð½Ñ–Ðº",
            "Ð»Ñ–ÑÑ‚Ð°Ð¿Ð°Ð´",
            "ÑÐ½ÐµÐ¶Ð°Ð½ÑŒ",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "Ð¡",
            "Ð›",
            "Ð¡",
            "Ðš",
            "Ðœ",
            "Ð§",
            "Ð›",
            "Ð–",
            "Ð’",
            "Ðš",
            "Ð›",
            "Ð¡",
          ],
          abbreviated: [
            "ÑÑ‚ÑƒÐ´Ð·.",
            "Ð»ÑŽÑ‚.",
            "ÑÐ°Ðº.",
            "ÐºÑ€Ð°Ñ.",
            "Ð¼Ð°Ñ",
            "Ñ‡ÑÑ€Ð².",
            "Ð»Ñ–Ð¿.",
            "Ð¶Ð½.",
            "Ð²ÐµÑ€.",
            "ÐºÐ°ÑÑ‚Ñ€.",
            "Ð»Ñ–ÑÑ‚.",
            "ÑÐ½ÐµÐ¶.",
          ],
          wide: [
            "ÑÑ‚ÑƒÐ´Ð·ÐµÐ½Ñ",
            "Ð»ÑŽÑ‚Ð°Ð³Ð°",
            "ÑÐ°ÐºÐ°Ð²Ñ–ÐºÐ°",
            "ÐºÑ€Ð°ÑÐ°Ð²Ñ–ÐºÐ°",
            "Ð¼Ð°Ñ",
            "Ñ‡ÑÑ€Ð²ÐµÐ½Ñ",
            "Ð»Ñ–Ð¿ÐµÐ½Ñ",
            "Ð¶Ð½Ñ–ÑžÐ½Ñ",
            "Ð²ÐµÑ€Ð°ÑÐ½Ñ",
            "ÐºÐ°ÑÑ‚Ñ€Ñ‹Ñ‡Ð½Ñ–ÐºÐ°",
            "Ð»Ñ–ÑÑ‚Ð°Ð¿Ð°Ð´Ð°",
            "ÑÐ½ÐµÐ¶Ð½Ñ",
          ],
        };
        var dayValues = {
          narrow: ["Ð", "ÐŸ", "Ð", "Ð¡", "Ð§", "ÐŸ", "Ð¡"],
          short: ["Ð½Ð´", "Ð¿Ð½", "Ð°Ñž", "ÑÑ€", "Ñ‡Ñ†", "Ð¿Ñ‚", "ÑÐ±"],
          abbreviated: [
            "Ð½ÑÐ´Ð·",
            "Ð¿Ð°Ð½",
            "Ð°ÑžÑ‚",
            "ÑÐµÑ€",
            "Ñ‡Ð°Ñ†",
            "Ð¿ÑÑ‚",
            "ÑÑƒÐ±",
          ],
          wide: [
            "Ð½ÑÐ´Ð·ÐµÐ»Ñ",
            "Ð¿Ð°Ð½ÑÐ´Ð·ÐµÐ»Ð°Ðº",
            "Ð°ÑžÑ‚Ð¾Ñ€Ð°Ðº",
            "ÑÐµÑ€Ð°Ð´Ð°",
            "Ñ‡Ð°Ñ†Ð²ÐµÑ€",
            "Ð¿ÑÑ‚Ð½Ñ–Ñ†Ð°",
            "ÑÑƒÐ±Ð¾Ñ‚Ð°",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾ÑžÐ½.",
            noon: "Ð¿Ð¾ÑžÐ´.",
            morning: "Ñ€Ð°Ð½.",
            afternoon: "Ð´Ð·ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡",
          },
          abbreviated: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾ÑžÐ½.",
            noon: "Ð¿Ð¾ÑžÐ´.",
            morning: "Ñ€Ð°Ð½.",
            afternoon: "Ð´Ð·ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡",
          },
          wide: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾ÑžÐ½Ð°Ñ‡",
            noon: "Ð¿Ð¾ÑžÐ´Ð·ÐµÐ½ÑŒ",
            morning: "Ñ€Ð°Ð½Ñ–Ñ†Ð°",
            afternoon: "Ð´Ð·ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡Ð°Ñ€",
            night: "Ð½Ð¾Ñ‡",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾ÑžÐ½.",
            noon: "Ð¿Ð¾ÑžÐ´.",
            morning: "Ñ€Ð°Ð½.",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡Ñ‹",
          },
          abbreviated: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾ÑžÐ½.",
            noon: "Ð¿Ð¾ÑžÐ´.",
            morning: "Ñ€Ð°Ð½.",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡Ñ‹",
          },
          wide: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾ÑžÐ½Ð°Ñ‡",
            noon: "Ð¿Ð¾ÑžÐ´Ð·ÐµÐ½ÑŒ",
            morning: "Ñ€Ð°Ð½Ñ–Ñ†Ñ‹",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡Ð°Ñ€Ð°",
            night: "Ð½Ð¾Ñ‡Ñ‹",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var number = Number(dirtyNumber);
          var suffix;
          /** Though it's an incorrect ordinal form of a date we use it here for consistency with other similar locales (ru, uk)
           *  For date-month combinations should be used `d` formatter.
           *  Correct:   `d MMMM` (4 Ð²ÐµÑ€Ð°ÑÐ½Ñ)
           *  Incorrect: `do MMMM` (4-Ð³Ð° Ð²ÐµÑ€Ð°ÑÐ½Ñ)
           *
           *  But following the consistency leads to mistakes for literal uses of `do` formatter (ordinal day of month).
           *  So for phrase "5th day of month" (`do Ð´Ð·ÐµÐ½ÑŒ Ð¼ÐµÑÑÑ†Ð°`)
           *  library will produce:            `5-Ð³Ð° Ð´Ð·ÐµÐ½ÑŒ Ð¼ÐµÑÑÑ†Ð°`
           *  but correct spelling should be:  `5-Ñ‹ Ð´Ð·ÐµÐ½ÑŒ Ð¼ÐµÑÑÑ†Ð°`
           *
           *  So I guess there should be a stand-alone and a formatting version of "day of month" formatters
           */

          if (unit === "date") {
            suffix = "-Ð³Ð°";
          } else if (
            unit === "hour" ||
            unit === "minute" ||
            unit === "second"
          ) {
            suffix = "-Ñ";
          } else {
            suffix =
              (number % 10 === 2 || number % 10 === 3) &&
              number % 100 !== 12 &&
              number % 100 !== 13
                ? "-Ñ–"
                : "-Ñ‹";
          }

          return number + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "any",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 151 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern =
          /^(\d+)(-?(Ðµ|Ñ|Ð³Ð°|Ñ–|Ñ‹|Ð°Ðµ|Ð°Ñ|ÑÑ|ÑˆÑ‹|Ð³Ñ–|Ñ†Ñ–|Ñ‚Ñ‹|Ð¼Ñ‹))?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^((Ð´Ð° )?Ð½\.?\s?Ñ\.?)/i,
          abbreviated: /^((Ð´Ð° )?Ð½\.?\s?Ñ\.?)/i,
          wide: /^(Ð´Ð° Ð½Ð°ÑˆÐ°Ð¹ ÑÑ€Ñ‹|Ð½Ð°ÑˆÐ°Ð¹ ÑÑ€Ñ‹|Ð½Ð°ÑˆÐ° ÑÑ€Ð°)/i,
        };
        var parseEraPatterns = {
          any: [/^Ð´/i, /^Ð½/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234](-?[Ñ‹Ñ–]?)? ÐºÐ².?/i,
          wide: /^[1234](-?[Ñ‹Ñ–]?)? ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[ÑÐ»ÐºÐ¼Ñ‡Ð¶Ð²]/i,
          abbreviated:
            /^(ÑÑ‚ÑƒÐ´Ð·|Ð»ÑŽÑ‚|ÑÐ°Ðº|ÐºÑ€Ð°Ñ|Ð¼Ð°[Ð¹Ñ]|Ñ‡ÑÑ€Ð²|Ð»Ñ–Ð¿|Ð¶Ð½|Ð²ÐµÑ€|ÐºÐ°ÑÑ‚Ñ€|Ð»Ñ–ÑÑ‚|ÑÐ½ÐµÐ¶)\.?/i,
          wide: /^(ÑÑ‚ÑƒÐ´Ð·ÐµÐ½[ÑŒÑ]|Ð»ÑŽÑ‚(Ñ‹|Ð°Ð³Ð°)|ÑÐ°ÐºÐ°Ð²Ñ–ÐºÐ°?|ÐºÑ€Ð°ÑÐ°Ð²Ñ–ÐºÐ°?|Ð¼Ð°[Ð¹Ñ]|Ñ‡ÑÑ€Ð²ÐµÐ½[ÑŒÑ]|Ð»Ñ–Ð¿ÐµÐ½[ÑŒÑ]|Ð¶Ð½Ñ–(Ð²ÐµÐ½ÑŒ|ÑžÐ½Ñ)|Ð²ÐµÑ€Ð°Ñ(ÐµÐ½ÑŒ|Ð½Ñ)|ÐºÐ°ÑÑ‚Ñ€Ñ‹Ñ‡Ð½Ñ–ÐºÐ°?|Ð»Ñ–ÑÑ‚Ð°Ð¿Ð°Ð´Ð°?|ÑÐ½ÐµÐ¶(Ð°Ð½ÑŒ|Ð½Ñ))/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^Ñ/i,
            /^Ð»/i,
            /^Ñ/i,
            /^Ðº/i,
            /^Ð¼/i,
            /^Ñ‡/i,
            /^Ð»/i,
            /^Ð¶/i,
            /^Ð²/i,
            /^Ðº/i,
            /^Ð»/i,
            /^Ñ/i,
          ],
          any: [
            /^ÑÑ‚/i,
            /^Ð»ÑŽ/i,
            /^ÑÐ°/i,
            /^ÐºÑ€/i,
            /^Ð¼Ð°/i,
            /^Ñ‡/i,
            /^Ð»Ñ–Ð¿/i,
            /^Ð¶/i,
            /^Ð²/i,
            /^ÐºÐ°/i,
            /^Ð»Ñ–Ñ/i,
            /^ÑÐ½/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ð½Ð¿Ð°ÑÑ‡]/i,
          short:
            /^(Ð½Ð´|Ð½Ñ|Ð¿Ð½|Ð¿Ð°|Ð°Ñž|Ð°Ñ‚|ÑÑ€|ÑÐµ|Ñ‡Ñ†|Ñ‡Ð°|Ð¿Ñ‚|Ð¿Ñ|ÑÐ±|ÑÑƒ)\.?/i,
          abbreviated:
            /^(Ð½ÑÐ´Ð·?|Ð½Ð´Ð·|Ð¿Ð½Ð´|Ð¿Ð°Ð½|Ð°ÑžÑ‚|ÑÑ€Ð´|ÑÐµÑ€|Ñ‡Ñ†Ð²|Ñ‡Ð°Ñ†|Ð¿Ñ‚Ð½|Ð¿ÑÑ‚|ÑÑƒÐ±).?/i,
          wide: /^(Ð½ÑÐ´Ð·ÐµÐ»[ÑÑ–]|Ð¿Ð°Ð½ÑÐ´Ð·ÐµÐ»(Ð°Ðº|ÐºÐ°)|Ð°ÑžÑ‚Ð¾Ñ€(Ð°Ðº|ÐºÐ°)|ÑÐµÑ€Ð°Ð´[Ð°Ñ‹]|Ñ‡Ð°Ñ†Ð²(ÐµÑ€|ÑÑ€Ð³Ð°)|Ð¿ÑÑ‚Ð½Ñ–Ñ†[Ð°Ñ‹]|ÑÑƒÐ±Ð¾Ñ‚[Ð°Ñ‹])/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð½/i, /^Ð¿/i, /^Ð°/i, /^Ñ/i, /^Ñ‡/i, /^Ð¿/i, /^Ñ/i],
          any: [
            /^Ð½/i,
            /^Ð¿[Ð°Ð½]/i,
            /^Ð°/i,
            /^Ñ[ÐµÑ€]/i,
            /^Ñ‡/i,
            /^Ð¿[ÑÑ‚]/i,
            /^Ñ[ÑƒÐ±]/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^([Ð´Ð¿]Ð¿|Ð¿Ð¾ÑžÐ½\.?|Ð¿Ð¾ÑžÐ´\.?|Ñ€Ð°Ð½\.?|Ð´Ð·ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡\.?|Ð½Ð¾Ñ‡Ñ‹?)/i,
          abbreviated:
            /^([Ð´Ð¿]Ð¿|Ð¿Ð¾ÑžÐ½\.?|Ð¿Ð¾ÑžÐ´\.?|Ñ€Ð°Ð½\.?|Ð´Ð·ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡\.?|Ð½Ð¾Ñ‡Ñ‹?)/i,
          wide: /^([Ð´Ð¿]Ð¿|Ð¿Ð¾ÑžÐ½Ð°Ñ‡|Ð¿Ð¾ÑžÐ´Ð·ÐµÐ½ÑŒ|Ñ€Ð°Ð½Ñ–Ñ†[Ð°Ñ‹]|Ð´Ð·ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡Ð°Ñ€Ð°?|Ð½Ð¾Ñ‡Ñ‹?)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ð´Ð¿/i,
            pm: /^Ð¿Ð¿/i,
            midnight: /^Ð¿Ð¾ÑžÐ½/i,
            noon: /^Ð¿Ð¾ÑžÐ´/i,
            morning: /^Ñ€/i,
            afternoon: /^Ð´[Ð·Ð½]/i,
            evening: /^Ð²/i,
            night: /^Ð½/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 152 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Ð¿Ð¾-Ð¼Ð°Ð»ÐºÐ¾ Ð¾Ñ‚ ÑÐµÐºÑƒÐ½Ð´Ð°",
            other: "Ð¿Ð¾-Ð¼Ð°Ð»ÐºÐ¾ Ð¾Ñ‚ {{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
          },
          xSeconds: {
            one: "1 ÑÐµÐºÑƒÐ½Ð´Ð°",
            other: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
          },
          halfAMinute: "Ð¿Ð¾Ð»Ð¾Ð²Ð¸Ð½ Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
          lessThanXMinutes: {
            one: "Ð¿Ð¾-Ð¼Ð°Ð»ÐºÐ¾ Ð¾Ñ‚ Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
            other: "Ð¿Ð¾-Ð¼Ð°Ð»ÐºÐ¾ Ð¾Ñ‚ {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
          },
          xMinutes: {
            one: "1 Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
            other: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
          },
          aboutXHours: {
            one: "Ð¾ÐºÐ¾Ð»Ð¾ Ñ‡Ð°Ñ",
            other: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ñ‡Ð°ÑÐ°",
          },
          xHours: {
            one: "1 Ñ‡Ð°Ñ",
            other: "{{count}} Ñ‡Ð°ÑÐ°",
          },
          xDays: {
            one: "1 Ð´ÐµÐ½",
            other: "{{count}} Ð´Ð½Ð¸",
          },
          aboutXWeeks: {
            one: "Ð¾ÐºÐ¾Ð»Ð¾ ÑÐµÐ´Ð¼Ð¸Ñ†Ð°",
            other: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} ÑÐµÐ´Ð¼Ð¸Ñ†Ð¸",
          },
          xWeeks: {
            one: "1 ÑÐµÐ´Ð¼Ð¸Ñ†Ð°",
            other: "{{count}} ÑÐµÐ´Ð¼Ð¸Ñ†Ð¸",
          },
          aboutXMonths: {
            one: "Ð¾ÐºÐ¾Ð»Ð¾ Ð¼ÐµÑÐµÑ†",
            other: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð¼ÐµÑÐµÑ†Ð°",
          },
          xMonths: {
            one: "1 Ð¼ÐµÑÐµÑ†",
            other: "{{count}} Ð¼ÐµÑÐµÑ†Ð°",
          },
          aboutXYears: {
            one: "Ð¾ÐºÐ¾Ð»Ð¾ Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
          xYears: {
            one: "1 Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "{{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
          overXYears: {
            one: "Ð½Ð°Ð´ Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "Ð½Ð°Ð´ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
          almostXYears: {
            one: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "ÑÐ»ÐµÐ´ " + result;
            } else {
              return "Ð¿Ñ€ÐµÐ´Ð¸ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 153 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, dd MMMM yyyy",
          long: "dd MMMM yyyy",
          medium: "dd MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          any: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "any",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 154 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Adapted from the `ru` translation
        var weekdays = [
          "Ð½ÐµÐ´ÐµÐ»Ñ",
          "Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº",
          "Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº",
          "ÑÑ€ÑÐ´Ð°",
          "Ñ‡ÐµÑ‚Ð²ÑŠÑ€Ñ‚ÑŠÐº",
          "Ð¿ÐµÑ‚ÑŠÐº",
          "ÑÑŠÐ±Ð¾Ñ‚Ð°",
        ];

        function lastWeek(day) {
          var weekday = weekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 6:
              return "'Ð¼Ð¸Ð½Ð°Ð»Ð°Ñ‚Ð° " + weekday + " Ð²' p";

            case 1:
            case 2:
            case 4:
            case 5:
              return "'Ð¼Ð¸Ð½Ð°Ð»Ð¸Ñ " + weekday + " Ð²' p";
          }
        }

        function thisWeek(day) {
          var weekday = weekdays[day];

          if (
            day === 2
            /* Tue */
          ) {
            return "'Ð²ÑŠÐ² " + weekday + " Ð²' p";
          } else {
            return "'Ð² " + weekday + " Ð²' p";
          }
        }

        function nextWeek(day) {
          var weekday = weekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 6:
              return "'ÑÐ»ÐµÐ´Ð²Ð°Ñ‰Ð°Ñ‚Ð° " + weekday + " Ð²' p";

            case 1:
            case 2:
            case 4:
            case 5:
              return "'ÑÐ»ÐµÐ´Ð²Ð°Ñ‰Ð¸Ñ " + weekday + " Ð²' p";
          }
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'Ð²Ñ‡ÐµÑ€Ð° Ð²' p",
          today: "'Ð´Ð½ÐµÑ Ð²' p",
          tomorrow: "'ÑƒÑ‚Ñ€Ðµ Ð²' p",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 155 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ð¿Ñ€.Ð½.Ðµ.", "Ð½.Ðµ."],
          abbreviated: ["Ð¿Ñ€ÐµÐ´Ð¸ Ð½. Ðµ.", "Ð½. Ðµ."],
          wide: ["Ð¿Ñ€ÐµÐ´Ð¸ Ð½Ð¾Ð²Ð°Ñ‚Ð° ÐµÑ€Ð°", "Ð½Ð¾Ð²Ð°Ñ‚Ð° ÐµÑ€Ð°"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: [
            "1-Ð²Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑ.",
            "2-Ñ€Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑ.",
            "3-Ñ‚Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑ.",
            "4-Ñ‚Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑ.",
          ],
          wide: [
            "1-Ð²Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑÐµÑ‡Ð¸Ðµ",
            "2-Ñ€Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑÐµÑ‡Ð¸Ðµ",
            "3-Ñ‚Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑÐµÑ‡Ð¸Ðµ",
            "4-Ñ‚Ð¾ Ñ‚Ñ€Ð¸Ð¼ÐµÑÐµÑ‡Ð¸Ðµ",
          ],
        };
        var monthValues = {
          abbreviated: [
            "ÑÐ½Ñƒ",
            "Ñ„ÐµÐ²",
            "Ð¼Ð°Ñ€",
            "Ð°Ð¿Ñ€",
            "Ð¼Ð°Ð¹",
            "ÑŽÐ½Ð¸",
            "ÑŽÐ»Ð¸",
            "Ð°Ð²Ð³",
            "ÑÐµÐ¿",
            "Ð¾ÐºÑ‚",
            "Ð½Ð¾Ðµ",
            "Ð´ÐµÐº",
          ],
          wide: [
            "ÑÐ½ÑƒÐ°Ñ€Ð¸",
            "Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸",
            "Ð¼Ð°Ñ€Ñ‚",
            "Ð°Ð¿Ñ€Ð¸Ð»",
            "Ð¼Ð°Ð¹",
            "ÑŽÐ½Ð¸",
            "ÑŽÐ»Ð¸",
            "Ð°Ð²Ð³ÑƒÑÑ‚",
            "ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸",
            "Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸",
            "Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸",
            "Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸",
          ],
        };
        var dayValues = {
          narrow: ["Ð", "ÐŸ", "Ð’", "Ð¡", "Ð§", "ÐŸ", "Ð¡"],
          short: ["Ð½Ð´", "Ð¿Ð½", "Ð²Ñ‚", "ÑÑ€", "Ñ‡Ñ‚", "Ð¿Ñ‚", "ÑÐ±"],
          abbreviated: [
            "Ð½ÐµÐ´",
            "Ð¿Ð¾Ð½",
            "Ð²Ñ‚Ð¾",
            "ÑÑ€Ñ",
            "Ñ‡ÐµÑ‚",
            "Ð¿ÐµÑ‚",
            "ÑÑŠÐ±",
          ],
          wide: [
            "Ð½ÐµÐ´ÐµÐ»Ñ",
            "Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº",
            "Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº",
            "ÑÑ€ÑÐ´Ð°",
            "Ñ‡ÐµÑ‚Ð²ÑŠÑ€Ñ‚ÑŠÐº",
            "Ð¿ÐµÑ‚ÑŠÐº",
            "ÑÑŠÐ±Ð¾Ñ‚Ð°",
          ],
        };
        var dayPeriodValues = {
          wide: {
            am: "Ð¿Ñ€ÐµÐ´Ð¸ Ð¾Ð±ÑÐ´",
            pm: "ÑÐ»ÐµÐ´ Ð¾Ð±ÑÐ´",
            midnight: "Ð² Ð¿Ð¾Ð»ÑƒÐ½Ð¾Ñ‰",
            noon: "Ð½Ð° Ð¾Ð±ÑÐ´",
            morning: "ÑÑƒÑ‚Ñ€Ð¸Ð½Ñ‚Ð°",
            afternoon: "ÑÐ»ÐµÐ´Ð¾Ð±ÐµÐ´",
            evening: "Ð²ÐµÑ‡ÐµÑ€Ñ‚Ð°",
            night: "Ð¿Ñ€ÐµÐ· Ð½Ð¾Ñ‰Ñ‚Ð°",
          },
        };

        function isFeminine(unit) {
          return (
            unit === "year" ||
            unit === "week" ||
            unit === "minute" ||
            unit === "second"
          );
        }

        function isNeuter(unit) {
          return unit === "quarter";
        }

        function numberWithSuffix(number, unit, masculine, feminine, neuter) {
          var suffix = isNeuter(unit)
            ? neuter
            : isFeminine(unit)
            ? feminine
            : masculine;
          return number + "-" + suffix;
        }

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var number = Number(dirtyNumber);

          if (number === 0) {
            return numberWithSuffix(0, unit, "ÐµÐ²", "ÐµÐ²Ð°", "ÐµÐ²Ð¾");
          } else if (number % 1000 === 0) {
            return numberWithSuffix(number, unit, "ÐµÐ½", "Ð½Ð°", "Ð½Ð¾");
          } else if (number % 100 === 0) {
            return numberWithSuffix(number, unit, "Ñ‚ÐµÐ½", "Ñ‚Ð½Ð°", "Ñ‚Ð½Ð¾");
          }

          var rem100 = number % 100;

          if (rem100 > 20 || rem100 < 10) {
            switch (rem100 % 10) {
              case 1:
                return numberWithSuffix(number, unit, "Ð²Ð¸", "Ð²Ð°", "Ð²Ð¾");

              case 2:
                return numberWithSuffix(number, unit, "Ñ€Ð¸", "Ñ€Ð°", "Ñ€Ð¾");

              case 7:
              case 8:
                return numberWithSuffix(number, unit, "Ð¼Ð¸", "Ð¼Ð°", "Ð¼Ð¾");
            }
          }

          return numberWithSuffix(number, unit, "Ñ‚Ð¸", "Ñ‚Ð°", "Ñ‚Ð¾");
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 156 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern =
          /^(\d+)(-?[Ð²Ñ€Ð¼Ñ‚][Ð°Ð¸]|-?Ñ‚?(ÐµÐ½|Ð½Ð°)|-?(ÐµÐ²|ÐµÐ²Ð°))?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^((Ð¿Ñ€)?Ð½\.?\s?Ðµ\.?)/i,
          abbreviated: /^((Ð¿Ñ€)?Ð½\.?\s?Ðµ\.?)/i,
          wide: /^(Ð¿Ñ€ÐµÐ´Ð¸ Ð½Ð¾Ð²Ð°Ñ‚Ð° ÐµÑ€Ð°|Ð½Ð¾Ð²Ð°Ñ‚Ð° ÐµÑ€Ð°|Ð½Ð¾Ð²Ð° ÐµÑ€Ð°)/i,
        };
        var parseEraPatterns = {
          any: [/^Ð¿/i, /^Ð½/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234](-?[Ð²Ñ€Ñ‚]?o?)? Ñ‚Ñ€Ð¸Ð¼ÐµÑ.?/i,
          wide: /^[1234](-?[Ð²Ñ€Ñ‚]?Ð¾?)? Ñ‚Ñ€Ð¸Ð¼ÐµÑÐµÑ‡Ð¸Ðµ/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchDayPatterns = {
          narrow: /^[Ð½Ð¿Ð²ÑÑ‡]/i,
          short: /^(Ð½Ð´|Ð¿Ð½|Ð²Ñ‚|ÑÑ€|Ñ‡Ñ‚|Ð¿Ñ‚|ÑÐ±)/i,
          abbreviated: /^(Ð½ÐµÐ´|Ð¿Ð¾Ð½|Ð²Ñ‚Ð¾|ÑÑ€Ñ|Ñ‡ÐµÑ‚|Ð¿ÐµÑ‚|ÑÑŠÐ±)/i,
          wide: /^(Ð½ÐµÐ´ÐµÐ»Ñ|Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº|Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº|ÑÑ€ÑÐ´Ð°|Ñ‡ÐµÑ‚Ð²ÑŠÑ€Ñ‚ÑŠÐº|Ð¿ÐµÑ‚ÑŠÐº|ÑÑŠÐ±Ð¾Ñ‚Ð°)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð½/i, /^Ð¿/i, /^Ð²/i, /^Ñ/i, /^Ñ‡/i, /^Ð¿/i, /^Ñ/i],
          any: [
            /^Ð½[ÐµÐ´]/i,
            /^Ð¿[Ð¾Ð½]/i,
            /^Ð²Ñ‚/i,
            /^ÑÑ€/i,
            /^Ñ‡[ÐµÑ‚]/i,
            /^Ð¿[ÐµÑ‚]/i,
            /^Ñ[ÑŠÐ±]/i,
          ],
        };
        var matchMonthPatterns = {
          abbreviated:
            /^(ÑÐ½Ñƒ|Ñ„ÐµÐ²|Ð¼Ð°Ñ€|Ð°Ð¿Ñ€|Ð¼Ð°Ð¹|ÑŽÐ½Ð¸|ÑŽÐ»Ð¸|Ð°Ð²Ð³|ÑÐµÐ¿|Ð¾ÐºÑ‚|Ð½Ð¾Ðµ|Ð´ÐµÐº)/i,
          wide: /^(ÑÐ½ÑƒÐ°Ñ€Ð¸|Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸|Ð¼Ð°Ñ€Ñ‚|Ð°Ð¿Ñ€Ð¸Ð»|Ð¼Ð°Ð¹|ÑŽÐ½Ð¸|ÑŽÐ»Ð¸|Ð°Ð²Ð³ÑƒÑÑ‚|ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸|Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸|Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸|Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸)/i,
        };
        var parseMonthPatterns = {
          any: [
            /^Ñ/i,
            /^Ñ„/i,
            /^Ð¼Ð°Ñ€/i,
            /^Ð°Ð¿/i,
            /^Ð¼Ð°Ð¹/i,
            /^ÑŽÐ½/i,
            /^ÑŽÐ»/i,
            /^Ð°Ð²/i,
            /^ÑÐµ/i,
            /^Ð¾ÐºÑ‚/i,
            /^Ð½Ð¾/i,
            /^Ð´Ðµ/i,
          ],
        };
        var matchDayPeriodPatterns = {
          any: /^(Ð¿Ñ€ÐµÐ´Ð¸ Ð¾|ÑÐ»ÐµÐ´ Ð¾|Ð² Ð¿Ð¾|Ð½Ð° Ð¾|Ð¿Ñ€ÐµÐ·|Ð²ÐµÑ‡|ÑÑƒÑ‚|ÑÐ»ÐµÐ´Ð¾)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ð¿Ñ€ÐµÐ´Ð¸ Ð¾/i,
            pm: /^ÑÐ»ÐµÐ´ Ð¾/i,
            midnight: /^Ð² Ð¿Ð¾Ð»/i,
            noon: /^Ð½Ð° Ð¾Ð±/i,
            morning: /^ÑÑƒÑ‚/i,
            afternoon: /^ÑÐ»ÐµÐ´Ð¾/i,
            evening: /^Ð²ÐµÑ‡/i,
            night: /^Ð¿Ñ€ÐµÐ· Ð½/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 157 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        var _index = _interopRequireDefault(__webpack_require__(61));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "à¦ªà§à¦°à¦¾à§Ÿ à§§ à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
            other: "à¦ªà§à¦°à¦¾à§Ÿ {{count}} à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
          },
          xSeconds: {
            one: "à§§ à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
            other: "{{count}} à¦¸à§‡à¦•à§‡à¦¨à§à¦¡",
          },
          halfAMinute: "à¦†à¦§ à¦®à¦¿à¦¨à¦¿à¦Ÿ",
          lessThanXMinutes: {
            one: "à¦ªà§à¦°à¦¾à§Ÿ à§§ à¦®à¦¿à¦¨à¦¿à¦Ÿ",
            other: "à¦ªà§à¦°à¦¾à§Ÿ {{count}} à¦®à¦¿à¦¨à¦¿à¦Ÿ",
          },
          xMinutes: {
            one: "à§§ à¦®à¦¿à¦¨à¦¿à¦Ÿ",
            other: "{{count}} à¦®à¦¿à¦¨à¦¿à¦Ÿ",
          },
          aboutXHours: {
            one: "à¦ªà§à¦°à¦¾à§Ÿ à§§ à¦˜à¦¨à§à¦Ÿà¦¾",
            other: "à¦ªà§à¦°à¦¾à§Ÿ {{count}} à¦˜à¦¨à§à¦Ÿà¦¾",
          },
          xHours: {
            one: "à§§ à¦˜à¦¨à§à¦Ÿà¦¾",
            other: "{{count}} à¦˜à¦¨à§à¦Ÿà¦¾",
          },
          xDays: {
            one: "à§§ à¦¦à¦¿à¦¨",
            other: "{{count}} à¦¦à¦¿à¦¨",
          },
          aboutXWeeks: {
            one: "à¦ªà§à¦°à¦¾à§Ÿ à§§ à¦¸à¦ªà§à¦¤à¦¾à¦¹",
            other: "à¦ªà§à¦°à¦¾à§Ÿ {{count}} à¦¸à¦ªà§à¦¤à¦¾à¦¹",
          },
          xWeeks: {
            one: "à§§ à¦¸à¦ªà§à¦¤à¦¾à¦¹",
            other: "{{count}} à¦¸à¦ªà§à¦¤à¦¾à¦¹",
          },
          aboutXMonths: {
            one: "à¦ªà§à¦°à¦¾à§Ÿ à§§ à¦®à¦¾à¦¸",
            other: "à¦ªà§à¦°à¦¾à§Ÿ {{count}} à¦®à¦¾à¦¸",
          },
          xMonths: {
            one: "à§§ à¦®à¦¾à¦¸",
            other: "{{count}} à¦®à¦¾à¦¸",
          },
          aboutXYears: {
            one: "à¦ªà§à¦°à¦¾à§Ÿ à§§ à¦¬à¦›à¦°",
            other: "à¦ªà§à¦°à¦¾à§Ÿ {{count}} à¦¬à¦›à¦°",
          },
          xYears: {
            one: "à§§ à¦¬à¦›à¦°",
            other: "{{count}} à¦¬à¦›à¦°",
          },
          overXYears: {
            one: "à§§ à¦¬à¦›à¦°à§‡à¦° à¦¬à§‡à¦¶à¦¿",
            other: "{{count}} à¦¬à¦›à¦°à§‡à¦° à¦¬à§‡à¦¶à¦¿",
          },
          almostXYears: {
            one: "à¦ªà§à¦°à¦¾à§Ÿ à§§ à¦¬à¦›à¦°",
            other: "à¦ªà§à¦°à¦¾à§Ÿ {{count}} à¦¬à¦›à¦°",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              _index.default.numberToLocale(count)
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " à¦à¦° à¦®à¦§à§à¦¯à§‡";
            } else {
              return result + " à¦†à¦—à§‡";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 158 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}} 'à¦¸à¦®à§Ÿ'",
          long: "{{date}} {{time}} 'à¦¸à¦®à§Ÿ'",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 159 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'à¦—à¦¤' eeee 'à¦¸à¦®à§Ÿ' p",
          yesterday: "'à¦—à¦¤à¦•à¦¾à¦²' 'à¦¸à¦®à§Ÿ' p",
          today: "'à¦†à¦œ' 'à¦¸à¦®à§Ÿ' p",
          tomorrow: "'à¦†à¦—à¦¾à¦®à§€à¦•à¦¾à¦²' 'à¦¸à¦®à§Ÿ' p",
          nextWeek: "eeee 'à¦¸à¦®à§Ÿ' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 160 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern =
          /^(\d+)(à¦®|à§Ÿ|à¦°à§à¦¥|à¦·à§à¦ |à¦¶à§‡|à¦‡|à¦¤à¦®)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(à¦–à§à¦°à¦¿à¦ƒà¦ªà§‚à¦ƒ|à¦–à§à¦°à¦¿à¦ƒ)/i,
          abbreviated: /^(à¦–à§à¦°à¦¿à¦ƒà¦ªà§‚à¦°à§à¦¬|à¦–à§à¦°à¦¿à¦ƒ)/i,
          wide: /^(à¦–à§à¦°à¦¿à¦¸à§à¦Ÿà¦ªà§‚à¦°à§à¦¬|à¦–à§à¦°à¦¿à¦¸à§à¦Ÿà¦¾à¦¬à§à¦¦)/i,
        };
        var parseEraPatterns = {
          narrow: [/^à¦–à§à¦°à¦¿à¦ƒà¦ªà§‚à¦ƒ/i, /^à¦–à§à¦°à¦¿à¦ƒ/i],
          abbreviated: [/^à¦–à§à¦°à¦¿à¦ƒà¦ªà§‚à¦°à§à¦¬/i, /^à¦–à§à¦°à¦¿à¦ƒ/i],
          wide: [
            /^à¦–à§à¦°à¦¿à¦¸à§à¦Ÿà¦ªà§‚à¦°à§à¦¬/i,
            /^à¦–à§à¦°à¦¿à¦¸à§à¦Ÿà¦¾à¦¬à§à¦¦/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[à§§à§¨à§©à§ª]/i,
          abbreviated: /^[à§§à§¨à§©à§ª]à¦¤à§à¦°à§ˆ/i,
          wide: /^[à§§à§¨à§©à§ª](à¦®|à§Ÿ|à¦°à§à¦¥)? à¦¤à§à¦°à§ˆà¦®à¦¾à¦¸à¦¿à¦•/i,
        };
        var parseQuarterPatterns = {
          any: [/à§§/i, /à§¨/i, /à§©/i, /à§ª/i],
        };
        var matchMonthPatterns = {
          narrow:
            /^(à¦œà¦¾à¦¨à§|à¦«à§‡à¦¬à§à¦°à§|à¦®à¦¾à¦°à§à¦š|à¦à¦ªà§à¦°à¦¿à¦²|à¦®à§‡|à¦œà§à¦¨|à¦œà§à¦²à¦¾à¦‡|à¦†à¦—à¦¸à§à¦Ÿ|à¦¸à§‡à¦ªà§à¦Ÿ|à¦…à¦•à§à¦Ÿà§‹|à¦¨à¦­à§‡|à¦¡à¦¿à¦¸à§‡)/i,
          abbreviated:
            /^(à¦œà¦¾à¦¨à§|à¦«à§‡à¦¬à§à¦°à§|à¦®à¦¾à¦°à§à¦š|à¦à¦ªà§à¦°à¦¿à¦²|à¦®à§‡|à¦œà§à¦¨|à¦œà§à¦²à¦¾à¦‡|à¦†à¦—à¦¸à§à¦Ÿ|à¦¸à§‡à¦ªà§à¦Ÿ|à¦…à¦•à§à¦Ÿà§‹|à¦¨à¦­à§‡|à¦¡à¦¿à¦¸à§‡)/i,
          wide: /^(à¦œà¦¾à¦¨à§à§Ÿà¦¾à¦°à¦¿|à¦«à§‡à¦¬à§à¦°à§à§Ÿà¦¾à¦°à¦¿|à¦®à¦¾à¦°à§à¦š|à¦à¦ªà§à¦°à¦¿à¦²|à¦®à§‡|à¦œà§à¦¨|à¦œà§à¦²à¦¾à¦‡|à¦†à¦—à¦¸à§à¦Ÿ|à¦¸à§‡à¦ªà§à¦Ÿà§‡à¦®à§à¦¬à¦°|à¦…à¦•à§à¦Ÿà§‹à¦¬à¦°|à¦¨à¦­à§‡à¦®à§à¦¬à¦°|à¦¡à¦¿à¦¸à§‡à¦®à§à¦¬à¦°)/i,
        };
        var parseMonthPatterns = {
          any: [
            /^à¦œà¦¾à¦¨à§/i,
            /^à¦«à§‡à¦¬à§à¦°à§/i,
            /^à¦®à¦¾à¦°à§à¦š/i,
            /^à¦à¦ªà§à¦°à¦¿à¦²/i,
            /^à¦®à§‡/i,
            /^à¦œà§à¦¨/i,
            /^à¦œà§à¦²à¦¾à¦‡/i,
            /^à¦†à¦—à¦¸à§à¦Ÿ/i,
            /^à¦¸à§‡à¦ªà§à¦Ÿ/i,
            /^à¦…à¦•à§à¦Ÿà§‹/i,
            /^à¦¨à¦­à§‡/i,
            /^à¦¡à¦¿à¦¸à§‡/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(à¦°|à¦¸à§‹|à¦®|à¦¬à§|à¦¬à§ƒ|à¦¶à§|à¦¶)+/i,
          short:
            /^(à¦°à¦¬à¦¿|à¦¸à§‹à¦®|à¦®à¦™à§à¦—à¦²|à¦¬à§à¦§|à¦¬à§ƒà¦¹|à¦¶à§à¦•à§à¦°|à¦¶à¦¨à¦¿)+/i,
          abbreviated:
            /^(à¦°à¦¬à¦¿|à¦¸à§‹à¦®|à¦®à¦™à§à¦—à¦²|à¦¬à§à¦§|à¦¬à§ƒà¦¹|à¦¶à§à¦•à§à¦°|à¦¶à¦¨à¦¿)+/i,
          wide: /^(à¦°à¦¬à¦¿à¦¬à¦¾à¦°|à¦¸à§‹à¦®à¦¬à¦¾à¦°|à¦®à¦™à§à¦—à¦²à¦¬à¦¾à¦°|à¦¬à§à¦§à¦¬à¦¾à¦°|à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à¦¿à¦¬à¦¾à¦° |à¦¶à§à¦•à§à¦°à¦¬à¦¾à¦°|à¦¶à¦¨à¦¿à¦¬à¦¾à¦°)+/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^à¦°/i,
            /^à¦¸à§‹/i,
            /^à¦®/i,
            /^à¦¬à§/i,
            /^à¦¬à§ƒ/i,
            /^à¦¶à§/i,
            /^à¦¶/i,
          ],
          short: [
            /^à¦°à¦¬à¦¿/i,
            /^à¦¸à§‹à¦®/i,
            /^à¦®à¦™à§à¦—à¦²/i,
            /^à¦¬à§à¦§/i,
            /^à¦¬à§ƒà¦¹/i,
            /^à¦¶à§à¦•à§à¦°/i,
            /^à¦¶à¦¨à¦¿/i,
          ],
          abbreviated: [
            /^à¦°à¦¬à¦¿/i,
            /^à¦¸à§‹à¦®/i,
            /^à¦®à¦™à§à¦—à¦²/i,
            /^à¦¬à§à¦§/i,
            /^à¦¬à§ƒà¦¹/i,
            /^à¦¶à§à¦•à§à¦°/i,
            /^à¦¶à¦¨à¦¿/i,
          ],
          wide: [
            /^à¦°à¦¬à¦¿à¦¬à¦¾à¦°/i,
            /^à¦¸à§‹à¦®à¦¬à¦¾à¦°/i,
            /^à¦®à¦™à§à¦—à¦²à¦¬à¦¾à¦°/i,
            /^à¦¬à§à¦§à¦¬à¦¾à¦°/i,
            /^à¦¬à§ƒà¦¹à¦¸à§à¦ªà¦¤à¦¿à¦¬à¦¾à¦° /i,
            /^à¦¶à§à¦•à§à¦°à¦¬à¦¾à¦°/i,
            /^à¦¶à¦¨à¦¿à¦¬à¦¾à¦°/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(à¦ªà§‚|à¦…à¦ª|à¦®à¦§à§à¦¯à¦°à¦¾à¦¤|à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨|à¦¸à¦•à¦¾à¦²|à¦¬à¦¿à¦•à¦¾à¦²|à¦¸à¦¨à§à¦§à§à¦¯à¦¾|à¦°à¦¾à¦¤)/i,
          abbreviated:
            /^(à¦ªà§‚à¦°à§à¦¬à¦¾à¦¹à§à¦¨|à¦…à¦ªà¦°à¦¾à¦¹à§à¦¨|à¦®à¦§à§à¦¯à¦°à¦¾à¦¤|à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨|à¦¸à¦•à¦¾à¦²|à¦¬à¦¿à¦•à¦¾à¦²|à¦¸à¦¨à§à¦§à§à¦¯à¦¾|à¦°à¦¾à¦¤)/i,
          wide: /^(à¦ªà§‚à¦°à§à¦¬à¦¾à¦¹à§à¦¨|à¦…à¦ªà¦°à¦¾à¦¹à§à¦¨|à¦®à¦§à§à¦¯à¦°à¦¾à¦¤|à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨|à¦¸à¦•à¦¾à¦²|à¦¬à¦¿à¦•à¦¾à¦²|à¦¸à¦¨à§à¦§à§à¦¯à¦¾|à¦°à¦¾à¦¤)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^à¦ªà§‚/i,
            pm: /^à¦…à¦ª/i,
            midnight: /^à¦®à¦§à§à¦¯à¦°à¦¾à¦¤/i,
            noon: /^à¦®à¦§à§à¦¯à¦¾à¦¹à§à¦¨/i,
            morning: /à¦¸à¦•à¦¾à¦²/i,
            afternoon: /à¦¬à¦¿à¦•à¦¾à¦²/i,
            evening: /à¦¸à¦¨à§à¦§à§à¦¯à¦¾/i,
            night: /à¦°à¦¾à¦¤/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 161 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        /**
         * Davant de les xifres que es diuen amb vocal inicial, 1 i 11, s'apostrofen els articles el i la i la preposiciá³ de igual que si estiguessin escrits amb lletres.
         *    l'1 de juliol ('l'u')
         *    l'11 de novembre ('l'onze')
         *    l'11a clá usula del contracte ('l'onzena')
         *    la contractaciá³ d'11 jugadors ('d'onze')
         *    l'aval d'11.000 socis ('d'onze mil')
         *
         * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=apostrofaci%25F3+davant+xifres&action=Principal&method=detall_completa&numPagina=1&idHit=11236&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=11236&titol=apostrofaci%F3%20davant%20de%20xifres%20%2F%20apostrofaci%F3%20davant%20de%201%20i%2011&numeroResultat=1&clickLink=detall&tipusCerca=cerca.normes
         */
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "menys d'un segon",
            eleven: "menys d'onze segons",
            other: "menys de {{count}} segons",
          },
          xSeconds: {
            one: "1 segon",
            other: "{{count}} segons",
          },
          halfAMinute: "mig minut",
          lessThanXMinutes: {
            one: "menys d'un minut",
            eleven: "menys d'onze minuts",
            other: "menys de {{count}} minuts",
          },
          xMinutes: {
            one: "1 minut",
            other: "{{count}} minuts",
          },
          aboutXHours: {
            one: "aproximadament una hora",
            other: "aproximadament {{count}} hores",
          },
          xHours: {
            one: "1 hora",
            other: "{{count}} hores",
          },
          xDays: {
            one: "1 dia",
            other: "{{count}} dies",
          },
          aboutXWeeks: {
            one: "aproximadament una setmana",
            other: "aproximadament {{count}} setmanes",
          },
          xWeeks: {
            one: "1 setmana",
            other: "{{count}} setmanes",
          },
          aboutXMonths: {
            one: "aproximadament un mes",
            other: "aproximadament {{count}} mesos",
          },
          xMonths: {
            one: "1 mes",
            other: "{{count}} mesos",
          },
          aboutXYears: {
            one: "aproximadament un any",
            other: "aproximadament {{count}} anys",
          },
          xYears: {
            one: "1 any",
            other: "{{count}} anys",
          },
          overXYears: {
            one: "má©s d'un any",
            eleven: "má©s d'onze anys",
            other: "má©s de {{count}} anys",
          },
          almostXYears: {
            one: "gairebá© un any",
            other: "gairebá© {{count}} anys",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 11 && formatDistanceLocale[token].eleven) {
            result = formatDistanceLocale[token].eleven;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "en " + result;
            } else {
              return "fa " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 162 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d 'de' MMMM y",
          long: "d 'de' MMMM y",
          medium: "d MMM y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'a les' {{time}}",
          long: "{{date}} 'a les' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 163 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'el' eeee 'passat a la' LT",
          yesterday: "'ahir a la' p",
          today: "'avui a la' p",
          tomorrow: "'demá  a la' p",
          nextWeek: "eeee 'a la' p",
          other: "P",
        };
        var formatRelativeLocalePlural = {
          lastWeek: "'el' eeee 'passat a les' p",
          yesterday: "'ahir a les' p",
          today: "'avui a les' p",
          tomorrow: "'demá  a les' p",
          nextWeek: "eeee 'a les' p",
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          if (date.getUTCHours() !== 1) {
            return formatRelativeLocalePlural[token];
          }

          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 164 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * General information
         * Reference: https://aplicacions.llengua.gencat.cat
         * Reference: https://www.uoc.edu/portal/ca/servei-linguistic/convencions/abreviacions/simbols/simbols-habituals.html
         */

        /**
         * Abans de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abans+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6876&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6876&titol=abans%20de%20Crist%20(abreviatura)%20/%20abans%20de%20Crist%20(sigla)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes
         * Desprest de Crist: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=despr%E9s+de+crist&action=Principal&method=detall_completa&numPagina=1&idHit=6879&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=6879&titol=despr%E9s%20de%20Crist%20(sigla)%20/%20despr%E9s%20de%20Crist%20(abreviatura)&numeroResultat=1&clickLink=detall&tipusCerca=cerca.fitxes
         */
        var eraValues = {
          narrow: ["aC", "dC"],
          abbreviated: ["a. de C.", "d. de C."],
          wide: ["abans de Crist", "desprá©s de Crist"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["T1", "T2", "T3", "T4"],
          wide: [
            "1r trimestre",
            "2n trimestre",
            "3r trimestre",
            "4t trimestre",
          ],
          /**
           * Dins d'un text convá© fer servir la forma sencera dels mesos, ja que sempre á©s má©s clar el mot sencer que l'abreviatura, encara que aquesta sigui forá§a coneguda.
           * Cal reservar, doncs, les abreviatures per a les llistes o classificacions, els grá fics, les taules o quadres estadá­stics, els textos publicitaris, etc.
           *
           * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviacions+mesos&action=Principal&method=detall_completa&numPagina=1&idHit=8402&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8402&titol=abreviatures%20dels%20mesos%20de%20l%27any&numeroResultat=5&clickLink=detall&tipusCerca=cerca.fitxes
           */
        };
        var monthValues = {
          narrow: [
            "GN",
            "FB",
            "Má‡",
            "AB",
            "MG",
            "JN",
            "JL",
            "AG",
            "ST",
            "OC",
            "NV",
            "DS",
          ],

          /**
           * Les abreviatures dels mesos de l'any es formen seguint una de les normes generals de formaciá³ d'abreviatures.
           * S'escriu la primera sá­lÂ·laba i les consonants de la sá­lÂ·laba segá¼ent anteriors a la primera vocal.
           * Els mesos de mará§, maig i juny no s'abreugen perquá¨ sá³n paraules d'una sola sá­lÂ·laba.
           */
          abbreviated: [
            "gen.",
            "febr.",
            "mará§",
            "abr.",
            "maig",
            "juny",
            "jul.",
            "ag.",
            "set.",
            "oct.",
            "nov.",
            "des.",
          ],
          wide: [
            "gener",
            "febrer",
            "mará§",
            "abril",
            "maig",
            "juny",
            "juliol",
            "agost",
            "setembre",
            "octubre",
            "novembre",
            "desembre",
          ],
          /**
           * Les abreviatures dels dies de la setmana comencen totes amb la lletra d.
           * Tot seguit porten la consonant segá¼ent a la i, excepte en el cas de dimarts, dimecres i diumenge, en quá¨ aquesta consonant á©s la m i, per tant, hi podria haver confusiá³.
           * Per evitar-ho, s'ha substituá¯t la m per una t (en el cas de dimarts), una c (en el cas de dimecres) i una g (en el cas de diumenge), respectivament.
           *
           * Seguint la norma general d'áºs de les abreviatures, les dels dies de la setmana sempre porten punt final.
           * Igualment, van amb la primera lletra en majáºscula quan la paraula sencera tambá© hi aniria.
           * En canvi, van amb la primera lletra en mináºscula quan la inicial de la paraula sencera tambá© hi aniria.
           *
           * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?input_cercar=abreviatures+dies&action=Principal&method=detall_completa&numPagina=1&idHit=8387&database=FITXES_PUB&tipusFont=Fitxes%20de%20l%27Optimot&idFont=8387&titol=abreviatures%20dels%20dies%20de%20la%20setmana&numeroResultat=1&clickLink=detall&tipusCerca=cerca.tot
           */
        };
        var dayValues = {
          narrow: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
          short: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
          abbreviated: ["dg.", "dl.", "dt.", "dm.", "dj.", "dv.", "ds."],
          wide: [
            "diumenge",
            "dilluns",
            "dimarts",
            "dimecres",
            "dijous",
            "divendres",
            "dissabte",
          ],
          /**
           * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/index.html?action=Principal&method=detall&input_cercar=parts+del+dia&numPagina=1&database=FITXES_PUB&idFont=12801&idHit=12801&tipusFont=Fitxes+de+l%27Optimot&numeroResultat=1&databases_avansada=&categories_avansada=&clickLink=detall&titol=Nom+de+les+parts+del+dia&tematica=&tipusCerca=cerca.fitxes
           */
        };
        var dayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "mitjanit",
            noon: "migdia",
            morning: "matá­",
            afternoon: "tarda",
            evening: "vespre",
            night: "nit",
          },
          abbreviated: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "mitjanit",
            noon: "migdia",
            morning: "matá­",
            afternoon: "tarda",
            evening: "vespre",
            night: "nit",
          },
          wide: {
            am: "ante meridiem",
            pm: "post meridiem",
            midnight: "mitjanit",
            noon: "migdia",
            morning: "matá­",
            afternoon: "tarda",
            evening: "vespre",
            night: "nit",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "de la mitjanit",
            noon: "del migdia",
            morning: "del matá­",
            afternoon: "de la tarda",
            evening: "del vespre",
            night: "de la nit",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "de la mitjanit",
            noon: "del migdia",
            morning: "del matá­",
            afternoon: "de la tarda",
            evening: "del vespre",
            night: "de la nit",
          },
          wide: {
            am: "ante meridiem",
            pm: "post meridiem",
            midnight: "de la mitjanit",
            noon: "del migdia",
            morning: "del matá­",
            afternoon: "de la tarda",
            evening: "del vespre",
            night: "de la nit",
          },
          /**
           * Quan van en singular, els nombres ordinals es representen, en forma dâ€™abreviatura, amb la xifra seguida de lâ€™áºltima lletra del mot desplegat.
           * á‰s optatiu posar punt desprá©s de la lletra.
           *
           * Reference: https://aplicacions.llengua.gencat.cat/llc/AppJava/pdf/abrevia.pdf#page=18
           *
           * @param {Number} dirtyNumber
           * @param {Object} [_dirtyOptions]
           */
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          var rem100 = number % 100;

          if (rem100 > 20 || rem100 < 10) {
            switch (rem100 % 10) {
              case 1:
                return number + "r";

              case 2:
                return number + "n";

              case 3:
                return number + "r";

              case 4:
                return number + "t";
            }
          }

          return number + "á¨";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 165 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(á¨|r|n|r|t)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(aC|dC)/i,
          abbreviated: /^(a. de C.|d. de C.)/i,
          wide: /^(abans de Crist|despr[eá©]s de Crist)/i,
        };
        var parseEraPatterns = {
          narrow: [/^aC/i, /^dC/i],
          abbreviated: [/^(a. de C.)/i, /^(d. de C.)/i],
          wide: [/^(abans de Crist)/i, /^(despr[eá©]s de Crist)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^T[1234]/i,
          wide: /^[1234](á¨|r|n|r|t)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^(GN|FB|Má‡|AB|MG|JN|JL|AG|ST|OC|NV|DS)/i,
          abbreviated:
            /^(gen.|febr.|mará§|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.)/i,
          wide: /^(gener|febrer|mará§|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^GN/i,
            /^FB/i,
            /^Má‡/i,
            /^AB/i,
            /^MG/i,
            /^JN/i,
            /^JL/i,
            /^AG/i,
            /^ST/i,
            /^OC/i,
            /^NV/i,
            /^DS/i,
          ],
          abbreviated: [
            /^gen./i,
            /^febr./i,
            /^mará§/i,
            /^abr./i,
            /^maig/i,
            /^juny/i,
            /^jul./i,
            /^ag./i,
            /^set./i,
            /^oct./i,
            /^nov./i,
            /^des./i,
          ],
          wide: [
            /^gener/i,
            /^febrer/i,
            /^mará§/i,
            /^abril/i,
            /^maig/i,
            /^juny/i,
            /^juliol/i,
            /^agost/i,
            /^setembre/i,
            /^octubre/i,
            /^novembre/i,
            /^desembre/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
          short: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
          abbreviated: /^(dg\.|dl\.|dt\.|dm\.|dj\.|dv\.|ds\.)/i,
          wide: /^(diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte)/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^dg./i,
            /^dl./i,
            /^dt./i,
            /^dm./i,
            /^dj./i,
            /^dv./i,
            /^ds./i,
          ],
          abbreviated: [
            /^dg./i,
            /^dl./i,
            /^dt./i,
            /^dm./i,
            /^dj./i,
            /^dv./i,
            /^ds./i,
          ],
          wide: [
            /^diumenge/i,
            /^dilluns/i,
            /^dimarts/i,
            /^dimecres/i,
            /^dijous/i,
            /^divendres/i,
            /^disssabte/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mn|md|(del|de la) (matá­|tarda|vespre|nit))/i,
          abbreviated:
            /^([ap]\.?\s?m\.?|mitjanit|migdia|(del|de la) (matá­|tarda|vespre|nit))/i,
          wide: /^(ante meridiem|post meridiem|mitjanit|migdia|(del|de la) (matá­|tarda|vespre|nit))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mitjanit/i,
            noon: /^migdia/i,
            morning: /matá­/i,
            afternoon: /tarda/i,
            evening: /vespre/i,
            night: /nit/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 166 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: {
              regular: "má©nÄ› neÅ¾ vteÅ™ina",
              past: "pÅ™ed má©nÄ› neÅ¾ vteÅ™inou",
              future: "za má©nÄ› neÅ¾ vteÅ™inu",
            },
            few: {
              regular: "má©nÄ› neÅ¾ {{count}} vteÅ™iny",
              past: "pÅ™ed má©nÄ› neÅ¾ {{count}} vteÅ™inami",
              future: "za má©nÄ› neÅ¾ {{count}} vteÅ™iny",
            },
            many: {
              regular: "má©nÄ› neÅ¾ {{count}} vteÅ™in",
              past: "pÅ™ed má©nÄ› neÅ¾ {{count}} vteÅ™inami",
              future: "za má©nÄ› neÅ¾ {{count}} vteÅ™in",
            },
          },
          xSeconds: {
            one: {
              regular: "vteÅ™ina",
              past: "pÅ™ed vteÅ™inou",
              future: "za vteÅ™inu",
            },
            few: {
              regular: "{{count}} vteÅ™iny",
              past: "pÅ™ed {{count}} vteÅ™inami",
              future: "za {{count}} vteÅ™iny",
            },
            many: {
              regular: "{{count}} vteÅ™in",
              past: "pÅ™ed {{count}} vteÅ™inami",
              future: "za {{count}} vteÅ™in",
            },
          },
          halfAMinute: {
            other: {
              regular: "pÅ¯l minuty",
              past: "pÅ™ed pÅ¯l minutou",
              future: "za pÅ¯l minuty",
            },
          },
          lessThanXMinutes: {
            one: {
              regular: "má©nÄ› neÅ¾ minuta",
              past: "pÅ™ed má©nÄ› neÅ¾ minutou",
              future: "za má©nÄ› neÅ¾ minutu",
            },
            few: {
              regular: "má©nÄ› neÅ¾ {{count}} minuty",
              past: "pÅ™ed má©nÄ› neÅ¾ {{count}} minutami",
              future: "za má©nÄ› neÅ¾ {{count}} minuty",
            },
            many: {
              regular: "má©nÄ› neÅ¾ {{count}} minut",
              past: "pÅ™ed má©nÄ› neÅ¾ {{count}} minutami",
              future: "za má©nÄ› neÅ¾ {{count}} minut",
            },
          },
          xMinutes: {
            one: {
              regular: "minuta",
              past: "pÅ™ed minutou",
              future: "za minutu",
            },
            few: {
              regular: "{{count}} minuty",
              past: "pÅ™ed {{count}} minutami",
              future: "za {{count}} minuty",
            },
            many: {
              regular: "{{count}} minut",
              past: "pÅ™ed {{count}} minutami",
              future: "za {{count}} minut",
            },
          },
          aboutXHours: {
            one: {
              regular: "pÅ™ibliÅ¾nÄ› hodina",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed hodinou",
              future: "pÅ™ibliÅ¾nÄ› za hodinu",
            },
            few: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} hodiny",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} hodinami",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} hodiny",
            },
            many: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} hodin",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} hodinami",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} hodin",
            },
          },
          xHours: {
            one: {
              regular: "hodina",
              past: "pÅ™ed hodinou",
              future: "za hodinu",
            },
            few: {
              regular: "{{count}} hodiny",
              past: "pÅ™ed {{count}} hodinami",
              future: "za {{count}} hodiny",
            },
            many: {
              regular: "{{count}} hodin",
              past: "pÅ™ed {{count}} hodinami",
              future: "za {{count}} hodin",
            },
          },
          xDays: {
            one: {
              regular: "den",
              past: "pÅ™ed dnem",
              future: "za den",
            },
            few: {
              regular: "{{count}} dny",
              past: "pÅ™ed {{count}} dny",
              future: "za {{count}} dny",
            },
            many: {
              regular: "{{count}} dná­",
              past: "pÅ™ed {{count}} dny",
              future: "za {{count}} dná­",
            },
          },
          aboutXWeeks: {
            one: {
              regular: "pÅ™ibliÅ¾nÄ› tá½den",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed tá½dnem",
              future: "pÅ™ibliÅ¾nÄ› za tá½den",
            },
            few: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} tá½dny",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} tá½dny",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} tá½dny",
            },
            many: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} tá½dnÅ¯",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} tá½dny",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} tá½dnÅ¯",
            },
          },
          xWeeks: {
            one: {
              regular: "tá½den",
              past: "pÅ™ed tá½dnem",
              future: "za tá½den",
            },
            few: {
              regular: "{{count}} tá½dny",
              past: "pÅ™ed {{count}} tá½dny",
              future: "za {{count}} tá½dny",
            },
            many: {
              regular: "{{count}} tá½dnÅ¯",
              past: "pÅ™ed {{count}} tá½dny",
              future: "za {{count}} tá½dnÅ¯",
            },
          },
          aboutXMonths: {
            one: {
              regular: "pÅ™ibliÅ¾nÄ› mÄ›sá­c",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed mÄ›sá­cem",
              future: "pÅ™ibliÅ¾nÄ› za mÄ›sá­c",
            },
            few: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} mÄ›sá­ce",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} mÄ›sá­ci",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} mÄ›sá­ce",
            },
            many: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} mÄ›sá­cÅ¯",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} mÄ›sá­ci",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} mÄ›sá­cÅ¯",
            },
          },
          xMonths: {
            one: {
              regular: "mÄ›sá­c",
              past: "pÅ™ed mÄ›sá­cem",
              future: "za mÄ›sá­c",
            },
            few: {
              regular: "{{count}} mÄ›sá­ce",
              past: "pÅ™ed {{count}} mÄ›sá­ci",
              future: "za {{count}} mÄ›sá­ce",
            },
            many: {
              regular: "{{count}} mÄ›sá­cÅ¯",
              past: "pÅ™ed {{count}} mÄ›sá­ci",
              future: "za {{count}} mÄ›sá­cÅ¯",
            },
          },
          aboutXYears: {
            one: {
              regular: "pÅ™ibliÅ¾nÄ› rok",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed rokem",
              future: "pÅ™ibliÅ¾nÄ› za rok",
            },
            few: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} roky",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} roky",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} roky",
            },
            many: {
              regular: "pÅ™ibliÅ¾nÄ› {{count}} rokÅ¯",
              past: "pÅ™ibliÅ¾nÄ› pÅ™ed {{count}} roky",
              future: "pÅ™ibliÅ¾nÄ› za {{count}} rokÅ¯",
            },
          },
          xYears: {
            one: {
              regular: "rok",
              past: "pÅ™ed rokem",
              future: "za rok",
            },
            few: {
              regular: "{{count}} roky",
              past: "pÅ™ed {{count}} roky",
              future: "za {{count}} roky",
            },
            many: {
              regular: "{{count}} rokÅ¯",
              past: "pÅ™ed {{count}} roky",
              future: "za {{count}} rokÅ¯",
            },
          },
          overXYears: {
            one: {
              regular: "vá­ce neÅ¾ rok",
              past: "pÅ™ed vá­ce neÅ¾ rokem",
              future: "za vá­ce neÅ¾ rok",
            },
            few: {
              regular: "vá­ce neÅ¾ {{count}} roky",
              past: "pÅ™ed vá­ce neÅ¾ {{count}} roky",
              future: "za vá­ce neÅ¾ {{count}} roky",
            },
            many: {
              regular: "vá­ce neÅ¾ {{count}} rokÅ¯",
              past: "pÅ™ed vá­ce neÅ¾ {{count}} roky",
              future: "za vá­ce neÅ¾ {{count}} rokÅ¯",
            },
          },
          almostXYears: {
            one: {
              regular: "skoro rok",
              past: "skoro pÅ™ed rokem",
              future: "skoro za rok",
            },
            few: {
              regular: "skoro {{count}} roky",
              past: "skoro pÅ™ed {{count}} roky",
              future: "skoro za {{count}} roky",
            },
            many: {
              regular: "skoro {{count}} rokÅ¯",
              past: "skoro pÅ™ed {{count}} roky",
              future: "skoro za {{count}} rokÅ¯",
            },
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var scheme = formatDistanceLocale[token]; // cs pluralization

          var pluralToken;

          if (typeof scheme.other === "object") {
            pluralToken = "other";
          } else if (count === 1) {
            pluralToken = "one";
          } else if ((count > 1 && count < 5) || count === 0) {
            pluralToken = "few";
          } else {
            pluralToken = "many";
          } // times

          var suffixExist = options.addSuffix === true;
          var comparison = options.comparison;
          var timeToken;

          if (suffixExist && comparison === -1) {
            timeToken = "past";
          } else if (suffixExist && comparison === 1) {
            timeToken = "future";
          } else {
            timeToken = "regular";
          }

          return scheme[pluralToken][timeToken].replace("{{count}}", count);
        }

        module.exports = exports.default;

        /***/
      },
      /* 167 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d. MMMM yyyy",
          long: "d. MMMM yyyy",
          medium: "d. M. yyyy",
          short: "dd.MM.yyyy",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'v' {{time}}",
          long: "{{date}} 'v' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 168 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var accusativeWeekdays = [
          "nedÄ›li",
          "pondÄ›lá­",
          "áºterá½",
          "stÅ™edu",
          "Ätvrtek",
          "pá¡tek",
          "sobotu",
        ];
        var formatRelativeLocale = {
          lastWeek: "'posledná­' eeee 've' p",
          yesterday: "'vÄera v' p",
          today: "'dnes v' p",
          tomorrow: "'zá­tra v' p",
          nextWeek: function (date, _baseDate, _options) {
            var day = date.getUTCDay();
            return "'v " + accusativeWeekdays[day] + " o' p";
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 169 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["pÅ™. n. l.", "n. l."],
          abbreviated: ["pÅ™. n. l.", "n. l."],
          wide: ["pÅ™ed naÅ¡á­m letopoÄtem", "naÅ¡eho letopoÄtu"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: [
            "1. Ätvrtletá­",
            "2. Ätvrtletá­",
            "3. Ätvrtletá­",
            "4. Ätvrtletá­",
          ],
          wide: [
            "1. Ätvrtletá­",
            "2. Ätvrtletá­",
            "3. Ätvrtletá­",
            "4. Ätvrtletá­",
          ],
        };
        var monthValues = {
          narrow: [
            "L",
            "áš",
            "B",
            "D",
            "K",
            "ÄŒ",
            "ÄŒ",
            "S",
            "Z",
            "Å˜",
            "L",
            "P",
          ],
          abbreviated: [
            "led",
            "áºno",
            "bÅ™e",
            "dub",
            "kvÄ›",
            "Ävn",
            "Ävc",
            "srp",
            "zá¡Å™",
            "Å™á­j",
            "lis",
            "pro",
          ],
          wide: [
            "leden",
            "áºnor",
            "bÅ™ezen",
            "duben",
            "kvÄ›ten",
            "Äerven",
            "Äervenec",
            "srpen",
            "zá¡Å™á­",
            "Å™á­jen",
            "listopad",
            "prosinec",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "L",
            "áš",
            "B",
            "D",
            "K",
            "ÄŒ",
            "ÄŒ",
            "S",
            "Z",
            "Å˜",
            "L",
            "P",
          ],
          abbreviated: [
            "led",
            "áºno",
            "bÅ™e",
            "dub",
            "kvÄ›",
            "Ävn",
            "Ävc",
            "srp",
            "zá¡Å™",
            "Å™á­j",
            "lis",
            "pro",
          ],
          wide: [
            "ledna",
            "áºnora",
            "bÅ™ezna",
            "dubna",
            "kvÄ›tna",
            "Äervna",
            "Äervence",
            "srpna",
            "zá¡Å™á­",
            "Å™á­jna",
            "listopadu",
            "prosince",
          ],
        };
        var dayValues = {
          narrow: ["ne", "po", "áºt", "st", "Ät", "pá¡", "so"],
          short: ["ne", "po", "áºt", "st", "Ät", "pá¡", "so"],
          abbreviated: ["ned", "pon", "áºte", "stÅ™", "Ätv", "pá¡t", "sob"],
          wide: [
            "nedÄ›le",
            "pondÄ›lá­",
            "áºterá½",
            "stÅ™eda",
            "Ätvrtek",
            "pá¡tek",
            "sobota",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "dop.",
            pm: "odp.",
            midnight: "pÅ¯lnoc",
            noon: "poledne",
            morning: "rá¡no",
            afternoon: "odpoledne",
            evening: "veÄer",
            night: "noc",
          },
          abbreviated: {
            am: "dop.",
            pm: "odp.",
            midnight: "pÅ¯lnoc",
            noon: "poledne",
            morning: "rá¡no",
            afternoon: "odpoledne",
            evening: "veÄer",
            night: "noc",
          },
          wide: {
            am: "dopoledne",
            pm: "odpoledne",
            midnight: "pÅ¯lnoc",
            noon: "poledne",
            morning: "rá¡no",
            afternoon: "odpoledne",
            evening: "veÄer",
            night: "noc",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "dop.",
            pm: "odp.",
            midnight: "pÅ¯lnoc",
            noon: "poledne",
            morning: "rá¡no",
            afternoon: "odpoledne",
            evening: "veÄer",
            night: "noc",
          },
          abbreviated: {
            am: "dop.",
            pm: "odp.",
            midnight: "pÅ¯lnoc",
            noon: "poledne",
            morning: "rá¡no",
            afternoon: "odpoledne",
            evening: "veÄer",
            night: "noc",
          },
          wide: {
            am: "dopoledne",
            pm: "odpoledne",
            midnight: "pÅ¯lnoc",
            noon: "poledne",
            morning: "rá¡no",
            afternoon: "odpoledne",
            evening: "veÄer",
            night: "noc",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 170 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\.?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(p[Å™r]ed Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
          abbreviated: /^(pe[Å™r]ed Kr\.|pe[Å™r]ed n\. l\.|po Kr\.|n\. l\.)/i,
          wide: /^(p[Å™r]ed Kristem|pred na[Å¡s][á­i]m letopo[Äc]tem|po Kristu|na[Å¡s]eho letopo[Äc]tu)/i,
        };
        var parseEraPatterns = {
          any: [/^p[Å™r]/i, /^(po|n)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]\. [Äc]tvrtlet[á­i]/i,
          wide: /^[1234]\. [Äc]tvrtlet[á­i]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[láºubdkÄcszÅ™rlp]/i,
          abbreviated:
            /^(led|[áºu]no|b[Å™r]e|dub|kv[Ä›e]|[Äc]vn|[Äc]vc|srp|z[á¡a][Å™r]|[Å™r][á­i]j|lis|pro)/i,
          wide: /^(leden|ledna|[áºu]nora?|b[Å™r]ezen|b[Å™r]ezna|duben|dubna|kv[Ä›e]ten|kv[Ä›e]tna|[Äc]erven(ec|ce)?|[Äc]ervna|srpen|srpna|z[á¡a][Å™r][á­i]|[Å™r][á­i]jen|[Å™r][á­i]jna|listopad(a|u)?|prosinec|prosince)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^l/i,
            /^[áºu]/i,
            /^b/i,
            /^d/i,
            /^k/i,
            /^[Äc]/i,
            /^[Äc]/i,
            /^s/i,
            /^z/i,
            /^[Å™r]/i,
            /^l/i,
            /^p/i,
          ],
          any: [
            /^led/i,
            /^[áºu]n/i,
            /^b[Å™r]e/i,
            /^dub/i,
            /^kv[Ä›e]/i,
            /^[Äc]vn|[Äc]erven(?!\w)|[Äc]ervna/i,
            /^[Äc]vc|[Äc]erven(ec|ce)/i,
            /^srp/i,
            /^z[á¡a][Å™r]/i,
            /^[Å™r][á­i]j/i,
            /^lis/i,
            /^pro/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[npuáºsÄps]/i,
          short: /^(ne|po|[áºu]t|st|[Äc]t|p[á¡a]|so)/i,
          abbreviated: /^(ne|po|[áºu]t|st|[Äc]t|p[á¡a]|so)/i,
          wide: /^(ned[Ä›e]le|pond[Ä›e]l[á­i]|[áºu]ter[á½y]|st[Å™r]eda|[Äc]tvrtek|p[á¡a]tek|sobota)/i,
        };
        var parseDayPatterns = {
          narrow: [/^n/i, /^p/i, /^[áºu]/i, /^s/i, /^[Äc]/i, /^p/i, /^s/i],
          any: [/^ne/i, /^po/i, /^ut/i, /^st/i, /^[Äc]t/i, /^p/i, /^so/i],
        };
        var matchDayPeriodPatterns = {
          any: /^dopoledne|dop\.?|odpoledne|odp\.?|pÅ¯lnoc|poledne|r[á¡a]no|odpoledne|ve[Äc]er|(v )?noci/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^dop/i,
            pm: /^odp/i,
            midnight: /^p[Å¯u]lnoc/i,
            noon: /^poledne/i,
            morning: /r[á¡a]no/i,
            afternoon: /odpoledne/i,
            evening: /ve[Äc]er/i,
            night: /noc/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 171 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "llai na eiliad",
            other: "llai na {{count}} eiliad",
          },
          xSeconds: {
            one: "1 eiliad",
            other: "{{count}} eiliad",
          },
          halfAMinute: "hanner munud",
          lessThanXMinutes: {
            one: "llai na munud",
            two: "llai na 2 funud",
            other: "llai na {{count}} munud",
          },
          xMinutes: {
            one: "1 munud",
            two: "2 funud",
            other: "{{count}} munud",
          },
          aboutXHours: {
            one: "tua 1 awr",
            other: "tua {{count}} awr",
          },
          xHours: {
            one: "1 awr",
            other: "{{count}} awr",
          },
          xDays: {
            one: "1 diwrnod",
            two: "2 ddiwrnod",
            other: "{{count}} diwrnod",
          },
          aboutXWeeks: {
            one: "tua 1 wythnos",
            two: "tua pythefnos",
            other: "tua {{count}} wythnos",
          },
          xWeeks: {
            one: "1 wythnos",
            two: "pythefnos",
            other: "{{count}} wythnos",
          },
          aboutXMonths: {
            one: "tua 1 mis",
            two: "tua 2 fis",
            other: "tua {{count}} mis",
          },
          xMonths: {
            one: "1 mis",
            two: "2 fis",
            other: "{{count}} mis",
          },
          aboutXYears: {
            one: "tua 1 flwyddyn",
            two: "tua 2 flynedd",
            other: "tua {{count}} mlynedd",
          },
          xYears: {
            one: "1 flwyddyn",
            two: "2 flynedd",
            other: "{{count}} mlynedd",
          },
          overXYears: {
            one: "dros 1 flwyddyn",
            two: "dros 2 flynedd",
            other: "dros {{count}} mlynedd",
          },
          almostXYears: {
            one: "bron 1 flwyddyn",
            two: "bron 2 flynedd",
            other: "bron {{count}} mlynedd",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 2 && !!formatDistanceLocale[token].two) {
            result = formatDistanceLocale[token].two;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "mewn " + result;
            } else {
              return result + " yn á´l";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 172 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'am' {{time}}",
          long: "{{date}} 'am' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 173 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'diwethaf am' p",
          yesterday: "'ddoe am' p",
          today: "'heddiw am' p",
          tomorrow: "'yfory am' p",
          nextWeek: "eeee 'am' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 174 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["C", "O"],
          abbreviated: ["CC", "OC"],
          wide: ["Cyn Crist", "Ar á´l Crist"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Ch1", "Ch2", "Ch3", "Ch4"],
          wide: [
            "Chwarter 1af",
            "2ail chwarter",
            "3ydd chwarter",
            "4ydd chwarter",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: [
            "I",
            "Ch",
            "Ma",
            "E",
            "Mi",
            "Me",
            "G",
            "A",
            "Md",
            "H",
            "T",
            "Rh",
          ],
          abbreviated: [
            "Ion",
            "Chwe",
            "Maw",
            "Ebr",
            "Mai",
            "Meh",
            "Gor",
            "Aws",
            "Med",
            "Hyd",
            "Tach",
            "Rhag",
          ],
          wide: [
            "Ionawr",
            "Chwefror",
            "Mawrth",
            "Ebrill",
            "Mai",
            "Mehefin",
            "Gorffennaf",
            "Awst",
            "Medi",
            "Hydref",
            "Tachwedd",
            "Rhagfyr",
          ],
        };
        var dayValues = {
          narrow: ["S", "Ll", "M", "M", "I", "G", "S"],
          short: ["Su", "Ll", "Ma", "Me", "Ia", "Gw", "Sa"],
          abbreviated: ["Sul", "Llun", "Maw", "Mer", "Iau", "Gwe", "Sad"],
          wide: [
            "dydd Sul",
            "dydd Llun",
            "dydd Mawrth",
            "dydd Mercher",
            "dydd Iau",
            "dydd Gwener",
            "dydd Sadwrn",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "b",
            pm: "h",
            midnight: "hn",
            noon: "hd",
            morning: "bore",
            afternoon: "prynhawn",
            evening: "gyda'r nos",
            night: "nos",
          },
          abbreviated: {
            am: "yb",
            pm: "yh",
            midnight: "hanner nos",
            noon: "hanner dydd",
            morning: "bore",
            afternoon: "prynhawn",
            evening: "gyda'r nos",
            night: "nos",
          },
          wide: {
            am: "y.b.",
            pm: "y.h.",
            midnight: "hanner nos",
            noon: "hanner dydd",
            morning: "bore",
            afternoon: "prynhawn",
            evening: "gyda'r nos",
            night: "nos",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "b",
            pm: "h",
            midnight: "hn",
            noon: "hd",
            morning: "yn y bore",
            afternoon: "yn y prynhawn",
            evening: "gyda'r nos",
            night: "yn y nos",
          },
          abbreviated: {
            am: "yb",
            pm: "yh",
            midnight: "hanner nos",
            noon: "hanner dydd",
            morning: "yn y bore",
            afternoon: "yn y prynhawn",
            evening: "gyda'r nos",
            night: "yn y nos",
          },
          wide: {
            am: "y.b.",
            pm: "y.h.",
            midnight: "hanner nos",
            noon: "hanner dydd",
            morning: "yn y bore",
            afternoon: "yn y prynhawn",
            evening: "gyda'r nos",
            night: "yn y nos",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);

          if (number < 20) {
            switch (number) {
              case 0:
                return number + "fed";

              case 1:
                return number + "af";

              case 2:
                return number + "ail";

              case 3:
              case 4:
                return number + "ydd";

              case 5:
              case 6:
                return number + "ed";

              case 7:
              case 8:
              case 9:
              case 10:
              case 12:
              case 15:
              case 18:
                return number + "fed";

              case 11:
              case 13:
              case 14:
              case 16:
              case 17:
              case 19:
                return number + "eg";
            }
          } else if (
            (number >= 50 && number <= 60) ||
            number === 80 ||
            number >= 100
          ) {
            return number + "fed";
          }

          return number + "ain";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 175 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(af|ail|ydd|ed|fed|eg|ain)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(c|o)/i,
          abbreviated: /^(c\.?\s?c\.?|o\.?\s?c\.?)/i,
          wide: /^(cyn christ|ar á´l crist|ar ol crist)/i,
        };
        var parseEraPatterns = {
          wide: [/^c/i, /^(ar á´l crist|ar ol crist)/i],
          any: [/^c/i, /^o/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^ch[1234]/i,
          wide: /^(chwarter 1af)|([234](ail|ydd)? chwarter)/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^(i|ch|m|e|g|a|h|t|rh)/i,
          abbreviated: /^(ion|chwe|maw|ebr|mai|meh|gor|aws|med|hyd|tach|rhag)/i,
          wide: /^(ionawr|chwefror|mawrth|ebrill|mai|mehefin|gorffennaf|awst|medi|hydref|tachwedd|rhagfyr)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^i/i,
            /^ch/i,
            /^m/i,
            /^e/i,
            /^m/i,
            /^m/i,
            /^g/i,
            /^a/i,
            /^m/i,
            /^h/i,
            /^t/i,
            /^rh/i,
          ],
          any: [
            /^io/i,
            /^ch/i,
            /^maw/i,
            /^e/i,
            /^mai/i,
            /^meh/i,
            /^g/i,
            /^a/i,
            /^med/i,
            /^h/i,
            /^t/i,
            /^rh/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(s|ll|m|i|g)/i,
          short: /^(su|ll|ma|me|ia|gw|sa)/i,
          abbreviated: /^(sul|llun|maw|mer|iau|gwe|sad)/i,
          wide: /^dydd (sul|llun|mawrth|mercher|iau|gwener|sadwrn)/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^ll/i, /^m/i, /^m/i, /^i/i, /^g/i, /^s/i],
          wide: [
            /^dydd su/i,
            /^dydd ll/i,
            /^dydd ma/i,
            /^dydd me/i,
            /^dydd i/i,
            /^dydd g/i,
            /^dydd sa/i,
          ],
          any: [/^su/i, /^ll/i, /^ma/i, /^me/i, /^i/i, /^g/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(b|h|hn|hd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,
          any: /^(y\.?\s?[bh]\.?|hanner nos|hanner dydd|(yn y|y|yr|gyda'r) (bore|prynhawn|nos|hwyr))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^b|(y\.?\s?b\.?)/i,
            pm: /^h|(y\.?\s?h\.?)|(yr hwyr)/i,
            midnight: /^hn|hanner nos/i,
            noon: /^hd|hanner dydd/i,
            morning: /bore/i,
            afternoon: /prynhawn/i,
            evening: /^gyda'r nos$/i,
            night: /blah/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 176 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "mindre end á©t sekund",
            other: "mindre end {{count}} sekunder",
          },
          xSeconds: {
            one: "1 sekund",
            other: "{{count}} sekunder",
          },
          halfAMinute: "á©t halvt minut",
          lessThanXMinutes: {
            one: "mindre end á©t minut",
            other: "mindre end {{count}} minutter",
          },
          xMinutes: {
            one: "1 minut",
            other: "{{count}} minutter",
          },
          aboutXHours: {
            one: "cirka 1 time",
            other: "cirka {{count}} timer",
          },
          xHours: {
            one: "1 time",
            other: "{{count}} timer",
          },
          xDays: {
            one: "1 dag",
            other: "{{count}} dage",
          },
          aboutXWeeks: {
            one: "cirka 1 uge",
            other: "cirka {{count}} uger",
          },
          xWeeks: {
            one: "1 uge",
            other: "{{count}} uger",
          },
          aboutXMonths: {
            one: "cirka 1 má¥ned",
            other: "cirka {{count}} má¥neder",
          },
          xMonths: {
            one: "1 má¥ned",
            other: "{{count}} má¥neder",
          },
          aboutXYears: {
            one: "cirka 1 á¥r",
            other: "cirka {{count}} á¥r",
          },
          xYears: {
            one: "1 á¥r",
            other: "{{count}} á¥r",
          },
          overXYears: {
            one: "over 1 á¥r",
            other: "over {{count}} á¥r",
          },
          almostXYears: {
            one: "ná¦sten 1 á¥r",
            other: "ná¦sten {{count}} á¥r",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "om " + result;
            } else {
              return result + " siden";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 177 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE 'den' d. MMMM y",
          long: "d. MMMM y",
          medium: "d. MMM y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'kl'. {{time}}",
          long: "{{date}} 'kl'. {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 178 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'sidste' eeee 'kl.' p",
          yesterday: "'i gá¥r kl.' p",
          today: "'i dag kl.' p",
          tomorrow: "'i morgen kl.' p",
          nextWeek: "'pá¥' eeee 'kl.' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 179 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["fvt", "vt"],
          abbreviated: ["f.v.t.", "v.t."],
          wide: ["fá¸r vesterlandsk tidsregning", "vesterlandsk tidsregning"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1. kvt.", "2. kvt.", "3. kvt.", "4. kvt."],
          wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jan.",
            "feb.",
            "mar.",
            "apr.",
            "maj",
            "jun.",
            "jul.",
            "aug.",
            "sep.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "januar",
            "februar",
            "marts",
            "april",
            "maj",
            "juni",
            "juli",
            "august",
            "september",
            "oktober",
            "november",
            "december",
          ], // Note that 'Days - abbreviated - Formatting' has periods at the end.
          // https://www.unicode.org/cldr/charts/32/summary/da.html#1760
          // This makes grammatical sense in danish, as most abbreviations have periods.
        };
        var dayValues = {
          narrow: ["S", "M", "T", "O", "T", "F", "L"],
          short: ["sá¸", "ma", "ti", "on", "to", "fr", "lá¸"],
          abbreviated: [
            "sá¸n.",
            "man.",
            "tir.",
            "ons.",
            "tor.",
            "fre.",
            "lá¸r.",
          ],
          wide: [
            "sá¸ndag",
            "mandag",
            "tirsdag",
            "onsdag",
            "torsdag",
            "fredag",
            "lá¸rdag",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "midnat",
            noon: "middag",
            morning: "morgen",
            afternoon: "eftermiddag",
            evening: "aften",
            night: "nat",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "midnat",
            noon: "middag",
            morning: "morgen",
            afternoon: "eftermiddag",
            evening: "aften",
            night: "nat",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnat",
            noon: "middag",
            morning: "morgen",
            afternoon: "eftermiddag",
            evening: "aften",
            night: "nat",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "midnat",
            noon: "middag",
            morning: "om morgenen",
            afternoon: "om eftermiddagen",
            evening: "om aftenen",
            night: "om natten",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "midnat",
            noon: "middag",
            morning: "om morgenen",
            afternoon: "om eftermiddagen",
            evening: "om aftenen",
            night: "om natten",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnat",
            noon: "middag",
            morning: "om morgenen",
            afternoon: "om eftermiddagen",
            evening: "om aftenen",
            night: "om natten",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 180 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(fKr|fvt|eKr|vt)/i,
          abbreviated: /^(f\.Kr\.?|f\.v\.t\.?|e\.Kr\.?|v\.t\.)/i,
          wide: /^(f.Kr.|fá¸r vesterlandsk tidsregning|e.Kr.|vesterlandsk tidsregning)/i,
        };
        var parseEraPatterns = {
          any: [/^f/i, /^(v|e)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]. kvt\./i,
          wide: /^[1234]\.? kvartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
          wide: /^(januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^maj/i,
            /^jun/i,
            /^jul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtofl]/i,
          short: /^(sá¸n.|man.|tir.|ons.|tor.|fre.|lá¸r.)/i,
          abbreviated: /^(sá¸n|man|tir|ons|tor|fre|lá¸r)/i,
          wide: /^(sá¸ndag|mandag|tirsdag|onsdag|torsdag|fredag|lá¸rdag)/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^m/i, /^t/i, /^o/i, /^t/i, /^f/i, /^l/i],
          any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(a|p|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,
          any: /^([ap]\.?\s?m\.?|midnat|middag|(om) (morgenen|eftermiddagen|aftenen|natten))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /midnat/i,
            noon: /middag/i,
            morning: /morgen/i,
            afternoon: /eftermiddag/i,
            evening: /aften/i,
            night: /nat/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 181 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["v.Chr.", "n.Chr."],
          abbreviated: ["v.Chr.", "n.Chr."],
          wide: ["vor Christus", "nach Christus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], // Note: in German, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Já¤n",
            "Feb",
            "Má¤r",
            "Apr",
            "Mai",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Okt",
            "Nov",
            "Dez",
          ],
          wide: [
            "Já¤nner",
            "Februar",
            "Má¤rz",
            "April",
            "Mai",
            "Juni",
            "Juli",
            "August",
            "September",
            "Oktober",
            "November",
            "Dezember",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "D", "M", "D", "F", "S"],
          short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
          abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."],
          wide: [
            "Sonntag",
            "Montag",
            "Dienstag",
            "Mittwoch",
            "Donnerstag",
            "Freitag",
            "Samstag",
          ], // https://www.unicode.org/cldr/charts/32/summary/de.html#1881
        };
        var dayPeriodValues = {
          narrow: {
            am: "vm.",
            pm: "nm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "Morgen",
            afternoon: "Nachm.",
            evening: "Abend",
            night: "Nacht",
          },
          abbreviated: {
            am: "vorm.",
            pm: "nachm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "Morgen",
            afternoon: "Nachmittag",
            evening: "Abend",
            night: "Nacht",
          },
          wide: {
            am: "vormittags",
            pm: "nachmittags",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "Morgen",
            afternoon: "Nachmittag",
            evening: "Abend",
            night: "Nacht",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "vm.",
            pm: "nm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "morgens",
            afternoon: "nachm.",
            evening: "abends",
            night: "nachts",
          },
          abbreviated: {
            am: "vorm.",
            pm: "nachm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "morgens",
            afternoon: "nachmittags",
            evening: "abends",
            night: "nachts",
          },
          wide: {
            am: "vormittags",
            pm: "nachmittags",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "morgens",
            afternoon: "nachmittags",
            evening: "abends",
            night: "nachts",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 182 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["v.Chr.", "n.Chr."],
          abbreviated: ["v.Chr.", "n.Chr."],
          wide: ["vor Christus", "nach Christus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"], // Note: in German, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Feb",
            "Má¤r",
            "Apr",
            "Mai",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Okt",
            "Nov",
            "Dez",
          ],
          wide: [
            "Januar",
            "Februar",
            "Má¤rz",
            "April",
            "Mai",
            "Juni",
            "Juli",
            "August",
            "September",
            "Oktober",
            "November",
            "Dezember",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "D", "M", "D", "F", "S"],
          short: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
          abbreviated: ["So.", "Mo.", "Di.", "Mi.", "Do.", "Fr.", "Sa."],
          wide: [
            "Sonntag",
            "Montag",
            "Dienstag",
            "Mittwoch",
            "Donnerstag",
            "Freitag",
            "Samstag",
          ], // https://www.unicode.org/cldr/charts/32/summary/de.html#1881
        };
        var dayPeriodValues = {
          narrow: {
            am: "vm.",
            pm: "nm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "Morgen",
            afternoon: "Nachm.",
            evening: "Abend",
            night: "Nacht",
          },
          abbreviated: {
            am: "vorm.",
            pm: "nachm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "Morgen",
            afternoon: "Nachmittag",
            evening: "Abend",
            night: "Nacht",
          },
          wide: {
            am: "vormittags",
            pm: "nachmittags",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "Morgen",
            afternoon: "Nachmittag",
            evening: "Abend",
            night: "Nacht",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "vm.",
            pm: "nm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "morgens",
            afternoon: "nachm.",
            evening: "abends",
            night: "nachts",
          },
          abbreviated: {
            am: "vorm.",
            pm: "nachm.",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "morgens",
            afternoon: "nachmittags",
            evening: "abends",
            night: "nachts",
          },
          wide: {
            am: "vormittags",
            pm: "nachmittags",
            midnight: "Mitternacht",
            noon: "Mittag",
            morning: "morgens",
            afternoon: "nachmittags",
            evening: "abends",
            night: "nachts",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 183 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ Î­Î½Î± Î´ÎµÏ…Ï„ÎµÏÏŒÎ»ÎµÏ€Ï„Î¿",
            other: "Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ {{count}} Î´ÎµÏ…Ï„ÎµÏÏŒÎ»ÎµÏ€Ï„Î±",
          },
          xSeconds: {
            one: "1 Î´ÎµÏ…Ï„ÎµÏÏŒÎ»ÎµÏ€Ï„Î¿",
            other: "{{count}} Î´ÎµÏ…Ï„ÎµÏÏŒÎ»ÎµÏ€Ï„Î±",
          },
          halfAMinute: "Î¼Î¹ÏƒÏŒ Î»ÎµÏ€Ï„ÏŒ",
          lessThanXMinutes: {
            one: "Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ Î­Î½Î± Î»ÎµÏ€Ï„ÏŒ",
            other: "Î»Î¹Î³ÏŒÏ„ÎµÏÎ¿ Î±Ï€ÏŒ {{count}} Î»ÎµÏ€Ï„Î¬",
          },
          xMinutes: {
            one: "1 Î»ÎµÏ€Ï„ÏŒ",
            other: "{{count}} Î»ÎµÏ€Ï„Î¬",
          },
          aboutXHours: {
            one: "Ï€ÎµÏÎ¯Ï€Î¿Ï… 1 ÏŽÏÎ±",
            other: "Ï€ÎµÏÎ¯Ï€Î¿Ï… {{count}} ÏŽÏÎµÏ‚",
          },
          xHours: {
            one: "1 ÏŽÏÎ±",
            other: "{{count}} ÏŽÏÎµÏ‚",
          },
          xDays: {
            one: "1 Î·Î¼Î­ÏÎ±",
            other: "{{count}} Î·Î¼Î­ÏÎµÏ‚",
          },
          aboutXWeeks: {
            one: "Ï€ÎµÏÎ¯Ï€Î¿Ï… 1 ÎµÎ²Î´Î¿Î¼Î¬Î´Î±",
            other: "Ï€ÎµÏÎ¯Ï€Î¿Ï… {{count}} ÎµÎ²Î´Î¿Î¼Î¬Î´ÎµÏ‚",
          },
          xWeeks: {
            one: "1 ÎµÎ²Î´Î¿Î¼Î¬Î´Î±",
            other: "{{count}} ÎµÎ²Î´Î¿Î¼Î¬Î´ÎµÏ‚",
          },
          aboutXMonths: {
            one: "Ï€ÎµÏÎ¯Ï€Î¿Ï… 1 Î¼Î®Î½Î±Ï‚",
            other: "Ï€ÎµÏÎ¯Ï€Î¿Ï… {{count}} Î¼Î®Î½ÎµÏ‚",
          },
          xMonths: {
            one: "1 Î¼Î®Î½Î±Ï‚",
            other: "{{count}} Î¼Î®Î½ÎµÏ‚",
          },
          aboutXYears: {
            one: "Ï€ÎµÏÎ¯Ï€Î¿Ï… 1 Ï‡ÏÏŒÎ½Î¿",
            other: "Ï€ÎµÏÎ¯Ï€Î¿Ï… {{count}} Ï‡ÏÏŒÎ½Î¹Î±",
          },
          xYears: {
            one: "1 Ï‡ÏÏŒÎ½Î¿",
            other: "{{count}} Ï‡ÏÏŒÎ½Î¹Î±",
          },
          overXYears: {
            one: "Ï€Î¬Î½Ï‰ Î±Ï€ÏŒ 1 Ï‡ÏÏŒÎ½Î¿",
            other: "Ï€Î¬Î½Ï‰ Î±Ï€ÏŒ {{count}} Ï‡ÏÏŒÎ½Î¹Î±",
          },
          almostXYears: {
            one: "Ï€ÎµÏÎ¯Ï€Î¿Ï… 1 Ï‡ÏÏŒÎ½Î¿",
            other: "Ï€ÎµÏÎ¯Ï€Î¿Ï… {{count}} Ï‡ÏÏŒÎ½Î¹Î±",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "ÏƒÎµ " + result;
            } else {
              return result + " Ï€ÏÎ¹Î½";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 184 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} - {{time}}",
          long: "{{date}} - {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 185 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: function (date) {
            switch (date.getUTCDay()) {
              case 6:
                //Î£Î¬Î²Î²Î±Ï„Î¿
                return "'Ï„Î¿ Ï€ÏÎ¿Î·Î³Î¿ÏÎ¼ÎµÎ½Î¿' eeee 'ÏƒÏ„Î¹Ï‚' p";

              default:
                return "'Ï„Î·Î½ Ï€ÏÎ¿Î·Î³Î¿ÏÎ¼ÎµÎ½Î·' eeee 'ÏƒÏ„Î¹Ï‚' p";
            }
          },
          yesterday: "'Ï‡Î¸ÎµÏ‚ ÏƒÏ„Î¹Ï‚' p",
          today: "'ÏƒÎ®Î¼ÎµÏÎ± ÏƒÏ„Î¹Ï‚' p",
          tomorrow: "'Î±ÏÏÎ¹Î¿ ÏƒÏ„Î¹Ï‚' p",
          nextWeek: "eeee 'ÏƒÏ„Î¹Ï‚' p",
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];
          if (typeof format === "function")
            return format(date, baseDate, options);
          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 186 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ï€Î§", "Î¼Î§"],
          abbreviated: ["Ï€.Î§.", "Î¼.Î§."],
          wide: ["Ï€ÏÎ¿ Î§ÏÎ¹ÏƒÏ„Î¿Ï", "Î¼ÎµÏ„Î¬ Î§ÏÎ¹ÏƒÏ„ÏŒÎ½"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Î¤1", "Î¤2", "Î¤3", "Î¤4"],
          wide: [
            "1Î¿ Ï„ÏÎ¯Î¼Î·Î½Î¿",
            "2Î¿ Ï„ÏÎ¯Î¼Î·Î½Î¿",
            "3Î¿ Ï„ÏÎ¯Î¼Î·Î½Î¿",
            "4Î¿ Ï„ÏÎ¯Î¼Î·Î½Î¿",
          ],
        };
        var monthValues = {
          narrow: [
            "Î™",
            "Î¦",
            "Îœ",
            "Î‘",
            "Îœ",
            "Î™",
            "Î™",
            "Î‘",
            "Î£",
            "ÎŸ",
            "Î",
            "Î”",
          ],
          abbreviated: [
            "Î™Î±Î½",
            "Î¦ÎµÎ²",
            "ÎœÎ¬Ï",
            "Î‘Ï€Ï",
            "ÎœÎ¬Î¹",
            "Î™Î¿ÏÎ½",
            "Î™Î¿ÏÎ»",
            "Î‘ÏÎ³",
            "Î£ÎµÏ€",
            "ÎŸÎºÏ„",
            "ÎÎ¿Î­",
            "Î”ÎµÎº",
          ],
          wide: [
            "Î™Î±Î½Î¿Ï…Î¬ÏÎ¹Î¿Ï‚",
            "Î¦ÎµÎ²ÏÎ¿Ï…Î¬ÏÎ¹Î¿Ï‚",
            "ÎœÎ¬ÏÏ„Î¹Î¿Ï‚",
            "Î‘Ï€ÏÎ¯Î»Î¹Î¿Ï‚",
            "ÎœÎ¬Î¹Î¿Ï‚",
            "Î™Î¿ÏÎ½Î¹Î¿Ï‚",
            "Î™Î¿ÏÎ»Î¹Î¿Ï‚",
            "Î‘ÏÎ³Î¿Ï…ÏƒÏ„Î¿Ï‚",
            "Î£ÎµÏ€Ï„Î­Î¼Î²ÏÎ¹Î¿Ï‚",
            "ÎŸÎºÏ„ÏŽÎ²ÏÎ¹Î¿Ï‚",
            "ÎÎ¿Î­Î¼Î²ÏÎ¹Î¿Ï‚",
            "Î”ÎµÎºÎ­Î¼Î²ÏÎ¹Î¿Ï‚",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "Î™",
            "Î¦",
            "Îœ",
            "Î‘",
            "Îœ",
            "Î™",
            "Î™",
            "Î‘",
            "Î£",
            "ÎŸ",
            "Î",
            "Î”",
          ],
          abbreviated: [
            "Î™Î±Î½",
            "Î¦ÎµÎ²",
            "ÎœÎ±Ï",
            "Î‘Ï€Ï",
            "ÎœÎ±Î",
            "Î™Î¿Ï…Î½",
            "Î™Î¿Ï…Î»",
            "Î‘Ï…Î³",
            "Î£ÎµÏ€",
            "ÎŸÎºÏ„",
            "ÎÎ¿Îµ",
            "Î”ÎµÎº",
          ],
          wide: [
            "Î™Î±Î½Î¿Ï…Î±ÏÎ¯Î¿Ï…",
            "Î¦ÎµÎ²ÏÎ¿Ï…Î±ÏÎ¯Î¿Ï…",
            "ÎœÎ±ÏÏ„Î¯Î¿Ï…",
            "Î‘Ï€ÏÎ¹Î»Î¯Î¿Ï…",
            "ÎœÎ±ÎÎ¿Ï…",
            "Î™Î¿Ï…Î½Î¯Î¿Ï…",
            "Î™Î¿Ï…Î»Î¯Î¿Ï…",
            "Î‘Ï…Î³Î¿ÏÏƒÏ„Î¿Ï…",
            "Î£ÎµÏ€Ï„ÎµÎ¼Î²ÏÎ¯Î¿Ï…",
            "ÎŸÎºÏ„Ï‰Î²ÏÎ¯Î¿Ï…",
            "ÎÎ¿ÎµÎ¼Î²ÏÎ¯Î¿Ï…",
            "Î”ÎµÎºÎµÎ¼Î²ÏÎ¯Î¿Ï…",
          ],
        };
        var dayValues = {
          narrow: ["Îš", "Î”", "T", "Î¤", "Î ", "Î ", "Î£"],
          short: ["ÎšÏ…", "Î”Îµ", "Î¤Ï", "Î¤Îµ", "Î Î­", "Î Î±", "Î£Î¬"],
          abbreviated: [
            "ÎšÏ…Ï",
            "Î”ÎµÏ…",
            "Î¤ÏÎ¯",
            "Î¤ÎµÏ„",
            "Î Î­Î¼",
            "Î Î±Ï",
            "Î£Î¬Î²",
          ],
          wide: [
            "ÎšÏ…ÏÎ¹Î±ÎºÎ®",
            "Î”ÎµÏ…Ï„Î­ÏÎ±",
            "Î¤ÏÎ¯Ï„Î·",
            "Î¤ÎµÏ„Î¬ÏÏ„Î·",
            "Î Î­Î¼Ï€Ï„Î·",
            "Î Î±ÏÎ±ÏƒÎºÎµÏ…Î®",
            "Î£Î¬Î²Î²Î±Ï„Î¿",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ï€Î¼",
            pm: "Î¼Î¼",
            midnight: "Î¼ÎµÏƒÎ¬Î½Ï…Ï‡Ï„Î±",
            noon: "Î¼ÎµÏƒÎ·Î¼Î­ÏÎ¹",
            morning: "Ï€ÏÏ‰Î¯",
            afternoon: "Î±Ï€ÏŒÎ³ÎµÏ…Î¼Î±",
            evening: "Î²ÏÎ¬Î´Ï…",
            night: "Î½ÏÏ‡Ï„Î±",
          },
          abbreviated: {
            am: "Ï€.Î¼.",
            pm: "Î¼.Î¼.",
            midnight: "Î¼ÎµÏƒÎ¬Î½Ï…Ï‡Ï„Î±",
            noon: "Î¼ÎµÏƒÎ·Î¼Î­ÏÎ¹",
            morning: "Ï€ÏÏ‰Î¯",
            afternoon: "Î±Ï€ÏŒÎ³ÎµÏ…Î¼Î±",
            evening: "Î²ÏÎ¬Î´Ï…",
            night: "Î½ÏÏ‡Ï„Î±",
          },
          wide: {
            am: "Ï€.Î¼.",
            pm: "Î¼.Î¼.",
            midnight: "Î¼ÎµÏƒÎ¬Î½Ï…Ï‡Ï„Î±",
            noon: "Î¼ÎµÏƒÎ·Î¼Î­ÏÎ¹",
            morning: "Ï€ÏÏ‰Î¯",
            afternoon: "Î±Ï€ÏŒÎ³ÎµÏ…Î¼Î±",
            evening: "Î²ÏÎ¬Î´Ï…",
            night: "Î½ÏÏ‡Ï„Î±",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var suffix;

          if (unit === "year" || unit === "month") {
            suffix = "Î¿Ï‚";
          } else if (
            unit === "week" ||
            unit === "dayOfYear" ||
            unit === "day" ||
            unit === "hour" ||
            unit === "date"
          ) {
            suffix = "Î·";
          } else {
            suffix = "Î¿";
          }

          return dirtyNumber + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 187 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(Î¿Ï‚|Î·|Î¿)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ï€Î§|Î¼Î§)/i,
          abbreviated:
            /^(Ï€\.?\s?Ï‡\.?|Ï€\.?\s?Îº\.?\s?Ï‡\.?|Î¼\.?\s?Ï‡\.?|Îº\.?\s?Ï‡\.?)/i,
          wide: /^(Ï€ÏÎ¿ Î§ÏÎ¹ÏƒÏ„Î¿(Ï|Ï…)|Ï€ÏÎ¹Î½ Î±Ï€(ÏŒ|Î¿) Ï„Î·Î½ ÎšÎ¿Î¹Î½(Î®|Î·) Î§ÏÎ¿Î½Î¿Î»Î¿Î³(Î¯|Î¹)Î±|Î¼ÎµÏ„(Î¬|Î±) Î§ÏÎ¹ÏƒÏ„(ÏŒ|Î¿)Î½|ÎšÎ¿Î¹Î½(Î®|Î·) Î§ÏÎ¿Î½Î¿Î»Î¿Î³(Î¯|Î¹)Î±)/i,
        };
        var parseEraPatterns = {
          any: [/^Ï€/i, /^(Î¼|Îº)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Ï„[1234]/i,
          wide: /^[1234]Î¿? Ï„Ï(Î¯|Î¹)Î¼Î·Î½Î¿/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[Î¹Ï†Î¼Î±Î¼Î¹Î¹Î±ÏƒÎ¿Î½Î´]/i,
          abbreviated:
            /^(Î¹Î±Î½|Ï†ÎµÎ²|Î¼[Î¬Î±]Ï|Î±Ï€Ï|Î¼[Î¬Î±][Î¹Î]|Î¹Î¿[ÏÏ…]Î½|Î¹Î¿[ÏÏ…]Î»|Î±[ÏÏ…]Î³|ÏƒÎµÏ€|Î¿ÎºÏ„|Î½Î¿[Î­Îµ]|Î´ÎµÎº)/i,
          wide: /^(Î¼[Î¬Î±][Î¹Î]|Î±[ÏÏ…]Î³Î¿[Ï…Ï]ÏƒÏ„)(Î¿Ï‚|Î¿Ï…)|(Î¹Î±Î½Î¿Ï…[Î¬Î±]Ï|Ï†ÎµÎ²ÏÎ¿Ï…[Î¬Î±]Ï|Î¼[Î¬Î±]ÏÏ„|Î±Ï€Ï[Î¯Î¹]Î»|Î¹Î¿[ÏÏ…]Î½|Î¹Î¿[ÏÏ…]Î»|ÏƒÎµÏ€Ï„[Î­Îµ]Î¼Î²Ï|Î¿ÎºÏ„[ÏŽÏ‰]Î²Ï|Î½Î¿[Î­Îµ]Î¼Î²Ï|Î´ÎµÎº[Î­Îµ]Î¼Î²Ï)(Î¹Î¿Ï‚|Î¯Î¿Ï…)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^Î¹/i,
            /^Ï†/i,
            /^Î¼/i,
            /^Î±/i,
            /^Î¼/i,
            /^Î¹/i,
            /^Î¹/i,
            /^Î±/i,
            /^Ïƒ/i,
            /^Î¿/i,
            /^Î½/i,
            /^Î´/i,
          ],
          any: [
            /^Î¹Î±/i,
            /^Ï†/i,
            /^Î¼[Î¬Î±]Ï/i,
            /^Î±Ï€/i,
            /^Î¼[Î¬Î±][Î¹Î]/i,
            /^Î¹Î¿[ÏÏ…]Î½/i,
            /^Î¹Î¿[ÏÏ…]Î»/i,
            /^Î±[ÏÏ…]/i,
            /^Ïƒ/i,
            /^Î¿/i,
            /^Î½/i,
            /^Î´/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[ÎºÎ´Ï„Ï€Ïƒ]/i,
          short: /^(ÎºÏ…|Î´Îµ|Ï„Ï|Ï„Îµ|Ï€[ÎµÎ­]|Ï€[Î±Î¬]|Ïƒ[Î±Î¬])/i,
          abbreviated: /^(ÎºÏ…Ï|Î´ÎµÏ…|Ï„ÏÎ¹|Ï„ÎµÏ„|Ï€ÎµÎ¼|Ï€Î±Ï|ÏƒÎ±Î²)/i,
          wide: /^(ÎºÏ…ÏÎ¹Î±Îº(Î®|Î·)|Î´ÎµÏ…Ï„(Î­|Îµ)ÏÎ±|Ï„Ï(Î¯|Î¹)Ï„Î·|Ï„ÎµÏ„(Î¬|Î±)ÏÏ„Î·|Ï€(Î­|Îµ)Î¼Ï€Ï„Î·|Ï€Î±ÏÎ±ÏƒÎºÎµÏ…(Î®|Î·)|Ïƒ(Î¬|Î±)Î²Î²Î±Ï„Î¿)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Îº/i, /^Î´/i, /^Ï„/i, /^Ï„/i, /^Ï€/i, /^Ï€/i, /^Ïƒ/i],
          any: [
            /^Îº/i,
            /^Î´/i,
            /^Ï„Ï/i,
            /^Ï„Îµ/i,
            /^Ï€[ÎµÎ­]/i,
            /^Ï€[Î±Î¬]/i,
            /^Ïƒ/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(Ï€Î¼|Î¼Î¼|Î¼ÎµÏƒ(Î¬|Î±)Î½Ï…Ï‡Ï„Î±|Î¼ÎµÏƒÎ·Î¼(Î­|Îµ)ÏÎ¹|Ï€ÏÏ‰(Î¯|Î¹)|Î±Ï€(ÏŒ|Î¿)Î³ÎµÏ…Î¼Î±|Î²Ï(Î¬|Î±)Î´Ï…|Î½(Ï|Ï…)Ï‡Ï„Î±)/i,
          any: /^([Ï€Î¼]\.?\s?Î¼\.?|Î¼ÎµÏƒ(Î¬|Î±)Î½Ï…Ï‡Ï„Î±|Î¼ÎµÏƒÎ·Î¼(Î­|Îµ)ÏÎ¹|Ï€ÏÏ‰(Î¯|Î¹)|Î±Ï€(ÏŒ|Î¿)Î³ÎµÏ…Î¼Î±|Î²Ï(Î¬|Î±)Î´Ï…|Î½(Ï|Ï…)Ï‡Ï„Î±)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ï€Î¼|Ï€\.\s?Î¼\./i,
            pm: /^Î¼Î¼|Î¼\.\s?Î¼\./i,
            midnight: /^Î¼ÎµÏƒÎ¬Î½/i,
            noon: /^Î¼ÎµÏƒÎ·Î¼(Î­|Îµ)/i,
            morning: /Ï€ÏÏ‰(Î¯|Î¹)/i,
            afternoon: /Î±Ï€(ÏŒ|Î¿)Î³ÎµÏ…Î¼Î±/i,
            evening: /Î²Ï(Î¬|Î±)Î´Ï…/i,
            night: /Î½(Ï|Ï…)Ï‡Ï„Î±/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 188 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 189 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "less than a second",
            other: "less than {{count}} seconds",
          },
          xSeconds: {
            one: "a second",
            other: "{{count}} seconds",
          },
          halfAMinute: "half a minute",
          lessThanXMinutes: {
            one: "less than a minute",
            other: "less than {{count}} minutes",
          },
          xMinutes: {
            one: "a minute",
            other: "{{count}} minutes",
          },
          aboutXHours: {
            one: "about an hour",
            other: "about {{count}} hours",
          },
          xHours: {
            one: "an hour",
            other: "{{count}} hours",
          },
          xDays: {
            one: "a day",
            other: "{{count}} days",
          },
          aboutXWeeks: {
            one: "about a week",
            other: "about {{count}} weeks",
          },
          xWeeks: {
            one: "a week",
            other: "{{count}} weeks",
          },
          aboutXMonths: {
            one: "about a month",
            other: "about {{count}} months",
          },
          xMonths: {
            one: "a month",
            other: "{{count}} months",
          },
          aboutXYears: {
            one: "about a year",
            other: "about {{count}} years",
          },
          xYears: {
            one: "a year",
            other: "{{count}} years",
          },
          overXYears: {
            one: "over a year",
            other: "over {{count}} years",
          },
          almostXYears: {
            one: "almost a year",
            other: "almost {{count}} years",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "in " + result;
            } else {
              return result + " ago";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 190 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, yyyy",
          long: "MMMM do, yyyy",
          medium: "MMM d, yyyy",
          short: "yyyy-MM-dd",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 191 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 192 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM, yyyy",
          medium: "d MMM, yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 193 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 194 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 195 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 196 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "malpli ol sekundo",
            other: "malpli ol {{count}} sekundoj",
          },
          xSeconds: {
            one: "1 sekundo",
            other: "{{count}} sekundoj",
          },
          halfAMinute: "duonminuto",
          lessThanXMinutes: {
            one: "malpli ol minuto",
            other: "malpli ol {{count}} minutoj",
          },
          xMinutes: {
            one: "1 minuto",
            other: "{{count}} minutoj",
          },
          aboutXHours: {
            one: "proksimume 1 horo",
            other: "proksimume {{count}} horoj",
          },
          xHours: {
            one: "1 horo",
            other: "{{count}} horoj",
          },
          xDays: {
            one: "1 tago",
            other: "{{count}} tagoj",
          },
          aboutXMonths: {
            one: "proksimume 1 monato",
            other: "proksimume {{count}} monatoj",
          },
          xWeeks: {
            one: "1 semajno",
            other: "{{count}} semajnoj",
          },
          aboutXWeeks: {
            one: "proksimume 1 semajno",
            other: "proksimume {{count}} semajnoj",
          },
          xMonths: {
            one: "1 monato",
            other: "{{count}} monatoj",
          },
          aboutXYears: {
            one: "proksimume 1 jaro",
            other: "proksimume {{count}} jaroj",
          },
          xYears: {
            one: "1 jaro",
            other: "{{count}} jaroj",
          },
          overXYears: {
            one: "pli ol 1 jaro",
            other: "pli ol {{count}} jaroj",
          },
          almostXYears: {
            one: "preskaÅ­ 1 jaro",
            other: "preskaÅ­ {{count}} jaroj",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "post " + result;
            } else {
              return "antaÅ­ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 197 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do 'de' MMMM y",
          long: "y-MMMM-dd",
          medium: "y-MMM-dd",
          short: "yyyy-MM-dd",
        };
        var timeFormats = {
          full: "Ho 'horo kaj' m:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          any: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "any",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 198 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'pasinta' eeee 'je' p",
          yesterday: "'hieraÅ­ je' p",
          today: "'hodiaÅ­ je' p",
          tomorrow: "'morgaÅ­ je' p",
          nextWeek: "eeee 'je' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 199 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["aK", "pK"],
          abbreviated: ["a.K.E.", "p.K.E."],
          wide: ["antaÅ­ Komuna Erao", "Komuna Erao"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: [
            "1-a kvaronjaro",
            "2-a kvaronjaro",
            "3-a kvaronjaro",
            "4-a kvaronjaro",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jan",
            "feb",
            "mar",
            "apr",
            "maj",
            "jun",
            "jul",
            "aÅ­g",
            "sep",
            "okt",
            "nov",
            "dec",
          ],
          wide: [
            "januaro",
            "februaro",
            "marto",
            "aprilo",
            "majo",
            "junio",
            "julio",
            "aÅ­gusto",
            "septembro",
            "oktobro",
            "novembro",
            "decembro",
          ],
        };
        var dayValues = {
          narrow: ["D", "L", "M", "M", "Ä´", "V", "S"],
          short: ["di", "lu", "ma", "me", "Äµa", "ve", "sa"],
          abbreviated: ["dim", "lun", "mar", "mer", "ÄµaÅ­", "ven", "sab"],
          wide: [
            "dimanÄ‰o",
            "lundo",
            "mardo",
            "merkredo",
            "ÄµaÅ­do",
            "vendredo",
            "sabato",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "noktomezo",
            noon: "tagmezo",
            morning: "matene",
            afternoon: "posttagmeze",
            evening: "vespere",
            night: "nokte",
          },
          abbreviated: {
            am: "a.t.m.",
            pm: "p.t.m.",
            midnight: "noktomezo",
            noon: "tagmezo",
            morning: "matene",
            afternoon: "posttagmeze",
            evening: "vespere",
            night: "nokte",
          },
          wide: {
            am: "antaÅ­tagmeze",
            pm: "posttagmeze",
            midnight: "noktomezo",
            noon: "tagmezo",
            morning: "matene",
            afternoon: "posttagmeze",
            evening: "vespere",
            night: "nokte",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "-a";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 200 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(-?a)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^([ap]k)/i,
          abbreviated: /^([ap]\.?\s?k\.?\s?e\.?)/i,
          wide: /^((antaÇ” |post )?komuna erao)/i,
        };
        var parseEraPatterns = {
          any: [/^a/i, /^[kp]/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^k[1234]/i,
          wide: /^[1234](-?a)? kvaronjaro/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan|feb|mar|apr|maj|jun|jul|a(Å­|ux|uh|u)g|sep|okt|nov|dec)/i,
          wide: /^(januaro|februaro|marto|aprilo|majo|junio|julio|a(Å­|ux|uh|u)gusto|septembro|oktobro|novembro|decembro)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^maj/i,
            /^jun/i,
            /^jul/i,
            /^a(u|Å­)/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dlmÄµjvs]/i,
          short: /^(di|lu|ma|me|(Äµ|jx|jh|j)a|ve|sa)/i,
          abbreviated: /^(dim|lun|mar|mer|(Äµ|jx|jh|j)a(Å­|ux|uh|u)|ven|sab)/i,
          wide: /^(diman(Ä‰|cx|ch|c)o|lundo|mardo|merkredo|(Äµ|jx|jh|j)a(Å­|ux|uh|u)do|vendredo|sabato)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^(j|Äµ)/i, /^v/i, /^s/i],
          any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^(j|Äµ)/i, /^v/i, /^s/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^([ap]|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
          abbreviated:
            /^([ap][.\s]?t[.\s]?m[.\s]?|(posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo])/i,
          wide: /^(anta(Å­|ux)tagmez|posttagmez|noktomez|tagmez|maten|vesper|nokt)[eo]/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^noktom/i,
            noon: /^t/i,
            morning: /^m/i,
            afternoon: /^posttagmeze/i,
            evening: /^v/i,
            night: /^n/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 201 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "menos de un segundo",
            other: "menos de {{count}} segundos",
          },
          xSeconds: {
            one: "1 segundo",
            other: "{{count}} segundos",
          },
          halfAMinute: "medio minuto",
          lessThanXMinutes: {
            one: "menos de un minuto",
            other: "menos de {{count}} minutos",
          },
          xMinutes: {
            one: "1 minuto",
            other: "{{count}} minutos",
          },
          aboutXHours: {
            one: "alrededor de 1 hora",
            other: "alrededor de {{count}} horas",
          },
          xHours: {
            one: "1 hora",
            other: "{{count}} horas",
          },
          xDays: {
            one: "1 dá­a",
            other: "{{count}} dá­as",
          },
          aboutXWeeks: {
            one: "alrededor de 1 semana",
            other: "alrededor de {{count}} semanas",
          },
          xWeeks: {
            one: "1 semana",
            other: "{{count}} semanas",
          },
          aboutXMonths: {
            one: "alrededor de 1 mes",
            other: "alrededor de {{count}} meses",
          },
          xMonths: {
            one: "1 mes",
            other: "{{count}} meses",
          },
          aboutXYears: {
            one: "alrededor de 1 aá±o",
            other: "alrededor de {{count}} aá±os",
          },
          xYears: {
            one: "1 aá±o",
            other: "{{count}} aá±os",
          },
          overXYears: {
            one: "má¡s de 1 aá±o",
            other: "má¡s de {{count}} aá±os",
          },
          almostXYears: {
            one: "casi 1 aá±o",
            other: "casi {{count}} aá±os",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "en " + result;
            } else {
              return "hace " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 202 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d 'de' MMMM 'de' y",
          long: "d 'de' MMMM 'de' y",
          medium: "d MMM y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'a las' {{time}}",
          long: "{{date}} 'a las' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 203 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'el' eeee 'pasado a la' LT",
          yesterday: "'ayer a la' p",
          today: "'hoy a la' p",
          tomorrow: "'maá±ana a la' p",
          nextWeek: "eeee 'a la' p",
          other: "P",
        };
        var formatRelativeLocalePlural = {
          lastWeek: "'el' eeee 'pasado a las' p",
          yesterday: "'ayer a las' p",
          today: "'hoy a las' p",
          tomorrow: "'maá±ana a las' p",
          nextWeek: "eeee 'a las' p",
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          if (date.getUTCHours() !== 1) {
            return formatRelativeLocalePlural[token];
          }

          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 204 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["AC", "DC"],
          abbreviated: ["AC", "DC"],
          wide: ["antes de cristo", "despuá©s de cristo"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["T1", "T2", "T3", "T4"],
          wide: [
            "1Âº trimestre",
            "2Âº trimestre",
            "3Âº trimestre",
            "4Âº trimestre",
          ],
        };
        var monthValues = {
          narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
          abbreviated: [
            "ene",
            "feb",
            "mar",
            "abr",
            "may",
            "jun",
            "jul",
            "ago",
            "sep",
            "oct",
            "nov",
            "dic",
          ],
          wide: [
            "enero",
            "febrero",
            "marzo",
            "abril",
            "mayo",
            "junio",
            "julio",
            "agosto",
            "septiembre",
            "octubre",
            "noviembre",
            "diciembre",
          ],
        };
        var dayValues = {
          narrow: ["d", "l", "m", "m", "j", "v", "s"],
          short: ["do", "lu", "ma", "mi", "ju", "vi", "sa"],
          abbreviated: ["dom", "lun", "mar", "miá©", "jue", "vie", "sá¡b"],
          wide: [
            "domingo",
            "lunes",
            "martes",
            "miá©rcoles",
            "jueves",
            "viernes",
            "sábado",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "md",
            morning: "maá±ana",
            afternoon: "tarde",
            evening: "tarde",
            night: "noche",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "medianoche",
            noon: "mediodia",
            morning: "maá±ana",
            afternoon: "tarde",
            evening: "tarde",
            night: "noche",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "medianoche",
            noon: "mediodia",
            morning: "maá±ana",
            afternoon: "tarde",
            evening: "tarde",
            night: "noche",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "md",
            morning: "de la maá±ana",
            afternoon: "de la tarde",
            evening: "de la tarde",
            night: "de la noche",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "medianoche",
            noon: "mediodia",
            morning: "de la maá±ana",
            afternoon: "de la tarde",
            evening: "de la tarde",
            night: "de la noche",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "medianoche",
            noon: "mediodia",
            morning: "de la maá±ana",
            afternoon: "de la tarde",
            evening: "de la tarde",
            night: "de la noche",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "Âº";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 205 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(Âº)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(ac|dc|a|d)/i,
          abbreviated:
            /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
          wide: /^(antes de cristo|antes de la era com[uáº]n|despu[eá©]s de cristo|era com[uáº]n)/i,
        };
        var parseEraPatterns = {
          any: [/^ac/i, /^dc/i],
          wide: [
            /^(antes de cristo|antes de la era com[uáº]n)/i,
            /^(despu[eá©]s de cristo|era com[uáº]n)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^T[1234]/i,
          wide: /^[1234](Âº)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[efmajsond]/i,
          abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,
          wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^e/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^en/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^sep/i,
            /^oct/i,
            /^nov/i,
            /^dic/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dlmjvs]/i,
          short: /^(do|lu|ma|mi|ju|vi|sa)/i,
          abbreviated: /^(dom|lun|mar|mie|jue|vie|sab)/i,
          wide: /^(domingo|lunes|martes|mi[á©e]rcoles|jueves|viernes|s[á¡a]bado)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
          any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mn|md|(de la|a las) (maá±ana|tarde|noche))/i,
          any: /^([ap]\.?\s?m\.?|medianoche|mediodia|(de la|a las) (maá±ana|tarde|noche))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mn/i,
            noon: /^md/i,
            morning: /maá±ana/i,
            afternoon: /tarde/i,
            evening: /tarde/i,
            night: /noche/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 206 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            standalone: {
              one: "vá¤hem kui á¼ks sekund",
              other: "vá¤hem kui {{count}} sekundit",
            },
            withPreposition: {
              one: "vá¤hem kui á¼he sekundi",
              other: "vá¤hem kui {{count}} sekundi",
            },
          },
          xSeconds: {
            standalone: {
              one: "á¼ks sekund",
              other: "{{count}} sekundit",
            },
            withPreposition: {
              one: "á¼he sekundi",
              other: "{{count}} sekundi",
            },
          },
          halfAMinute: {
            standalone: "pool minutit",
            withPreposition: "poole minuti",
          },
          lessThanXMinutes: {
            standalone: {
              one: "vá¤hem kui á¼ks minut",
              other: "vá¤hem kui {{count}} minutit",
            },
            withPreposition: {
              one: "vá¤hem kui á¼he minuti",
              other: "vá¤hem kui {{count}} minuti",
            },
          },
          xMinutes: {
            standalone: {
              one: "á¼ks minut",
              other: "{{count}} minutit",
            },
            withPreposition: {
              one: "á¼he minuti",
              other: "{{count}} minuti",
            },
          },
          aboutXHours: {
            standalone: {
              one: "umbes á¼ks tund",
              other: "umbes {{count}} tundi",
            },
            withPreposition: {
              one: "umbes á¼he tunni",
              other: "umbes {{count}} tunni",
            },
          },
          xHours: {
            standalone: {
              one: "á¼ks tund",
              other: "{{count}} tundi",
            },
            withPreposition: {
              one: "á¼he tunni",
              other: "{{count}} tunni",
            },
          },
          xDays: {
            standalone: {
              one: "á¼ks pá¤ev",
              other: "{{count}} pá¤eva",
            },
            withPreposition: {
              one: "á¼he pá¤eva",
              other: "{{count}} pá¤eva",
            },
          },
          aboutXWeeks: {
            standalone: {
              one: "umbes á¼ks ná¤dal",
              other: "umbes {{count}} ná¤dalat",
            },
            withPreposition: {
              one: "umbes á¼he ná¤dala",
              other: "umbes {{count}} ná¤dala",
            },
          },
          xWeeks: {
            standalone: {
              one: "á¼ks ná¤dal",
              other: "{{count}} ná¤dalat",
            },
            withPreposition: {
              one: "á¼he ná¤dala",
              other: "{{count}} ná¤dala",
            },
          },
          aboutXMonths: {
            standalone: {
              one: "umbes á¼ks kuu",
              other: "umbes {{count}} kuud",
            },
            withPreposition: {
              one: "umbes á¼he kuu",
              other: "umbes {{count}} kuu",
            },
          },
          xMonths: {
            standalone: {
              one: "á¼ks kuu",
              other: "{{count}} kuud",
            },
            withPreposition: {
              one: "á¼he kuu",
              other: "{{count}} kuu",
            },
          },
          aboutXYears: {
            standalone: {
              one: "umbes á¼ks aasta",
              other: "umbes {{count}} aastat",
            },
            withPreposition: {
              one: "umbes á¼he aasta",
              other: "umbes {{count}} aasta",
            },
          },
          xYears: {
            standalone: {
              one: "á¼ks aasta",
              other: "{{count}} aastat",
            },
            withPreposition: {
              one: "á¼he aasta",
              other: "{{count}} aasta",
            },
          },
          overXYears: {
            standalone: {
              one: "rohkem kui á¼ks aasta",
              other: "rohkem kui {{count}} aastat",
            },
            withPreposition: {
              one: "rohkem kui á¼he aasta",
              other: "rohkem kui {{count}} aasta",
            },
          },
          almostXYears: {
            standalone: {
              one: "peaaegu á¼ks aasta",
              other: "peaaegu {{count}} aastat",
            },
            withPreposition: {
              one: "peaaegu á¼he aasta",
              other: "peaaegu {{count}} aasta",
            },
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var usageGroup = options.addSuffix
            ? formatDistanceLocale[token].withPreposition
            : formatDistanceLocale[token].standalone;
          var result;

          if (typeof usageGroup === "string") {
            result = usageGroup;
          } else if (count === 1) {
            result = usageGroup.one;
          } else {
            result = usageGroup.other.replace("{{count}}", count);
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " pá¤rast";
            } else {
              return result + " eest";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 207 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "eeee, d. MMMM y",
          long: "d. MMMM y",
          medium: "d. MMM y",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'kell' {{time}}",
          long: "{{date}} 'kell' {{time}}",
          medium: "{{date}}. {{time}}",
          short: "{{date}}. {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 208 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'eelmine' eeee 'kell' p",
          yesterday: "'eile kell' p",
          today: "'tá¤na kell' p",
          tomorrow: "'homme kell' p",
          nextWeek: "'já¤rgmine' eeee 'kell' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 209 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["e.m.a", "m.a.j"],
          abbreviated: ["e.m.a", "m.a.j"],
          wide: ["enne meie ajaarvamist", "meie ajaarvamise já¤rgi"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
        };
        var monthValues = {
          narrow: ["J", "V", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jaan",
            "veebr",
            "má¤rts",
            "apr",
            "mai",
            "juuni",
            "juuli",
            "aug",
            "sept",
            "okt",
            "nov",
            "dets",
          ],
          wide: [
            "jaanuar",
            "veebruar",
            "má¤rts",
            "aprill",
            "mai",
            "juuni",
            "juuli",
            "august",
            "september",
            "oktoober",
            "november",
            "detsember",
          ],
        };
        var dayValues = {
          narrow: ["P", "E", "T", "K", "N", "R", "L"],
          short: ["P", "E", "T", "K", "N", "R", "L"],
          abbreviated: [
            "pá¼hap.",
            "esmasp.",
            "teisip.",
            "kolmap.",
            "neljap.",
            "reede.",
            "laup.",
          ],
          wide: [
            "pá¼hapá¤ev",
            "esmaspá¤ev",
            "teisipá¤ev",
            "kolmapá¤ev",
            "neljapá¤ev",
            "reede",
            "laupá¤ev",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "keská¶á¶",
            noon: "keskpá¤ev",
            morning: "hommik",
            afternoon: "pá¤rastláµuna",
            evening: "áµhtu",
            night: "á¶á¶",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "keská¶á¶",
            noon: "keskpá¤ev",
            morning: "hommik",
            afternoon: "pá¤rastláµuna",
            evening: "áµhtu",
            night: "á¶á¶",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "keská¶á¶",
            noon: "keskpá¤ev",
            morning: "hommik",
            afternoon: "pá¤rastláµuna",
            evening: "áµhtu",
            night: "á¶á¶",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "keská¶á¶l",
            noon: "keskpá¤eval",
            morning: "hommikul",
            afternoon: "pá¤rastláµunal",
            evening: "áµhtul",
            night: "á¶á¶sel",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "keská¶á¶l",
            noon: "keskpá¤eval",
            morning: "hommikul",
            afternoon: "pá¤rastláµunal",
            evening: "áµhtul",
            night: "á¶á¶sel",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "keská¶á¶l",
            noon: "keskpá¤eval",
            morning: "hommikul",
            afternoon: "pá¤rastláµunal",
            evening: "áµhtul",
            night: "á¶á¶sel",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            formattingValues: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            formattingValues: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            formattingValues: formattingDayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 210 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^\d+\./i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
          abbreviated: /^(e\.m\.a|m\.a\.j|eKr|pKr)/i,
          wide: /^(enne meie ajaarvamist|meie ajaarvamise já¤rgi|enne Kristust|pá¤rast Kristust)/i,
        };
        var parseEraPatterns = {
          any: [/^e/i, /^(m|p)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^K[1234]/i,
          wide: /^[1234](\.)? kvartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jvmasond]/i,
          abbreviated:
            /^('jaan|veebr|má¤rts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets')/i,
          wide: /^('jaanuar|veebruar|má¤rts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember')/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^v/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^v/i,
            /^má¤r/i,
            /^ap/i,
            /^mai/i,
            /^jun/i,
            /^jul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[petknrl]/i,
          short: /^[petknrl]/i,
          abbreviated: /^(pá¼h?|esm?|tei?|kolm?|nel?|ree?|laup?)\.?/i,
          wide: /^('pá¼hapá¤ev|esmaspá¤ev|teisipá¤ev|kolmapá¤ev|neljapá¤ev|reede|laupá¤ev')/i,
        };
        var parseDayPatterns = {
          any: [/^p/i, /^e/i, /^t/i, /^k/i, /^n/i, /^r/i, /^l/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(am|pm|keská¶á¶|keskpá¤ev|hommik|pá¤rastláµuna|áµhtu|á¶á¶)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^keská¶/i,
            noon: /^keskp/i,
            morning: /hommik/i,
            afternoon: /pá¤rastláµuna/i,
            evening: /áµhtu/i,
            night: /á¶á¶/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 211 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "segundo bat baino gutxiago",
            other: "{{count}} segundo baino gutxiago",
          },
          xSeconds: {
            one: "1 segundo",
            other: "{{count}} segundo",
          },
          halfAMinute: "minutu erdi",
          lessThanXMinutes: {
            one: "minutu bat baino gutxiago",
            other: "{{count}} minutu baino gutxiago",
          },
          xMinutes: {
            one: "1 minutu",
            other: "{{count}} minutu",
          },
          aboutXHours: {
            one: "1 ordu gutxi gorabehera",
            other: "{{count}} ordu gutxi gorabehera",
          },
          xHours: {
            one: "1 ordu",
            other: "{{count}} ordu",
          },
          xDays: {
            one: "1 egun",
            other: "{{count}} egun",
          },
          aboutXWeeks: {
            one: "aste 1 inguru",
            other: "{{count}} aste inguru",
          },
          xWeeks: {
            one: "1 aste",
            other: "{{count}} astean",
          },
          aboutXMonths: {
            one: "1 hilabete gutxi gorabehera",
            other: "{{count}} hilabete gutxi gorabehera",
          },
          xMonths: {
            one: "1 hilabete",
            other: "{{count}} hilabete",
          },
          aboutXYears: {
            one: "1 urte gutxi gorabehera",
            other: "{{count}} urte gutxi gorabehera",
          },
          xYears: {
            one: "1 urte",
            other: "{{count}} urte",
          },
          overXYears: {
            one: "1 urte baino gehiago",
            other: "{{count}} urte baino gehiago",
          },
          almostXYears: {
            one: "ia 1 urte",
            other: "ia {{count}} urte",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "en " + result;
            } else {
              return "duela " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 212 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, y'ko' MMMM'ren' d'a' y'ren'",
          long: "y'ko' MMMM'ren' d'a'",
          medium: "y MMM d",
          short: "yy/MM/dd",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'tan' {{time}}",
          long: "{{date}} 'tan' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 213 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'joan den' eeee, LT",
          yesterday: "'atzo,' p",
          today: "'gaur,' p",
          tomorrow: "'bihar,' p",
          nextWeek: "eeee, p",
          other: "P",
        };
        var formatRelativeLocalePlural = {
          lastWeek: "'joan den' eeee, p",
          yesterday: "'atzo,' p",
          today: "'gaur,' p",
          tomorrow: "'bihar,' p",
          nextWeek: "eeee, p",
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          if (date.getUTCHours() !== 1) {
            return formatRelativeLocalePlural[token];
          }

          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 214 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["k.a.", "k.o."],
          abbreviated: ["k.a.", "k.o."],
          wide: ["kristo aurretik", "kristo ondoren"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1H", "2H", "3H", "4H"],
          wide: [
            "1. hiruhilekoa",
            "2. hiruhilekoa",
            "3. hiruhilekoa",
            "4. hiruhilekoa",
          ],
        };
        var monthValues = {
          narrow: ["u", "o", "m", "a", "m", "e", "u", "a", "i", "u", "a", "a"],
          abbreviated: [
            "urt",
            "ots",
            "mar",
            "api",
            "mai",
            "eka",
            "uzt",
            "abu",
            "ira",
            "urr",
            "aza",
            "abe",
          ],
          wide: [
            "urtarrila",
            "otsaila",
            "martxoa",
            "apirila",
            "maiatza",
            "ekaina",
            "uztaila",
            "abuztua",
            "iraila",
            "urria",
            "azaroa",
            "abendua",
          ],
        };
        var dayValues = {
          narrow: ["i", "a", "a", "a", "o", "o", "l"],
          short: ["ig", "al", "as", "az", "og", "or", "lr"],
          abbreviated: ["iga", "ast", "ast", "ast", "ost", "ost", "lar"],
          wide: [
            "igandea",
            "astelehena",
            "asteartea",
            "asteazkena",
            "osteguna",
            "ostirala",
            "larunbata",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "ge",
            noon: "eg",
            morning: "goiza",
            afternoon: "arratsaldea",
            evening: "arratsaldea",
            night: "gaua",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "gauerdia",
            noon: "eguerdia",
            morning: "goiza",
            afternoon: "arratsaldea",
            evening: "arratsaldea",
            night: "gaua",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "gauerdia",
            noon: "eguerdia",
            morning: "goiza",
            afternoon: "arratsaldea",
            evening: "arratsaldea",
            night: "gaua",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "ge",
            noon: "eg",
            morning: "goizean",
            afternoon: "arratsaldean",
            evening: "arratsaldean",
            night: "gauean",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "gauerdia",
            noon: "eguerdia",
            morning: "goizean",
            afternoon: "arratsaldean",
            evening: "arratsaldean",
            night: "gauean",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "gauerdia",
            noon: "eguerdia",
            morning: "goizean",
            afternoon: "arratsaldean",
            evening: "arratsaldean",
            night: "gauean",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 215 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(.)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(k.a.|k.o.)/i,
          abbreviated: /^(k.a.|k.o.)/i,
          wide: /^(kristo aurretik|kristo ondoren)/i,
        };
        var parseEraPatterns = {
          narrow: [/^k.a./i, /^k.o./i],
          abbreviated: [/^(k.a.)/i, /^(k.o.)/i],
          wide: [/^(kristo aurretik)/i, /^(kristo ondoren)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]H/i,
          wide: /^[1234](.)? hiruhilekoa/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[uomaei]/i,
          abbreviated: /^(urt|ots|mar|api|mai|eka|uzt|abu|ira|urr|aza|abe)/i,
          wide: /^(urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^u/i,
            /^o/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^e/i,
            /^u/i,
            /^a/i,
            /^i/i,
            /^u/i,
            /^a/i,
            /^a/i,
          ],
          any: [
            /^urt/i,
            /^ots/i,
            /^mar/i,
            /^api/i,
            /^mai/i,
            /^eka/i,
            /^uzt/i,
            /^abu/i,
            /^ira/i,
            /^urr/i,
            /^aza/i,
            /^abe/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[iaol]/i,
          short: /^(ig|al|as|az|og|or|lr)/i,
          abbreviated: /^(iga|ast|ast|ast|ost|ost|lar)/i,
          wide: /^(igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata)/i,
        };
        var parseDayPatterns = {
          narrow: [/^i/i, /^a/i, /^a/i, /^a/i, /^o/i, /^o/i, /^l/i],
          short: [/^ig/i, /^al/i, /^as/i, /^az/i, /^og/i, /^or/i, /^lr/i],
          abbreviated: [
            /^iga/i,
            /^ast/i,
            /^ast/i,
            /^ast/i,
            /^ost/i,
            /^ost/i,
            /^lar/i,
          ],
          wide: [
            /^igandea/i,
            /^astelehena/i,
            /^asteartea/i,
            /^asteazkena/i,
            /^osteguna/i,
            /^ostirala/i,
            /^larunbata/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|ge|eg|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,
          any: /^([ap]\.?\s?m\.?|gauerdia|eguerdia|((goiza|goizean)|arratsaldea|(gaua|gauean)))/i,
        };
        var parseDayPeriodPatterns = {
          narrow: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^ge/i,
            noon: /^eg/i,
            morning: /goiz/i,
            afternoon: /arratsaldea/i,
            evening: /arratsaldea/i,
            night: /gau/i,
          },
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^gauerdia/i,
            noon: /^eguerdia/i,
            morning: /goiz/i,
            afternoon: /arratsaldea/i,
            evening: /arratsaldea/i,
            night: /gau/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 216 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Ú©Ù…ØªØ± Ø§Ø² ÛŒÚ© Ø«Ø§Ù†ÛŒÙ‡",
            other: "Ú©Ù…ØªØ± Ø§Ø² {{count}} Ø«Ø§Ù†ÛŒÙ‡",
          },
          xSeconds: {
            one: "1 Ø«Ø§Ù†ÛŒÙ‡",
            other: "{{count}} Ø«Ø§Ù†ÛŒÙ‡",
          },
          halfAMinute: "Ù†ÛŒÙ… Ø¯Ù‚ÛŒÙ‚Ù‡",
          lessThanXMinutes: {
            one: "Ú©Ù…ØªØ± Ø§Ø² ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡",
            other: "Ú©Ù…ØªØ± Ø§Ø² {{count}} Ø¯Ù‚ÛŒÙ‚Ù‡",
          },
          xMinutes: {
            one: "1 Ø¯Ù‚ÛŒÙ‚Ù‡",
            other: "{{count}} Ø¯Ù‚ÛŒÙ‚Ù‡",
          },
          aboutXHours: {
            one: "Ø­Ø¯ÙˆØ¯ 1 Ø³Ø§Ø¹Øª",
            other: "Ø­Ø¯ÙˆØ¯ {{count}} Ø³Ø§Ø¹Øª",
          },
          xHours: {
            one: "1 Ø³Ø§Ø¹Øª",
            other: "{{count}} Ø³Ø§Ø¹Øª",
          },
          xDays: {
            one: "1 Ø±ÙˆØ²",
            other: "{{count}} Ø±ÙˆØ²",
          },
          aboutXWeeks: {
            one: "Ø­Ø¯ÙˆØ¯ 1 Ù‡ÙØªÙ‡",
            other: "Ø­Ø¯ÙˆØ¯ {{count}} Ù‡ÙØªÙ‡",
          },
          xWeeks: {
            one: "1 Ù‡ÙØªÙ‡",
            other: "{{count}} Ù‡ÙØªÙ‡",
          },
          aboutXMonths: {
            one: "Ø­Ø¯ÙˆØ¯ 1 Ù…Ø§Ù‡",
            other: "Ø­Ø¯ÙˆØ¯ {{count}} Ù…Ø§Ù‡",
          },
          xMonths: {
            one: "1 Ù…Ø§Ù‡",
            other: "{{count}} Ù…Ø§Ù‡",
          },
          aboutXYears: {
            one: "Ø­Ø¯ÙˆØ¯ 1 Ø³Ø§Ù„",
            other: "Ø­Ø¯ÙˆØ¯ {{count}} Ø³Ø§Ù„",
          },
          xYears: {
            one: "1 Ø³Ø§Ù„",
            other: "{{count}} Ø³Ø§Ù„",
          },
          overXYears: {
            one: "Ø¨ÛŒØ´ØªØ± Ø§Ø² 1 Ø³Ø§Ù„",
            other: "Ø¨ÛŒØ´ØªØ± Ø§Ø² {{count}} Ø³Ø§Ù„",
          },
          almostXYears: {
            one: "Ù†Ø²Ø¯ÛŒÚ© 1 Ø³Ø§Ù„",
            other: "Ù†Ø²Ø¯ÛŒÚ© {{count}} Ø³Ø§Ù„",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "Ø¯Ø± " + result;
            } else {
              return result + " Ù‚Ø¨Ù„";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 217 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE do MMMM y",
          long: "do MMMM y",
          medium: "d MMM y",
          short: "yyyy/MM/dd",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Ø¯Ø±' {{time}}",
          long: "{{date}} 'Ø¯Ø±' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 218 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'Ú¯Ø°Ø´ØªÙ‡ Ø¯Ø±' p",
          yesterday: "'Ø¯ÛŒØ±ÙˆØ² Ø¯Ø±' p",
          today: "'Ø§Ù…Ø±ÙˆØ² Ø¯Ø±' p",
          tomorrow: "'ÙØ±Ø¯Ø§ Ø¯Ø±' p",
          nextWeek: "eeee 'Ø¯Ø±' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 219 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ù‚", "Ø¨"],
          abbreviated: ["Ù‚.Ù….", "Ø¨.Ù…."],
          wide: ["Ù‚Ø¨Ù„ Ø§Ø² Ù…ÛŒÙ„Ø§Ø¯", "Ø¨Ø¹Ø¯ Ø§Ø² Ù…ÛŒÙ„Ø§Ø¯"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Ø³â€ŒÙ…1", "Ø³â€ŒÙ…2", "Ø³â€ŒÙ…3", "Ø³â€ŒÙ…4"],
          wide: [
            "Ø³Ù‡â€ŒÙ…Ø§Ù‡Ù‡ 1",
            "Ø³Ù‡â€ŒÙ…Ø§Ù‡Ù‡ 2",
            "Ø³Ù‡â€ŒÙ…Ø§Ù‡Ù‡ 3",
            "Ø³Ù‡â€ŒÙ…Ø§Ù‡Ù‡ 4",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: [
            "Ú˜",
            "Ù",
            "Ù…",
            "Ø¢",
            "Ù…",
            "Ø¬",
            "Ø¬",
            "Ø¢",
            "Ø³",
            "Ø§",
            "Ù†",
            "Ø¯",
          ],
          abbreviated: [
            "Ú˜Ø§Ù†Ù€",
            "ÙÙˆØ±",
            "Ù…Ø§Ø±Ø³",
            "Ø¢Ù¾Ø±",
            "Ù…ÛŒ",
            "Ø¬ÙˆÙ†",
            "Ø¬ÙˆÙ„Ù€",
            "Ø¢Ú¯Ùˆ",
            "Ø³Ù¾ØªÙ€",
            "Ø§Ú©ØªÙ€",
            "Ù†ÙˆØ§Ù…Ù€",
            "Ø¯Ø³Ø§Ù…Ù€",
          ],
          wide: [
            "Ú˜Ø§Ù†ÙˆÛŒÙ‡",
            "ÙÙˆØ±ÛŒÙ‡",
            "Ù…Ø§Ø±Ø³",
            "Ø¢Ù¾Ø±ÛŒÙ„",
            "Ù…ÛŒ",
            "Ø¬ÙˆÙ†",
            "Ø¬ÙˆÙ„Ø§ÛŒ",
            "Ø¢Ú¯ÙˆØ³Øª",
            "Ø³Ù¾ØªØ§Ù…Ø¨Ø±",
            "Ø§Ú©ØªØ¨Ø±",
            "Ù†ÙˆØ§Ù…Ø¨Ø±",
            "Ø¯Ø³Ø§Ù…Ø¨Ø±",
          ],
        };
        var dayValues = {
          narrow: ["ÛŒ", "Ø¯", "Ø³", "Ú†", "Ù¾", "Ø¬", "Ø´"],
          short: ["1Ø´", "2Ø´", "3Ø´", "4Ø´", "5Ø´", "Ø¬", "Ø´"],
          abbreviated: [
            "ÛŒÚ©Ø´Ù†Ø¨Ù‡",
            "Ø¯ÙˆØ´Ù†Ø¨Ù‡",
            "Ø³Ù‡â€ŒØ´Ù†Ø¨Ù‡",
            "Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡",
            "Ù¾Ù†Ø¬Ø´Ù†Ø¨Ù‡",
            "Ø¬Ù…Ø¹Ù‡",
            "Ø´Ù†Ø¨Ù‡",
          ],
          wide: [
            "ÛŒÚ©Ø´Ù†Ø¨Ù‡",
            "Ø¯ÙˆØ´Ù†Ø¨Ù‡",
            "Ø³Ù‡â€ŒØ´Ù†Ø¨Ù‡",
            "Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡",
            "Ù¾Ù†Ø¬Ø´Ù†Ø¨Ù‡",
            "Ø¬Ù…Ø¹Ù‡",
            "Ø´Ù†Ø¨Ù‡",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ù‚",
            pm: "Ø¨",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "Øµ",
            afternoon: "Ø¨.Ø¸.",
            evening: "Ø¹",
            night: "Ø´",
          },
          abbreviated: {
            am: "Ù‚.Ø¸.",
            pm: "Ø¨.Ø¸.",
            midnight: "Ù†ÛŒÙ…Ù‡â€ŒØ´Ø¨",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø­",
            afternoon: "Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±",
            evening: "Ø¹ØµØ±",
            night: "Ø´Ø¨",
          },
          wide: {
            am: "Ù‚Ø¨Ù„â€ŒØ§Ø²Ø¸Ù‡Ø±",
            pm: "Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±",
            midnight: "Ù†ÛŒÙ…Ù‡â€ŒØ´Ø¨",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø­",
            afternoon: "Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±",
            evening: "Ø¹ØµØ±",
            night: "Ø´Ø¨",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Ù‚",
            pm: "Ø¨",
            midnight: "Ù†",
            noon: "Ø¸",
            morning: "Øµ",
            afternoon: "Ø¨.Ø¸.",
            evening: "Ø¹",
            night: "Ø´",
          },
          abbreviated: {
            am: "Ù‚.Ø¸.",
            pm: "Ø¨.Ø¸.",
            midnight: "Ù†ÛŒÙ…Ù‡â€ŒØ´Ø¨",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø­",
            afternoon: "Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±",
            evening: "Ø¹ØµØ±",
            night: "Ø´Ø¨",
          },
          wide: {
            am: "Ù‚Ø¨Ù„â€ŒØ§Ø²Ø¸Ù‡Ø±",
            pm: "Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±",
            midnight: "Ù†ÛŒÙ…Ù‡â€ŒØ´Ø¨",
            noon: "Ø¸Ù‡Ø±",
            morning: "ØµØ¨Ø­",
            afternoon: "Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±",
            evening: "Ø¹ØµØ±",
            night: "Ø´Ø¨",
          },
        };

        function ordinalNumber(dirtyNumber) {
          return String(dirtyNumber);
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 220 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ù‚|Ø¨)/i,
          abbreviated:
            /^(Ù‚\.?\s?Ù…\.?|Ù‚\.?\s?Ø¯\.?\s?Ù…\.?|Ù…\.?\s?|Ø¯\.?\s?Ù…\.?)/i,
          wide: /^(Ù‚Ø¨Ù„ Ø§Ø² Ù…ÛŒÙ„Ø§Ø¯|Ù‚Ø¨Ù„ Ø§Ø² Ø¯ÙˆØ±Ø§Ù† Ù…Ø´ØªØ±Ú©|Ù…ÛŒÙ„Ø§Ø¯ÛŒ|Ø¯ÙˆØ±Ø§Ù† Ù…Ø´ØªØ±Ú©|Ø¨Ø¹Ø¯ Ø§Ø² Ù…ÛŒÙ„Ø§Ø¯)/i,
        };
        var parseEraPatterns = {
          any: [/^Ù‚Ø¨Ù„/i, /^Ø¨Ø¹Ø¯/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Ø³â€ŒÙ…[1234]/i,
          wide: /^Ø³Ù‡â€ŒÙ…Ø§Ù‡Ù‡ [1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[Ø¬Ú˜ÙÙ…Ø¢Ø§Ù…Ø§Ø³Ù†Ø¯]/i,
          abbreviated:
            /^(Ø¬Ù†Ùˆ|Ú˜Ø§Ù†Ù€|Ú˜Ø§Ù†ÙˆÛŒÙ‡|ÙÙˆØ±ÛŒÙ‡|ÙÙˆØ±|Ù…Ø§Ø±Ø³|Ø¢ÙˆØ±ÛŒÙ„|Ø¢Ù¾Ø±|Ù…Ù‡|Ù…ÛŒ|Ú˜ÙˆØ¦Ù†|Ø¬ÙˆÙ†|Ø¬ÙˆÙ„|Ø¬ÙˆÙ„Ù€|Ú˜ÙˆØ¦ÛŒÙ‡|Ø§ÙˆØª|Ø¢Ú¯Ùˆ|Ø³Ù¾ØªÙ…Ø¨Ø±|Ø³Ù¾ØªØ§Ù…Ø¨Ø±|Ø§Ú©ØªØ¨Ø±|Ø§Ú©ØªÙˆØ¨Ø±|Ù†ÙˆØ§Ù…Ø¨Ø±|Ù†ÙˆØ§Ù…Ù€|Ø¯Ø³Ø§Ù…Ø¨Ø±|Ø¯Ø³Ø§Ù…Ù€|Ø¯Ø³Ù…)/i,
          wide: /^(Ú˜Ø§Ù†ÙˆÛŒÙ‡|Ø¬Ù†ÙˆØ±ÛŒ|ÙØ¨Ø±ÙˆØ±ÛŒ|ÙÙˆØ±ÛŒÙ‡|Ù…Ø§Ø±Ú†|Ù…Ø§Ø±Ø³|Ø¢Ù¾Ø±ÛŒÙ„|Ø§Ù¾Ø±ÛŒÙ„|Ø§ÛŒÙ¾Ø±ÛŒÙ„|Ø¢ÙˆØ±ÛŒÙ„|Ù…Ù‡|Ù…ÛŒ|Ú˜ÙˆØ¦Ù†|Ø¬ÙˆÙ†|Ø¬ÙˆÙ„Ø§ÛŒ|Ú˜ÙˆØ¦ÛŒÙ‡|Ø¢Ú¯Ø³Øª|Ø§Ú¯Ø³Øª|Ø¢Ú¯ÙˆØ³Øª|Ø§ÙˆØª|Ø³Ù¾ØªÙ…Ø¨Ø±|Ø³Ù¾ØªØ§Ù…Ø¨Ø±|Ø§Ú©ØªØ¨Ø±|Ø§Ú©ØªÙˆØ¨Ø±|Ù†ÙˆØ§Ù…Ø¨Ø±|Ù†ÙˆÙ…Ø¨Ø±|Ø¯Ø³Ø§Ù…Ø¨Ø±|Ø¯Ø³Ù…Ø¨Ø±)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^(Ú˜|Ø¬)/i,
            /^Ù/i,
            /^Ù…/i,
            /^(Ø¢|Ø§)/i,
            /^Ù…/i,
            /^(Ú˜|Ø¬)/i,
            /^(Ø¬|Ú˜)/i,
            /^(Ø¢|Ø§)/i,
            /^Ø³/i,
            /^Ø§/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
          any: [
            /^Ú˜Ø§/i,
            /^Ù/i,
            /^Ù…Ø§/i,
            /^Ø¢Ù¾/i,
            /^(Ù…ÛŒ|Ù…Ù‡)/i,
            /^(Ú˜ÙˆØ¦Ù†|Ø¬ÙˆÙ†)/i,
            /^(Ú˜ÙˆØ¦ÛŒ|Ø¬ÙˆÙ„)/i,
            /^(Ø§ÙˆØª|Ø¢Ú¯)/i,
            /^Ø³/i,
            /^(Ø§ÙˆÚ©|Ø§Ú©)/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ø´ÛŒØ¯Ø³Ú†Ù¾Ø¬]/i,
          short: /^(Ø´|Ø¬|1Ø´|2Ø´|3Ø´|4Ø´|5Ø´)/i,
          abbreviated:
            /^(ÛŒÚ©Ø´Ù†Ø¨Ù‡|Ø¯ÙˆØ´Ù†Ø¨Ù‡|Ø³Ù‡â€ŒØ´Ù†Ø¨Ù‡|Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡|Ù¾Ù†Ø¬â€ŒØ´Ù†Ø¨Ù‡|Ø¬Ù…Ø¹Ù‡|Ø´Ù†Ø¨Ù‡)/i,
          wide: /^(ÛŒÚ©Ø´Ù†Ø¨Ù‡|Ø¯ÙˆØ´Ù†Ø¨Ù‡|Ø³Ù‡â€ŒØ´Ù†Ø¨Ù‡|Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡|Ù¾Ù†Ø¬â€ŒØ´Ù†Ø¨Ù‡|Ø¬Ù…Ø¹Ù‡|Ø´Ù†Ø¨Ù‡)/i,
        };
        var parseDayPatterns = {
          narrow: [/^ÛŒ/i, /^Ø¯Ùˆ/i, /^Ø³/i, /^Ú†/i, /^Ù¾/i, /^Ø¬/i, /^Ø´/i],
          any: [
            /^(ÛŒ|1Ø´|ÛŒÚ©Ø´Ù†Ø¨Ù‡)/i,
            /^(Ø¯|2Ø´|Ø¯ÙˆØ´Ù†Ø¨Ù‡)/i,
            /^(Ø³|3Ø´|Ø³Ù‡â€ŒØ´Ù†Ø¨Ù‡)/i,
            /^(Ú†|4Ø´|Ú†Ù‡Ø§Ø±Ø´Ù†Ø¨Ù‡)/i,
            /^(Ù¾|5Ø´|Ù¾Ù†Ø¬Ø´Ù†Ø¨Ù‡)/i,
            /^(Ø¬|Ø¬Ù…Ø¹Ù‡)/i,
            /^(Ø´|Ø´Ù†Ø¨Ù‡)/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(Ø¨|Ù‚|Ù†|Ø¸|Øµ|Ø¨.Ø¸.|Ø¹|Ø´)/i,
          abbreviated:
            /^(Ù‚.Ø¸.|Ø¨.Ø¸.|Ù†ÛŒÙ…Ù‡â€ŒØ´Ø¨|Ø¸Ù‡Ø±|ØµØ¨Ø­|Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±|Ø¹ØµØ±|Ø´Ø¨)/i,
          wide: /^(Ù‚Ø¨Ù„â€ŒØ§Ø²Ø¸Ù‡Ø±|Ù†ÛŒÙ…Ù‡â€ŒØ´Ø¨|Ø¸Ù‡Ø±|ØµØ¨Ø­|Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±|Ø¹ØµØ±|Ø´Ø¨)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^(Ù‚|Ù‚.Ø¸.|Ù‚Ø¨Ù„â€ŒØ§Ø²Ø¸Ù‡Ø±)/i,
            pm: /^(Ø¨|Ø¨.Ø¸.|Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±)/i,
            midnight: /^(â€ŒÙ†ÛŒÙ…Ù‡â€ŒØ´Ø¨|Ù†)/i,
            noon: /^(Ø¸|Ø¸Ù‡Ø±)/i,
            morning: /(Øµ|ØµØ¨Ø­)/i,
            afternoon: /(Ø¨|Ø¨.Ø¸.|Ø¨Ø¹Ø¯Ø§Ø²Ø¸Ù‡Ø±)/i,
            evening: /(Ø¹|Ø¹ØµØ±)/i,
            night: /(Ø´|Ø´Ø¨)/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 221 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        function futureSeconds(text) {
          return text.replace(/sekuntia?/, "sekunnin");
        }

        function futureMinutes(text) {
          return text.replace(/minuuttia?/, "minuutin");
        }

        function futureHours(text) {
          return text.replace(/tuntia?/, "tunnin");
        }

        function futureDays(text) {
          return text.replace(/pá¤ivá¤á¤?/, "pá¤ivá¤n");
        }

        function futureWeeks(text) {
          return text.replace(/(viikko|viikkoa)/, "viikon");
        }

        function futureMonths(text) {
          return text.replace(/(kuukausi|kuukautta)/, "kuukauden");
        }

        function futureYears(text) {
          return text.replace(/(vuosi|vuotta)/, "vuoden");
        }

        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "alle sekunti",
            other: "alle {{count}} sekuntia",
            futureTense: futureSeconds,
          },
          xSeconds: {
            one: "sekunti",
            other: "{{count}} sekuntia",
            futureTense: futureSeconds,
          },
          halfAMinute: {
            one: "puoli minuuttia",
            other: "puoli minuuttia",
            futureTense: function (_text) {
              return "puolen minuutin";
            },
          },
          lessThanXMinutes: {
            one: "alle minuutti",
            other: "alle {{count}} minuuttia",
            futureTense: futureMinutes,
          },
          xMinutes: {
            one: "minuutti",
            other: "{{count}} minuuttia",
            futureTense: futureMinutes,
          },
          aboutXHours: {
            one: "noin tunti",
            other: "noin {{count}} tuntia",
            futureTense: futureHours,
          },
          xHours: {
            one: "tunti",
            other: "{{count}} tuntia",
            futureTense: futureHours,
          },
          xDays: {
            one: "pá¤ivá¤",
            other: "{{count}} pá¤ivá¤á¤",
            futureTense: futureDays,
          },
          aboutXWeeks: {
            one: "noin viikko",
            other: "noin {{count}} viikkoa",
            futureTense: futureWeeks,
          },
          xWeeks: {
            one: "viikko",
            other: "{{count}} viikkoa",
            futureTense: futureWeeks,
          },
          aboutXMonths: {
            one: "noin kuukausi",
            other: "noin {{count}} kuukautta",
            futureTense: futureMonths,
          },
          xMonths: {
            one: "kuukausi",
            other: "{{count}} kuukautta",
            futureTense: futureMonths,
          },
          aboutXYears: {
            one: "noin vuosi",
            other: "noin {{count}} vuotta",
            futureTense: futureYears,
          },
          xYears: {
            one: "vuosi",
            other: "{{count}} vuotta",
            futureTense: futureYears,
          },
          overXYears: {
            one: "yli vuosi",
            other: "yli {{count}} vuotta",
            futureTense: futureYears,
          },
          almostXYears: {
            one: "lá¤hes vuosi",
            other: "lá¤hes {{count}} vuotta",
            futureTense: futureYears,
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var distance = formatDistanceLocale[token];
          var result =
            count === 1
              ? distance.one
              : distance.other.replace("{{count}}", count);

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return distance.futureTense(result) + " kuluttua";
            } else {
              return result + " sitten";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 222 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "eeee d. MMMM y",
          long: "d. MMMM y",
          medium: "d. MMM y",
          short: "d.M.y",
        };
        var timeFormats = {
          full: "HH.mm.ss zzzz",
          long: "HH.mm.ss z",
          medium: "HH.mm.ss",
          short: "HH.mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'klo' {{time}}",
          long: "{{date}} 'klo' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 223 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'viime' eeee 'klo' p",
          yesterday: "'eilen klo' p",
          today: "'tá¤ná¤á¤n klo' p",
          tomorrow: "'huomenna klo' p",
          nextWeek: "'ensi' eeee 'klo' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 224 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["eaa.", "jaa."],
          abbreviated: ["eaa.", "jaa."],
          wide: ["ennen ajanlaskun alkua", "já¤lkeen ajanlaskun alun"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: [
            "1. kvartaali",
            "2. kvartaali",
            "3. kvartaali",
            "4. kvartaali",
          ],
        };
        var monthValues = {
          narrow: ["T", "H", "M", "H", "T", "K", "H", "E", "S", "L", "M", "J"],
          abbreviated: [
            "tammi",
            "helmi",
            "maalis",
            "huhti",
            "touko",
            "kesá¤",
            "heiná¤",
            "elo",
            "syys",
            "loka",
            "marras",
            "joulu",
          ],
          wide: [
            "tammikuu",
            "helmikuu",
            "maaliskuu",
            "huhtikuu",
            "toukokuu",
            "kesá¤kuu",
            "heiná¤kuu",
            "elokuu",
            "syyskuu",
            "lokakuu",
            "marraskuu",
            "joulukuu",
          ],
        };
        var formattingMonthValues = {
          narrow: monthValues.narrow,
          abbreviated: monthValues.abbreviated,
          wide: monthValues.wide.map(function (name) {
            return name + "ta";
          }),
        };
        var dayValues = {
          narrow: ["S", "M", "T", "K", "T", "P", "L"],
          short: ["su", "ma", "ti", "ke", "to", "pe", "la"],
          abbreviated: [
            "sunn.",
            "maan.",
            "tiis.",
            "kesk.",
            "torst.",
            "perj.",
            "la",
          ],
          wide: [
            "sunnuntai",
            "maanantai",
            "tiistai",
            "keskiviikko",
            "torstai",
            "perjantai",
            "lauantai",
          ],
        };
        var formattingDayValues = {
          narrow: dayValues.narrow,
          short: dayValues.short,
          abbreviated: dayValues.abbreviated,
          wide: dayValues.wide.map(function (name) {
            return name + "na";
          }),
        };
        var dayPeriodValues = {
          narrow: {
            am: "ap",
            pm: "ip",
            midnight: "keskiyá¶",
            noon: "keskipá¤ivá¤",
            morning: "ap",
            afternoon: "ip",
            evening: "illalla",
            night: "yá¶llá¤",
          },
          abbreviated: {
            am: "ap",
            pm: "ip",
            midnight: "keskiyá¶",
            noon: "keskipá¤ivá¤",
            morning: "ap",
            afternoon: "ip",
            evening: "illalla",
            night: "yá¶llá¤",
          },
          wide: {
            am: "ap",
            pm: "ip",
            midnight: "keskiyá¶llá¤",
            noon: "keskipá¤ivá¤llá¤",
            morning: "aamupá¤ivá¤llá¤",
            afternoon: "iltapá¤ivá¤llá¤",
            evening: "illalla",
            night: "yá¶llá¤",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            formattingValues: formattingMonthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            formattingValues: formattingDayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 225 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(\.)/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(e|j)/i,
          abbreviated: /^(eaa.|jaa.)/i,
          wide: /^(ennen ajanlaskun alkua|já¤lkeen ajanlaskun alun)/i,
        };
        var parseEraPatterns = {
          any: [/^e/i, /^j/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234]\.? kvartaali/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[thmkeslj]/i,
          abbreviated:
            /^(tammi|helmi|maalis|huhti|touko|kesá¤|heiná¤|elo|syys|loka|marras|joulu)/i,
          wide: /^(tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kesá¤kuu|heiná¤kuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu)(ta)?/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^t/i,
            /^h/i,
            /^m/i,
            /^h/i,
            /^t/i,
            /^k/i,
            /^h/i,
            /^e/i,
            /^s/i,
            /^l/i,
            /^m/i,
            /^j/i,
          ],
          any: [
            /^ta/i,
            /^hel/i,
            /^maa/i,
            /^hu/i,
            /^to/i,
            /^k/i,
            /^hei/i,
            /^e/i,
            /^s/i,
            /^l/i,
            /^mar/i,
            /^j/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtkpl]/i,
          short: /^(su|ma|ti|ke|to|pe|la)/i,
          abbreviated: /^(sunn.|maan.|tiis.|kesk.|torst.|perj.|la)/i,
          wide: /^(sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai)(na)?/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^m/i, /^t/i, /^k/i, /^t/i, /^p/i, /^l/i],
          any: [/^s/i, /^m/i, /^ti/i, /^k/i, /^to/i, /^p/i, /^l/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(ap|ip|keskiyá¶|keskipá¤ivá¤|aamupá¤ivá¤llá¤|iltapá¤ivá¤llá¤|illalla|yá¶llá¤)/i,
          any: /^(ap|ip|keskiyá¶llá¤|keskipá¤ivá¤llá¤|aamupá¤ivá¤llá¤|iltapá¤ivá¤llá¤|illalla|yá¶llá¤)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^ap/i,
            pm: /^ip/i,
            midnight: /^keskiyá¶/i,
            noon: /^keskipá¤ivá¤/i,
            morning: /aamupá¤ivá¤llá¤/i,
            afternoon: /iltapá¤ivá¤llá¤/i,
            evening: /illalla/i,
            night: /yá¶llá¤/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 226 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "yy-MM-dd",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'á ' {{time}}",
          long: "{{date}} 'á ' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 227 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "moins dâ€™une seconde",
            other: "moins de {{count}} secondes",
          },
          xSeconds: {
            one: "1 seconde",
            other: "{{count}} secondes",
          },
          halfAMinute: "30 secondes",
          lessThanXMinutes: {
            one: "moins dâ€™une minute",
            other: "moins de {{count}} minutes",
          },
          xMinutes: {
            one: "1 minute",
            other: "{{count}} minutes",
          },
          aboutXHours: {
            one: "environ 1 heure",
            other: "environ {{count}} heures",
          },
          xHours: {
            one: "1 heure",
            other: "{{count}} heures",
          },
          xDays: {
            one: "1 jour",
            other: "{{count}} jours",
          },
          aboutXWeeks: {
            one: "environ 1 semaine",
            other: "environ {{count}} semaines",
          },
          xWeeks: {
            one: "1 semaine",
            other: "{{count}} semaines",
          },
          aboutXMonths: {
            one: "environ 1 mois",
            other: "environ {{count}} mois",
          },
          xMonths: {
            one: "1 mois",
            other: "{{count}} mois",
          },
          aboutXYears: {
            one: "environ 1 an",
            other: "environ {{count}} ans",
          },
          xYears: {
            one: "1 an",
            other: "{{count}} ans",
          },
          overXYears: {
            one: "plus dâ€™un an",
            other: "plus de {{count}} ans",
          },
          almostXYears: {
            one: "presquâ€™un an",
            other: "presque {{count}} ans",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "dans " + result;
            } else {
              return "il y a " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 228 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'á ' {{time}}",
          long: "{{date}} 'á ' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 229 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'la semaine derniá¨re á ' p",
          yesterday: "'hier á ' p",
          today: "'aujourdâ€™hui á ' p",
          tomorrow: "'demain á ' p'",
          nextWeek: "eeee 'la semaine prochaine á ' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 230 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["av. J.-C", "ap. J.-C"],
          abbreviated: ["av. J.-C", "ap. J.-C"],
          wide: ["avant Já©sus-Christ", "aprá¨s Já©sus-Christ"],
        };
        var quarterValues = {
          narrow: ["T1", "T2", "T3", "T4"],
          abbreviated: [
            "1er trim.",
            "2á¨me trim.",
            "3á¨me trim.",
            "4á¨me trim.",
          ],
          wide: [
            "1er trimestre",
            "2á¨me trimestre",
            "3á¨me trimestre",
            "4á¨me trimestre",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "janv.",
            "fá©vr.",
            "mars",
            "avr.",
            "mai",
            "juin",
            "juil.",
            "aoá»t",
            "sept.",
            "oct.",
            "nov.",
            "dá©c.",
          ],
          wide: [
            "janvier",
            "fá©vrier",
            "mars",
            "avril",
            "mai",
            "juin",
            "juillet",
            "aoá»t",
            "septembre",
            "octobre",
            "novembre",
            "dá©cembre",
          ],
        };
        var dayValues = {
          narrow: ["D", "L", "M", "M", "J", "V", "S"],
          short: ["di", "lu", "ma", "me", "je", "ve", "sa"],
          abbreviated: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
          wide: [
            "dimanche",
            "lundi",
            "mardi",
            "mercredi",
            "jeudi",
            "vendredi",
            "samedi",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "minuit",
            noon: "midi",
            morning: "mat.",
            afternoon: "ap.m.",
            evening: "soir",
            night: "mat.",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "minuit",
            noon: "midi",
            morning: "matin",
            afternoon: "aprá¨s-midi",
            evening: "soir",
            night: "matin",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "minuit",
            noon: "midi",
            morning: "du matin",
            afternoon: "de lâ€™aprá¨s-midi",
            evening: "du soir",
            night: "du matin",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber);
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var suffix;

          if (number === 0) {
            return number;
          }

          if (unit === "year" || unit === "hour" || unit === "week") {
            if (number === 1) {
              suffix = "á¨re";
            } else {
              suffix = "á¨me";
            }
          } else {
            if (number === 1) {
              suffix = "er";
            } else {
              suffix = "á¨me";
            }
          }

          return number + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 231 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(iá¨me|á¨re|á¨me|er|e)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(av\.J\.C|ap\.J\.C|ap\.J\.-C)/i,
          abbreviated: /^(av\.J\.-C|av\.J-C|apr\.J\.-C|apr\.J-C|ap\.J-C)/i,
          wide: /^(avant Já©sus-Christ|aprá¨s Já©sus-Christ)/i,
        };
        var parseEraPatterns = {
          any: [/^av/i, /^ap/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^t[1234]/i,
          wide: /^[1234](er|á¨me|e)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(janv|fá©vr|mars|avr|mai|juin|juill|juil|aoá»t|sept|oct|nov|dá©c)\.?/i,
          wide: /^(janvier|fá©vrier|mars|avril|mai|juin|juillet|aoá»t|septembre|octobre|novembre|dá©cembre)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^av/i,
            /^ma/i,
            /^juin/i,
            /^juil/i,
            /^ao/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[lmjvsd]/i,
          short: /^(di|lu|ma|me|je|ve|sa)/i,
          abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\.?/i,
          wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
          any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|minuit|midi|mat\.?|ap\.?m\.?|soir|nuit)/i,
          any: /^([ap]\.?\s?m\.?|du matin|de l'aprá¨s[-\s]midi|du soir|de la nuit)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^min/i,
            noon: /^mid/i,
            morning: /mat/i,
            afternoon: /ap/i,
            evening: /soir/i,
            night: /nuit/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 232 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'á ' {{time}}",
          long: "{{date}} 'á ' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 233 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "nas lugha na diog",
            other: "nas lugha na {{count}} diogan",
          },
          xSeconds: {
            one: "1 diog",
            two: "2 dhiog",
            twenty: "20 diog",
            other: "{{count}} diogan",
          },
          halfAMinute: "leth mhionaid",
          lessThanXMinutes: {
            one: "nas lugha na mionaid",
            other: "nas lugha na {{count}} mionaidean",
          },
          xMinutes: {
            one: "1 mionaid",
            two: "2 mhionaid",
            twenty: "20 mionaid",
            other: "{{count}} mionaidean",
          },
          aboutXHours: {
            one: "mu uair de thá¬de",
            other: "mu {{count}} uairean de thá¬de",
          },
          xHours: {
            one: "1 uair de thá¬de",
            two: "2 uair de thá¬de",
            twenty: "20 uair de thá¬de",
            other: "{{count}} uairean de thá¬de",
          },
          xDays: {
            one: "1 lá ",
            other: "{{count}} lá ",
          },
          aboutXWeeks: {
            one: "mu 1 seachdain",
            other: "mu {{count}} seachdainean",
          },
          xWeeks: {
            one: "1 seachdain",
            other: "{{count}} seachdainean",
          },
          aboutXMonths: {
            one: "mu mhá¬os",
            other: "mu {{count}} má¬osan",
          },
          xMonths: {
            one: "1 má¬os",
            other: "{{count}} má¬osan",
          },
          aboutXYears: {
            one: "mu bhliadhna",
            other: "mu {{count}} bliadhnaichean",
          },
          xYears: {
            one: "1 bhliadhna",
            other: "{{count}} bliadhna",
          },
          overXYears: {
            one: "cá²rr is bliadhna",
            other: "cá²rr is {{count}} bliadhnaichean",
          },
          almostXYears: {
            one: "cha mhá²r bliadhna",
            other: "cha mhá²r {{count}} bliadhnaichean",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 2 && !!formatDistanceLocale[token].two) {
            result = formatDistanceLocale[token].two;
          } else if (count === 9 && !!formatDistanceLocale[token].nine) {
            result = formatDistanceLocale[token].nine;
          } else if (count === 20 && !!formatDistanceLocale[token].twenty) {
            result = formatDistanceLocale[token].twenty;
          } else if (count === 30 && !!formatDistanceLocale[token].thirty) {
            result = formatDistanceLocale[token].thirty;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "ann an " + result;
            } else {
              return "o chionn " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 234 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'aig' {{time}}",
          long: "{{date}} 'aig' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 235 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'mu dheireadh' eeee 'aig' p",
          //FIX
          yesterday: "'an-dá¨ aig' p",
          today: "'an-diugh aig' p",
          tomorrow: "'a-má ireach aig' p",
          nextWeek: "eeee 'aig' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 236 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["R", "A"],
          abbreviated: ["RC", "AD"],
          wide: ["ro Chrá¬osta", "anno domini"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["C1", "C2", "C3", "C4"],
          wide: [
            "a' chiad chairteal",
            "an dá rna cairteal",
            "an treas cairteal",
            "an ceathramh cairteal",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["F", "G", "M", "G", "C", "á’", "I", "L", "S", "D", "S", "D"],
          abbreviated: [
            "Faoi",
            "Gear",
            "Má rt",
            "Gibl",
            "Cá¨it",
            "á’gmh",
            "Iuch",
            "Lá¹n",
            "Sult",
            "Dá mh",
            "Samh",
            "Dá¹bh",
          ],
          wide: [
            "Am Faoilleach",
            "An Gearran",
            "Am Má rt",
            "An Giblean",
            "An Cá¨itean",
            "An t-á’gmhios",
            "An t-Iuchar",
            "An Lá¹nastal",
            "An t-Sultain",
            "An Dá mhair",
            "An t-Samhain",
            "An Dá¹bhlachd",
          ],
        };
        var dayValues = {
          narrow: ["D", "L", "M", "C", "A", "H", "S"],
          short: ["Dá²", "Lu", "Má ", "Ci", "Ar", "Ha", "Sa"],
          abbreviated: ["Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis"],
          wide: [
            "Didá²mhnaich",
            "Diluain",
            "Dimá irt",
            "Diciadain",
            "Diardaoin",
            "Dihaoine",
            "Disathairne",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "m",
            pm: "f",
            midnight: "m.o.",
            noon: "m.l.",
            morning: "madainn",
            afternoon: "feasgar",
            evening: "feasgar",
            night: "oidhche",
          },
          abbreviated: {
            am: "M.",
            pm: "F.",
            midnight: "meadhan oidhche",
            noon: "meadhan lá ",
            morning: "madainn",
            afternoon: "feasgar",
            evening: "feasgar",
            night: "oidhche",
          },
          wide: {
            am: "m.",
            pm: "f.",
            midnight: "meadhan oidhche",
            noon: "meadhan lá ",
            morning: "madainn",
            afternoon: "feasgar",
            evening: "feasgar",
            night: "oidhche",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "m",
            pm: "f",
            midnight: "m.o.",
            noon: "m.l.",
            morning: "sa mhadainn",
            afternoon: "feasgar",
            evening: "feasgar",
            night: "air an oidhche",
          },
          abbreviated: {
            am: "M.",
            pm: "F.",
            midnight: "meadhan oidhche",
            noon: "meadhan lá ",
            morning: "sa mhadainn",
            afternoon: "feasgar",
            evening: "feasgar",
            night: "air an oidhche",
          },
          wide: {
            am: "m.",
            pm: "f.",
            midnight: "meadhan oidhche",
            noon: "meadhan lá ",
            morning: "sa mhadainn",
            afternoon: "feasgar",
            evening: "feasgar",
            night: "air an oidhche",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          var rem100 = number % 100;

          if (rem100 > 20 || rem100 < 10) {
            switch (rem100 % 10) {
              case 1:
                return number + "d";

              case 2:
                return number + "na";
            }
          }

          if (rem100 === 12) {
            return number + "na";
          }

          return number + "mh";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 237 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(d|na|tr|mh)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(r|a)/i,
          abbreviated:
            /^(r\.?\s?c\.?|r\.?\s?a\.?\s?c\.?|a\.?\s?d\.?|a\.?\s?c\.?)/i,
          wide: /^(ro Chrá¬osta|ron aois choitchinn|anno domini|aois choitcheann)/i,
        };
        var parseEraPatterns = {
          any: [/^b/i, /^(a|c)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^c[1234]/i,
          wide: /^[1234](cd|na|tr|mh)? cairteal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[fgmcá²ilsd]/i,
          abbreviated:
            /^(faoi|gear|má rt|gibl|cá¨it|á²gmh|iuch|lá¹n|sult|dá mh|samh|dá¹bh)/i,
          wide: /^(am faoilleach|an gearran|am má rt|an giblean|an cá¨itean|an t-á’gmhios|an t-Iuchar|an lá¹nastal|an t-Sultain|an dá mhair|an t-Samhain|an dá¹bhlachd)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^f/i,
            /^g/i,
            /^m/i,
            /^g/i,
            /^c/i,
            /^á²/i,
            /^i/i,
            /^l/i,
            /^s/i,
            /^d/i,
            /^s/i,
            /^d/i,
          ],
          any: [
            /^fa/i,
            /^ge/i,
            /^má /i,
            /^gi/i,
            /^c/i,
            /^á²/i,
            /^i/i,
            /^l/i,
            /^su/i,
            /^d/i,
            /^sa/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dlmcahs]/i,
          short: /^(dá²|lu|má |ci|ar|ha|sa)/i,
          abbreviated: /^(did|dil|dim|dic|dia|dih|dis)/i,
          wide: /^(didá²mhnaich|diluain|dimá irt|diciadain|diardaoin|dihaoine|disathairne)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],
          any: [/^d/i, /^l/i, /^m/i, /^c/i, /^a/i, /^h/i, /^s/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mi|n|(san|aig) (madainn|feasgar|feasgar|oidhche))/i,
          any: /^([ap]\.?\s?m\.?|meadhan oidhche|meadhan lá |(san|aig) (madainn|feasgar|feasgar|oidhche))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^m/i,
            pm: /^f/i,
            midnight: /^meadhan oidhche/i,
            noon: /^meadhan lá /i,
            morning: /sa mhadainn/i,
            afternoon: /feasgar/i,
            evening: /feasgar/i,
            night: /air an oidhche/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 238 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "menos dun segundo",
            other: "menos de {{count}} segundos",
          },
          xSeconds: {
            one: "1 segundo",
            other: "{{count}} segundos",
          },
          halfAMinute: "medio minuto",
          lessThanXMinutes: {
            one: "menos dun minuto",
            other: "menos de {{count}} minutos",
          },
          xMinutes: {
            one: "1 minuto",
            other: "{{count}} minutos",
          },
          aboutXHours: {
            one: "arredor dunha hora",
            other: "arredor de {{count}} horas",
          },
          xHours: {
            one: "1 hora",
            other: "{{count}} horas",
          },
          xDays: {
            one: "1 dá­a",
            other: "{{count}} dá­as",
          },
          aboutXWeeks: {
            one: "arredor dunha semana",
            other: "arredor de {{count}} semanas",
          },
          xWeeks: {
            one: "1 semana",
            other: "{{count}} semanas",
          },
          aboutXMonths: {
            one: "arredor de 1 mes",
            other: "arredor de {{count}} meses",
          },
          xMonths: {
            one: "1 mes",
            other: "{{count}} meses",
          },
          aboutXYears: {
            one: "arredor dun ano",
            other: "arredor de {{count}} anos",
          },
          xYears: {
            one: "1 ano",
            other: "{{count}} anos",
          },
          overXYears: {
            one: "má¡is dun ano",
            other: "má¡is de {{count}} anos",
          },
          almostXYears: {
            one: "case un ano",
            other: "case {{count}} anos",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "en " + result;
            } else {
              return "hai " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 239 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d 'de' MMMM y",
          long: "d 'de' MMMM y",
          medium: "d MMM y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'á¡s' {{time}}",
          long: "{{date}} 'á¡s' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 240 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'o' eeee 'pasado á¡' LT",
          yesterday: "'onte á¡' p",
          today: "'hoxe á¡' p",
          tomorrow: "'maá±á¡ á¡' p",
          nextWeek: "eeee 'á¡' p",
          other: "P",
        };
        var formatRelativeLocalePlural = {
          lastWeek: "'o' eeee 'pasado á¡s' p",
          yesterday: "'onte á¡s' p",
          today: "'hoxe á¡s' p",
          tomorrow: "'maá±á¡ á¡s' p",
          nextWeek: "eeee 'á¡s' p",
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          if (date.getUTCHours() !== 1) {
            return formatRelativeLocalePlural[token];
          }

          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 241 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["AC", "DC"],
          abbreviated: ["AC", "DC"],
          wide: ["antes de cristo", "despois de cristo"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["T1", "T2", "T3", "T4"],
          wide: [
            "1Âº trimestre",
            "2Âº trimestre",
            "3Âº trimestre",
            "4Âº trimestre",
          ],
        };
        var monthValues = {
          narrow: ["e", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
          abbreviated: [
            "xan",
            "feb",
            "mar",
            "abr",
            "mai",
            "xun",
            "xul",
            "ago",
            "set",
            "out",
            "nov",
            "dec",
          ],
          wide: [
            "xaneiro",
            "febreiro",
            "marzo",
            "abril",
            "maio",
            "xuá±o",
            "xullo",
            "agosto",
            "setembro",
            "outubro",
            "novembro",
            "decembro",
          ],
        };
        var dayValues = {
          narrow: ["d", "l", "m", "m", "j", "v", "s"],
          short: ["do", "lu", "ma", "me", "xo", "ve", "sa"],
          abbreviated: ["dom", "lun", "mar", "mer", "xov", "ven", "sab"],
          wide: [
            "domingo",
            "luns",
            "martes",
            "má©rcores",
            "xoves",
            "venres",
            "sá¡bado",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "md",
            morning: "maá±á¡",
            afternoon: "tarde",
            evening: "tarde",
            night: "noite",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "medianoite",
            noon: "mediodá­a",
            morning: "maá±á¡",
            afternoon: "tarde",
            evening: "tardiá±a",
            night: "noite",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "medianoite",
            noon: "mediodá­a",
            morning: "maá±á¡",
            afternoon: "tarde",
            evening: "tardiá±a",
            night: "noite",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "md",
            morning: "da maá±á¡",
            afternoon: "da tarde",
            evening: "da tardiá±a",
            night: "da noite",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "medianoite",
            noon: "mediodá­a",
            morning: "da maá±á¡",
            afternoon: "da tarde",
            evening: "da tardiá±a",
            night: "da noite",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "medianoite",
            noon: "mediodá­a",
            morning: "da maá±á¡",
            afternoon: "da tarde",
            evening: "da tardiá±a",
            night: "da noite",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "Âº";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 242 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(Âº)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(ac|dc|a|d)/i,
          abbreviated:
            /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
          wide: /^(antes de cristo|antes da era com[uáº]n|despois de cristo|era com[uáº]n)/i,
        };
        var parseEraPatterns = {
          any: [/^ac/i, /^dc/i],
          wide: [
            /^(antes de cristo|antes da era com[uáº]n)/i,
            /^(despois de cristo|era com[uáº]n)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^T[1234]/i,
          wide: /^[1234](Âº)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[xfmasond]/i,
          abbreviated: /^(xan|feb|mar|abr|mai|xun|xul|ago|set|out|nov|dec)/i,
          wide: /^(xaneiro|febreiro|marzo|abril|maio|xuá±o|xullo|agosto|setembro|outubro|novembro|decembro)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^x/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^x/i,
            /^x/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^xan/i,
            /^feb/i,
            /^mar/i,
            /^abr/i,
            /^mai/i,
            /^xun/i,
            /^xul/i,
            /^ago/i,
            /^set/i,
            /^out/i,
            /^nov/i,
            /^dec/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dlmxvs]/i,
          short: /^(do|lu|ma|me|xo|ve|sa)/i,
          abbreviated: /^(dom|lun|mar|mer|xov|ven|sab)/i,
          wide: /^(domingo|luns|martes|m[eá©]rcores|xoves|venres|s[á¡a]bado)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^x/i, /^v/i, /^s/i],
          any: [/^do/i, /^lu/i, /^ma/i, /^me/i, /^xo/i, /^ve/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mn|md|(da|[aá¡]s) (maá±[aá¡]|tarde|noite))/i,
          any: /^([ap]\.?\s?m\.?|medianoite|mediod[iá­]a|(da|[aá¡]s) (maá±[aá¡]|tarde|noite))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mn/i,
            noon: /^md/i,
            morning: /maá±[aá¡]/i,
            afternoon: /tarde/i,
            evening: /tardiá±a/i,
            night: /noite/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 243 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        // Source: https://www.unicode.org/cldr/charts/32/summary/gu.html
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "àª¹àª®àª£àª¾àª‚",
            // CLDR #1461
            other: "â€‹àª†àª¶àª°à«‡ {{count}} àª¸à«‡àª•àª‚àª¡",
          },
          xSeconds: {
            one: "1 àª¸à«‡àª•àª‚àª¡",
            other: "{{count}} àª¸à«‡àª•àª‚àª¡",
          },
          halfAMinute: "àª…àª¡àª§à«€ àª®àª¿àª¨àª¿àªŸ",
          lessThanXMinutes: {
            one: "àª† àª®àª¿àª¨àª¿àªŸ",
            // CLDR #1448
            other: "â€‹àª†àª¶àª°à«‡ {{count}} àª®àª¿àª¨àª¿àªŸ",
          },
          xMinutes: {
            one: "1 àª®àª¿àª¨àª¿àªŸ",
            other: "{{count}} àª®àª¿àª¨àª¿àªŸ",
          },
          aboutXHours: {
            one: "â€‹àª†àª¶àª°à«‡ 1 àª•àª²àª¾àª•",
            other: "â€‹àª†àª¶àª°à«‡ {{count}} àª•àª²àª¾àª•",
          },
          xHours: {
            one: "1 àª•àª²àª¾àª•",
            other: "{{count}} àª•àª²àª¾àª•",
          },
          xDays: {
            one: "1 àª¦àª¿àªµàª¸",
            other: "{{count}} àª¦àª¿àªµàª¸",
          },
          aboutXWeeks: {
            one: "àª†àª¶àª°à«‡ 1 àª…àª àªµàª¾àª¡àª¿àª¯à«àª‚",
            other: "àª†àª¶àª°à«‡ {{count}} àª…àª àªµàª¾àª¡àª¿àª¯àª¾",
          },
          xWeeks: {
            one: "1 àª…àª àªµàª¾àª¡àª¿àª¯à«àª‚",
            other: "{{count}} àª…àª àªµàª¾àª¡àª¿àª¯àª¾",
          },
          aboutXMonths: {
            one: "àª†àª¶àª°à«‡ 1 àª®àª¹àª¿àª¨à«‹",
            other: "àª†àª¶àª°à«‡ {{count}} àª®àª¹àª¿àª¨àª¾",
          },
          xMonths: {
            one: "1 àª®àª¹àª¿àª¨à«‹",
            other: "{{count}} àª®àª¹àª¿àª¨àª¾",
          },
          aboutXYears: {
            one: "àª†àª¶àª°à«‡ 1 àªµàª°à«àª·",
            other: "àª†àª¶àª°à«‡ {{count}} àªµàª°à«àª·",
          },
          xYears: {
            one: "1 àªµàª°à«àª·",
            other: "{{count}} àªµàª°à«àª·",
          },
          overXYears: {
            one: "1 àªµàª°à«àª·àª¥à«€ àªµàª§à«",
            other: "{{count}} àªµàª°à«àª·àª¥à«€ àªµàª§à«",
          },
          almostXYears: {
            one: "àª²àª—àª­àª— 1 àªµàª°à«àª·",
            other: "àª²àª—àª­àª— {{count}} àªµàª°à«àª·",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + "àª®àª¾àª‚";
            } else {
              return result + " àªªàª¹à«‡àª²àª¾àª‚";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 244 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        //Source: https://www.unicode.org/cldr/charts/32/summary/gu.html
        var dateFormats = {
          full: "EEEE, d MMMM, y",
          // CLDR #1825
          long: "d MMMM, y",
          // CLDR #1826
          medium: "d MMM, y",
          // CLDR #1827
          short: "d/M/yy", // CLDR #1828
        };
        var timeFormats = {
          full: "hh:mm:ss a zzzz",
          // CLDR #1829
          long: "hh:mm:ss a z",
          // CLDR #1830
          medium: "hh:mm:ss a",
          // CLDR #1831
          short: "hh:mm a", // CLDR #1832
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          // CLDR #1833
          long: "{{date}} {{time}}",
          // CLDR #1834
          medium: "{{date}} {{time}}",
          // CLDR #1835
          short: "{{date}} {{time}}", // CLDR #1836
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 245 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        // Source: https://www.unicode.org/cldr/charts/32/summary/gu.html
        var formatRelativeLocale = {
          lastWeek: "'àªªàª¾àª›àª²àª¾' eeee p",
          // CLDR #1384
          yesterday: "'àª—àªˆàª•àª¾àª²à«‡' p",
          // CLDR #1409
          today: "'àª†àªœà«‡' p",
          // CLDR #1410
          tomorrow: "'àª†àªµàª¤à«€àª•àª¾àª²à«‡' p",
          // CLDR #1411
          nextWeek: "eeee p",
          // CLDR #1386
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 246 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // https://www.unicode.org/cldr/charts/32/summary/gu.html
        // #1621 - #1630
        var eraValues = {
          narrow: ["àªˆàª¸àªªà«‚", "àªˆàª¸"],
          abbreviated: ["àªˆ.àª¸.àªªà«‚àª°à«àªµà«‡", "àªˆ.àª¸."],
          wide: ["àªˆàª¸àªµà«€àª¸àª¨ àªªà«‚àª°à«àªµà«‡", "àªˆàª¸àªµà«€àª¸àª¨"], // https://www.unicode.org/cldr/charts/32/summary/gu.html
          // #1631 - #1654
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: [
            "1àª²à«‹ àª¤à«àª°àª¿àª®àª¾àª¸",
            "2àªœà«‹ àª¤à«àª°àª¿àª®àª¾àª¸",
            "3àªœà«‹ àª¤à«àª°àª¿àª®àª¾àª¸",
            "4àª¥à«‹ àª¤à«àª°àª¿àª®àª¾àª¸",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
          // https://www.unicode.org/cldr/charts/32/summary/gu.html
          // #1655 - #1726
        };
        var monthValues = {
          narrow: [
            "àªœàª¾",
            "àª«à«‡",
            "àª®àª¾",
            "àª",
            "àª®à«‡",
            "àªœà«‚",
            "àªœà«",
            "àª“",
            "àª¸",
            "àª“",
            "àª¨",
            "àª¡àª¿",
          ],
          abbreviated: [
            "àªœàª¾àª¨à«àª¯à«",
            "àª«à«‡àª¬à«àª°à«",
            "àª®àª¾àª°à«àªš",
            "àªàªªà«àª°àª¿àª²",
            "àª®à«‡",
            "àªœà«‚àª¨",
            "àªœà«àª²àª¾àªˆ",
            "àª‘àª—àª¸à«àªŸ",
            "àª¸àªªà«àªŸà«‡",
            "àª“àª•à«àªŸà«‹",
            "àª¨àªµà«‡",
            "àª¡àª¿àª¸à«‡",
          ],
          wide: [
            "àªœàª¾àª¨à«àª¯à«àª†àª°à«€",
            "àª«à«‡àª¬à«àª°à«àª†àª°à«€",
            "àª®àª¾àª°à«àªš",
            "àªàªªà«àª°àª¿àª²",
            "àª®à«‡",
            "àªœà«‚àª¨",
            "àªœà«àª²àª¾àª‡",
            "àª“àª—àª¸à«àªŸ",
            "àª¸àªªà«àªŸà«‡àª®à«àª¬àª°",
            "àª“àª•à«àªŸà«‹àª¬àª°",
            "àª¨àªµà«‡àª®à«àª¬àª°",
            "àª¡àª¿àª¸à«‡àª®à«àª¬àª°",
          ], // https://www.unicode.org/cldr/charts/32/summary/gu.html
          // #1727 - #1768
        };
        var dayValues = {
          narrow: ["àª°", "àª¸à«‹", "àª®àª‚", "àª¬à«", "àª—à«", "àª¶à«", "àª¶"],
          short: ["àª°", "àª¸à«‹", "àª®àª‚", "àª¬à«", "àª—à«", "àª¶à«", "àª¶"],
          abbreviated: [
            "àª°àªµàª¿",
            "àª¸à«‹àª®",
            "àª®àª‚àª—àª³",
            "àª¬à«àª§",
            "àª—à«àª°à«",
            "àª¶à«àª•à«àª°",
            "àª¶àª¨àª¿",
          ],
          wide: [
            "àª°àªµàª¿àªµàª¾àª°",
            /* Sunday */
            "àª¸à«‹àª®àªµàª¾àª°",
            /* Monday */
            "àª®àª‚àª—àª³àªµàª¾àª°",
            /* Tuesday */
            "àª¬à«àª§àªµàª¾àª°",
            /* Wednesday */
            "àª—à«àª°à«àªµàª¾àª°",
            /* Thursday */
            "àª¶à«àª•à«àª°àªµàª¾àª°",
            /* Friday */
            "àª¶àª¨àª¿àªµàª¾àª°",
            /* Saturday */
          ], // https://www.unicode.org/cldr/charts/32/summary/gu.html
          // #1783 - #1824
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "àª®.àª°àª¾àª¤à«àª°àª¿",
            noon: "àª¬.",
            morning: "àª¸àªµàª¾àª°à«‡",
            afternoon: "àª¬àªªà«‹àª°à«‡",
            evening: "àª¸àª¾àª‚àªœà«‡",
            night: "àª°àª¾àª¤à«àª°à«‡",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "â€‹àª®àª§à«àª¯àª°àª¾àª¤à«àª°àª¿",
            noon: "àª¬àªªà«‹àª°à«‡",
            morning: "àª¸àªµàª¾àª°à«‡",
            afternoon: "àª¬àªªà«‹àª°à«‡",
            evening: "àª¸àª¾àª‚àªœà«‡",
            night: "àª°àª¾àª¤à«àª°à«‡",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "â€‹àª®àª§à«àª¯àª°àª¾àª¤à«àª°àª¿",
            noon: "àª¬àªªà«‹àª°à«‡",
            morning: "àª¸àªµàª¾àª°à«‡",
            afternoon: "àª¬àªªà«‹àª°à«‡",
            evening: "àª¸àª¾àª‚àªœà«‡",
            night: "àª°àª¾àª¤à«àª°à«‡",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "àª®.àª°àª¾àª¤à«àª°àª¿",
            noon: "àª¬àªªà«‹àª°à«‡",
            morning: "àª¸àªµàª¾àª°à«‡",
            afternoon: "àª¬àªªà«‹àª°à«‡",
            evening: "àª¸àª¾àª‚àªœà«‡",
            night: "àª°àª¾àª¤à«àª°à«‡",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "àª®àª§à«àª¯àª°àª¾àª¤à«àª°àª¿",
            noon: "àª¬àªªà«‹àª°à«‡",
            morning: "àª¸àªµàª¾àª°à«‡",
            afternoon: "àª¬àªªà«‹àª°à«‡",
            evening: "àª¸àª¾àª‚àªœà«‡",
            night: "àª°àª¾àª¤à«àª°à«‡",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "â€‹àª®àª§à«àª¯àª°àª¾àª¤à«àª°àª¿",
            noon: "àª¬àªªà«‹àª°à«‡",
            morning: "àª¸àªµàª¾àª°à«‡",
            afternoon: "àª¬àªªà«‹àª°à«‡",
            evening: "àª¸àª¾àª‚àªœà«‡",
            night: "àª°àª¾àª¤à«àª°à«‡",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 247 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(àª²|àªœ|àª¥|àª à«àª |àª®)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(àªˆàª¸àªªà«‚|àªˆàª¸)/i,
          abbreviated: /^(àªˆ\.àª¸\.àªªà«‚àª°à«àªµà«‡|àªˆ\.àª¸\.)/i,
          wide: /^(àªˆàª¸àªµà«€àª¸àª¨\sàªªà«‚àª°à«àªµà«‡|àªˆàª¸àªµà«€àª¸àª¨)/i,
        };
        var parseEraPatterns = {
          any: [
            /^(àªˆàª¸àªªà«‚|àªˆàª¸)/i,
            /^(àªˆ\.àª¸\.àªªà«‚àª°à«àªµà«‡|àªˆ\.àª¸\.)/i,
            /^(àªˆàª¸àªµà«€àª¸àª¨\sàªªà«‚àª°à«àªµà«‡|àªˆàª¸àªµà«€àª¸àª¨)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](àª²à«‹|àªœà«‹|àª¥à«‹)? àª¤à«àª°àª¿àª®àª¾àª¸/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[àªœàª¾àª«à«‡àª®àª¾àªàª®à«‡àªœà«‚àªœà«àª“àª¸àª“àª¨àª¡àª¿]/i,
          abbreviated:
            /^(àªœàª¾àª¨à«àª¯à«|àª«à«‡àª¬à«àª°à«|àª®àª¾àª°à«àªš|àªàªªà«àª°àª¿àª²|àª®à«‡|àªœà«‚àª¨|àªœà«àª²àª¾àªˆ|àª‘àª—àª¸à«àªŸ|àª¸àªªà«àªŸà«‡|àª“àª•à«àªŸà«‹|àª¨àªµà«‡|àª¡àª¿àª¸à«‡)/i,
          wide: /^(àªœàª¾àª¨à«àª¯à«àª†àª°à«€|àª«à«‡àª¬à«àª°à«àª†àª°à«€|àª®àª¾àª°à«àªš|àªàªªà«àª°àª¿àª²|àª®à«‡|àªœà«‚àª¨|àªœà«àª²àª¾àª‡|àª“àª—àª¸à«àªŸ|àª¸àªªà«àªŸà«‡àª®à«àª¬àª°|àª“àª•à«àªŸà«‹àª¬àª°|àª¨àªµà«‡àª®à«àª¬àª°|àª¡àª¿àª¸à«‡àª®à«àª¬àª°)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^àªœàª¾/i,
            /^àª«à«‡/i,
            /^àª®àª¾/i,
            /^àª/i,
            /^àª®à«‡/i,
            /^àªœà«‚/i,
            /^àªœà«/i,
            /^àª‘àª—/i,
            /^àª¸/i,
            /^àª“àª•à«àªŸà«‹/i,
            /^àª¨/i,
            /^àª¡àª¿/i,
          ],
          any: [
            /^àªœàª¾/i,
            /^àª«à«‡/i,
            /^àª®àª¾/i,
            /^àª/i,
            /^àª®à«‡/i,
            /^àªœà«‚/i,
            /^àªœà«/i,
            /^àª‘àª—/i,
            /^àª¸/i,
            /^àª“àª•à«àªŸà«‹/i,
            /^àª¨/i,
            /^àª¡àª¿/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(àª°|àª¸à«‹|àª®àª‚|àª¬à«|àª—à«|àª¶à«|àª¶)/i,
          short: /^(àª°|àª¸à«‹|àª®àª‚|àª¬à«|àª—à«|àª¶à«|àª¶)/i,
          abbreviated:
            /^(àª°àªµàª¿|àª¸à«‹àª®|àª®àª‚àª—àª³|àª¬à«àª§|àª—à«àª°à«|àª¶à«àª•à«àª°|àª¶àª¨àª¿)/i,
          wide: /^(àª°àªµàª¿àªµàª¾àª°|àª¸à«‹àª®àªµàª¾àª°|àª®àª‚àª—àª³àªµàª¾àª°|àª¬à«àª§àªµàª¾àª°|àª—à«àª°à«àªµàª¾àª°|àª¶à«àª•à«àª°àªµàª¾àª°|àª¶àª¨àª¿àªµàª¾àª°)/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^àª°/i,
            /^àª¸à«‹/i,
            /^àª®àª‚/i,
            /^àª¬à«/i,
            /^àª—à«/i,
            /^àª¶à«/i,
            /^àª¶/i,
          ],
          any: [
            /^àª°/i,
            /^àª¸à«‹/i,
            /^àª®àª‚/i,
            /^àª¬à«/i,
            /^àª—à«/i,
            /^àª¶à«/i,
            /^àª¶/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|àª®\.?|àª¸|àª¬|àª¸àª¾àª‚|àª°àª¾)/i,
          any: /^(a|p|àª®\.?|àª¸|àª¬|àª¸àª¾àª‚|àª°àª¾)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^àª®\.?/i,
            noon: /^àª¬/i,
            morning: /àª¸/i,
            afternoon: /àª¬/i,
            evening: /àª¸àª¾àª‚/i,
            night: /àª°àª¾/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 248 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "×¤×—×•×ª ×ž×©× ×™×™×”",
            two: "×¤×—×•×ª ×ž×©×ª×™ ×©× ×™×•×ª",
            other: "×¤×—×•×ª ×žÖ¾{{count}} ×©× ×™×•×ª",
          },
          xSeconds: {
            one: "×©× ×™×™×”",
            two: "×©×ª×™ ×©× ×™×•×ª",
            other: "{{count}} ×©× ×™×•×ª",
          },
          halfAMinute: "×—×¦×™ ×“×§×”",
          lessThanXMinutes: {
            one: "×¤×—×•×ª ×ž×“×§×”",
            two: "×¤×—×•×ª ×ž×©×ª×™ ×“×§×•×ª",
            other: "×¤×—×•×ª ×žÖ¾{{count}} ×“×§×•×ª",
          },
          xMinutes: {
            one: "×“×§×”",
            two: "×©×ª×™ ×“×§×•×ª",
            other: "{{count}} ×“×§×•×ª",
          },
          aboutXHours: {
            one: "×›×©×¢×”",
            two: "×›×©×¢×ª×™×™×",
            other: "×›Ö¾{{count}} ×©×¢×•×ª",
          },
          xHours: {
            one: "×©×¢×”",
            two: "×©×¢×ª×™×™×",
            other: "{{count}} ×©×¢×•×ª",
          },
          xDays: {
            one: "×™×•×",
            two: "×™×•×ž×™×™×",
            other: "{{count}} ×™×ž×™×",
          },
          aboutXWeeks: {
            one: "×›×©×‘×•×¢",
            two: "×›×©×‘×•×¢×™×™×",
            other: "×›Ö¾{{count}} ×©×‘×•×¢×•×ª",
          },
          xWeeks: {
            one: "×©×‘×•×¢",
            two: "×©×‘×•×¢×™×™×",
            other: "{{count}} ×©×‘×•×¢×•×ª",
          },
          aboutXMonths: {
            one: "×›×—×•×“×©",
            two: "×›×—×•×“×©×™×™×",
            other: "×›Ö¾{{count}} ×—×•×“×©×™×",
          },
          xMonths: {
            one: "×—×•×“×©",
            two: "×—×•×“×©×™×™×",
            other: "{{count}} ×—×•×“×©×™×",
          },
          aboutXYears: {
            one: "×›×©× ×”",
            two: "×›×©× ×ª×™×™×",
            other: "×›Ö¾{{count}} ×©× ×™×",
          },
          xYears: {
            one: "×©× ×”",
            two: "×©× ×ª×™×™×",
            other: "{{count}} ×©× ×™×",
          },
          overXYears: {
            one: "×™×•×ª×¨ ×ž×©× ×”",
            two: "×™×•×ª×¨ ×ž×©× ×ª×™×™×",
            other: "×™×•×ª×¨ ×žÖ¾{{count}} ×©× ×™×",
          },
          almostXYears: {
            one: "×›×ž×¢×˜ ×©× ×”",
            two: "×›×ž×¢×˜ ×©× ×ª×™×™×",
            other: "×›×ž×¢×˜ {{count}} ×©× ×™×",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {}; // Return word instead of `in one day` or `one day ago`

          if (token === "xDays" && options.addSuffix && count <= 2) {
            var past = {
              1: "××ª×ž×•×œ",
              2: "×©×œ×©×•×",
            };
            var future = {
              1: "×ž×—×¨",
              2: "×ž×—×¨×ª×™×™×",
            };
            return options.comparison > 0 ? future[count] : past[count];
          }

          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 2) {
            result = formatDistanceLocale[token].two;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "×‘×¢×•×“ " + result;
            } else {
              return "×œ×¤× ×™ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 249 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d ×‘MMMM y",
          long: "d ×‘MMMM y",
          medium: "d ×‘MMM y",
          short: "d.M.y",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} '×‘×©×¢×”' {{time}}",
          long: "{{date}} '×‘×©×¢×”' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 250 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee '×©×¢×‘×¨ ×‘×©×¢×”' p",
          yesterday: "'××ª×ž×•×œ ×‘×©×¢×”' p",
          today: "'×”×™×•× ×‘×©×¢×”' p",
          tomorrow: "'×ž×—×¨ ×‘×©×¢×”' p",
          nextWeek: "eeee '×‘×©×¢×”' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 251 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["×œ×¤× ×”×´×¡", "×œ×¡×¤×™×¨×”"],
          abbreviated: ["×œ×¤× ×”×´×¡", "×œ×¡×¤×™×¨×”"],
          wide: ["×œ×¤× ×™ ×”×¡×¤×™×¨×”", "×œ×¡×¤×™×¨×”"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: [
            "×¨×‘×¢×•×Ÿ 1",
            "×¨×‘×¢×•×Ÿ 2",
            "×¨×‘×¢×•×Ÿ 3",
            "×¨×‘×¢×•×Ÿ 4",
          ],
        };
        var monthValues = {
          narrow: [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
          ],
          abbreviated: [
            "×™× ×•×³",
            "×¤×‘×¨×³",
            "×ž×¨×¥",
            "××¤×¨×³",
            "×ž××™",
            "×™×•× ×™",
            "×™×•×œ×™",
            "××•×’×³",
            "×¡×¤×˜×³",
            "××•×§×³",
            "× ×•×‘×³",
            "×“×¦×ž×³",
          ],
          wide: [
            "×™× ×•××¨",
            "×¤×‘×¨×•××¨",
            "×ž×¨×¥",
            "××¤×¨×™×œ",
            "×ž××™",
            "×™×•× ×™",
            "×™×•×œ×™",
            "××•×’×•×¡×˜",
            "×¡×¤×˜×ž×‘×¨",
            "××•×§×˜×•×‘×¨",
            "× ×•×‘×ž×‘×¨",
            "×“×¦×ž×‘×¨",
          ],
        };
        var dayValues = {
          narrow: ["××³", "×‘×³", "×’×³", "×“×³", "×”×³", "×•×³", "×©×³"],
          short: ["××³", "×‘×³", "×’×³", "×“×³", "×”×³", "×•×³", "×©×³"],
          abbreviated: [
            "×™×•× ××³",
            "×™×•× ×‘×³",
            "×™×•× ×’×³",
            "×™×•× ×“×³",
            "×™×•× ×”×³",
            "×™×•× ×•×³",
            "×©×‘×ª",
          ],
          wide: [
            "×™×•× ×¨××©×•×Ÿ",
            "×™×•× ×©× ×™",
            "×™×•× ×©×œ×™×©×™",
            "×™×•× ×¨×‘×™×¢×™",
            "×™×•× ×—×ž×™×©×™",
            "×™×•× ×©×™×©×™",
            "×™×•× ×©×‘×ª",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "×œ×¤× ×”×´×¦",
            pm: "××—×”×´×¦",
            midnight: "×—×¦×•×ª",
            noon: "×¦×”×¨×™×™×",
            morning: "×‘×•×§×¨",
            afternoon: "××—×¨ ×”×¦×”×¨×™×™×",
            evening: "×¢×¨×‘",
            night: "×œ×™×œ×”",
          },
          abbreviated: {
            am: "×œ×¤× ×”×´×¦",
            pm: "××—×”×´×¦",
            midnight: "×—×¦×•×ª",
            noon: "×¦×”×¨×™×™×",
            morning: "×‘×•×§×¨",
            afternoon: "××—×¨ ×”×¦×”×¨×™×™×",
            evening: "×¢×¨×‘",
            night: "×œ×™×œ×”",
          },
          wide: {
            am: "×œ×¤× ×”×´×¦",
            pm: "××—×”×´×¦",
            midnight: "×—×¦×•×ª",
            noon: "×¦×”×¨×™×™×",
            morning: "×‘×•×§×¨",
            afternoon: "××—×¨ ×”×¦×”×¨×™×™×",
            evening: "×¢×¨×‘",
            night: "×œ×™×œ×”",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "×œ×¤× ×”×´×¦",
            pm: "××—×”×´×¦",
            midnight: "×—×¦×•×ª",
            noon: "×¦×”×¨×™×™×",
            morning: "×‘×‘×•×§×¨",
            afternoon: "×‘×¦×”×¨×™×™×",
            evening: "×‘×¢×¨×‘",
            night: "×‘×œ×™×œ×”",
          },
          abbreviated: {
            am: "×œ×¤× ×”×´×¦",
            pm: "××—×”×´×¦",
            midnight: "×—×¦×•×ª",
            noon: "×¦×”×¨×™×™×",
            morning: "×‘×‘×•×§×¨",
            afternoon: "××—×¨ ×”×¦×”×¨×™×™×",
            evening: "×‘×¢×¨×‘",
            night: "×‘×œ×™×œ×”",
          },
          wide: {
            am: "×œ×¤× ×”×´×¦",
            pm: "××—×”×´×¦",
            midnight: "×—×¦×•×ª",
            noon: "×¦×”×¨×™×™×",
            morning: "×‘×‘×•×§×¨",
            afternoon: "××—×¨ ×”×¦×”×¨×™×™×",
            evening: "×‘×¢×¨×‘",
            night: "×‘×œ×™×œ×”",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber); // We only show words till 10

          if (number <= 0 || number > 10) return number;
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var isFemale =
            ["year", "hour", "minute", "second"].indexOf(unit) >= 0;
          var male = [
            "×¨××©×•×Ÿ",
            "×©× ×™",
            "×©×œ×™×©×™",
            "×¨×‘×™×¢×™",
            "×—×ž×™×©×™",
            "×©×™×©×™",
            "×©×‘×™×¢×™",
            "×©×ž×™× ×™",
            "×ª×©×™×¢×™",
            "×¢×©×™×¨×™",
          ];
          var female = [
            "×¨××©×•× ×”",
            "×©× ×™×™×”",
            "×©×œ×™×©×™×ª",
            "×¨×‘×™×¢×™×ª",
            "×—×ž×™×©×™×ª",
            "×©×™×©×™×ª",
            "×©×‘×™×¢×™×ª",
            "×©×ž×™× ×™×ª",
            "×ª×©×™×¢×™×ª",
            "×¢×©×™×¨×™×ª",
          ];
          var index = number - 1;
          return isFemale ? female[index] : male[index];
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 252 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern =
          /^(\d+|(×¨××©×•×Ÿ|×©× ×™|×©×œ×™×©×™|×¨×‘×™×¢×™|×—×ž×™×©×™|×©×™×©×™|×©×‘×™×¢×™|×©×ž×™× ×™|×ª×©×™×¢×™|×¢×©×™×¨×™|×¨××©×•× ×”|×©× ×™×™×”|×©×œ×™×©×™×ª|×¨×‘×™×¢×™×ª|×—×ž×™×©×™×ª|×©×™×©×™×ª|×©×‘×™×¢×™×ª|×©×ž×™× ×™×ª|×ª×©×™×¢×™×ª|×¢×©×™×¨×™×ª))/i;
        var parseOrdinalNumberPattern =
          /^(\d+|×¨×|×©× |×©×œ|×¨×‘|×—|×©×™|×©×‘|×©×ž|×ª|×¢)/i;
        var matchEraPatterns = {
          narrow: /^×œ(×¡×¤×™×¨×”|×¤× ×”×´×¡)/i,
          abbreviated: /^×œ(×¡×¤×™×¨×”|×¤× ×”×´×¡)/i,
          wide: /^×œ(×¤× ×™ ×”)?×¡×¤×™×¨×”/i,
        };
        var parseEraPatterns = {
          any: [/^×œ×¤/i, /^×œ×¡/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^×¨×‘×¢×•×Ÿ [1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^\d+/i,
          abbreviated:
            /^(×™× ×•|×¤×‘×¨|×ž×¨×¥|××¤×¨|×ž××™|×™×•× ×™|×™×•×œ×™|××•×’|×¡×¤×˜|××•×§|× ×•×‘|×“×¦×ž)×³?/i,
          wide: /^(×™× ×•××¨|×¤×‘×¨×•××¨|×ž×¨×¥|××¤×¨×™×œ|×ž××™|×™×•× ×™|×™×•×œ×™|××•×’×•×¡×˜|×¡×¤×˜×ž×‘×¨|××•×§×˜×•×‘×¨|× ×•×‘×ž×‘×¨|×“×¦×ž×‘×¨)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^1$/i,
            /^2/i,
            /^3/i,
            /^4/i,
            /^5/i,
            /^6/i,
            /^7/i,
            /^8/i,
            /^9/i,
            /^10/i,
            /^11/i,
            /^12/i,
          ],
          any: [
            /^×™× /i,
            /^×¤/i,
            /^×ž×¨/i,
            /^××¤/i,
            /^×ž×/i,
            /^×™×•× /i,
            /^×™×•×œ/i,
            /^××•×’/i,
            /^×¡/i,
            /^××•×§/i,
            /^× /i,
            /^×“/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[××‘×’×“×”×•×©]×³/i,
          short: /^[××‘×’×“×”×•×©]×³/i,
          abbreviated: /^(×©×‘×ª|×™×•× (×|×‘|×’|×“|×”|×•)×³)/i,
          wide: /^×™×•× (×¨××©×•×Ÿ|×©× ×™|×©×œ×™×©×™|×¨×‘×™×¢×™|×—×ž×™×©×™|×©×™×©×™|×©×‘×ª)/i,
        };
        var parseDayPatterns = {
          abbreviated: [
            /××³$/i,
            /×‘×³$/i,
            /×’×³$/i,
            /×“×³$/i,
            /×”×³$/i,
            /×•×³$/i,
            /^×©/i,
          ],
          wide: [
            /×Ÿ$/i,
            /× ×™$/i,
            /×œ×™×©×™$/i,
            /×¢×™$/i,
            /×ž×™×©×™$/i,
            /×©×™×©×™$/i,
            /×ª$/i,
          ],
          any: [/^×/i, /^×‘/i, /^×’/i, /^×“/i, /^×”/i, /^×•/i, /^×©/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(××—×¨ ×”|×‘)?(×—×¦×•×ª|×¦×”×¨×™×™×|×‘×•×§×¨|×¢×¨×‘|×œ×™×œ×”|××—×”×´×¦|×œ×¤× ×”×´×¦)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^×œ×¤/i,
            pm: /^××—×”/i,
            midnight: /^×—/i,
            noon: /^×¦/i,
            morning: /×‘×•×§×¨/i,
            afternoon: /×‘×¦|××—×¨/i,
            evening: /×¢×¨×‘/i,
            night: /×œ×™×œ×”/i,
          },
        };
        var ordinalName = [
          "×¨×",
          "×©× ",
          "×©×œ",
          "×¨×‘",
          "×—",
          "×©×™",
          "×©×‘",
          "×©×ž",
          "×ª",
          "×¢",
        ];
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              var number = parseInt(value, 10);
              return isNaN(number) ? ordinalName.indexOf(value) + 1 : number;
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 253 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        var _index = _interopRequireDefault(__webpack_require__(39));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Source: https://www.unicode.org/cldr/charts/32/summary/hi.html
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "à¥§ à¤¸à¥‡à¤•à¤‚à¤¡ à¤¸à¥‡ à¤•à¤®",
            // CLDR #1310
            other: "{{count}} à¤¸à¥‡à¤•à¤‚à¤¡ à¤¸à¥‡ à¤•à¤®",
          },
          xSeconds: {
            one: "à¥§ à¤¸à¥‡à¤•à¤‚à¤¡",
            other: "{{count}} à¤¸à¥‡à¤•à¤‚à¤¡",
          },
          halfAMinute: "à¤†à¤§à¤¾ à¤®à¤¿à¤¨à¤Ÿ",
          lessThanXMinutes: {
            one: "à¥§ à¤®à¤¿à¤¨à¤Ÿ à¤¸à¥‡ à¤•à¤®",
            other: "{{count}} à¤®à¤¿à¤¨à¤Ÿ à¤¸à¥‡ à¤•à¤®",
          },
          xMinutes: {
            one: "à¥§ à¤®à¤¿à¤¨à¤Ÿ",
            // CLDR #1307
            other: "{{count}} à¤®à¤¿à¤¨à¤Ÿ",
          },
          aboutXHours: {
            one: "à¤²à¤—à¤­à¤— à¥§ à¤˜à¤‚à¤Ÿà¤¾",
            other: "à¤²à¤—à¤­à¤— {{count}} à¤˜à¤‚à¤Ÿà¥‡",
          },
          xHours: {
            one: "à¥§ à¤˜à¤‚à¤Ÿà¤¾",
            // CLDR #1304
            other: "{{count}} à¤˜à¤‚à¤Ÿà¥‡", // CLDR #4467
          },
          xDays: {
            one: "à¥§ à¤¦à¤¿à¤¨",
            // CLDR #1286
            other: "{{count}} à¤¦à¤¿à¤¨",
          },
          aboutXWeeks: {
            one: "à¤²à¤—à¤­à¤— à¥§ à¤¸à¤ªà¥à¤¤à¤¾à¤¹",
            other: "à¤²à¤—à¤­à¤— {{count}} à¤¸à¤ªà¥à¤¤à¤¾à¤¹",
          },
          xWeeks: {
            one: "à¥§ à¤¸à¤ªà¥à¤¤à¤¾à¤¹",
            other: "{{count}} à¤¸à¤ªà¥à¤¤à¤¾à¤¹",
          },
          aboutXMonths: {
            one: "à¤²à¤—à¤­à¤— à¥§ à¤®à¤¹à¥€à¤¨à¤¾",
            other: "à¤²à¤—à¤­à¤— {{count}} à¤®à¤¹à¥€à¤¨à¥‡",
          },
          xMonths: {
            one: "à¥§ à¤®à¤¹à¥€à¤¨à¤¾",
            other: "{{count}} à¤®à¤¹à¥€à¤¨à¥‡",
          },
          aboutXYears: {
            one: "à¤²à¤—à¤­à¤— à¥§ à¤µà¤°à¥à¤·",
            other: "à¤²à¤—à¤­à¤— {{count}} à¤µà¤°à¥à¤·", // CLDR #4823
          },
          xYears: {
            one: "à¥§ à¤µà¤°à¥à¤·",
            other: "{{count}} à¤µà¤°à¥à¤·",
          },
          overXYears: {
            one: "à¥§ à¤µà¤°à¥à¤· à¤¸à¥‡ à¤…à¤§à¤¿à¤•",
            other: "{{count}} à¤µà¤°à¥à¤· à¤¸à¥‡ à¤…à¤§à¤¿à¤•",
          },
          almostXYears: {
            one: "à¤²à¤—à¤­à¤— à¥§ à¤µà¤°à¥à¤·",
            other: "à¤²à¤—à¤­à¤— {{count}} à¤µà¤°à¥à¤·",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              _index.default.numberToLocale(count)
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + "à¤®à¥‡ ";
            } else {
              return result + " à¤ªà¤¹à¤²à¥‡";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 254 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM, y",
          // CLDR #1787
          long: "do MMMM, y",
          // CLDR #1788
          medium: "d MMM, y",
          // CLDR #1789
          short: "dd/MM/yyyy", // CLDR #1790
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          // CLDR #1791
          long: "h:mm:ss a z",
          // CLDR #1792
          medium: "h:mm:ss a",
          // CLDR #1793
          short: "h:mm a", // CLDR #1794
        };
        var dateTimeFormats = {
          full: "{{date}} 'à¤•à¥‹' {{time}}",
          // CLDR #1795
          long: "{{date}} 'à¤•à¥‹' {{time}}",
          // CLDR #1796
          medium: "{{date}}, {{time}}",
          // CLDR #1797
          short: "{{date}}, {{time}}", // CLDR #1798
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 255 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'à¤ªà¤¿à¤›à¤²à¥‡' eeee p",
          yesterday: "'à¤•à¤²' p",
          today: "'à¤†à¤œ' p",
          tomorrow: "'à¤•à¤²' p",
          nextWeek: "eeee 'à¤•à¥‹' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 256 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        var _index3 = _interopRequireDefault(__webpack_require__(39));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^[à¥¦à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯]+/i;
        var parseOrdinalNumberPattern = /^[à¥¦à¥§à¥¨à¥©à¥ªà¥«à¥¬à¥­à¥®à¥¯]+/i;
        var matchEraPatterns = {
          narrow: /^(à¤ˆà¤¸à¤¾-à¤ªà¥‚à¤°à¥à¤µ|à¤ˆà¤¸à¥à¤µà¥€)/i,
          abbreviated: /^(à¤ˆà¤¸à¤¾\.?\s?à¤ªà¥‚à¤°à¥à¤µ\.?|à¤ˆà¤¸à¤¾\.?)/i,
          wide: /^(à¤ˆà¤¸à¤¾-à¤ªà¥‚à¤°à¥à¤µ|à¤ˆà¤¸à¤µà¥€ à¤ªà¥‚à¤°à¥à¤µ|à¤ˆà¤¸à¤µà¥€ à¤¸à¤¨|à¤ˆà¤¸à¤µà¥€)/i,
        };
        var parseEraPatterns = {
          any: [/^b/i, /^(a|c)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^à¤¤à¤¿[1234]/i,
          wide: /^[1234](à¤ªà¤¹à¤²à¥€|à¤¦à¥‚à¤¸à¤°à¥€|à¤¤à¥€à¤¸à¤°à¥€|à¤šà¥Œà¤¥à¥€)? à¤¤à¤¿à¤®à¤¾à¤¹à¥€/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow:
            /^[à¤œà¤«à¤¼à¤®à¤¾à¤…à¤ªà¥à¤®à¤ˆà¤œà¥‚à¤¨à¤œà¥à¤…à¤—à¤¸à¤¿à¤…à¤•à¥à¤¤à¤¨à¤¦à¤¿]/i,
          abbreviated:
            /^(à¤œà¤¨|à¤«à¤¼à¤°|à¤®à¤¾à¤°à¥à¤š|à¤…à¤ªà¥|à¤®à¤ˆ|à¤œà¥‚à¤¨|à¤œà¥à¤²|à¤…à¤—|à¤¸à¤¿à¤¤|à¤…à¤•à¥à¤¤à¥‚|à¤¨à¤µ|à¤¦à¤¿à¤¸)/i,
          wide: /^(à¤œà¤¨à¤µà¤°à¥€|à¤«à¤¼à¤°à¤µà¤°à¥€|à¤®à¤¾à¤°à¥à¤š|à¤…à¤ªà¥à¤°à¥ˆà¤²|à¤®à¤ˆ|à¤œà¥‚à¤¨|à¤œà¥à¤²à¤¾à¤ˆ|à¤…à¤—à¤¸à¥à¤¤|à¤¸à¤¿à¤¤à¤‚à¤¬à¤°|à¤…à¤•à¥à¤¤à¥‚à¤¬à¤°|à¤¨à¤µà¤‚à¤¬à¤°|à¤¦à¤¿à¤¸à¤‚à¤¬à¤°)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^à¤œ/i,
            /^à¤«à¤¼/i,
            /^à¤®à¤¾/i,
            /^à¤…à¤ªà¥/i,
            /^à¤®à¤ˆ/i,
            /^à¤œà¥‚/i,
            /^à¤œà¥/i,
            /^à¤…à¤—/i,
            /^à¤¸à¤¿/i,
            /^à¤…à¤•à¥à¤¤à¥‚/i,
            /^à¤¨/i,
            /^à¤¦à¤¿/i,
          ],
          any: [
            /^à¤œà¤¨/i,
            /^à¤«à¤¼/i,
            /^à¤®à¤¾/i,
            /^à¤…à¤ªà¥/i,
            /^à¤®à¤ˆ/i,
            /^à¤œà¥‚/i,
            /^à¤œà¥/i,
            /^à¤…à¤—/i,
            /^à¤¸à¤¿/i,
            /^à¤…à¤•à¥à¤¤à¥‚/i,
            /^à¤¨à¤µ/i,
            /^à¤¦à¤¿à¤¸/i,
          ],
        };
        var matchDayPatterns = {
          narrow:
            /^[à¤°à¤µà¤¿à¤¸à¥‹à¤®à¤®à¤‚à¤—à¤²à¤¬à¥à¤§à¤—à¥à¤°à¥à¤¶à¥à¤•à¥à¤°à¤¶à¤¨à¤¿]/i,
          short:
            /^(à¤°à¤µà¤¿|à¤¸à¥‹à¤®|à¤®à¤‚à¤—à¤²|à¤¬à¥à¤§|à¤—à¥à¤°à¥|à¤¶à¥à¤•à¥à¤°|à¤¶à¤¨à¤¿)/i,
          abbreviated:
            /^(à¤°à¤µà¤¿|à¤¸à¥‹à¤®|à¤®à¤‚à¤—à¤²|à¤¬à¥à¤§|à¤—à¥à¤°à¥|à¤¶à¥à¤•à¥à¤°|à¤¶à¤¨à¤¿)/i,
          wide: /^(à¤°à¤µà¤¿à¤µà¤¾à¤°|à¤¸à¥‹à¤®à¤µà¤¾à¤°|à¤®à¤‚à¤—à¤²à¤µà¤¾à¤°|à¤¬à¥à¤§à¤µà¤¾à¤°|à¤—à¥à¤°à¥à¤µà¤¾à¤°|à¤¶à¥à¤•à¥à¤°à¤µà¤¾à¤°|à¤¶à¤¨à¤¿à¤µà¤¾à¤°)/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^à¤°à¤µà¤¿/i,
            /^à¤¸à¥‹à¤®/i,
            /^à¤®à¤‚à¤—à¤²/i,
            /^à¤¬à¥à¤§/i,
            /^à¤—à¥à¤°à¥/i,
            /^à¤¶à¥à¤•à¥à¤°/i,
            /^à¤¶à¤¨à¤¿/i,
          ],
          any: [
            /^à¤°à¤µà¤¿/i,
            /^à¤¸à¥‹à¤®/i,
            /^à¤®à¤‚à¤—à¤²/i,
            /^à¤¬à¥à¤§/i,
            /^à¤—à¥à¤°à¥/i,
            /^à¤¶à¥à¤•à¥à¤°/i,
            /^à¤¶à¤¨à¤¿/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(à¤ªà¥‚|à¤…|à¤®|à¤¦.\?|à¤¸à¥|à¤¦à¥‹|à¤¶à¤¾|à¤°à¤¾)/i,
          any: /^(à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨|à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨|à¤®|à¤¦.\?|à¤¸à¥|à¤¦à¥‹|à¤¶à¤¾|à¤°à¤¾)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^à¤ªà¥‚à¤°à¥à¤µà¤¾à¤¹à¥à¤¨/i,
            pm: /^à¤…à¤ªà¤°à¤¾à¤¹à¥à¤¨/i,
            midnight: /^à¤®à¤§à¥à¤¯/i,
            noon: /^à¤¦à¥‹/i,
            morning: /à¤¸à¥/i,
            afternoon: /à¤¦à¥‹/i,
            evening: /à¤¶à¤¾/i,
            night: /à¤°à¤¾/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: _index3.default.localeToNumber,
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 257 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: {
              standalone: "manje od 1 sekunde",
              withPrepositionAgo: "manje od 1 sekunde",
              withPrepositionIn: "manje od 1 sekundu",
            },
            dual: "manje od {{count}} sekunde",
            other: "manje od {{count}} sekundi",
          },
          xSeconds: {
            one: {
              standalone: "1 sekunda",
              withPrepositionAgo: "1 sekunde",
              withPrepositionIn: "1 sekundu",
            },
            dual: "{{count}} sekunde",
            other: "{{count}} sekundi",
          },
          halfAMinute: "pola minute",
          lessThanXMinutes: {
            one: {
              standalone: "manje od 1 minute",
              withPrepositionAgo: "manje od 1 minute",
              withPrepositionIn: "manje od 1 minutu",
            },
            dual: "manje od {{count}} minute",
            other: "manje od {{count}} minuta",
          },
          xMinutes: {
            one: {
              standalone: "1 minuta",
              withPrepositionAgo: "1 minute",
              withPrepositionIn: "1 minutu",
            },
            dual: "{{count}} minute",
            other: "{{count}} minuta",
          },
          aboutXHours: {
            one: {
              standalone: "oko 1 sat",
              withPrepositionAgo: "oko 1 sat",
              withPrepositionIn: "oko 1 sat",
            },
            dual: "oko {{count}} sata",
            other: "oko {{count}} sati",
          },
          xHours: {
            one: {
              standalone: "1 sat",
              withPrepositionAgo: "1 sat",
              withPrepositionIn: "1 sat",
            },
            dual: "{{count}} sata",
            other: "{{count}} sati",
          },
          xDays: {
            one: {
              standalone: "1 dan",
              withPrepositionAgo: "1 dan",
              withPrepositionIn: "1 dan",
            },
            dual: "{{count}} dana",
            other: "{{count}} dana",
          },
          aboutXWeeks: {
            one: {
              standalone: "oko 1 tjedan",
              withPrepositionAgo: "oko 1 tjedan",
              withPrepositionIn: "oko 1 tjedan",
            },
            dual: "oko {{count}} tjedna",
            other: "oko {{count}} tjedana",
          },
          xWeeks: {
            one: {
              standalone: "1 tjedan",
              withPrepositionAgo: "1 tjedan",
              withPrepositionIn: "1 tjedan",
            },
            dual: "{{count}} tjedna",
            other: "{{count}} tjedana",
          },
          aboutXMonths: {
            one: {
              standalone: "oko 1 mjesec",
              withPrepositionAgo: "oko 1 mjesec",
              withPrepositionIn: "oko 1 mjesec",
            },
            dual: "oko {{count}} mjeseca",
            other: "oko {{count}} mjeseci",
          },
          xMonths: {
            one: {
              standalone: "1 mjesec",
              withPrepositionAgo: "1 mjesec",
              withPrepositionIn: "1 mjesec",
            },
            dual: "{{count}} mjeseca",
            other: "{{count}} mjeseci",
          },
          aboutXYears: {
            one: {
              standalone: "oko 1 godinu",
              withPrepositionAgo: "oko 1 godinu",
              withPrepositionIn: "oko 1 godinu",
            },
            dual: "oko {{count}} godine",
            other: "oko {{count}} godina",
          },
          xYears: {
            one: {
              standalone: "1 godina",
              withPrepositionAgo: "1 godine",
              withPrepositionIn: "1 godinu",
            },
            dual: "{{count}} godine",
            other: "{{count}} godina",
          },
          overXYears: {
            one: {
              standalone: "preko 1 godinu",
              withPrepositionAgo: "preko 1 godinu",
              withPrepositionIn: "preko 1 godinu",
            },
            dual: "preko {{count}} godine",
            other: "preko {{count}} godina",
          },
          almostXYears: {
            one: {
              standalone: "gotovo 1 godinu",
              withPrepositionAgo: "gotovo 1 godinu",
              withPrepositionIn: "gotovo 1 godinu",
            },
            dual: "gotovo {{count}} godine",
            other: "gotovo {{count}} godina",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                result = formatDistanceLocale[token].one.withPrepositionIn;
              } else {
                result = formatDistanceLocale[token].one.withPrepositionAgo;
              }
            } else {
              result = formatDistanceLocale[token].one.standalone;
            }
          } else if (
            count % 10 > 1 &&
            count % 10 < 5 && // if last digit is between 2 and 4
            String(count).substr(-2, 1) !== "1" // unless the 2nd to last digit is "1"
          ) {
            result = formatDistanceLocale[token].dual.replace(
              "{{count}}",
              count
            );
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "za " + result;
            } else {
              return "prije " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 258 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d. MMMM y.",
          long: "d. MMMM y.",
          medium: "d. MMM y.",
          short: "dd. MM. y.",
        };
        var timeFormats = {
          full: "HH:mm:ss (zzzz)",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'u' {{time}}",
          long: "{{date}} 'u' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 259 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'proÅ¡lu nedjelju u' p";

              case 3:
                return "'proÅ¡lu srijedu u' p";

              case 6:
                return "'proÅ¡lu subotu u' p";

              default:
                return "'proÅ¡li' EEEE 'u' p";
            }
          },
          yesterday: "'juÄer u' p",
          today: "'danas u' p",
          tomorrow: "'sutra u' p",
          nextWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'iduÄ‡u nedjelju u' p";

              case 3:
                return "'iduÄ‡u srijedu u' p";

              case 6:
                return "'iduÄ‡u subotu u' p";

              default:
                return "'proÅ¡li' EEEE 'u' p";
            }
          },
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 260 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return String(number).concat(".");
        }

        var eraValues = {
          narrow: ["pr.n.e.", "AD"],
          abbreviated: ["pr. Kr.", "po. Kr."],
          wide: ["Prije Krista", "Poslije Krista"],
        };
        var monthValues = {
          narrow: [
            "1.",
            "2.",
            "3.",
            "4.",
            "5.",
            "6.",
            "7.",
            "8.",
            "9.",
            "10.",
            "11.",
            "12.",
          ],
          abbreviated: [
            "sij",
            "velj",
            "oÅ¾u",
            "tra",
            "svi",
            "lip",
            "srp",
            "kol",
            "ruj",
            "lis",
            "stu",
            "pro",
          ],
          wide: [
            "sijeÄanj",
            "veljaÄa",
            "oÅ¾ujak",
            "travanj",
            "svibanj",
            "lipanj",
            "srpanj",
            "kolovoz",
            "rujan",
            "listopad",
            "studeni",
            "prosinac",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "1.",
            "2.",
            "3.",
            "4.",
            "5.",
            "6.",
            "7.",
            "8.",
            "9.",
            "10.",
            "11.",
            "12.",
          ],
          abbreviated: [
            "sij",
            "velj",
            "oÅ¾u",
            "tra",
            "svi",
            "lip",
            "srp",
            "kol",
            "ruj",
            "lis",
            "stu",
            "pro",
          ],
          wide: [
            "sijeÄnja",
            "veljaÄe",
            "oÅ¾ujka",
            "travnja",
            "svibnja",
            "lipnja",
            "srpnja",
            "kolovoza",
            "rujna",
            "listopada",
            "studenog",
            "prosinca",
          ],
        };
        var quarterValues = {
          narrow: ["1.", "2.", "3.", "4."],
          abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
          wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
        };
        var dayValues = {
          narrow: ["N", "P", "U", "S", "ÄŒ", "P", "S"],
          short: ["ned", "pon", "uto", "sri", "Äet", "pet", "sub"],
          abbreviated: ["ned", "pon", "uto", "sri", "Äet", "pet", "sub"],
          wide: [
            "nedjelja",
            "ponedjeljak",
            "utorak",
            "srijeda",
            "Äetvrtak",
            "petak",
            "subota",
          ],
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutro",
            afternoon: "popodne",
            evening: "naveÄer",
            night: "noÄ‡u",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutro",
            afternoon: "popodne",
            evening: "naveÄer",
            night: "noÄ‡u",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutro",
            afternoon: "poslije podne",
            evening: "naveÄer",
            night: "noÄ‡u",
          },
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutro",
            afternoon: "popodne",
            evening: "naveÄer",
            night: "noÄ‡u",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutro",
            afternoon: "popodne",
            evening: "naveÄer",
            night: "noÄ‡u",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutro",
            afternoon: "poslije podne",
            evening: "naveÄer",
            night: "noÄ‡u",
          },
        };
        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 261 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\./i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(pr\.n\.e\.|AD)/i,
          abbreviated: /^(pr\.\s?Kr\.|po\.\s?Kr\.)/i,
          wide: /^(Prije Krista|prije nove ere|Poslije Krista|nova era)/i,
        };
        var parseEraPatterns = {
          any: [/^pr/i, /^(po|nova)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]\.\s?kv\.?/i,
          wide: /^[1234]\. kvartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^(10|11|12|[123456789])\./i,
          abbreviated:
            /^(sij|velj|(oÅ¾u|ozu)|tra|svi|lip|srp|kol|ruj|lis|stu|pro)/i,
          wide: /^((sijeÄanj|sijeÄnja|sijecanj|sijecnja)|(veljaÄa|veljaÄe|veljaca|veljace)|(oÅ¾ujak|oÅ¾ujka|ozujak|ozujka)|(travanj|travnja)|(svibanj|svibnja)|(lipanj|lipnja)|(srpanj|srpnja)|(kolovoz|kolovoza)|(rujan|rujna)|(listopad|listopada)|(studeni|studenog)|(prosinac|prosinca))/i,
        };
        var parseMonthPatterns = {
          narrow: [/(10|11|12|[123456789])/i],
          abbreviated: [
            /^sij/i,
            /^velj/i,
            /^(oÅ¾u|ozu)/i,
            /^tra/i,
            /^svi/i,
            /^lip/i,
            /^srp/i,
            /^kol/i,
            /^ruj/i,
            /^lis/i,
            /^stu/i,
            /^pro/i,
          ],
          wide: [
            /^sij/i,
            /^velj/i,
            /^(oÅ¾u|ozu)/i,
            /^tra/i,
            /^svi/i,
            /^lip/i,
            /^srp/i,
            /^kol/i,
            /^ruj/i,
            /^lis/i,
            /^stu/i,
            /^pro/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[npusÄc]/i,
          short: /^(ned|pon|uto|sri|(Äet|cet)|pet|sub)/i,
          abbreviated: /^(ned|pon|uto|sri|(Äet|cet)|pet|sub)/i,
          wide: /^(nedjelja|ponedjeljak|utorak|srijeda|(Äetvrtak|cetvrtak)|petak|subota)/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
          any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(am|pm|ponoc|ponoÄ‡|(po)?podne|navecer|naveÄer|noÄ‡u|poslije podne|ujutro)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^pono/i,
            noon: /^pod/i,
            morning: /jutro/i,
            afternoon: /(poslije\s|po)+podne/i,
            evening: /(navece|naveÄe)/i,
            night: /(nocu|noÄ‡u)/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "wide",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 262 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "mwens pase yon segond",
            other: "mwens pase {{count}} segond",
          },
          xSeconds: {
            one: "1 segond",
            other: "{{count}} segond",
          },
          halfAMinute: "30 segond",
          lessThanXMinutes: {
            one: "mwens pase yon minit",
            other: "mwens pase {{count}} minit",
          },
          xMinutes: {
            one: "1 minit",
            other: "{{count}} minit",
          },
          aboutXHours: {
            one: "anviwon iná¨",
            other: "anviwon {{count}} á¨",
          },
          xHours: {
            one: "1 lá¨",
            other: "{{count}} lá¨",
          },
          xDays: {
            one: "1 jou",
            other: "{{count}} jou",
          },
          aboutXWeeks: {
            one: "anviwon 1 semá¨n",
            other: "anviwon {{count}} semá¨n",
          },
          xWeeks: {
            one: "1 semá¨n",
            other: "{{count}} semá¨n",
          },
          aboutXMonths: {
            one: "anviwon 1 mwa",
            other: "anviwon {{count}} mwa",
          },
          xMonths: {
            one: "1 mwa",
            other: "{{count}} mwa",
          },
          aboutXYears: {
            one: "anviwon 1 an",
            other: "anviwon {{count}} an",
          },
          xYears: {
            one: "1 an",
            other: "{{count}} an",
          },
          overXYears: {
            one: "plis pase 1 an",
            other: "plis pase {{count}} an",
          },
          almostXYears: {
            one: "prá¨ske 1 an",
            other: "prá¨ske {{count}} an",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "nan " + result;
            } else {
              return "sa fá¨ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 263 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'nan lá¨' {{time}}",
          long: "{{date}} 'nan lá¨' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 264 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'pase nan lá¨' p",
          yesterday: "'yá¨ nan lá¨' p",
          today: "'jodi a' p",
          tomorrow: "'demen nan lá¨' p'",
          nextWeek: "eeee 'pwochen nan lá¨' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 265 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["av. J.-K", "ap. J.-K"],
          abbreviated: ["av. J.-K", "ap. J.-K"],
          wide: ["anvan Jezi Kris", "apre Jezi Kris"],
        };
        var quarterValues = {
          narrow: ["T1", "T2", "T3", "T4"],
          abbreviated: [
            "1ye trim.",
            "2yá¨m trim.",
            "3yá¨m trim.",
            "4yá¨m trim.",
          ],
          wide: [
            "1ye trimá¨s",
            "2yá¨m trimá¨s",
            "3yá¨m trimá¨s",
            "4yá¨m trimá¨s",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"],
          abbreviated: [
            "janv.",
            "fevr.",
            "mas",
            "avr.",
            "me",
            "jen",
            "jiyá¨",
            "out",
            "sept.",
            "okt.",
            "nov.",
            "des.",
          ],
          wide: [
            "janvye",
            "fevrye",
            "mas",
            "avril",
            "me",
            "jen",
            "jiyá¨",
            "out",
            "septanm",
            "oktá²b",
            "novanm",
            "desanm",
          ],
        };
        var dayValues = {
          narrow: ["D", "L", "M", "M", "J", "V", "S"],
          short: ["di", "le", "ma", "má¨", "je", "va", "sa"],
          abbreviated: [
            "dim.",
            "len.",
            "mad.",
            "má¨k.",
            "jed.",
            "van.",
            "sam.",
          ],
          wide: [
            "dimanch",
            "lendi",
            "madi",
            "má¨kredi",
            "jedi",
            "vandredi",
            "samdi",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "minwit",
            noon: "midi",
            morning: "mat.",
            afternoon: "ap.m.",
            evening: "swa",
            night: "mat.",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "minwit",
            noon: "midi",
            morning: "maten",
            afternoon: "aprá¨midi",
            evening: "swa",
            night: "maten",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "minwit",
            noon: "midi",
            morning: "nan maten",
            afternoon: "nan aprá¨midi",
            evening: "nan aswá¨",
            night: "nan maten",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber);
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var suffix;

          if (number === 0) {
            return number;
          }

          if (unit === "year" || unit === "hour" || unit === "week") {
            if (number === 1) {
              suffix = "ye";
            } else {
              suffix = "yá¨m";
            }
          } else {
            if (number === 1) {
              suffix = "ye";
            } else {
              suffix = "yá¨m";
            }
          }

          return number + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 266 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(ye|yá¨m)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(av\.J\.K|ap\.J\.K|ap\.J\.-K)/i,
          abbreviated: /^(av\.J\.-K|av\.J-K|apr\.J\.-K|apr\.J-K|ap\.J-K)/i,
          wide: /^(avan Jezi Kris|apre Jezi Kris)/i,
        };
        var parseEraPatterns = {
          any: [/^av/i, /^ap/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^t[1234]/i,
          wide: /^[1234](ye|yá¨m)? trimá¨s/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(janv|fevr|mas|avr|me|jen|jiyá¨|out|sept|okt|nov|des)\.?/i,
          wide: /^(janvye|fevrye|mas|avril|me|jen|jiyá¨|out|septanm|oktá²b|novanm|desanm)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^o/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^ma/i,
            /^av/i,
            /^me/i,
            /^je/i,
            /^ji/i,
            /^ou/i,
            /^s/i,
            /^ok/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[lmjvsd]/i,
          short: /^(di|le|ma|me|je|va|sa)/i,
          abbreviated: /^(dim|len|mad|má¨k|jed|van|sam)\.?/i,
          wide: /^(dimanch|lendi|madi|má¨kredi|jedi|vandredi|samdi)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
          any: [/^di/i, /^le/i, /^ma/i, /^má¨/i, /^je/i, /^va/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|minwit|midi|mat\.?|ap\.?m\.?|swa)/i,
          any: /^([ap]\.?\s?m\.?|nan maten|nan aprá¨midi|nan aswá¨)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^min/i,
            noon: /^mid/i,
            morning: /mat/i,
            afternoon: /ap/i,
            evening: /sw/i,
            night: /nwit/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 267 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var translations = {
          about: "ká¶rá¼lbelá¼l",
          over: "tá¶bb mint",
          almost: "majdnem",
          lessthan: "kevesebb mint",
        };
        var withoutSuffixes = {
          xseconds: " má¡sodperc",
          halfaminute: "fá©l perc",
          xminutes: " perc",
          xhours: " á³ra",
          xdays: " nap",
          xweeks: " há©t",
          xmonths: " há³nap",
          xyears: " á©v",
        };
        var withSuffixes = {
          xseconds: {
            "-1": " má¡sodperccel ezelÅ‘tt",
            1: " má¡sodperc máºlva",
            0: " má¡sodperce",
          },
          halfaminute: {
            "-1": "fá©l perccel ezelÅ‘tt",
            1: "fá©l perc máºlva",
            0: "fá©l perce",
          },
          xminutes: {
            "-1": " perccel ezelÅ‘tt",
            1: " perc máºlva",
            0: " perce",
          },
          xhours: {
            "-1": " á³rá¡val ezelÅ‘tt",
            1: " á³ra máºlva",
            0: " á³rá¡ja",
          },
          xdays: {
            "-1": " nappal ezelÅ‘tt",
            1: " nap máºlva",
            0: " napja",
          },
          xweeks: {
            "-1": " há©ttel ezelÅ‘tt",
            1: " há©t máºlva",
            0: " hete",
          },
          xmonths: {
            "-1": " há³nappal ezelÅ‘tt",
            1: " há³nap máºlva",
            0: " há³napja",
          },
          xyears: {
            "-1": " á©vvel ezelÅ‘tt",
            1: " á©v máºlva",
            0: " á©ve",
          },
        };

        function translate(number, addSuffix, key, comparison) {
          var translated = addSuffix
            ? withSuffixes[key][comparison]
            : withoutSuffixes[key];

          if (key === "halfaminute") {
            return translated;
          }

          return number + translated;
        }

        function formatDistance(token, count, options) {
          options = options || {};
          var adverb = token.match(/about|over|almost|lessthan/i);
          var unit = token.replace(adverb, "");
          var result;
          result = translate(
            count,
            options.addSuffix,
            unit.toLowerCase(),
            options.comparison
          );

          if (adverb) {
            result = translations[adverb[0].toLowerCase()] + " " + result;
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 268 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "y. MMMM d., EEEE",
          long: "y. MMMM d.",
          medium: "y. MMM d.",
          short: "y. MM. dd.",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 269 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var accusativeWeekdays = [
          "vasá¡rnap",
          "há©tfÅ‘n",
          "kedden",
          "szerdá¡n",
          "csá¼tá¶rtá¶ká¶n",
          "pá©nteken",
          "szombaton",
        ];

        function week(isFuture) {
          return function (date, _baseDate, _options) {
            var day = date.getUTCDay();
            return (
              (isFuture ? "" : "'máºlt' ") +
              "'" +
              accusativeWeekdays[day] +
              "'" +
              " p'-kor'"
            );
          };
        }

        var formatRelativeLocale = {
          lastWeek: week(false),
          yesterday: "'tegnap' p'-kor'",
          today: "'ma' p'-kor'",
          tomorrow: "'holnap' p'-kor'",
          nextWeek: week(true),
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 270 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["ie.", "isz."],
          abbreviated: ["i. e.", "i. sz."],
          wide: ["Krisztus elÅ‘tt", "idÅ‘szá¡má­tá¡sunk szerint"],
        };
        var quarterValues = {
          narrow: ["1.", "2.", "3.", "4."],
          abbreviated: ["1. n.á©v", "2. n.á©v", "3. n.á©v", "4. n.á©v"],
          wide: [
            "1. negyedá©v",
            "2. negyedá©v",
            "3. negyedá©v",
            "4. negyedá©v",
          ],
        };
        var formattingQuarterValues = {
          narrow: ["I.", "II.", "III.", "IV."],
          abbreviated: ["I. n.á©v", "II. n.á©v", "III. n.á©v", "IV. n.á©v"],
          wide: [
            "I. negyedá©v",
            "II. negyedá©v",
            "III. negyedá©v",
            "IV. negyedá©v",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "á", "M", "J", "J", "A", "Sz", "O", "N", "D"],
          abbreviated: [
            "jan.",
            "febr.",
            "má¡rc.",
            "á¡pr.",
            "má¡j.",
            "jáºn.",
            "jáºl.",
            "aug.",
            "szept.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "januá¡r",
            "februá¡r",
            "má¡rcius",
            "á¡prilis",
            "má¡jus",
            "jáºnius",
            "jáºlius",
            "augusztus",
            "szeptember",
            "oktá³ber",
            "november",
            "december",
          ],
        };
        var dayValues = {
          narrow: ["V", "H", "K", "Sz", "Cs", "P", "Sz"],
          short: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
          abbreviated: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
          wide: [
            "vasá¡rnap",
            "há©tfÅ‘",
            "kedd",
            "szerda",
            "csá¼tá¶rtá¶k",
            "pá©ntek",
            "szombat",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "de.",
            pm: "du.",
            midnight: "á©jfá©l",
            noon: "dá©l",
            morning: "reggel",
            afternoon: "du.",
            evening: "este",
            night: "á©jjel",
          },
          abbreviated: {
            am: "de.",
            pm: "du.",
            midnight: "á©jfá©l",
            noon: "dá©l",
            morning: "reggel",
            afternoon: "du.",
            evening: "este",
            night: "á©jjel",
          },
          wide: {
            am: "de.",
            pm: "du.",
            midnight: "á©jfá©l",
            noon: "dá©l",
            morning: "reggel",
            afternoon: "dá©lutá¡n",
            evening: "este",
            night: "á©jjel",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            formattingValues: formattingQuarterValues,
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 271 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\.?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(ie\.|isz\.)/i,
          abbreviated: /^(i\.\s?e\.?|b?\s?c\s?e|i\.\s?sz\.?)/i,
          wide: /^(Krisztus elÅ‘tt|idÅ‘szá¡má­tá¡sunk elÅ‘tt|idÅ‘szá¡má­tá¡sunk szerint|i\. sz\.)/i,
        };
        var parseEraPatterns = {
          narrow: [/ie/i, /isz/i],
          abbreviated: [/^(i\.?\s?e\.?|b\s?ce)/i, /^(i\.?\s?sz\.?|c\s?e)/i],
          any: [/elÅ‘tt/i, /(szerint|i. sz.)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]\.?/i,
          abbreviated: /^[1234]?\.?\s?n\.á©v/i,
          wide: /^([1234]|I|II|III|IV)?\.?\s?negyedá©v/i,
        };
        var parseQuarterPatterns = {
          any: [/1|I$/i, /2|II$/i, /3|III/i, /4|IV/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmaá¡sond]|sz/i,
          abbreviated:
            /^(jan\.?|febr\.?|má¡rc\.?|á¡pr\.?|má¡j\.?|jáºn\.?|jáºl\.?|aug\.?|szept\.?|okt\.?|nov\.?|dec\.?)/i,
          wide: /^(januá¡r|februá¡r|má¡rcius|á¡prilis|má¡jus|jáºnius|jáºlius|augusztus|szeptember|oktá³ber|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a|á¡/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s|sz/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^má¡r/i,
            /^á¡p/i,
            /^má¡j/i,
            /^jáºn/i,
            /^jáºl/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^([vhkpc]|sz|cs|sz)/i,
          short: /^([vhkp]|sze|cs|szo)/i,
          abbreviated: /^([vhkp]|sze|cs|szo)/i,
          wide: /^(vasá¡rnap|há©tfÅ‘|kedd|szerda|csá¼tá¶rtá¶k|pá©ntek|szombat)/i,
        };
        var parseDayPatterns = {
          narrow: [/^v/i, /^h/i, /^k/i, /^sz/i, /^c/i, /^p/i, /^sz/i],
          any: [/^v/i, /^h/i, /^k/i, /^sze/i, /^c/i, /^p/i, /^szo/i],
        };
        var matchDayPeriodPatterns = {
          any: /^((de|du)\.?|á©jfá©l|dá©lutá¡n|dá©l|reggel|este|á©jjel)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^de\.?/i,
            pm: /^du\.?/i,
            midnight: /^á©jf/i,
            noon: /^dá©/i,
            morning: /reg/i,
            afternoon: /^dá©lu\.?/i,
            evening: /es/i,
            night: /á©jj/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 272 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Õ¡Õ¾Õ¥Õ¬Õ« Ö„Õ«Õ¹ Ö„Õ¡Õ¶ 1 Õ¾Õ¡ÕµÖ€Õ¯ÕµÕ¡Õ¶",
            other: "Õ¡Õ¾Õ¥Õ¬Õ« Ö„Õ«Õ¹ Ö„Õ¡Õ¶ {{count}} Õ¾Õ¡ÕµÖ€Õ¯ÕµÕ¡Õ¶",
          },
          xSeconds: {
            one: "1 Õ¾Õ¡ÕµÖ€Õ¯ÕµÕ¡Õ¶",
            other: "{{count}} Õ¾Õ¡ÕµÖ€Õ¯ÕµÕ¡Õ¶",
          },
          halfAMinute: "Õ¯Õ¥Õ½ Ö€Õ¸ÕºÕ¥",
          lessThanXMinutes: {
            one: "Õ¡Õ¾Õ¥Õ¬Õ« Ö„Õ«Õ¹ Ö„Õ¡Õ¶ 1 Ö€Õ¸ÕºÕ¥",
            other: "Õ¡Õ¾Õ¥Õ¬Õ« Ö„Õ«Õ¹ Ö„Õ¡Õ¶ {{count}} Ö€Õ¸ÕºÕ¥",
          },
          xMinutes: {
            one: "1 Ö€Õ¸ÕºÕ¥",
            other: "{{count}} Ö€Õ¸ÕºÕ¥",
          },
          aboutXHours: {
            one: "Õ´Õ¸Õ¿ 1 ÕªÕ¡Õ´",
            other: "Õ´Õ¸Õ¿ {{count}} ÕªÕ¡Õ´",
          },
          xHours: {
            one: "1 ÕªÕ¡Õ´",
            other: "{{count}} ÕªÕ¡Õ´",
          },
          xDays: {
            one: "1 Ö…Ö€",
            other: "{{count}} Ö…Ö€",
          },
          aboutXWeeks: {
            one: "Õ´Õ¸Õ¿ 1 Õ·Õ¡Õ¢Õ¡Õ©",
            other: "Õ´Õ¸Õ¿ {{count}} Õ·Õ¡Õ¢Õ¡Õ©",
          },
          xWeeks: {
            one: "1 Õ·Õ¡Õ¢Õ¡Õ©",
            other: "{{count}} Õ·Õ¡Õ¢Õ¡Õ©",
          },
          aboutXMonths: {
            one: "Õ´Õ¸Õ¿ 1 Õ¡Õ´Õ«Õ½",
            other: "Õ´Õ¸Õ¿ {{count}} Õ¡Õ´Õ«Õ½",
          },
          xMonths: {
            one: "1 Õ¡Õ´Õ«Õ½",
            other: "{{count}} Õ¡Õ´Õ«Õ½",
          },
          aboutXYears: {
            one: "Õ´Õ¸Õ¿ 1 Õ¿Õ¡Ö€Õ«",
            other: "Õ´Õ¸Õ¿ {{count}} Õ¿Õ¡Ö€Õ«",
          },
          xYears: {
            one: "1 Õ¿Õ¡Ö€Õ«",
            other: "{{count}} Õ¿Õ¡Ö€Õ«",
          },
          overXYears: {
            one: "Õ¡Õ¾Õ¥Õ¬Õ« Ö„Õ¡Õ¶ 1 Õ¿Õ¡Ö€Õ«",
            other: "Õ¡Õ¾Õ¥Õ¬Õ« Ö„Õ¡Õ¶ {{count}} Õ¿Õ¡Ö€Õ«",
          },
          almostXYears: {
            one: "Õ°Õ¡Õ´Õ¡Ö€ÕµÕ¡ 1 Õ¿Õ¡Ö€Õ«",
            other: "Õ°Õ¡Õ´Õ¡Ö€ÕµÕ¡ {{count}} Õ¿Õ¡Ö€Õ«",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " Õ°Õ¥Õ¿Õ¸";
            } else {
              return result + " Õ¡Õ¼Õ¡Õ»";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 273 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "d MMMM, y, EEEE",
          long: "d MMMM, y",
          medium: "d MMM, y",
          short: "dd.MM.yyyy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Õªâ€¤'{{time}}",
          long: "{{date}} 'Õªâ€¤'{{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 274 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'Õ¶Õ¡Õ­Õ¸Ö€Õ¤' eeee p'ÖŠÕ«Õ¶'",
          yesterday: "'Õ¥Ö€Õ¥Õ¯' p'ÖŠÕ«Õ¶'",
          today: "'Õ¡ÕµÕ½Ö…Ö€' p'ÖŠÕ«Õ¶'",
          tomorrow: "'Õ¾Õ¡Õ²Õ¨' p'ÖŠÕ«Õ¶'",
          nextWeek: "'Õ°Õ¡Õ»Õ¸Ö€Õ¤' eeee p'ÖŠÕ«Õ¶'",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 275 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Õ”", "Õ„"],
          abbreviated: ["Õ”Ô±", "Õ„Ô¹"],
          wide: ["Õ”Ö€Õ«Õ½Õ¿Õ¸Õ½Õ«Ö Õ¡Õ¼Õ¡Õ»", "Õ„Õ¥Ö€ Õ©Õ¾Õ¡Ö€Õ¯Õ¸Ö‚Õ©ÕµÕ¡Õ¶"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Õ”1", "Õ”2", "Õ”3", "Õ”4"],
          wide: [
            "1ÖŠÕ«Õ¶ Ö„Õ¡Õ¼Õ¸Ö€Õ¤",
            "2ÖŠÖ€Õ¤ Ö„Õ¡Õ¼Õ¸Ö€Õ¤",
            "3ÖŠÖ€Õ¤ Ö„Õ¡Õ¼Õ¸Ö€Õ¤",
            "4ÖŠÖ€Õ¤ Ö„Õ¡Õ¼Õ¸Ö€Õ¤",
          ],
        };
        var monthValues = {
          narrow: [
            "Õ€",
            "Õ“",
            "Õ„",
            "Ô±",
            "Õ„",
            "Õ€",
            "Õ€",
            "Õ•",
            "Õ",
            "Õ€",
            "Õ†",
            "Ô´",
          ],
          abbreviated: [
            "Õ°Õ¸Ö‚Õ¶",
            "ÖƒÕ¥Õ¿",
            "Õ´Õ¡Ö€",
            "Õ¡ÕºÖ€",
            "Õ´Õ¡Õµ",
            "Õ°Õ¸Ö‚Õ¶",
            "Õ°Õ¸Ö‚Õ¬",
            "Ö…Õ£Õ½",
            "Õ½Õ¥Õº",
            "Õ°Õ¸Õ¯",
            "Õ¶Õ¸Õµ",
            "Õ¤Õ¥Õ¯",
          ],
          wide: [
            "Õ°Õ¸Ö‚Õ¶Õ¾Õ¡Ö€",
            "ÖƒÕ¥Õ¿Ö€Õ¾Õ¡Ö€",
            "Õ´Õ¡Ö€Õ¿",
            "Õ¡ÕºÖ€Õ«Õ¬",
            "Õ´Õ¡ÕµÕ«Õ½",
            "Õ°Õ¸Ö‚Õ¶Õ«Õ½",
            "Õ°Õ¸Ö‚Õ¬Õ«Õ½",
            "Ö…Õ£Õ¸Õ½Õ¿Õ¸Õ½",
            "Õ½Õ¥ÕºÕ¿Õ¥Õ´Õ¢Õ¥Ö€",
            "Õ°Õ¸Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€",
            "Õ¶Õ¸ÕµÕ¥Õ´Õ¢Õ¥Ö€",
            "Õ¤Õ¥Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€",
          ],
        };
        var dayValues = {
          narrow: ["Ô¿", "Ôµ", "Ôµ", "Õ‰", "Õ€", "Õˆ", "Õ‡"],
          short: ["Õ¯Ö€", "Õ¥Ö€", "Õ¥Ö„", "Õ¹Ö„", "Õ°Õ£", "Õ¸Ö‚Ö€", "Õ·Õ¢"],
          abbreviated: [
            "Õ¯Õ«Ö€",
            "Õ¥Ö€Õ¯",
            "Õ¥Ö€Ö„",
            "Õ¹Õ¸Ö€",
            "Õ°Õ¶Õ£",
            "Õ¸Ö‚Ö€Õ¢",
            "Õ·Õ¡Õ¢",
          ],
          wide: [
            "Õ¯Õ«Ö€Õ¡Õ¯Õ«",
            "Õ¥Ö€Õ¯Õ¸Ö‚Õ·Õ¡Õ¢Õ©Õ«",
            "Õ¥Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«",
            "Õ¹Õ¸Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«",
            "Õ°Õ«Õ¶Õ£Õ·Õ¡Õ¢Õ©Õ«",
            "Õ¸Ö‚Ö€Õ¢Õ¡Õ©",
            "Õ·Õ¡Õ¢Õ¡Õ©",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "Õ¯Õ¥Õ½Õ£Õ·",
            noon: "Õ¯Õ¥Õ½Ö…Ö€",
            morning: "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿",
            afternoon: "ÖÕ¥Ö€Õ¥Õ¯",
            evening: "Õ¥Ö€Õ¥Õ¯Õ¸",
            night: "Õ£Õ«Õ·Õ¥Ö€",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "Õ¯Õ¥Õ½Õ£Õ«Õ·Õ¥Ö€",
            noon: "Õ¯Õ¥Õ½Ö…Ö€",
            morning: "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿",
            afternoon: "ÖÕ¥Ö€Õ¥Õ¯",
            evening: "Õ¥Ö€Õ¥Õ¯Õ¸",
            night: "Õ£Õ«Õ·Õ¥Ö€",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "Õ¯Õ¥Õ½Õ£Õ«Õ·Õ¥Ö€",
            noon: "Õ¯Õ¥Õ½Ö…Ö€",
            morning: "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿",
            afternoon: "ÖÕ¥Ö€Õ¥Õ¯",
            evening: "Õ¥Ö€Õ¥Õ¯Õ¸",
            night: "Õ£Õ«Õ·Õ¥Ö€",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "Õ¯Õ¥Õ½Õ£Õ·",
            noon: "Õ¯Õ¥Õ½Ö…Ö€",
            morning: "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¨",
            afternoon: "ÖÕ¥Ö€Õ¥Õ¯Õ¨",
            evening: "Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶",
            night: "Õ£Õ«Õ·Õ¥Ö€Õ¨",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "Õ¯Õ¥Õ½Õ£Õ«Õ·Õ¥Ö€Õ«Õ¶",
            noon: "Õ¯Õ¥Õ½Ö…Ö€Õ«Õ¶",
            morning: "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¨",
            afternoon: "ÖÕ¥Ö€Õ¥Õ¯Õ¨",
            evening: "Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶",
            night: "Õ£Õ«Õ·Õ¥Ö€Õ¨",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "Õ¯Õ¥Õ½Õ£Õ«Õ·Õ¥Ö€Õ«Õ¶",
            noon: "Õ¯Õ¥Õ½Ö…Ö€Õ«Õ¶",
            morning: "Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¨",
            afternoon: "ÖÕ¥Ö€Õ¥Õ¯Õ¨",
            evening: "Õ¥Ö€Õ¥Õ¯Õ¸ÕµÕ¡Õ¶",
            night: "Õ£Õ«Õ·Õ¥Ö€Õ¨",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          var rem100 = number % 100;

          if (rem100 < 10) {
            if (rem100 % 10 === 1) {
              return number + "ÖŠÕ«Õ¶";
            }
          }

          return number + "ÖŠÖ€Õ¤";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 276 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)((-|ÖŠ)?(Õ«Õ¶|Ö€Õ¤))?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Õ”|Õ„)/i,
          abbreviated:
            /^(Õ”\.?\s?Ô±\.?|Õ„\.?\s?Ô¹\.?\s?Ô±\.?|Õ„\.?\s?Ô¹\.?|Õ”\.?\s?Õ€\.?)/i,
          wide: /^(Ö„Ö€Õ«Õ½Õ¿Õ¸Õ½Õ«Ö Õ¡Õ¼Õ¡Õ»|Õ´Õ¥Ö€ Õ©Õ¾Õ¡Ö€Õ¯Õ¸Ö‚Õ©ÕµÕ¸Ö‚Õ¶Õ«Ö Õ¡Õ¼Õ¡Õ»|Õ´Õ¥Ö€ Õ©Õ¾Õ¡Ö€Õ¯Õ¸Ö‚Õ©ÕµÕ¡Õ¶|Ö„Ö€Õ«Õ½Õ¿Õ¸Õ½Õ«Ö Õ°Õ¥Õ¿Õ¸)/i,
        };
        var parseEraPatterns = {
          any: [/^(Ö„|Õ´)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Ö„[1234]/i,
          wide: /^[1234]((-|ÖŠ)?(Õ«Õ¶|Ö€Õ¤)) Ö„Õ¡Õ¼Õ¸Ö€Õ¤/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[Õ°ÖƒÕ´Õ¡Ö…Õ½Õ¶Õ¤]/i,
          abbreviated:
            /^(Õ°Õ¸Ö‚Õ¶|ÖƒÕ¥Õ¿|Õ´Õ¡Ö€|Õ¡ÕºÖ€|Õ´Õ¡Õµ|Õ°Õ¸Ö‚Õ¶|Õ°Õ¸Ö‚Õ¬|Ö…Õ£Õ½|Õ½Õ¥Õº|Õ°Õ¸Õ¯|Õ¶Õ¸Õµ|Õ¤Õ¥Õ¯)/i,
          wide: /^(Õ°Õ¸Ö‚Õ¶Õ¾Õ¡Ö€|ÖƒÕ¥Õ¿Ö€Õ¾Õ¡Ö€|Õ´Õ¡Ö€Õ¿|Õ¡ÕºÖ€Õ«Õ¬|Õ´Õ¡ÕµÕ«Õ½|Õ°Õ¸Ö‚Õ¶Õ«Õ½|Õ°Õ¸Ö‚Õ¬Õ«Õ½|Ö…Õ£Õ¸Õ½Õ¿Õ¸Õ½|Õ½Õ¥ÕºÕ¿Õ¥Õ´Õ¢Õ¥Ö€|Õ°Õ¸Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€|Õ¶Õ¸ÕµÕ¥Õ´Õ¢Õ¥Ö€|Õ¤Õ¥Õ¯Õ¿Õ¥Õ´Õ¢Õ¥Ö€)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^Õ°/i,
            /^Öƒ/i,
            /^Õ´/i,
            /^Õ¡/i,
            /^Õ´/i,
            /^Õ°/i,
            /^Õ°/i,
            /^Ö…/i,
            /^Õ½/i,
            /^Õ°/i,
            /^Õ¶/i,
            /^Õ¤/i,
          ],
          any: [
            /^Õ°Õ¸Ö‚/i,
            /^Öƒ/i,
            /^Õ´Õ¡Ö€/i,
            /^Õ¡/i,
            /^Õ´Õ¡Õµ/i,
            /^Õ°Õ¸Ö‚Õ¶/i,
            /^Õ°Õ¸Ö‚Õ¬/i,
            /^Ö…/i,
            /^Õ½/i,
            /^Õ°Õ¸Õ¯/i,
            /^Õ¶/i,
            /^Õ¤/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Õ¥Õ¹Õ°Õ¸Õ·Õ¯]/i,
          short: /^(Õ¯Ö€|Õ¥Ö€|Õ¥Ö„|Õ¹Ö„|Õ°Õ£|Õ¸Ö‚Ö€|Õ·Õ¢)/i,
          abbreviated: /^(Õ¯Õ«Ö€|Õ¥Ö€Õ¯|Õ¥Ö€Ö„|Õ¹Õ¸Ö€|Õ°Õ¶Õ£|Õ¸Ö‚Ö€Õ¢|Õ·Õ¡Õ¢)/i,
          wide: /^(Õ¯Õ«Ö€Õ¡Õ¯Õ«|Õ¥Ö€Õ¯Õ¸Ö‚Õ·Õ¡Õ¢Õ©Õ«|Õ¥Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«|Õ¹Õ¸Ö€Õ¥Ö„Õ·Õ¡Õ¢Õ©Õ«|Õ°Õ«Õ¶Õ£Õ·Õ¡Õ¢Õ©Õ«|Õ¸Ö‚Ö€Õ¢Õ¡Õ©|Õ·Õ¡Õ¢Õ¡Õ©)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Õ¯/i, /^Õ¥/i, /^Õ¥/i, /^Õ¹/i, /^Õ°/i, /^(Õ¸|Õˆ)/, /^Õ·/i],
          short: [
            /^Õ¯/i,
            /^Õ¥Ö€/i,
            /^Õ¥Ö„/i,
            /^Õ¹/i,
            /^Õ°/i,
            /^(Õ¸|Õˆ)/,
            /^Õ·/i,
          ],
          abbreviated: [
            /^Õ¯/i,
            /^Õ¥Ö€Õ¯/i,
            /^Õ¥Ö€Ö„/i,
            /^Õ¹/i,
            /^Õ°/i,
            /^(Õ¸|Õˆ)/,
            /^Õ·/i,
          ],
          wide: [
            /^Õ¯/i,
            /^Õ¥Ö€Õ¯/i,
            /^Õ¥Ö€Õ¥/i,
            /^Õ¹/i,
            /^Õ°/i,
            /^(Õ¸|Õˆ)/,
            /^Õ·/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^([ap]|Õ¯Õ¥Õ½Õ£Õ·|Õ¯Õ¥Õ½Ö…Ö€|(Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¨?|ÖÕ¥Ö€Õ¥Õ¯Õ¨?|Õ¥Ö€Õ¥Õ¯Õ¸(ÕµÕ¡Õ¶)?|Õ£Õ«Õ·Õ¥Ö€Õ¨?))/i,
          any: /^([ap]\.?\s?m\.?|Õ¯Õ¥Õ½Õ£Õ«Õ·Õ¥Ö€(Õ«Õ¶)?|Õ¯Õ¥Õ½Ö…Ö€(Õ«Õ¶)?|(Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿Õ¨?|ÖÕ¥Ö€Õ¥Õ¯Õ¨?|Õ¥Ö€Õ¥Õ¯Õ¸(ÕµÕ¡Õ¶)?|Õ£Õ«Õ·Õ¥Ö€Õ¨?))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /Õ¯Õ¥Õ½Õ£Õ«Õ·Õ¥Ö€/i,
            noon: /Õ¯Õ¥Õ½Ö…Ö€/i,
            morning: /Õ¡Õ¼Õ¡Õ¾Õ¸Õ¿/i,
            afternoon: /ÖÕ¥Ö€Õ¥Õ¯/i,
            evening: /Õ¥Ö€Õ¥Õ¯Õ¸/i,
            night: /Õ£Õ«Õ·Õ¥Ö€/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 277 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "kurang dari 1 detik",
            other: "kurang dari {{count}} detik",
          },
          xSeconds: {
            one: "1 detik",
            other: "{{count}} detik",
          },
          halfAMinute: "setengah menit",
          lessThanXMinutes: {
            one: "kurang dari 1 menit",
            other: "kurang dari {{count}} menit",
          },
          xMinutes: {
            one: "1 menit",
            other: "{{count}} menit",
          },
          aboutXHours: {
            one: "sekitar 1 jam",
            other: "sekitar {{count}} jam",
          },
          xHours: {
            one: "1 jam",
            other: "{{count}} jam",
          },
          xDays: {
            one: "1 hari",
            other: "{{count}} hari",
          },
          aboutXWeeks: {
            one: "sekitar 1 minggu",
            other: "sekitar {{count}} minggu",
          },
          xWeeks: {
            one: "1 minggu",
            other: "{{count}} minggu",
          },
          aboutXMonths: {
            one: "sekitar 1 bulan",
            other: "sekitar {{count}} bulan",
          },
          xMonths: {
            one: "1 bulan",
            other: "{{count}} bulan",
          },
          aboutXYears: {
            one: "sekitar 1 tahun",
            other: "sekitar {{count}} tahun",
          },
          xYears: {
            one: "1 tahun",
            other: "{{count}} tahun",
          },
          overXYears: {
            one: "lebih dari 1 tahun",
            other: "lebih dari {{count}} tahun",
          },
          almostXYears: {
            one: "hampir 1 tahun",
            other: "hampir {{count}} tahun",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "dalam waktu " + result;
            } else {
              return result + " yang lalu";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 278 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "d/M/yyyy",
        };
        var timeFormats = {
          full: "HH.mm.ss",
          long: "HH.mm.ss",
          medium: "HH.mm",
          short: "HH.mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'pukul' {{time}}",
          long: "{{date}} 'pukul' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 279 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'lalu pukul' p",
          yesterday: "'Kemarin pukul' p",
          today: "'Hari ini pukul' p",
          tomorrow: "'Besok pukul' p",
          nextWeek: "eeee 'pukul' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 280 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // All data for localization are taken from this page
        // https://www.unicode.org/cldr/charts/32/summary/id.html
        var eraValues = {
          narrow: ["SM", "M"],
          abbreviated: ["SM", "M"],
          wide: ["Sebelum Masehi", "Masehi"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: [
            "Kuartal ke-1",
            "Kuartal ke-2",
            "Kuartal ke-3",
            "Kuartal ke-4",
          ], // Note: in Indonesian, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "Mei",
            "Jun",
            "Jul",
            "Ags",
            "Sep",
            "Okt",
            "Nov",
            "Des",
          ],
          wide: [
            "Januari",
            "Februari",
            "Maret",
            "April",
            "Mei",
            "Juni",
            "Juli",
            "Agustus",
            "September",
            "Oktober",
            "November",
            "Desember",
          ],
        };
        var dayValues = {
          narrow: ["M", "S", "S", "R", "K", "J", "S"],
          short: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
          abbreviated: ["Min", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
          wide: [
            "Minggu",
            "Senin",
            "Selasa",
            "Rabu",
            "Kamis",
            "Jumat",
            "Sabtu",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "siang",
            evening: "sore",
            night: "malam",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "siang",
            evening: "sore",
            night: "malam",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "siang",
            evening: "sore",
            night: "malam",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "siang",
            evening: "sore",
            night: "malam",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "siang",
            evening: "sore",
            night: "malam",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "siang",
            evening: "sore",
            night: "malam",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // Can't use "pertama", "kedua" because can't be parsed

          switch (number) {
            default:
              return "ke-" + number;
          }
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 281 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^ke-(\d+)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(sm|m)/i,
          abbreviated: /^(s\.?\s?m\.?|s\.?\s?e\.?\s?u\.?|m\.?|e\.?\s?u\.?)/i,
          wide: /^(sebelum masehi|sebelum era umum|masehi|era umum)/i,
        };
        var parseEraPatterns = {
          any: [/^s/i, /^(m|e)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^K-?\s[1234]/i,
          wide: /^Kuartal ke-?\s?[1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|feb|mar|apr|mei|jun|jul|agt|sep|okt|nov|des)/i,
          wide: /^(januari|februari|maret|april|mei|juni|juli|agustus|september|oktober|november|desember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^ma/i,
            /^ap/i,
            /^me/i,
            /^jun/i,
            /^jul/i,
            /^ag/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[srkjm]/i,
          short: /^(min|sen|sel|rab|kam|jum|sab)/i,
          abbreviated: /^(min|sen|sel|rab|kam|jum|sab)/i,
          wide: /^(minggu|senin|selasa|rabu|kamis|jumat|sabtu)/i,
        };
        var parseDayPatterns = {
          narrow: [/^m/i, /^s/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],
          any: [/^m/i, /^sen/i, /^sel/i, /^r/i, /^k/i, /^j/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(a|p|tengah m|tengah h|(di(\swaktu)?) (pagi|siang|sore|malam))/i,
          any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|(di(\swaktu)?) (pagi|siang|sore|malam))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^pm/i,
            midnight: /^tengah m/i,
            noon: /^tengah h/i,
            morning: /pagi/i,
            afternoon: /siang/i,
            evening: /sore/i,
            night: /malam/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 282 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "minna en 1 sekáºnda",
            other: "minna en {{count}} sekáºndur",
          },
          xSeconds: {
            one: "1 sekáºnda",
            other: "{{count}} sekáºndur",
          },
          halfAMinute: "há¡lf má­náºta",
          lessThanXMinutes: {
            one: "minna en 1 má­náºta",
            other: "minna en {{count}} má­náºtur",
          },
          xMinutes: {
            one: "1 má­náºta",
            other: "{{count}} má­náºtur",
          },
          aboutXHours: {
            one: "u.á¾.b. 1 klukkustund",
            other: "u.á¾.b. {{count}} klukkustundir",
          },
          xHours: {
            one: "1 klukkustund",
            other: "{{count}} klukkustundir",
          },
          xDays: {
            one: "1 dagur",
            other: "{{count}} dagar",
          },
          aboutXWeeks: {
            one: "um viku",
            other: "um {{count}} vikur",
          },
          xWeeks: {
            one: "1 viku",
            other: "{{count}} vikur",
          },
          aboutXMonths: {
            one: "u.á¾.b. 1 má¡nuá°ur",
            other: "u.á¾.b. {{count}} má¡nuá°ir",
          },
          xMonths: {
            one: "1 má¡nuá°ur",
            other: "{{count}} má¡nuá°ir",
          },
          aboutXYears: {
            one: "u.á¾.b. 1 á¡r",
            other: "u.á¾.b. {{count}} á¡r",
          },
          xYears: {
            one: "1 á¡r",
            other: "{{count}} á¡r",
          },
          overXYears: {
            one: "meira en 1 á¡r",
            other: "meira en {{count}} á¡r",
          },
          almostXYears: {
            one: "ná¦stum 1 á¡r",
            other: "ná¦stum {{count}} á¡r",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "á­ " + result;
            } else {
              return result + " sá­á°an";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 283 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM y",
          long: "do MMMM y",
          medium: "do MMM y",
          short: "d.MM.y",
        };
        var timeFormats = {
          full: "'kl'. HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'kl.' {{time}}",
          long: "{{date}} 'kl.' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 284 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'sá­á°asta' dddd 'kl.' p",
          yesterday: "'á­ gá¦r kl.' p",
          today: "'á­ dag kl.' p",
          tomorrow: "'á¡ morgun kl.' p",
          nextWeek: "dddd 'kl.' p",
          other: "L",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 285 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["f.Kr.", "e.Kr."],
          abbreviated: ["f.Kr.", "e.Kr."],
          wide: ["fyrir Krist", "eftir Krist"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1F", "2F", "3F", "4F"],
          wide: [
            "1. fjá³rá°ungur",
            "2. fjá³rá°ungur",
            "3. fjá³rá°ungur",
            "4. fjá³rá°ungur",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "á", "S", "á“", "N", "D"],
          abbreviated: [
            "jan.",
            "feb.",
            "mars",
            "aprá­l",
            "maá­",
            "jáºná­",
            "jáºlá­",
            "á¡gáºst",
            "sept.",
            "okt.",
            "ná³v.",
            "des.",
          ],
          wide: [
            "janáºar",
            "febráºar",
            "mars",
            "aprá­l",
            "maá­",
            "jáºná­",
            "jáºlá­",
            "á¡gáºst",
            "september",
            "oktá³ber",
            "ná³vember",
            "desember",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "áž", "M", "F", "F", "L"],
          short: ["Su", "Má¡", "ážr", "Mi", "Fi", "Fá¶", "La"],
          abbreviated: [
            "sun.",
            "má¡n.",
            "á¾ri.",
            "miá°.",
            "fim.",
            "fá¶s.",
            "lau",
          ],
          wide: [
            "sunnudagur",
            "má¡nudagur",
            "á¾riá°judagur",
            "miá°vikudagur",
            "fimmtudagur",
            "fá¶studagur",
            "laugardagur",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "f",
            pm: "e",
            midnight: "miá°ná¦tti",
            noon: "há¡degi",
            morning: "morgunn",
            afternoon: "sá­á°degi",
            evening: "kvá¶ld",
            night: "ná³tt",
          },
          abbreviated: {
            am: "f.h.",
            pm: "e.h.",
            midnight: "miá°ná¦tti",
            noon: "há¡degi",
            morning: "morgunn",
            afternoon: "sá­á°degi",
            evening: "kvá¶ld",
            night: "ná³tt",
          },
          wide: {
            am: "fyrir há¡degi",
            pm: "eftir há¡degi",
            midnight: "miá°ná¦tti",
            noon: "há¡degi",
            morning: "morgunn",
            afternoon: "sá­á°degi",
            evening: "kvá¶ld",
            night: "ná³tt",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "f",
            pm: "e",
            midnight: "á¡ miá°ná¦tti",
            noon: "á¡ há¡degi",
            morning: "aá° morgni",
            afternoon: "sá­á°degis",
            evening: "um kvá¶ld",
            night: "um ná³tt",
          },
          abbreviated: {
            am: "f.h.",
            pm: "e.h.",
            midnight: "á¡ miá°ná¦tti",
            noon: "á¡ há¡degi",
            morning: "aá° morgni",
            afternoon: "sá­á°degis",
            evening: "um kvá¶ld",
            night: "um ná³tt",
          },
          wide: {
            am: "fyrir há¡degi",
            pm: "eftir há¡degi",
            midnight: "á¡ miá°ná¦tti",
            noon: "á¡ há¡degi",
            morning: "aá° morgni",
            afternoon: "sá­á°degis",
            evening: "um kvá¶ld",
            night: "um ná³tt",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 286 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(f\.Kr\.|e\.Kr\.)/i,
          abbreviated: /^(f\.Kr\.|e\.Kr\.)/i,
          wide: /^(fyrir Krist|eftir Krist)/i,
        };
        var parseEraPatterns = {
          any: [/^(f\.Kr\.|e\.Kr\.)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234] fjá³rá°ungur/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmá¡sá³nd]/i,
          abbreviated:
            /^(jan\.|feb\.|mars\.|aprá­l\.|maá­|jáºná­|jáºlá­|á¡gust|sep\.|oct\.|nov\.|dec\.)/i,
          wide: /^(januar|februar|mars|aprá­l|maá­|jáºná­|jáºlá­|á¡gust|september|oktá³ber|ná³vember|desember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^á¡/i,
            /^s/i,
            /^á³/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^maá­/i,
            /^jáºn/i,
            /^jáºl/i,
            /^á¡u/i,
            /^s/i,
            /^á³/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtwf]/i,
          short: /^(su|má¡|á¾r|mi|fi|fá¶|la)/i,
          abbreviated: /^(sun|má¡n|á¾ri|miá°|fim|fá¶s|lau)\.?/i,
          wide: /^(sunnudagur|má¡nudagur|á¾riá°judagur|miá°vikudagur|fimmtudagur|fá¶studagur|laugardagur)/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^m/i, /^á¾/i, /^m/i, /^f/i, /^f/i, /^l/i],
          any: [/^su/i, /^má¡/i, /^á¾r/i, /^mi/i, /^fi/i, /^fá¶/i, /^la/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(f|e|sá­á°degis|(á¡|aá°|um) (morgni|kvá¶ld|ná³tt|miá°ná¦tti))/i,
          any: /^(fyrir há¡degi|eftir há¡degi|[ef]\.?h\.?|sá­á°degis|morgunn|(á¡|aá°|um) (morgni|kvá¶ld|ná³tt|miá°ná¦tti))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^f/i,
            pm: /^e/i,
            midnight: /^mi/i,
            noon: /^há¡/i,
            morning: /morgunn/i,
            afternoon: /sá­á°degi/i,
            evening: /kvá¶ld/i,
            night: /ná³tt/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 287 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "meno di un secondo",
            other: "meno di {{count}} secondi",
          },
          xSeconds: {
            one: "un secondo",
            other: "{{count}} secondi",
          },
          halfAMinute: "alcuni secondi",
          lessThanXMinutes: {
            one: "meno di un minuto",
            other: "meno di {{count}} minuti",
          },
          xMinutes: {
            one: "un minuto",
            other: "{{count}} minuti",
          },
          aboutXHours: {
            one: "circa un'ora",
            other: "circa {{count}} ore",
          },
          xHours: {
            one: "un'ora",
            other: "{{count}} ore",
          },
          xDays: {
            one: "un giorno",
            other: "{{count}} giorni",
          },
          aboutXWeeks: {
            one: "circa una settimana",
            other: "circa {{count}} settimane",
          },
          xWeeks: {
            one: "una settimana",
            other: "{{count}} settimane",
          },
          aboutXMonths: {
            one: "circa un mese",
            other: "circa {{count}} mesi",
          },
          xMonths: {
            one: "un mese",
            other: "{{count}} mesi",
          },
          aboutXYears: {
            one: "circa un anno",
            other: "circa {{count}} anni",
          },
          xYears: {
            one: "un anno",
            other: "{{count}} anni",
          },
          overXYears: {
            one: "piá¹ di un anno",
            other: "piá¹ di {{count}} anni",
          },
          almostXYears: {
            one: "quasi un anno",
            other: "quasi {{count}} anni",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "tra " + result;
            } else {
              return result + " fa";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 288 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 289 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var weekdays = [
          "domenica",
          "lunedá¬",
          "martedá¬",
          "mercoledá¬",
          "giovedá¬",
          "venerdá¬",
          "sabato",
        ];

        function lastWeek(day) {
          switch (day) {
            case 0:
              return "'domenica scorsa alle' p";

            default:
              return "'" + weekdays[day] + " scorso alle' p";
          }
        }

        function thisWeek(day) {
          return "'" + weekdays[day] + " alle' p";
        }

        function nextWeek(day) {
          switch (day) {
            case 0:
              return "'domenica prossima alle' p";

            default:
              return "'" + weekdays[day] + " prossimo alle' p";
          }
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'ieri alle' p",
          today: "'oggi alle' p",
          tomorrow: "'domani alle' p",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 290 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["aC", "dC"],
          abbreviated: ["a.C.", "d.C."],
          wide: ["avanti Cristo", "dopo Cristo"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["T1", "T2", "T3", "T4"],
          wide: [
            "1Âº trimestre",
            "2Âº trimestre",
            "3Âº trimestre",
            "4Âº trimestre",
          ],
        };
        var monthValues = {
          narrow: ["G", "F", "M", "A", "M", "G", "L", "A", "S", "O", "N", "D"],
          abbreviated: [
            "gen",
            "feb",
            "mar",
            "apr",
            "mag",
            "giu",
            "lug",
            "ago",
            "set",
            "ott",
            "nov",
            "dic",
          ],
          wide: [
            "gennaio",
            "febbraio",
            "marzo",
            "aprile",
            "maggio",
            "giugno",
            "luglio",
            "agosto",
            "settembre",
            "ottobre",
            "novembre",
            "dicembre",
          ],
        };
        var dayValues = {
          narrow: ["D", "L", "M", "M", "G", "V", "S"],
          short: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
          abbreviated: ["dom", "lun", "mar", "mer", "gio", "ven", "sab"],
          wide: [
            "domenica",
            "lunedá¬",
            "martedá¬",
            "mercoledá¬",
            "giovedá¬",
            "venerdá¬",
            "sabato",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "m.",
            pm: "p.",
            midnight: "mezzanotte",
            noon: "mezzogiorno",
            morning: "mattina",
            afternoon: "pomeriggio",
            evening: "sera",
            night: "notte",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "mezzanotte",
            noon: "mezzogiorno",
            morning: "mattina",
            afternoon: "pomeriggio",
            evening: "sera",
            night: "notte",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "mezzanotte",
            noon: "mezzogiorno",
            morning: "mattina",
            afternoon: "pomeriggio",
            evening: "sera",
            night: "notte",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "m.",
            pm: "p.",
            midnight: "mezzanotte",
            noon: "mezzogiorno",
            morning: "di mattina",
            afternoon: "del pomeriggio",
            evening: "di sera",
            night: "di notte",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "mezzanotte",
            noon: "mezzogiorno",
            morning: "di mattina",
            afternoon: "del pomeriggio",
            evening: "di sera",
            night: "di notte",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "mezzanotte",
            noon: "mezzogiorno",
            morning: "di mattina",
            afternoon: "del pomeriggio",
            evening: "di sera",
            night: "di notte",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "Âº";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 291 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(Âº)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(aC|dC)/i,
          abbreviated:
            /^(a\.?\s?C\.?|a\.?\s?e\.?\s?v\.?|d\.?\s?C\.?|e\.?\s?v\.?)/i,
          wide: /^(avanti Cristo|avanti Era Volgare|dopo Cristo|Era Volgare)/i,
        };
        var parseEraPatterns = {
          any: [/^a/i, /^(d|e)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^t[1234]/i,
          wide: /^[1234](Âº)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[gfmalsond]/i,
          abbreviated: /^(gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic)/i,
          wide: /^(gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^g/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^g/i,
            /^l/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ge/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^mag/i,
            /^gi/i,
            /^l/i,
            /^ag/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dlmgvs]/i,
          short: /^(do|lu|ma|me|gi|ve|sa)/i,
          abbreviated: /^(dom|lun|mar|mer|gio|ven|sab)/i,
          wide: /^(domenica|luned[i|á¬]|marted[i|á¬]|mercoled[i|á¬]|gioved[i|á¬]|venerd[i|á¬]|sabato)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^g/i, /^v/i, /^s/i],
          any: [/^d/i, /^l/i, /^ma/i, /^me/i, /^g/i, /^v/i, /^s/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(a|m\.|p|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,
          any: /^([ap]\.?\s?m\.?|mezzanotte|mezzogiorno|(di|del) (mattina|pomeriggio|sera|notte))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mezza/i,
            noon: /^mezzo/i,
            morning: /mattina/i,
            afternoon: /pomeriggio/i,
            evening: /sera/i,
            night: /notte/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 292 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "1c§’æœªæº€",
            other: "{{count}}c§’æœªæº€",
            oneWithSuffix: "c´„1c§’",
            otherWithSuffix: "c´„{{count}}c§’",
          },
          xSeconds: {
            one: "1c§’",
            other: "{{count}}c§’",
          },
          halfAMinute: "30c§’",
          lessThanXMinutes: {
            one: "1åˆ†æœªæº€",
            other: "{{count}}åˆ†æœªæº€",
            oneWithSuffix: "c´„1åˆ†",
            otherWithSuffix: "c´„{{count}}åˆ†",
          },
          xMinutes: {
            one: "1åˆ†",
            other: "{{count}}åˆ†",
          },
          aboutXHours: {
            one: "c´„1æ™‚é–“",
            other: "c´„{{count}}æ™‚é–“",
          },
          xHours: {
            one: "1æ™‚é–“",
            other: "{{count}}æ™‚é–“",
          },
          xDays: {
            one: "1æ—¥",
            other: "{{count}}æ—¥",
          },
          aboutXWeeks: {
            one: "c´„1é€±é–“",
            other: "c´„{{count}}é€±é–“",
          },
          xWeeks: {
            one: "1é€±é–“",
            other: "{{count}}é€±é–“",
          },
          aboutXMonths: {
            one: "c´„1ã‹æœˆ",
            other: "c´„{{count}}ã‹æœˆ",
          },
          xMonths: {
            one: "1ã‹æœˆ",
            other: "{{count}}ã‹æœˆ",
          },
          aboutXYears: {
            one: "c´„1å¹´",
            other: "c´„{{count}}å¹´",
          },
          xYears: {
            one: "1å¹´",
            other: "{{count}}å¹´",
          },
          overXYears: {
            one: "1å¹´ä»¥ä¸Š",
            other: "{{count}}å¹´ä»¥ä¸Š",
          },
          almostXYears: {
            one: "1å¹´è¿‘ã",
            other: "{{count}}å¹´è¿‘ã",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            if (
              options.addSuffix &&
              formatDistanceLocale[token].oneWithSuffix
            ) {
              result = formatDistanceLocale[token].oneWithSuffix;
            } else {
              result = formatDistanceLocale[token].one;
            }
          } else {
            if (
              options.addSuffix &&
              formatDistanceLocale[token].otherWithSuffix
            ) {
              result = formatDistanceLocale[token].otherWithSuffix.replace(
                "{{count}}",
                count
              );
            } else {
              result = formatDistanceLocale[token].other.replace(
                "{{count}}",
                count
              );
            }
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + "å¾Œ";
            } else {
              return result + "å‰";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 293 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "yå¹´Mæœˆdæ—¥EEEE",
          long: "yå¹´Mæœˆdæ—¥",
          medium: "y/MM/dd",
          short: "y/MM/dd",
        };
        var timeFormats = {
          full: "Hæ™‚mmåˆ†ssc§’ zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 294 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "å…ˆé€±ã®eeeeã®p",
          yesterday: "æ˜¨æ—¥ã®p",
          today: "ä»Šæ—¥ã®p",
          tomorrow: "æ˜Žæ—¥ã®p",
          nextWeek: "c¿Œé€±ã®eeeeã®p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 295 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["BC", "AC"],
          abbreviated: ["c´€å…ƒå‰", "è¥¿æš¦"],
          wide: ["c´€å…ƒå‰", "è¥¿æš¦"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: [
            "c¬¬1å››åŠæœŸ",
            "c¬¬2å››åŠæœŸ",
            "c¬¬3å››åŠæœŸ",
            "c¬¬4å››åŠæœŸ",
          ],
        };
        var monthValues = {
          narrow: [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
          ],
          abbreviated: [
            "1æœˆ",
            "2æœˆ",
            "3æœˆ",
            "4æœˆ",
            "5æœˆ",
            "6æœˆ",
            "7æœˆ",
            "8æœˆ",
            "9æœˆ",
            "10æœˆ",
            "11æœˆ",
            "12æœˆ",
          ],
          wide: [
            "1æœˆ",
            "2æœˆ",
            "3æœˆ",
            "4æœˆ",
            "5æœˆ",
            "6æœˆ",
            "7æœˆ",
            "8æœˆ",
            "9æœˆ",
            "10æœˆ",
            "11æœˆ",
            "12æœˆ",
          ],
        };
        var dayValues = {
          narrow: ["æ—¥", "æœˆ", "c«", "æ°´", "æœ¨", "é‡‘", "åœŸ"],
          short: ["æ—¥", "æœˆ", "c«", "æ°´", "æœ¨", "é‡‘", "åœŸ"],
          abbreviated: ["æ—¥", "æœˆ", "c«", "æ°´", "æœ¨", "é‡‘", "åœŸ"],
          wide: [
            "æ—¥æ›œæ—¥",
            "æœˆæ›œæ—¥",
            "c«æ›œæ—¥",
            "æ°´æ›œæ—¥",
            "æœ¨æ›œæ—¥",
            "é‡‘æ›œæ—¥",
            "åœŸæ›œæ—¥",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "åˆå‰",
            pm: "åˆå¾Œ",
            midnight: "æ·±å¤œ",
            noon: "æ­£åˆ",
            morning: "æœ",
            afternoon: "åˆå¾Œ",
            evening: "å¤œ",
            night: "æ·±å¤œ",
          },
          abbreviated: {
            am: "åˆå‰",
            pm: "åˆå¾Œ",
            midnight: "æ·±å¤œ",
            noon: "æ­£åˆ",
            morning: "æœ",
            afternoon: "åˆå¾Œ",
            evening: "å¤œ",
            night: "æ·±å¤œ",
          },
          wide: {
            am: "åˆå‰",
            pm: "åˆå¾Œ",
            midnight: "æ·±å¤œ",
            noon: "æ­£åˆ",
            morning: "æœ",
            afternoon: "åˆå¾Œ",
            evening: "å¤œ",
            night: "æ·±å¤œ",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "åˆå‰",
            pm: "åˆå¾Œ",
            midnight: "æ·±å¤œ",
            noon: "æ­£åˆ",
            morning: "æœ",
            afternoon: "åˆå¾Œ",
            evening: "å¤œ",
            night: "æ·±å¤œ",
          },
          abbreviated: {
            am: "åˆå‰",
            pm: "åˆå¾Œ",
            midnight: "æ·±å¤œ",
            noon: "æ­£åˆ",
            morning: "æœ",
            afternoon: "åˆå¾Œ",
            evening: "å¤œ",
            night: "æ·±å¤œ",
          },
          wide: {
            am: "åˆå‰",
            pm: "åˆå¾Œ",
            midnight: "æ·±å¤œ",
            noon: "æ­£åˆ",
            morning: "æœ",
            afternoon: "åˆå¾Œ",
            evening: "å¤œ",
            night: "æ·±å¤œ",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          var options = dirtyOptions || {};
          var unit = String(options.unit);

          if (unit === "date") {
            return number + "æ—¥";
          }

          if (unit === "year") {
            return number + "å¹´";
          }

          return number;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 296 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^c¬¬?\d+(æ—¥)?(å¹´)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(B\.?C\.?|A\.?D\.?)/i,
          abbreviated: /^(c´€å…ƒ[å‰å¾Œ]|è¥¿æš¦)/i,
          wide: /^(c´€å…ƒ[å‰å¾Œ]|è¥¿æš¦)/i,
        };
        var parseEraPatterns = {
          narrow: [/^B/i, /^A/i],
          any: [/^(c´€å…ƒå‰)/i, /^(è¥¿æš¦|c´€å…ƒå¾Œ)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Q[1234]/i,
          wide: /^c¬¬[1234ä¸€äºŒä¸‰å››ï¼‘ï¼’ï¼“ï¼”]å››åŠæœŸ/i,
        };
        var parseQuarterPatterns = {
          any: [/(1|ä¸€|ï¼‘)/i, /(2|äºŒ|ï¼’)/i, /(3|ä¸‰|ï¼“)/i, /(4|å››|ï¼”)/i],
        };
        var matchMonthPatterns = {
          narrow: /^([123456789]|1[012])/,
          abbreviated: /^([123456789]|1[012])æœˆ/i,
          wide: /^([123456789]|1[012])æœˆ/i,
        };
        var parseMonthPatterns = {
          any: [
            /^1\D/,
            /^2/,
            /^3/,
            /^4/,
            /^5/,
            /^6/,
            /^7/,
            /^8/,
            /^9/,
            /^10/,
            /^11/,
            /^12/,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[æ—¥æœˆc«æ°´æœ¨é‡‘åœŸ]/,
          short: /^[æ—¥æœˆc«æ°´æœ¨é‡‘åœŸ]/,
          abbreviated: /^[æ—¥æœˆc«æ°´æœ¨é‡‘åœŸ]/,
          wide: /^[æ—¥æœˆc«æ°´æœ¨é‡‘åœŸ]æ›œæ—¥/,
        };
        var parseDayPatterns = {
          any: [/^æ—¥/, /^æœˆ/, /^c«/, /^æ°´/, /^æœ¨/, /^é‡‘/, /^åœŸ/],
        };
        var matchDayPeriodPatterns = {
          any: /^(AM|PM|åˆå‰|åˆå¾Œ|æ­£åˆ|æ·±å¤œ|cœŸå¤œä¸­|å¤œ|æœ)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^(A|åˆå‰)/i,
            pm: /^(P|åˆå¾Œ)/i,
            midnight: /^æ·±å¤œ|cœŸå¤œä¸­/i,
            noon: /^æ­£åˆ/i,
            morning: /^æœ/i,
            afternoon: /^åˆå¾Œ/i,
            evening: /^å¤œ/i,
            night: /^æ·±å¤œ/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 297 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            past: "{{count}} aƒ¬aƒaƒ›aƒ–aƒ” aƒœaƒaƒ™aƒšaƒ”aƒ‘aƒ˜ aƒ®aƒœaƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ¬aƒaƒ›aƒ–aƒ” aƒœaƒaƒ™aƒšaƒ”aƒ‘aƒ˜",
            future: "{{count}} aƒ¬aƒaƒ›aƒ–aƒ” aƒœaƒaƒ™aƒšaƒ”aƒ‘aƒ¨aƒ˜",
          },
          xSeconds: {
            past: "{{count}} aƒ¬aƒaƒ›aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ¬aƒaƒ›aƒ˜",
            future: "{{count}} aƒ¬aƒaƒ›aƒ¨aƒ˜",
          },
          halfAMinute: {
            past: "aƒœaƒaƒ®aƒ”aƒ•aƒaƒ aƒ˜ aƒ¬aƒ£aƒ—aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "aƒœaƒaƒ®aƒ”aƒ•aƒaƒ aƒ˜ aƒ¬aƒ£aƒ—aƒ˜",
            future: "aƒœaƒaƒ®aƒ”aƒ•aƒaƒ aƒ˜ aƒ¬aƒ£aƒ—aƒ¨aƒ˜",
          },
          lessThanXMinutes: {
            past: "{{count}} aƒ¬aƒ£aƒ—aƒ–aƒ” aƒœaƒaƒ™aƒšaƒ”aƒ‘aƒ˜ aƒ®aƒœaƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ¬aƒ£aƒ—aƒ–aƒ” aƒœaƒaƒ™aƒšaƒ”aƒ‘aƒ˜",
            future: "{{count}} aƒ¬aƒ£aƒ—aƒ–aƒ” aƒœaƒaƒ™aƒšaƒ”aƒ‘aƒ¨aƒ˜",
          },
          xMinutes: {
            past: "{{count}} aƒ¬aƒ£aƒ—aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ¬aƒ£aƒ—aƒ˜",
            future: "{{count}} aƒ¬aƒ£aƒ—aƒ¨aƒ˜",
          },
          aboutXHours: {
            past: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ¡aƒaƒaƒ—aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ¡aƒaƒaƒ—aƒ˜",
            future: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ¡aƒaƒaƒ—aƒ¨aƒ˜",
          },
          xHours: {
            past: "{{count}} aƒ¡aƒaƒaƒ—aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ¡aƒaƒaƒ—aƒ˜",
            future: "{{count}} aƒ¡aƒaƒaƒ—aƒ¨aƒ˜",
          },
          xDays: {
            past: "{{count}} aƒ“aƒ¦aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ“aƒ¦aƒ”",
            future: "{{count}} aƒ“aƒ¦aƒ”aƒ¨aƒ˜",
          },
          aboutXWeeks: {
            past: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ™aƒ•aƒ˜aƒ aƒaƒ¡ aƒ¬aƒ˜aƒœ",
            present: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ™aƒ•aƒ˜aƒ aƒ",
            future:
              "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ™aƒ•aƒ˜aƒ aƒaƒ¨aƒ˜",
          },
          xWeeks: {
            past: "{{count}} aƒ™aƒ•aƒ˜aƒ aƒaƒ¡ aƒ™aƒ•aƒ˜aƒ aƒ",
            present: "{{count}} aƒ™aƒ•aƒ˜aƒ aƒ",
            future: "{{count}} aƒ™aƒ•aƒ˜aƒ aƒaƒ¨aƒ˜",
          },
          aboutXMonths: {
            past: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ—aƒ•aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ—aƒ•aƒ”",
            future: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ—aƒ•aƒ”aƒ¨aƒ˜",
          },
          xMonths: {
            past: "{{count}} aƒ—aƒ•aƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ—aƒ•aƒ”",
            future: "{{count}} aƒ—aƒ•aƒ”aƒ¨aƒ˜",
          },
          aboutXYears: {
            past: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ¬aƒšaƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ¬aƒ”aƒšaƒ˜",
            future: "aƒ“aƒaƒaƒ®aƒšaƒaƒ”aƒ‘aƒ˜aƒ— {{count}} aƒ¬aƒ”aƒšaƒ¨aƒ˜",
          },
          xYears: {
            past: "{{count}} aƒ¬aƒšaƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ¬aƒ”aƒšaƒ˜",
            future: "{{count}} aƒ¬aƒ”aƒšaƒ¨aƒ˜",
          },
          overXYears: {
            past: "{{count}} aƒ¬aƒ”aƒšaƒ–aƒ” aƒ›aƒ”aƒ¢aƒ˜ aƒ®aƒœaƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "{{count}} aƒ¬aƒ”aƒšaƒ–aƒ” aƒ›aƒ”aƒ¢aƒ˜",
            future:
              "{{count}} aƒ¬aƒ”aƒšaƒ–aƒ” aƒ›aƒ”aƒ¢aƒ˜ aƒ®aƒœaƒ˜aƒ¡ aƒ¨aƒ”aƒ›aƒ“aƒ”aƒ’",
          },
          almostXYears: {
            past: "aƒ—aƒ˜aƒ—aƒ¥aƒ›aƒ˜aƒ¡ {{count}} aƒ¬aƒšaƒ˜aƒ¡ aƒ¬aƒ˜aƒœ",
            present: "aƒ—aƒ˜aƒ—aƒ¥aƒ›aƒ˜aƒ¡ {{count}} aƒ¬aƒ”aƒšaƒ˜",
            future: "aƒ—aƒ˜aƒ—aƒ¥aƒ›aƒ˜aƒ¡ {{count}} aƒ¬aƒ”aƒšaƒ¨aƒ˜",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (options.addSuffix && options.comparison > 0) {
            result = formatDistanceLocale[token].future.replace(
              "{{count}}",
              count
            );
          } else if (options.addSuffix && options.comparison <= 0) {
            result = formatDistanceLocale[token].past.replace(
              "{{count}}",
              count
            );
          } else {
            result = formatDistanceLocale[token].present.replace(
              "{{count}}",
              count
            );
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 298 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM, y",
          long: "do, MMMM, y",
          medium: "d, MMM, y",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}'-aƒ–aƒ”'",
          long: "{{date}} {{time}}'-aƒ–aƒ”'",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 299 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'aƒ¬aƒ˜aƒœaƒ' eeee LT'-aƒ–aƒ”'",
          yesterday: "'aƒ’aƒ£aƒ¨aƒ˜aƒœ' LT'-aƒ–aƒ”'",
          today: "'aƒ“aƒ¦aƒ”aƒ¡' LT'-aƒ–aƒ”'",
          tomorrow: "'aƒ®aƒ•aƒaƒš' LT'-aƒ–aƒ”'",
          nextWeek: "'aƒ¨aƒ”aƒ›aƒ“aƒ”aƒ’aƒ˜' eeee LT'-aƒ–aƒ”'",
          other: "L",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 300 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["aƒ©.aƒ¬-aƒ›aƒ“aƒ”", "aƒ©.aƒ¬"],
          abbreviated: ["aƒ©aƒ•.aƒ¬-aƒ›aƒ“aƒ”", "aƒ©aƒ•.aƒ¬"],
          wide: [
            "aƒ©aƒ•aƒ”aƒœaƒ¡ aƒ¬aƒ”aƒšaƒ—aƒaƒ¦aƒ aƒ˜aƒªaƒ®aƒ•aƒaƒ›aƒ“aƒ”",
            "aƒ©aƒ•aƒ”aƒœaƒ˜ aƒ¬aƒ”aƒšaƒ—aƒaƒ¦aƒ aƒ˜aƒªaƒ®aƒ•aƒ˜aƒ—",
          ],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: [
            "1-aƒšaƒ˜ aƒ™aƒ•",
            "2-aƒ” aƒ™aƒ•",
            "3-aƒ” aƒ™aƒ•",
            "4-aƒ” aƒ™aƒ•",
          ],
          wide: [
            "1-aƒšaƒ˜ aƒ™aƒ•aƒaƒ aƒ¢aƒaƒšaƒ˜",
            "2-aƒ” aƒ™aƒ•aƒaƒ aƒ¢aƒaƒšaƒ˜",
            "3-aƒ” aƒ™aƒ•aƒaƒ aƒ¢aƒaƒšaƒ˜",
            "4-aƒ” aƒ™aƒ•aƒaƒ aƒ¢aƒaƒšaƒ˜",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: [
            "aƒ˜aƒ",
            "aƒ—aƒ”",
            "aƒ›aƒ",
            "aƒaƒž",
            "aƒ›aƒ¡",
            "aƒ•aƒœ",
            "aƒ•aƒš",
            "aƒaƒ’",
            "aƒ¡aƒ”",
            "aƒaƒ¥",
            "aƒœaƒ",
            "aƒ“aƒ”",
          ],
          abbreviated: [
            "aƒ˜aƒaƒœ",
            "aƒ—aƒ”aƒ‘",
            "aƒ›aƒaƒ ",
            "aƒaƒžaƒ ",
            "aƒ›aƒaƒ˜",
            "aƒ˜aƒ•aƒœ",
            "aƒ˜aƒ•aƒš",
            "aƒaƒ’aƒ•",
            "aƒ¡aƒ”aƒ¥",
            "aƒaƒ¥aƒ¢",
            "aƒœaƒaƒ”",
            "aƒ“aƒ”aƒ™",
          ],
          wide: [
            "aƒ˜aƒaƒœaƒ•aƒaƒ aƒ˜",
            "aƒ—aƒ”aƒ‘aƒ”aƒ aƒ•aƒaƒšaƒ˜",
            "aƒ›aƒaƒ aƒ¢aƒ˜",
            "aƒaƒžaƒ aƒ˜aƒšaƒ˜",
            "aƒ›aƒaƒ˜aƒ¡aƒ˜",
            "aƒ˜aƒ•aƒœaƒ˜aƒ¡aƒ˜",
            "aƒ˜aƒ•aƒšaƒ˜aƒ¡aƒ˜",
            "aƒaƒ’aƒ•aƒ˜aƒ¡aƒ¢aƒ",
            "aƒ¡aƒ”aƒ¥aƒ¢aƒ”aƒ›aƒ‘aƒ”aƒ aƒ˜",
            "aƒaƒ¥aƒ¢aƒaƒ›aƒ‘aƒ”aƒ aƒ˜",
            "aƒœaƒaƒ”aƒ›aƒ‘aƒ”aƒ aƒ˜",
            "aƒ“aƒ”aƒ™aƒ”aƒ›aƒ‘aƒ”aƒ aƒ˜",
          ],
        };
        var dayValues = {
          narrow: [
            "aƒ™aƒ•",
            "aƒaƒ ",
            "aƒ¡aƒ",
            "aƒaƒ—",
            "aƒ®aƒ£",
            "aƒžaƒ",
            "aƒ¨aƒ",
          ],
          short: [
            "aƒ™aƒ•aƒ˜",
            "aƒaƒ aƒ¨",
            "aƒ¡aƒaƒ›",
            "aƒaƒ—aƒ®",
            "aƒ®aƒ£aƒ—",
            "aƒžaƒaƒ ",
            "aƒ¨aƒaƒ‘",
          ],
          abbreviated: [
            "aƒ™aƒ•aƒ˜",
            "aƒaƒ aƒ¨",
            "aƒ¡aƒaƒ›",
            "aƒaƒ—aƒ®",
            "aƒ®aƒ£aƒ—",
            "aƒžaƒaƒ ",
            "aƒ¨aƒaƒ‘",
          ],
          wide: [
            "aƒ™aƒ•aƒ˜aƒ aƒ",
            "aƒaƒ aƒ¨aƒaƒ‘aƒaƒ—aƒ˜",
            "aƒ¡aƒaƒ›aƒ¨aƒaƒ‘aƒaƒ—aƒ˜",
            "aƒaƒ—aƒ®aƒ¨aƒaƒ‘aƒaƒ—aƒ˜",
            "aƒ®aƒ£aƒ—aƒ¨aƒaƒ‘aƒaƒ—aƒ˜",
            "aƒžaƒaƒ aƒaƒ¡aƒ™aƒ”aƒ•aƒ˜",
            "aƒ¨aƒaƒ‘aƒaƒ—aƒ˜",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "aƒ¨aƒ£aƒaƒ¦aƒaƒ›aƒ”",
            noon: "aƒ¨aƒ£aƒaƒ“aƒ¦aƒ”",
            morning: "aƒ“aƒ˜aƒšaƒ",
            afternoon: "aƒ¡aƒaƒ¦aƒaƒ›aƒ",
            evening: "aƒ¡aƒaƒ¦aƒaƒ›aƒ",
            night: "aƒ¦aƒaƒ›aƒ”",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "aƒ¨aƒ£aƒaƒ¦aƒaƒ›aƒ”",
            noon: "aƒ¨aƒ£aƒaƒ“aƒ¦aƒ”",
            morning: "aƒ“aƒ˜aƒšaƒ",
            afternoon: "aƒ¡aƒaƒ¦aƒaƒ›aƒ",
            evening: "aƒ¡aƒaƒ¦aƒaƒ›aƒ",
            night: "aƒ¦aƒaƒ›aƒ”",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "aƒ¨aƒ£aƒaƒ¦aƒaƒ›aƒ”",
            noon: "aƒ¨aƒ£aƒaƒ“aƒ¦aƒ”",
            morning: "aƒ“aƒ˜aƒšaƒ",
            afternoon: "aƒ¡aƒaƒ¦aƒaƒ›aƒ",
            evening: "aƒ¡aƒaƒ¦aƒaƒ›aƒ",
            night: "aƒ¦aƒaƒ›aƒ”",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "aƒ¨aƒ£aƒaƒ¦aƒaƒ›aƒ˜aƒ—",
            noon: "aƒ¨aƒ£aƒaƒ“aƒ¦aƒ˜aƒ¡aƒaƒ¡",
            morning: "aƒ“aƒ˜aƒšaƒ˜aƒ—",
            afternoon: "aƒœaƒaƒ¨aƒ£aƒaƒ“aƒ¦aƒ”aƒ•aƒ¡",
            evening: "aƒ¡aƒaƒ¦aƒaƒ›aƒaƒ¡",
            night: "aƒ¦aƒaƒ›aƒ˜aƒ—",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "aƒ¨aƒ£aƒaƒ¦aƒaƒ›aƒ˜aƒ—",
            noon: "aƒ¨aƒ£aƒaƒ“aƒ¦aƒ˜aƒ¡aƒaƒ¡",
            morning: "aƒ“aƒ˜aƒšaƒ˜aƒ—",
            afternoon: "aƒœaƒaƒ¨aƒ£aƒaƒ“aƒ¦aƒ”aƒ•aƒ¡",
            evening: "aƒ¡aƒaƒ¦aƒaƒ›aƒaƒ¡",
            night: "aƒ¦aƒaƒ›aƒ˜aƒ—",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "aƒ¨aƒ£aƒaƒ¦aƒaƒ›aƒ˜aƒ—",
            noon: "aƒ¨aƒ£aƒaƒ“aƒ¦aƒ˜aƒ¡aƒaƒ¡",
            morning: "aƒ“aƒ˜aƒšaƒ˜aƒ—",
            afternoon: "aƒœaƒaƒ¨aƒ£aƒaƒ“aƒ¦aƒ”aƒ•aƒ¡",
            evening: "aƒ¡aƒaƒ¦aƒaƒ›aƒaƒ¡",
            night: "aƒ¦aƒaƒ›aƒ˜aƒ—",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          if (number === 1) {
            return number + "-aƒšaƒ˜";
          }

          return number + "-aƒ”";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 301 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(-aƒšaƒ˜|-aƒ”)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(aƒ©aƒ•?\.aƒ¬)/i,
          abbreviated: /^(aƒ©aƒ•?\.aƒ¬)/i,
          wide: /^(aƒ©aƒ•aƒ”aƒœaƒ¡ aƒ¬aƒ”aƒšaƒ—aƒaƒ¦aƒ aƒ˜aƒªaƒ®aƒ•aƒaƒ›aƒ“aƒ”|aƒ¥aƒ aƒ˜aƒ¡aƒ¢aƒ”aƒ¨aƒaƒ‘aƒaƒ›aƒ“aƒ”|aƒ©aƒ•aƒ”aƒœaƒ˜ aƒ¬aƒ”aƒšaƒ—aƒaƒ¦aƒ aƒ˜aƒªaƒ®aƒ•aƒ˜aƒ—|aƒ¥aƒ aƒ˜aƒ¡aƒ¢aƒ”aƒ¨aƒaƒ‘aƒ˜aƒ“aƒaƒœ)/i,
        };
        var parseEraPatterns = {
          any: [
            /^(aƒ©aƒ•aƒ”aƒœaƒ¡ aƒ¬aƒ”aƒšaƒ—aƒaƒ¦aƒ aƒ˜aƒªaƒ®aƒ•aƒaƒ›aƒ“aƒ”|aƒ¥aƒ aƒ˜aƒ¡aƒ¢aƒ”aƒ¨aƒaƒ‘aƒaƒ›aƒ“aƒ”)/i,
            /^(aƒ©aƒ•aƒ”aƒœaƒ˜ aƒ¬aƒ”aƒšaƒ—aƒaƒ¦aƒ aƒ˜aƒªaƒ®aƒ•aƒ˜aƒ—|aƒ¥aƒ aƒ˜aƒ¡aƒ¢aƒ”aƒ¨aƒaƒ‘aƒ˜aƒ“aƒaƒœ)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]-(aƒšaƒ˜|aƒ”)? aƒ™aƒ•/i,
          wide: /^[1234]-(aƒšaƒ˜|aƒ”)? aƒ™aƒ•aƒaƒ aƒ¢aƒaƒšaƒ˜/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          any: /^(aƒ˜aƒ|aƒ—aƒ”|aƒ›aƒ|aƒaƒž|aƒ›aƒ¡|aƒ•aƒœ|aƒ•aƒš|aƒaƒ’|aƒ¡aƒ”|aƒaƒ¥|aƒœaƒ|aƒ“aƒ”)/i,
        };
        var parseMonthPatterns = {
          any: [
            /^aƒ˜aƒ/i,
            /^aƒ—/i,
            /^aƒ›aƒaƒ /i,
            /^aƒaƒž/i,
            /^aƒ›aƒaƒ˜/i,
            /^aƒ˜?aƒ•aƒœ/i,
            /^aƒ˜?aƒ•aƒš/i,
            /^aƒaƒ’/i,
            /^aƒ¡/i,
            /^aƒ/i,
            /^aƒœ/i,
            /^aƒ“/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(aƒ™aƒ•|aƒaƒ |aƒ¡aƒ|aƒaƒ—|aƒ®aƒ£|aƒžaƒ|aƒ¨aƒ)/i,
          short:
            /^(aƒ™aƒ•aƒ˜|aƒaƒ aƒ¨|aƒ¡aƒaƒ›|aƒaƒ—aƒ®|aƒ®aƒ£aƒ—|aƒžaƒaƒ |aƒ¨aƒaƒ‘)/i,
          long: /^(aƒ™aƒ•aƒ˜aƒ aƒ|aƒaƒ aƒ¨aƒaƒ‘aƒaƒ—aƒ˜|aƒ¡aƒaƒ›aƒ¨aƒaƒ‘aƒaƒ—aƒ˜|aƒaƒ—aƒ®aƒ¨aƒaƒ‘aƒaƒ—aƒ˜|aƒ®aƒ£aƒ—aƒ¨aƒaƒ‘aƒaƒ—aƒ˜|aƒžaƒaƒ aƒaƒ¡aƒ™aƒ”aƒ•aƒ˜|aƒ¨aƒaƒ‘aƒaƒ—aƒ˜)/i,
        };
        var parseDayPatterns = {
          any: [
            /^aƒ™aƒ•/i,
            /^aƒaƒ /i,
            /^aƒ¡aƒ/i,
            /^aƒaƒ—/i,
            /^aƒ®aƒ£/i,
            /^aƒžaƒ/i,
            /^aƒ¨aƒ/i,
          ],
        };
        var matchDayPeriodPatterns = {
          any: /^([ap]\.?\s?m\.?|aƒ¨aƒ£aƒaƒ¦|aƒ“aƒ˜aƒš)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^aƒ¨aƒ£aƒaƒ¦/i,
            noon: /^aƒ¨aƒ£aƒaƒ“aƒ¦/i,
            morning: /^aƒ“aƒ˜aƒš/i,
            afternoon: /aƒœaƒaƒ¨aƒ£aƒaƒ“aƒ¦aƒ”aƒ•aƒ¡/i,
            evening: /aƒ¡aƒaƒ¦aƒaƒ›aƒ/i,
            night: /aƒ¦aƒaƒ›/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 302 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        function declension(scheme, count) {
          // scheme for count=1 exists
          if (scheme.one !== undefined && count === 1) {
            return scheme.one;
          }

          var rem10 = count % 10;
          var rem100 = count % 100; // 1, 21, 31, ...

          if (rem10 === 1 && rem100 !== 11) {
            return scheme.singularNominative.replace("{{count}}", count); // 2, 3, 4, 22, 23, 24, 32 ...
          } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
            return scheme.singularGenitive.replace("{{count}}", count); // 5, 6, 7, 8, 9, 10, 11, ...
          } else {
            return scheme.pluralGenitive.replace("{{count}}", count);
          }
        }

        function buildLocalizeTokenFn(scheme) {
          return function (count, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                if (scheme.future) {
                  return declension(scheme.future, count);
                } else {
                  return declension(scheme.regular, count) + " ÐºÐµÐ¹Ñ–Ð½";
                }
              } else {
                if (scheme.past) {
                  return declension(scheme.past, count);
                } else {
                  return declension(scheme.regular, count) + " Ð±Ò±Ñ€Ñ‹Ð½";
                }
              }
            } else {
              return declension(scheme.regular, count);
            }
          };
        }

        var formatDistanceLocale = {
          lessThanXSeconds: buildLocalizeTokenFn({
            regular: {
              one: "1 ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ Ð°Ð·",
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ Ð°Ð·",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ Ð°Ð·",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ Ð°Ð·",
            },
            future: {
              one: "Ð±Ñ–Ñ€ ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          xSeconds: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
            past: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´ Ð±Ò±Ñ€Ñ‹Ð½",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´ Ð±Ò±Ñ€Ñ‹Ð½",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´ Ð±Ò±Ñ€Ñ‹Ð½",
            },
            future: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          halfAMinute: function (_, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                return "Ð¶Ð°Ñ€Ñ‚Ñ‹ Ð¼Ð¸Ð½ÑƒÑ‚ Ñ–ÑˆÑ–Ð½Ð´Ðµ";
              } else {
                return "Ð¶Ð°Ñ€Ñ‚Ñ‹ Ð¼Ð¸Ð½ÑƒÑ‚ Ð±Ò±Ñ€Ñ‹Ð½";
              }
            }

            return "Ð¶Ð°Ñ€Ñ‚Ñ‹ Ð¼Ð¸Ð½ÑƒÑ‚";
          },
          lessThanXMinutes: buildLocalizeTokenFn({
            regular: {
              one: "1 Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ Ð°Ð·",
              singularNominative: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ Ð°Ð·",
              singularGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ Ð°Ð·",
              pluralGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ Ð°Ð·",
            },
            future: {
              one: "Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ ÐºÐµÐ¼ ",
              singularNominative: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ ÐºÐµÐ¼",
              singularGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ ÐºÐµÐ¼",
              pluralGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ ÐºÐµÐ¼",
            },
          }),
          xMinutes: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
              singularGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
              pluralGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
            },
            past: {
              singularNominative: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚ Ð±Ò±Ñ€Ñ‹Ð½",
              singularGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚ Ð±Ò±Ñ€Ñ‹Ð½",
              pluralGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚ Ð±Ò±Ñ€Ñ‹Ð½",
            },
            future: {
              singularNominative: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          aboutXHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} ÑÐ°Ò“Ð°Ñ‚",
              singularGenitive: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} ÑÐ°Ò“Ð°Ñ‚",
              pluralGenitive: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} ÑÐ°Ò“Ð°Ñ‚",
            },
            future: {
              singularNominative:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} ÑÐ°Ò“Ð°Ñ‚Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} ÑÐ°Ò“Ð°Ñ‚Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} ÑÐ°Ò“Ð°Ñ‚Ñ‚Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          xHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} ÑÐ°Ò“Ð°Ñ‚",
              singularGenitive: "{{count}} ÑÐ°Ò“Ð°Ñ‚",
              pluralGenitive: "{{count}} ÑÐ°Ò“Ð°Ñ‚",
            },
          }),
          xDays: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} ÐºÒ¯Ð½",
              singularGenitive: "{{count}} ÐºÒ¯Ð½",
              pluralGenitive: "{{count}} ÐºÒ¯Ð½",
            },
            future: {
              singularNominative: "{{count}} ÐºÒ¯Ð½Ð½ÐµÐ½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive: "{{count}} ÐºÒ¯Ð½Ð½ÐµÐ½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive: "{{count}} ÐºÒ¯Ð½Ð½ÐµÐ½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          aboutXWeeks: {
            one: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ 1 Ð°Ð¿Ñ‚Ð°",
            other: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð°Ð¿Ñ‚Ð°",
          },
          xWeeks: {
            one: "1 Ð°Ð¿Ñ‚Ð°",
            other: "{{count}} Ð°Ð¿Ñ‚Ð°",
          },
          aboutXMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð°Ð¹",
              singularGenitive: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð°Ð¹",
              pluralGenitive: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð°Ð¹",
            },
            future: {
              singularNominative:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð°Ð¹Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð°Ð¹Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð°Ð¹Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          xMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð°Ð¹",
              singularGenitive: "{{count}} Ð°Ð¹",
              pluralGenitive: "{{count}} Ð°Ð¹",
            },
          }),
          aboutXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð¶Ñ‹Ð»",
              singularGenitive: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð¶Ñ‹Ð»",
              pluralGenitive: "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð¶Ñ‹Ð»",
            },
            future: {
              singularNominative:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive:
                "ÑˆÐ°Ð¼Ð°Ð¼ÐµÐ½ {{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          xYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¶Ñ‹Ð»",
              singularGenitive: "{{count}} Ð¶Ñ‹Ð»",
              pluralGenitive: "{{count}} Ð¶Ñ‹Ð»",
            },
            future: {
              singularNominative: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
          overXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ Ð°ÑÑ‚Ð°Ð¼",
              singularGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ Ð°ÑÑ‚Ð°Ð¼",
              pluralGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ Ð°ÑÑ‚Ð°Ð¼",
            },
            future: {
              singularNominative: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ Ð°ÑÑ‚Ð°Ð¼",
              singularGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ Ð°ÑÑ‚Ð°Ð¼",
              pluralGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ Ð°ÑÑ‚Ð°Ð¼",
            },
          }),
          almostXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¶Ñ‹Ð»Ò“Ð° Ð¶Ð°Ò›Ñ‹Ð½",
              singularGenitive: "{{count}} Ð¶Ñ‹Ð»Ò“Ð° Ð¶Ð°Ò›Ñ‹Ð½",
              pluralGenitive: "{{count}} Ð¶Ñ‹Ð»Ò“Ð° Ð¶Ð°Ò›Ñ‹Ð½",
            },
            future: {
              singularNominative: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              singularGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
              pluralGenitive: "{{count}} Ð¶Ñ‹Ð»Ð´Ð°Ð½ ÐºÐµÐ¹Ñ–Ð½",
            },
          }),
        };

        function formatDistance(token, count, options) {
          options = options || {};
          return formatDistanceLocale[token](count, options);
        }

        module.exports = exports.default;

        /***/
      },
      /* 303 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM y 'Ð¶.'",
          long: "do MMMM y 'Ð¶.'",
          medium: "d MMM y 'Ð¶.'",
          short: "dd.MM.yyyy",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          any: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "any",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 304 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var accusativeWeekdays = [
          "Ð¶ÐµÐºÑÐµÐ½Ð±Ñ–Ð´Ðµ",
          "Ð´Ò¯Ð¹ÑÐµÐ½Ð±Ñ–Ð´Ðµ",
          "ÑÐµÐ¹ÑÐµÐ½Ð±Ñ–Ð´Ðµ",
          "ÑÓ™Ñ€ÑÐµÐ½Ð±Ñ–Ð´Ðµ",
          "Ð±ÐµÐ¹ÑÐµÐ½Ð±Ñ–Ð´Ðµ",
          "Ð¶Ò±Ð¼Ð°Ð´Ð°",
          "ÑÐµÐ½Ð±Ñ–Ð´Ðµ",
        ];

        function lastWeek(day) {
          var weekday = accusativeWeekdays[day];
          return "'Ó©Ñ‚ÐºÐµÐ½ " + weekday + " ÑÐ°Ò“Ð°Ñ‚' p'-Ð´Ðµ'";
        }

        function thisWeek(day) {
          var weekday = accusativeWeekdays[day];
          return "'" + weekday + " ÑÐ°Ò“Ð°Ñ‚' p'-Ð´Ðµ'";
        }

        function nextWeek(day) {
          var weekday = accusativeWeekdays[day];
          return "'ÐºÐµÐ»ÐµÑÑ– " + weekday + " ÑÐ°Ò“Ð°Ñ‚' p'-Ð´Ðµ'";
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'ÐºÐµÑˆÐµ ÑÐ°Ò“Ð°Ñ‚' p'-Ð´Ðµ'",
          today: "'Ð±Ò¯Ð³Ñ–Ð½ ÑÐ°Ò“Ð°Ñ‚' p'-Ð´Ðµ'",
          tomorrow: "'ÐµÑ€Ñ‚ÐµÒ£ ÑÐ°Ò“Ð°Ñ‚' p'-Ð´Ðµ'",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 305 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ð±.Ð·.Ð´.", "Ð±.Ð·."],
          abbreviated: ["Ð±.Ð·.Ð´.", "Ð±.Ð·."],
          wide: [
            "Ð±Ñ–Ð·Ð´Ñ–Ò£ Ð·Ð°Ð¼Ð°Ð½Ñ‹Ð¼Ñ‹Ð·Ò“Ð° Ð´ÐµÐ¹Ñ–Ð½",
            "Ð±Ñ–Ð·Ð´Ñ–Ò£ Ð·Ð°Ð¼Ð°Ð½Ñ‹Ð¼Ñ‹Ð·",
          ],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: [
            "1-ÑˆÑ– Ñ‚Ð¾Ò›.",
            "2-ÑˆÑ– Ñ‚Ð¾Ò›.",
            "3-ÑˆÑ– Ñ‚Ð¾Ò›.",
            "4-ÑˆÑ– Ñ‚Ð¾Ò›.",
          ],
          wide: [
            "1-ÑˆÑ– Ñ‚Ð¾Ò›ÑÐ°Ð½",
            "2-ÑˆÑ– Ñ‚Ð¾Ò›ÑÐ°Ð½",
            "3-ÑˆÑ– Ñ‚Ð¾Ò›ÑÐ°Ð½",
            "4-ÑˆÑ– Ñ‚Ð¾Ò›ÑÐ°Ð½",
          ],
        };
        var monthValues = {
          narrow: [
            "Òš",
            "Ð",
            "Ð",
            "Ð¡",
            "Ðœ",
            "Ðœ",
            "Ð¨",
            "Ð¢",
            "Òš",
            "Òš",
            "Òš",
            "Ð–",
          ],
          abbreviated: [
            "Ò›Ð°Ò£",
            "Ð°Ò›Ð¿",
            "Ð½Ð°Ñƒ",
            "ÑÓ™Ñƒ",
            "Ð¼Ð°Ð¼",
            "Ð¼Ð°Ñƒ",
            "ÑˆÑ–Ð»",
            "Ñ‚Ð°Ð¼",
            "Ò›Ñ‹Ñ€",
            "Ò›Ð°Ð·",
            "Ò›Ð°Ñ€",
            "Ð¶ÐµÐ»",
          ],
          wide: [
            "Ò›Ð°Ò£Ñ‚Ð°Ñ€",
            "Ð°Ò›Ð¿Ð°Ð½",
            "Ð½Ð°ÑƒÑ€Ñ‹Ð·",
            "ÑÓ™ÑƒÑ–Ñ€",
            "Ð¼Ð°Ð¼Ñ‹Ñ€",
            "Ð¼Ð°ÑƒÑÑ‹Ð¼",
            "ÑˆÑ–Ð»Ð´Ðµ",
            "Ñ‚Ð°Ð¼Ñ‹Ð·",
            "Ò›Ñ‹Ñ€ÐºÒ¯Ð¹ÐµÐº",
            "Ò›Ð°Ð·Ð°Ð½",
            "Ò›Ð°Ñ€Ð°ÑˆÐ°",
            "Ð¶ÐµÐ»Ñ‚Ð¾Ò›ÑÐ°Ð½",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "Òš",
            "Ð",
            "Ð",
            "Ð¡",
            "Ðœ",
            "Ðœ",
            "Ð¨",
            "Ð¢",
            "Òš",
            "Òš",
            "Òš",
            "Ð–",
          ],
          abbreviated: [
            "Ò›Ð°Ò£",
            "Ð°Ò›Ð¿",
            "Ð½Ð°Ñƒ",
            "ÑÓ™Ñƒ",
            "Ð¼Ð°Ð¼",
            "Ð¼Ð°Ñƒ",
            "ÑˆÑ–Ð»",
            "Ñ‚Ð°Ð¼",
            "Ò›Ñ‹Ñ€",
            "Ò›Ð°Ð·",
            "Ò›Ð°Ñ€",
            "Ð¶ÐµÐ»",
          ],
          wide: [
            "Ò›Ð°Ò£Ñ‚Ð°Ñ€",
            "Ð°Ò›Ð¿Ð°Ð½",
            "Ð½Ð°ÑƒÑ€Ñ‹Ð·",
            "ÑÓ™ÑƒÑ–Ñ€",
            "Ð¼Ð°Ð¼Ñ‹Ñ€",
            "Ð¼Ð°ÑƒÑÑ‹Ð¼",
            "ÑˆÑ–Ð»Ð´Ðµ",
            "Ñ‚Ð°Ð¼Ñ‹Ð·",
            "Ò›Ñ‹Ñ€ÐºÒ¯Ð¹ÐµÐº",
            "Ò›Ð°Ð·Ð°Ð½",
            "Ò›Ð°Ñ€Ð°ÑˆÐ°",
            "Ð¶ÐµÐ»Ñ‚Ð¾Ò›ÑÐ°Ð½",
          ],
        };
        var dayValues = {
          narrow: ["Ð–", "Ð”", "Ð¡", "Ð¡", "Ð‘", "Ð–", "Ð¡"],
          short: ["Ð¶Ñ", "Ð´Ñ", "ÑÑ", "ÑÑ€", "Ð±Ñ", "Ð¶Ð¼", "ÑÐ±"],
          abbreviated: ["Ð¶Ñ", "Ð´Ñ", "ÑÑ", "ÑÑ€", "Ð±Ñ", "Ð¶Ð¼", "ÑÐ±"],
          wide: [
            "Ð¶ÐµÐºÑÐµÐ½Ð±Ñ–",
            "Ð´Ò¯Ð¹ÑÐµÐ½Ð±Ñ–",
            "ÑÐµÐ¹ÑÐµÐ½Ð±Ñ–",
            "ÑÓ™Ñ€ÑÐµÐ½Ð±Ñ–",
            "Ð±ÐµÐ¹ÑÐµÐ½Ð±Ñ–",
            "Ð¶Ò±Ð¼Ð°",
            "ÑÐµÐ½Ð±Ñ–",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ð¢Ð”",
            pm: "Ð¢Ðš",
            midnight: "Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°ÑÑ‹",
            noon: "Ñ‚Ò¯Ñ",
            morning: "Ñ‚Ð°Ò£",
            afternoon: "ÐºÒ¯Ð½Ð´Ñ–Ð·",
            evening: "ÐºÐµÑˆ",
            night: "Ñ‚Ò¯Ð½",
          },
          wide: {
            am: "Ð¢Ð”",
            pm: "Ð¢Ðš",
            midnight: "Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°ÑÑ‹",
            noon: "Ñ‚Ò¯Ñ",
            morning: "Ñ‚Ð°Ò£",
            afternoon: "ÐºÒ¯Ð½Ð´Ñ–Ð·",
            evening: "ÐºÐµÑˆ",
            night: "Ñ‚Ò¯Ð½",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Ð¢Ð”",
            pm: "Ð¢Ðš",
            midnight: "Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°ÑÑ‹Ð½Ð´Ð°",
            noon: "Ñ‚Ò¯Ñ",
            morning: "Ñ‚Ð°Ò£",
            afternoon: "ÐºÒ¯Ð½",
            evening: "ÐºÐµÑˆ",
            night: "Ñ‚Ò¯Ð½",
          },
          wide: {
            am: "Ð¢Ð”",
            pm: "Ð¢Ðš",
            midnight: "Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°ÑÑ‹Ð½Ð´Ð°",
            noon: "Ñ‚Ò¯ÑÑ‚Ðµ",
            morning: "Ñ‚Ð°Ò£ÐµÑ€Ñ‚ÐµÒ£",
            afternoon: "ÐºÒ¯Ð½Ð´Ñ–Ð·",
            evening: "ÐºÐµÑˆÑ‚Ðµ",
            night: "Ñ‚Ò¯Ð½Ð´Ðµ",
          },
        };
        var suffixes = {
          0: "-ÑˆÑ–",
          1: "-ÑˆÑ–",
          2: "-ÑˆÑ–",
          3: "-ÑˆÑ–",
          4: "-ÑˆÑ–",
          5: "-ÑˆÑ–",
          6: "-ÑˆÑ‹",
          7: "-ÑˆÑ–",
          8: "-ÑˆÑ–",
          9: "-ÑˆÑ‹",
          10: "-ÑˆÑ‹",
          20: "-ÑˆÑ‹",
          30: "-ÑˆÑ‹",
          40: "-ÑˆÑ‹",
          50: "-ÑˆÑ–",
          60: "-ÑˆÑ‹",
          70: "-ÑˆÑ–",
          80: "-ÑˆÑ–",
          90: "-ÑˆÑ‹",
          100: "-ÑˆÑ–",
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          var a = number % 10;
          var b = number >= 100 ? 100 : null;
          return number + (suffixes[number] || suffixes[a] || suffixes[b]);
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "any",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 306 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(-?(ÑˆÑ–|ÑˆÑ‹))?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^((Ð± )?Ð·\.?\s?Ð´\.?)/i,
          abbreviated: /^((Ð± )?Ð·\.?\s?Ð´\.?)/i,
          wide: /^(Ð±Ñ–Ð·Ð´Ñ–Ò£ Ð·Ð°Ð¼Ð°Ð½Ñ‹Ð¼Ñ‹Ð·Ò“Ð° Ð´ÐµÐ¹Ñ–Ð½|Ð±Ñ–Ð·Ð´Ñ–Ò£ Ð·Ð°Ð¼Ð°Ð½Ñ‹Ð¼Ñ‹Ð·|Ð±Ñ–Ð·Ð´Ñ–Ò£ Ð·Ð°Ð¼Ð°Ð½Ñ‹Ð¼Ñ‹Ð·Ð´Ð°Ð½)/i,
        };
        var parseEraPatterns = {
          any: [/^Ð±/i, /^Ð·/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234](-?ÑˆÑ–)? Ñ‚Ð¾Ò›.?/i,
          wide: /^[1234](-?ÑˆÑ–)? Ñ‚Ð¾Ò›ÑÐ°Ð½/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^(Ò›|Ð°|Ð½|Ñ|Ð¼|Ð¼Ð°Ñƒ|Ñˆ|Ñ‚|Ò›Ñ‹Ñ€|Ò›Ð°Ð·|Ò›Ð°Ñ€|Ð¶)/i,
          abbreviated:
            /^(Ò›Ð°Ò£|Ð°Ò›Ð¿|Ð½Ð°Ñƒ|ÑÓ™Ñƒ|Ð¼Ð°Ð¼|Ð¼Ð°Ñƒ|ÑˆÑ–Ð»|Ñ‚Ð°Ð¼|Ò›Ñ‹Ñ€|Ò›Ð°Ð·|Ò›Ð°Ñ€|Ð¶ÐµÐ»)/i,
          wide: /^(Ò›Ð°Ò£Ñ‚Ð°Ñ€|Ð°Ò›Ð¿Ð°Ð½|Ð½Ð°ÑƒÑ€Ñ‹Ð·|ÑÓ™ÑƒÑ–Ñ€|Ð¼Ð°Ð¼Ñ‹Ñ€|Ð¼Ð°ÑƒÑÑ‹Ð¼|ÑˆÑ–Ð»Ð´Ðµ|Ñ‚Ð°Ð¼Ñ‹Ð·|Ò›Ñ‹Ñ€ÐºÒ¯Ð¹ÐµÐº|Ò›Ð°Ð·Ð°Ð½|Ò›Ð°Ñ€Ð°ÑˆÐ°|Ð¶ÐµÐ»Ñ‚Ð¾Ò›ÑÐ°Ð½)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^Ò›/i,
            /^Ð°/i,
            /^Ð½/i,
            /^Ñ/i,
            /^Ð¼/i,
            /^Ð¼/i,
            /^Ñˆ/i,
            /^Ñ‚/i,
            /^Ò›/i,
            /^Ò›/i,
            /^Ò›/i,
            /^Ð¶/i,
          ],
          abbreviated: [
            /^Ò›Ð°Ò£/i,
            /^Ð°Ò›Ð¿/i,
            /^Ð½Ð°Ñƒ/i,
            /^ÑÓ™Ñƒ/i,
            /^Ð¼Ð°Ð¼/i,
            /^Ð¼Ð°Ñƒ/i,
            /^ÑˆÑ–Ð»/i,
            /^Ñ‚Ð°Ð¼/i,
            /^Ò›Ñ‹Ñ€/i,
            /^Ò›Ð°Ð·/i,
            /^Ò›Ð°Ñ€/i,
            /^Ð¶ÐµÐ»/i,
          ],
          any: [
            /^Ò›/i,
            /^Ð°/i,
            /^Ð½/i,
            /^Ñ/i,
            /^Ð¼/i,
            /^Ð¼/i,
            /^Ñˆ/i,
            /^Ñ‚/i,
            /^Ò›/i,
            /^Ò›/i,
            /^Ò›/i,
            /^Ð¶/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(Ð¶|Ð´|Ñ|Ñ|Ð±|Ð¶|Ñ)/i,
          short: /^(Ð¶Ñ|Ð´Ñ|ÑÑ|ÑÑ€|Ð±Ñ|Ð¶Ð¼|ÑÐ±)/i,
          wide: /^(Ð¶ÐµÐºÑÐµÐ½Ð±Ñ–|Ð´Ò¯Ð¹ÑÐµÐ½Ð±Ñ–|ÑÐµÐ¹ÑÐµÐ½Ð±Ñ–|ÑÓ™Ñ€ÑÐµÐ½Ð±Ñ–|Ð±ÐµÐ¹ÑÐµÐ½Ð±Ñ–|Ð¶Ò±Ð¼Ð°|ÑÐµÐ½Ð±Ñ–)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð¶/i, /^Ð´/i, /^Ñ/i, /^Ñ/i, /^Ð±/i, /^Ð¶/i, /^Ñ/i],
          short: [
            /^Ð¶Ñ/i,
            /^Ð´Ñ/i,
            /^ÑÑ/i,
            /^ÑÑ€/i,
            /^Ð±Ñ/i,
            /^Ð¶Ð¼/i,
            /^ÑÐ±/i,
          ],
          any: [
            /^Ð¶[ÐµÐº]/i,
            /^Ð´[Ò¯Ð¹]/i,
            /^Ñe[Ð¹]/i,
            /^ÑÓ™[Ñ€]/i,
            /^Ð±[ÐµÐ¹]/i,
            /^Ð¶[Ò±Ð¼]/i,
            /^ÑÐµ[Ð½]/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^Ð¢\.?\s?[Ð”Ðš]\.?|Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°ÑÑ‹Ð½Ð´Ð°|((Ñ‚Ò¯ÑÑ‚Ðµ|Ñ‚Ð°Ò£ÐµÑ€Ñ‚ÐµÒ£|Ñ‚Ð°Ò£Ð´Ð°|Ñ‚Ð°Ò£ÐµÑ€Ñ‚ÐµÒ£|Ñ‚Ð°Ò£Ð¼ÐµÐ½|Ñ‚Ð°Ò£|ÐºÒ¯Ð½Ð´Ñ–Ð·|ÐºÒ¯Ð½|ÐºÐµÑˆÑ‚Ðµ|ÐºÐµÑˆ|Ñ‚Ò¯Ð½Ð´Ðµ|Ñ‚Ò¯Ð½)\.?)/i,
          wide: /^Ð¢\.?\s?[Ð”Ðš]\.?|Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°ÑÑ‹Ð½Ð´Ð°|((Ñ‚Ò¯ÑÑ‚Ðµ|Ñ‚Ð°Ò£ÐµÑ€Ñ‚ÐµÒ£|Ñ‚Ð°Ò£Ð´Ð°|Ñ‚Ð°Ò£ÐµÑ€Ñ‚ÐµÒ£|Ñ‚Ð°Ò£Ð¼ÐµÐ½|Ñ‚Ð°Ò£|ÐºÒ¯Ð½Ð´Ñ–Ð·|ÐºÒ¯Ð½|ÐºÐµÑˆÑ‚Ðµ|ÐºÐµÑˆ|Ñ‚Ò¯Ð½Ð´Ðµ|Ñ‚Ò¯Ð½)\.?)/i,
          any: /^Ð¢\.?\s?[Ð”Ðš]\.?|Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°ÑÑ‹Ð½Ð´Ð°|((Ñ‚Ò¯ÑÑ‚Ðµ|Ñ‚Ð°Ò£ÐµÑ€Ñ‚ÐµÒ£|Ñ‚Ð°Ò£Ð´Ð°|Ñ‚Ð°Ò£ÐµÑ€Ñ‚ÐµÒ£|Ñ‚Ð°Ò£Ð¼ÐµÐ½|Ñ‚Ð°Ò£|ÐºÒ¯Ð½Ð´Ñ–Ð·|ÐºÒ¯Ð½|ÐºÐµÑˆÑ‚Ðµ|ÐºÐµÑˆ|Ñ‚Ò¯Ð½Ð´Ðµ|Ñ‚Ò¯Ð½)\.?)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ð¢Ð”/i,
            pm: /^Ð¢Ðš/i,
            midnight: /^Ñ‚Ò¯Ð½ Ð¾Ñ€Ñ‚Ð°/i,
            noon: /^ÐºÒ¯Ð½Ð´Ñ–Ð·/i,
            morning: /Ñ‚Ð°Ò£/i,
            afternoon: /Ñ‚Ò¯Ñ/i,
            evening: /ÐºÐµÑˆ/i,
            night: /Ñ‚Ò¯Ð½/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 307 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: {
              default: "1 à²¸à³†à²•à³†à²‚à²¡à³â€Œà²—à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              future: "1 à²¸à³†à²•à³†à²‚à²¡à³â€Œà²—à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              past: "1 à²¸à³†à²•à³†à²‚à²¡à³â€Œà²—à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
            },
            other: {
              default:
                "{{count}} à²¸à³†à²•à³†à²‚à²¡à³â€Œà²—à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              future:
                "{{count}} à²¸à³†à²•à³†à²‚à²¡à³â€Œà²—à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              past: "{{count}} à²¸à³†à²•à³†à²‚à²¡à³â€Œà²—à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
            },
          },
          xSeconds: {
            one: {
              default: "1 à²¸à³†à²•à³†à²‚à²¡à³",
              future: "1 à²¸à³†à²•à³†à²‚à²¡à³â€Œà²¨à²²à³à²²à²¿",
              past: "1 à²¸à³†à²•à³†à²‚à²¡à³ à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "{{count}} à²¸à³†à²•à³†à²‚à²¡à³à²—à²³à³",
              future: "{{count}} à²¸à³†à²•à³†à²‚à²¡à³â€Œà²—à²³à²²à³à²²à²¿",
              past: "{{count}} à²¸à³†à²•à³†à²‚à²¡à³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          halfAMinute: {
            other: {
              default: "à²…à²°à³à²§ à²¨à²¿à²®à²¿à²·",
              future: "à²…à²°à³à²§ à²¨à²¿à²®à²¿à²·à²¦à²²à³à²²à²¿",
              past: "à²…à²°à³à²§ à²¨à²¿à²®à²¿à²·à²¦ à²¹à²¿à²‚à²¦à³†",
            },
          },
          lessThanXMinutes: {
            one: {
              default: "1 à²¨à²¿à²®à²¿à²·à²•à³à²•à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              future: "1 à²¨à²¿à²®à²¿à²·à²•à³à²•à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              past: "1 à²¨à²¿à²®à²¿à²·à²•à³à²•à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
            },
            other: {
              default:
                "{{count}} à²¨à²¿à²®à²¿à²·à²•à³à²•à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              future:
                "{{count}} à²¨à²¿à²®à²¿à²·à²•à³à²•à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
              past: "{{count}} à²¨à²¿à²®à²¿à²·à²•à³à²•à²¿à²‚à²¤ à²•à²¡à²¿à²®à³†",
            },
          },
          xMinutes: {
            one: {
              default: "1 à²¨à²¿à²®à²¿à²·",
              future: "1 à²¨à²¿à²®à²¿à²·à²¦à²²à³à²²à²¿",
              past: "1 à²¨à²¿à²®à²¿à²·à²¦ à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "{{count}} à²¨à²¿à²®à²¿à²·à²—à²³à³",
              future: "{{count}} à²¨à²¿à²®à²¿à²·à²—à²³à²²à³à²²à²¿",
              past: "{{count}} à²¨à²¿à²®à²¿à²·à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          aboutXHours: {
            one: {
              default: "à²¸à³à²®à²¾à²°à³ 1 à²—à²‚à²Ÿà³†",
              future: "à²¸à³à²®à²¾à²°à³ 1 à²—à²‚à²Ÿà³†à²¯à²²à³à²²à²¿",
              past: "à²¸à³à²®à²¾à²°à³ 1 à²—à²‚à²Ÿà³† à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "à²¸à³à²®à²¾à²°à³ {{count}} à²—à²‚à²Ÿà³†à²—à²³à³",
              future:
                "à²¸à³à²®à²¾à²°à³ {{count}} à²—à²‚à²Ÿà³†à²—à²³à²²à³à²²à²¿",
              past: "à²¸à³à²®à²¾à²°à³ {{count}} à²—à²‚à²Ÿà³†à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          xHours: {
            one: {
              default: "1 à²—à²‚à²Ÿà³†",
              future: "1 à²—à²‚à²Ÿà³†à²¯à²²à³à²²à²¿",
              past: "1 à²—à²‚à²Ÿà³† à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "{{count}} à²—à²‚à²Ÿà³†à²—à²³à³",
              future: "{{count}} à²—à²‚à²Ÿà³†à²—à²³à²²à³à²²à²¿",
              past: "{{count}} à²—à²‚à²Ÿà³†à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          xDays: {
            one: {
              default: "1 à²¦à²¿à²¨",
              future: "1 à²¦à²¿à²¨à²¦à²²à³à²²à²¿",
              past: "1 à²¦à²¿à²¨à²¦ à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "{{count}} à²¦à²¿à²¨à²—à²³à³",
              future: "{{count}} à²¦à²¿à²¨à²—à²³à²²à³à²²à²¿",
              past: "{{count}} à²¦à²¿à²¨à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          aboutXMonths: {
            one: {
              default: "à²¸à³à²®à²¾à²°à³ 1 à²¤à²¿à²‚à²—à²³à³",
              future: "à²¸à³à²®à²¾à²°à³ 1 à²¤à²¿à²‚à²—à²³à²²à³à²²à²¿",
              past: "à²¸à³à²®à²¾à²°à³ 1 à²¤à²¿à²‚à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "à²¸à³à²®à²¾à²°à³ {{count}} à²¤à²¿à²‚à²—à²³à³",
              future:
                "à²¸à³à²®à²¾à²°à³ {{count}} à²¤à²¿à²‚à²—à²³à³à²—à²³à²²à³à²²à²¿",
              past: "à²¸à³à²®à²¾à²°à³ {{count}} à²¤à²¿à²‚à²—à²³à³à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          xMonths: {
            one: {
              default: "1 à²¤à²¿à²‚à²—à²³à³",
              future: "1 à²¤à²¿à²‚à²—à²³à²²à³à²²à²¿",
              past: "1 à²¤à²¿à²‚à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "{{count}} à²¤à²¿à²‚à²—à²³à³",
              future: "{{count}} à²¤à²¿à²‚à²—à²³à³à²—à²³à²²à³à²²à²¿",
              past: "{{count}} à²¤à²¿à²‚à²—à²³à³à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          aboutXYears: {
            one: {
              default: "à²¸à³à²®à²¾à²°à³ 1 à²µà²°à³à²·",
              future: "à²¸à³à²®à²¾à²°à³ 1 à²µà²°à³à²·à²¦à²²à³à²²à²¿",
              past: "à²¸à³à²®à²¾à²°à³ 1 à²µà²°à³à²·à²¦ à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "à²¸à³à²®à²¾à²°à³ {{count}} à²µà²°à³à²·à²—à²³à³",
              future: "à²¸à³à²®à²¾à²°à³ {{count}} à²µà²°à³à²·à²—à²³à²²à³à²²à²¿",
              past: "à²¸à³à²®à²¾à²°à³ {{count}} à²µà²°à³à²·à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          xYears: {
            one: {
              default: "1 à²µà²°à³à²·",
              future: "1 à²µà²°à³à²·à²¦à²²à³à²²à²¿",
              past: "1 à²µà²°à³à²·à²¦ à²¹à²¿à²‚à²¦à³†",
            },
            other: {
              default: "{{count}} à²µà²°à³à²·à²—à²³à³",
              future: "{{count}} à²µà²°à³à²·à²—à²³à²²à³à²²à²¿",
              past: "{{count}} à²µà²°à³à²·à²—à²³ à²¹à²¿à²‚à²¦à³†",
            },
          },
          overXYears: {
            one: {
              default: "1 à²µà²°à³à²·à²¦ à²®à³‡à²²à³†",
              future: "1 à²µà²°à³à²·à²¦ à²®à³‡à²²à³†",
              past: "1 à²µà²°à³à²·à²¦ à²®à³‡à²²à³†",
            },
            other: {
              default: "{{count}} à²µà²°à³à²·à²—à²³ à²®à³‡à²²à³†",
              future: "{{count}} à²µà²°à³à²·à²—à²³ à²®à³‡à²²à³†",
              past: "{{count}} à²µà²°à³à²·à²—à²³ à²®à³‡à²²à³†",
            },
          },
          almostXYears: {
            one: {
              default: "à²¬à²¹à³à²¤à³‡à²• 1 à²µà²°à³à²·à²¦à²²à³à²²à²¿",
              future: "à²¬à²¹à³à²¤à³‡à²• 1 à²µà²°à³à²·à²¦à²²à³à²²à²¿",
              past: "à²¬à²¹à³à²¤à³‡à²• 1 à²µà²°à³à²·à²¦à²²à³à²²à²¿",
            },
            other: {
              default:
                "à²¬à²¹à³à²¤à³‡à²• {{count}} à²µà²°à³à²·à²—à²³à²²à³à²²à²¿",
              future:
                "à²¬à²¹à³à²¤à³‡à²• {{count}} à²µà²°à³à²·à²—à²³à²²à³à²²à²¿",
              past: "à²¬à²¹à³à²¤à³‡à²• {{count}} à²µà²°à³à²·à²—à²³à²²à³à²²à²¿",
            },
          },
        };

        function getResultByTense(parentToken, options) {
          if (options.addSuffix) {
            if (options.comparison > 0) {
              return parentToken.future;
            } else {
              return parentToken.past;
            }
          }

          return parentToken.default;
        }

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = getResultByTense(formatDistanceLocale[token].one, options);
          } else {
            result = getResultByTense(
              formatDistanceLocale[token].other,
              options
            );
          }

          return result.replace("{{count}}", count);
        }

        module.exports = exports.default;

        /***/
      },
      /* 308 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html
        var dateFormats = {
          full: "EEEE, MMMM d, y",
          // CLDR 1816
          long: "MMMM d, y",
          // CLDR 1817
          medium: "MMM d, y",
          // CLDR 1818
          short: "d/M/yy", // CLDR 1819
        };
        var timeFormats = {
          full: "hh:mm:ss a zzzz",
          // CLDR 1820
          long: "hh:mm:ss a z",
          // CLDR 1821
          medium: "hh:mm:ss a",
          // CLDR 1822
          short: "hh:mm a", // CLDR 1823
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          // CLDR 1824
          long: "{{date}} {{time}}",
          // CLDR 1825
          medium: "{{date}} {{time}}",
          // CLDR 1826
          short: "{{date}} {{time}}", // CLDR 1827
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 309 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'à²•à²³à³†à²¦' eeee p 'à²•à³à²•à³†'",
          yesterday: "'à²¨à²¿à²¨à³à²¨à³†' p 'à²•à³à²•à³†'",
          today: "'à²‡à²‚à²¦à³' p 'à²•à³à²•à³†'",
          tomorrow: "'à²¨à²¾à²³à³†' p 'à²•à³à²•à³†'",
          nextWeek: "eeee p 'à²•à³à²•à³†'",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 310 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Reference: https://www.unicode.org/cldr/charts/32/summary/kn.html
        var eraValues = {
          narrow: ["à²•à³à²°à²¿.à²ªà³‚", "à²•à³à²°à²¿.à²¶"],
          abbreviated: ["à²•à³à²°à²¿.à²ªà³‚", "à²•à³à²°à²¿.à²¶"],
          // CLDR #1618, #1620
          wide: [
            "à²•à³à²°à²¿à²¸à³à²¤ à²ªà³‚à²°à³à²µ",
            "à²•à³à²°à²¿à²¸à³à²¤ à²¶à²•",
          ], // CLDR #1614, #1616
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: [
            "à²¤à³à²°à³ˆ 1",
            "à²¤à³à²°à³ˆ 2",
            "à²¤à³à²°à³ˆ 3",
            "à²¤à³à²°à³ˆ 4",
          ],
          // CLDR #1630 - #1638
          wide: [
            "1à²¨à³‡ à²¤à³à²°à³ˆà²®à²¾à²¸à²¿à²•",
            "2à²¨à³‡ à²¤à³à²°à³ˆà²®à²¾à²¸à²¿à²•",
            "3à²¨à³‡ à²¤à³à²°à³ˆà²®à²¾à²¸à²¿à²•",
            "4à²¨à³‡ à²¤à³à²°à³ˆà²®à²¾à²¸à²¿à²•",
          ], // CLDR #1622 - #1629
          // CLDR #1646 - #1717
        };
        var monthValues = {
          narrow: [
            "à²œ",
            "à²«à³†",
            "à²®à²¾",
            "à²",
            "à²®à³‡",
            "à²œà³‚",
            "à²œà³",
            "à²†",
            "à²¸à³†",
            "à²…",
            "à²¨",
            "à²¡à²¿",
          ],
          abbreviated: [
            "à²œà²¨",
            "à²«à³†à²¬à³à²°",
            "à²®à²¾à²°à³à²šà³",
            "à²à²ªà³à²°à²¿",
            "à²®à³‡",
            "à²œà³‚à²¨à³",
            "à²œà³à²²à³ˆ",
            "à²†à²—",
            "à²¸à³†à²ªà³à²Ÿà³†à²‚",
            "à²…à²•à³à²Ÿà³‹",
            "à²¨à²µà³†à²‚",
            "à²¡à²¿à²¸à³†à²‚",
          ],
          wide: [
            "à²œà²¨à²µà²°à²¿",
            "à²«à³†à²¬à³à²°à²µà²°à²¿",
            "à²®à²¾à²°à³à²šà³",
            "à²à²ªà³à²°à²¿à²²à³",
            "à²®à³‡",
            "à²œà³‚à²¨à³",
            "à²œà³à²²à³ˆ",
            "à²†à²—à²¸à³à²Ÿà³",
            "à²¸à³†à²ªà³à²Ÿà³†à²‚à²¬à²°à³",
            "à²…à²•à³à²Ÿà³‹à²¬à²°à³",
            "à²¨à²µà³†à²‚à²¬à²°à³",
            "à²¡à²¿à²¸à³†à²‚à²¬à²°à³",
          ], // CLDR #1718 - #1773
        };
        var dayValues = {
          narrow: [
            "à²­à²¾",
            "à²¸à³‹",
            "à²®à²‚",
            "à²¬à³",
            "à²—à³",
            "à²¶à³",
            "à²¶",
          ],
          short: [
            "à²­à²¾à²¨à³",
            "à²¸à³‹à²®",
            "à²®à²‚à²—à²³",
            "à²¬à³à²§",
            "à²—à³à²°à³",
            "à²¶à³à²•à³à²°",
            "à²¶à²¨à²¿",
          ],
          abbreviated: [
            "à²­à²¾à²¨à³",
            "à²¸à³‹à²®",
            "à²®à²‚à²—à²³",
            "à²¬à³à²§",
            "à²—à³à²°à³",
            "à²¶à³à²•à³à²°",
            "à²¶à²¨à²¿",
          ],
          wide: [
            "à²­à²¾à²¨à³à²µà²¾à²°",
            "à²¸à³‹à²®à²µà²¾à²°",
            "à²®à²‚à²—à²³à²µà²¾à²°",
            "à²¬à³à²§à²µà²¾à²°",
            "à²—à³à²°à³à²µà²¾à²°",
            "à²¶à³à²•à³à²°à²µà²¾à²°",
            "à²¶à²¨à²¿à²µà²¾à²°",
          ], // CLDR #1774 - #1815
        };
        var dayPeriodValues = {
          narrow: {
            am: "à²ªà³‚à²°à³à²µà²¾à²¹à³à²¨",
            pm: "à²…à²ªà²°à²¾à²¹à³à²¨",
            midnight: "à²®à²§à³à²¯à²°à²¾à²¤à³à²°à²¿",
            noon: "à²®à²§à³à²¯à²¾à²¹à³à²¨",
            morning: "à²¬à³†à²³à²—à³à²—à³†",
            afternoon: "à²®à²§à³à²¯à²¾à²¹à³à²¨",
            evening: "à²¸à²‚à²œà³†",
            night: "à²°à²¾à²¤à³à²°à²¿",
          },
          abbreviated: {
            am: "à²ªà³‚à²°à³à²µà²¾à²¹à³à²¨",
            pm: "à²…à²ªà²°à²¾à²¹à³à²¨",
            midnight: "à²®à²§à³à²¯à²°à²¾à²¤à³à²°à²¿",
            noon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            morning: "à²¬à³†à²³à²—à³à²—à³†",
            afternoon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            evening: "à²¸à²‚à²œà³†",
            night: "à²°à²¾à²¤à³à²°à²¿",
          },
          wide: {
            am: "à²ªà³‚à²°à³à²µà²¾à²¹à³à²¨",
            pm: "à²…à²ªà²°à²¾à²¹à³à²¨",
            midnight: "à²®à²§à³à²¯à²°à²¾à²¤à³à²°à²¿",
            noon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            morning: "à²¬à³†à²³à²—à³à²—à³†",
            afternoon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            evening: "à²¸à²‚à²œà³†",
            night: "à²°à²¾à²¤à³à²°à²¿",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "à²ªà³‚",
            pm: "à²…",
            midnight: "à²®à²§à³à²¯à²°à²¾à²¤à³à²°à²¿",
            noon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            morning: "à²¬à³†à²³à²—à³à²—à³†",
            afternoon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            evening: "à²¸à²‚à²œà³†",
            night: "à²°à²¾à²¤à³à²°à²¿",
          },
          abbreviated: {
            am: "à²ªà³‚à²°à³à²µà²¾à²¹à³à²¨",
            pm: "à²…à²ªà²°à²¾à²¹à³à²¨",
            midnight: "à²®à²§à³à²¯ à²°à²¾à²¤à³à²°à²¿",
            noon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            morning: "à²¬à³†à²³à²—à³à²—à³†",
            afternoon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            evening: "à²¸à²‚à²œà³†",
            night: "à²°à²¾à²¤à³à²°à²¿",
          },
          wide: {
            am: "à²ªà³‚à²°à³à²µà²¾à²¹à³à²¨",
            pm: "à²…à²ªà²°à²¾à²¹à³à²¨",
            midnight: "à²®à²§à³à²¯ à²°à²¾à²¤à³à²°à²¿",
            noon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            morning: "à²¬à³†à²³à²—à³à²—à³†",
            afternoon: "à²®à²§à³à²¯à²¾à²¨à³à²¹",
            evening: "à²¸à²‚à²œà³†",
            night: "à²°à²¾à²¤à³à²°à²¿",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + "à²¨à³‡";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 311 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(à²¨à³‡|à²¨à³†)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(à²•à³à²°à²¿.à²ªà³‚|à²•à³à²°à²¿.à²¶)/i,
          abbreviated:
            /^(à²•à³à²°à²¿\.?\s?à²ªà³‚\.?|à²•à³à²°à²¿\.?\s?à²¶\.?|à²ªà³à²°\.?\s?à²¶\.?)/i,
          wide: /^(à²•à³à²°à²¿à²¸à³à²¤ à²ªà³‚à²°à³à²µ|à²•à³à²°à²¿à²¸à³à²¤ à²¶à²•|à²ªà³à²°à²¸à²•à³à²¤ à²¶à²•)/i,
        };
        var parseEraPatterns = {
          any: [/^à²ªà³‚/i, /^(à²¶|à²ªà³à²°)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated:
            /^à²¤à³à²°à³ˆ[1234]|à²¤à³à²°à³ˆ [1234]| [1234]à²¤à³à²°à³ˆ/i,
          wide: /^[1234](à²¨à³‡)? à²¤à³à²°à³ˆà²®à²¾à²¸à²¿à²•/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow:
            /^(à²œà³‚|à²œà³|à²œ|à²«à³†|à²®à²¾|à²|à²®à³‡|à²†|à²¸à³†|à²…|à²¨|à²¡à²¿)/i,
          abbreviated:
            /^(à²œà²¨|à²«à³†à²¬à³à²°|à²®à²¾à²°à³à²šà³|à²à²ªà³à²°à²¿|à²®à³‡|à²œà³‚à²¨à³|à²œà³à²²à³ˆ|à²†à²—|à²¸à³†à²ªà³à²Ÿà³†à²‚|à²…à²•à³à²Ÿà³‹|à²¨à²µà³†à²‚|à²¡à²¿à²¸à³†à²‚)/i,
          wide: /^(à²œà²¨à²µà²°à²¿|à²«à³†à²¬à³à²°à²µà²°à²¿|à²®à²¾à²°à³à²šà³|à²à²ªà³à²°à²¿à²²à³|à²®à³‡|à²œà³‚à²¨à³|à²œà³à²²à³ˆ|à²†à²—à²¸à³à²Ÿà³|à²¸à³†à²ªà³à²Ÿà³†à²‚à²¬à²°à³|à²…à²•à³à²Ÿà³‹à²¬à²°à³|à²¨à²µà³†à²‚à²¬à²°à³|à²¡à²¿à²¸à³†à²‚à²¬à²°à³)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^à²œ$/i,
            /^à²«à³†/i,
            /^à²®à²¾/i,
            /^à²/i,
            /^à²®à³‡/i,
            /^à²œà³‚/i,
            /^à²œà³$/i,
            /^à²†/i,
            /^à²¸à³†/i,
            /^à²…/i,
            /^à²¨/i,
            /^à²¡à²¿/i,
          ],
          any: [
            /^à²œà²¨/i,
            /^à²«à³†/i,
            /^à²®à²¾/i,
            /^à²/i,
            /^à²®à³‡/i,
            /^à²œà³‚à²¨à³/i,
            /^à²œà³à²²à³ˆ/i,
            /^à²†/i,
            /^à²¸à³†/i,
            /^à²…/i,
            /^à²¨/i,
            /^à²¡à²¿/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(à²­à²¾|à²¸à³‹|à²®|à²¬à³|à²—à³|à²¶à³|à²¶)/i,
          short:
            /^(à²­à²¾à²¨à³|à²¸à³‹à²®|à²®à²‚à²—à²³|à²¬à³à²§|à²—à³à²°à³|à²¶à³à²•à³à²°|à²¶à²¨à²¿)/i,
          abbreviated:
            /^(à²­à²¾à²¨à³|à²¸à³‹à²®|à²®à²‚à²—à²³|à²¬à³à²§|à²—à³à²°à³|à²¶à³à²•à³à²°|à²¶à²¨à²¿)/i,
          wide: /^(à²­à²¾à²¨à³à²µà²¾à²°|à²¸à³‹à²®à²µà²¾à²°|à²®à²‚à²—à²³à²µà²¾à²°|à²¬à³à²§à²µà²¾à²°|à²—à³à²°à³à²µà²¾à²°|à²¶à³à²•à³à²°à²µà²¾à²°|à²¶à²¨à²¿à²µà²¾à²°)/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^à²­à²¾/i,
            /^à²¸à³‹/i,
            /^à²®/i,
            /^à²¬à³/i,
            /^à²—à³/i,
            /^à²¶à³/i,
            /^à²¶/i,
          ],
          any: [
            /^à²­à²¾/i,
            /^à²¸à³‹/i,
            /^à²®/i,
            /^à²¬à³/i,
            /^à²—à³/i,
            /^à²¶à³/i,
            /^à²¶/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(à²ªà³‚|à²…|à²®à²§à³à²¯à²°à²¾à²¤à³à²°à²¿|à²®à²§à³à²¯à²¾à²¨à³à²¹|à²¬à³†à²³à²—à³à²—à³†|à²¸à²‚à²œà³†|à²°à²¾à²¤à³à²°à²¿)/i,
          any: /^(à²ªà³‚à²°à³à²µà²¾à²¹à³à²¨|à²…à²ªà²°à²¾à²¹à³à²¨|à²®à²§à³à²¯à²°à²¾à²¤à³à²°à²¿|à²®à²§à³à²¯à²¾à²¨à³à²¹|à²¬à³†à²³à²—à³à²—à³†|à²¸à²‚à²œà³†|à²°à²¾à²¤à³à²°à²¿)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^à²ªà³‚/i,
            pm: /^à²…/i,
            midnight: /à²®à²§à³à²¯à²°à²¾à²¤à³à²°à²¿/i,
            noon: /à²®à²§à³à²¯à²¾à²¨à³à²¹/i,
            morning: /à²¬à³†à²³à²—à³à²—à³†/i,
            afternoon: /à²®à²§à³à²¯à²¾à²¨à³à²¹/i,
            evening: /à²¸à²‚à²œà³†/i,
            night: /à²°à²¾à²¤à³à²°à²¿/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 312 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "1ì´ˆ ë¯¸ë§Œ",
            other: "{{count}}ì´ˆ ë¯¸ë§Œ",
          },
          xSeconds: {
            one: "1ì´ˆ",
            other: "{{count}}ì´ˆ",
          },
          halfAMinute: "30ì´ˆ",
          lessThanXMinutes: {
            one: "1ë¶„ ë¯¸ë§Œ",
            other: "{{count}}ë¶„ ë¯¸ë§Œ",
          },
          xMinutes: {
            one: "1ë¶„",
            other: "{{count}}ë¶„",
          },
          aboutXHours: {
            one: "ì•½ 1ì‹œê°„",
            other: "ì•½ {{count}}ì‹œê°„",
          },
          xHours: {
            one: "1ì‹œê°„",
            other: "{{count}}ì‹œê°„",
          },
          xDays: {
            one: "1ì¼",
            other: "{{count}}ì¼",
          },
          aboutXWeeks: {
            one: "ì•½ 1ì£¼",
            other: "ì•½ {{count}}ì£¼",
          },
          xWeeks: {
            one: "1ì£¼",
            other: "{{count}}ì£¼",
          },
          aboutXMonths: {
            one: "ì•½ 1ê°œì›”",
            other: "ì•½ {{count}}ê°œì›”",
          },
          xMonths: {
            one: "1ê°œì›”",
            other: "{{count}}ê°œì›”",
          },
          aboutXYears: {
            one: "ì•½ 1ë…„",
            other: "ì•½ {{count}}ë…„",
          },
          xYears: {
            one: "1ë…„",
            other: "{{count}}ë…„",
          },
          overXYears: {
            one: "1ë…„ ì´ìƒ",
            other: "{{count}}ë…„ ì´ìƒ",
          },
          almostXYears: {
            one: "ê±°ì˜ 1ë…„",
            other: "ê±°ì˜ {{count}}ë…„",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " í›„";
            } else {
              return result + " ì „";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 313 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "yë…„ Mì›” dì¼ EEEE",
          long: "yë…„ Mì›” dì¼",
          medium: "y.MM.dd",
          short: "y.MM.dd",
        };
        var timeFormats = {
          full: "a Hì‹œ mmë¶„ ssì´ˆ zzzz",
          long: "a H:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 314 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'ì§€ë‚œ' eeee p",
          yesterday: "'ì–´ì œ' p",
          today: "'ì˜¤ëŠ˜' p",
          tomorrow: "'ë‚´ì¼' p",
          nextWeek: "'ë‹¤ìŒ' eeee p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 315 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["BC", "AD"],
          abbreviated: ["BC", "AD"],
          wide: ["ê¸°ì›ì „", "ì„œê¸°"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1ë¶„ê¸°", "2ë¶„ê¸°", "3ë¶„ê¸°", "4ë¶„ê¸°"],
        };
        var monthValues = {
          narrow: [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
          ],
          abbreviated: [
            "1ì›”",
            "2ì›”",
            "3ì›”",
            "4ì›”",
            "5ì›”",
            "6ì›”",
            "7ì›”",
            "8ì›”",
            "9ì›”",
            "10ì›”",
            "11ì›”",
            "12ì›”",
          ],
          wide: [
            "1ì›”",
            "2ì›”",
            "3ì›”",
            "4ì›”",
            "5ì›”",
            "6ì›”",
            "7ì›”",
            "8ì›”",
            "9ì›”",
            "10ì›”",
            "11ì›”",
            "12ì›”",
          ],
        };
        var dayValues = {
          narrow: ["ì¼", "ì›”", "í™”", "ìˆ˜", "ëª©", "ê¸ˆ", "í† "],
          short: ["ì¼", "ì›”", "í™”", "ìˆ˜", "ëª©", "ê¸ˆ", "í† "],
          abbreviated: ["ì¼", "ì›”", "í™”", "ìˆ˜", "ëª©", "ê¸ˆ", "í† "],
          wide: [
            "ì¼ìš”ì¼",
            "ì›”ìš”ì¼",
            "í™”ìš”ì¼",
            "ìˆ˜ìš”ì¼",
            "ëª©ìš”ì¼",
            "ê¸ˆìš”ì¼",
            "í† ìš”ì¼",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "ì˜¤ì „",
            pm: "ì˜¤í›„",
            midnight: "ìžì •",
            noon: "ì •ì˜¤",
            morning: "ì•„ì¹¨",
            afternoon: "ì˜¤í›„",
            evening: "ì €ë…",
            night: "ë°¤",
          },
          abbreviated: {
            am: "ì˜¤ì „",
            pm: "ì˜¤í›„",
            midnight: "ìžì •",
            noon: "ì •ì˜¤",
            morning: "ì•„ì¹¨",
            afternoon: "ì˜¤í›„",
            evening: "ì €ë…",
            night: "ë°¤",
          },
          wide: {
            am: "ì˜¤ì „",
            pm: "ì˜¤í›„",
            midnight: "ìžì •",
            noon: "ì •ì˜¤",
            morning: "ì•„ì¹¨",
            afternoon: "ì˜¤í›„",
            evening: "ì €ë…",
            night: "ë°¤",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "ì˜¤ì „",
            pm: "ì˜¤í›„",
            midnight: "ìžì •",
            noon: "ì •ì˜¤",
            morning: "ì•„ì¹¨",
            afternoon: "ì˜¤í›„",
            evening: "ì €ë…",
            night: "ë°¤",
          },
          abbreviated: {
            am: "ì˜¤ì „",
            pm: "ì˜¤í›„",
            midnight: "ìžì •",
            noon: "ì •ì˜¤",
            morning: "ì•„ì¹¨",
            afternoon: "ì˜¤í›„",
            evening: "ì €ë…",
            night: "ë°¤",
          },
          wide: {
            am: "ì˜¤ì „",
            pm: "ì˜¤í›„",
            midnight: "ìžì •",
            noon: "ì •ì˜¤",
            morning: "ì•„ì¹¨",
            afternoon: "ì˜¤í›„",
            evening: "ì €ë…",
            night: "ë°¤",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber);
          var options = dirtyOptions || {};
          var unit = String(options.unit);

          switch (unit) {
            case "minute":
            case "second":
              return number;

            case "date":
              return number + "ì¼";

            default:
              return number + "ë²ˆì§¸";
          }
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 316 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(ì¼|ë²ˆì§¸)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
          abbreviated:
            /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
          wide: /^(ê¸°ì›ì „|ì„œê¸°)/i,
        };
        var parseEraPatterns = {
          any: [/^(bc|ê¸°ì›ì „)/i, /^(ad|ì„œê¸°)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234]ì‚¬?ë¶„ê¸°/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^(1[012]|[123456789])/,
          abbreviated: /^(1[012]|[123456789])ì›”/i,
          wide: /^(1[012]|[123456789])ì›”/i,
        };
        var parseMonthPatterns = {
          any: [
            /^1ì›”?$/,
            /^2/,
            /^3/,
            /^4/,
            /^5/,
            /^6/,
            /^7/,
            /^8/,
            /^9/,
            /^10/,
            /^11/,
            /^12/,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[ì¼ì›”í™”ìˆ˜ëª©ê¸ˆí† ]/,
          short: /^[ì¼ì›”í™”ìˆ˜ëª©ê¸ˆí† ]/,
          abbreviated: /^[ì¼ì›”í™”ìˆ˜ëª©ê¸ˆí† ]/,
          wide: /^[ì¼ì›”í™”ìˆ˜ëª©ê¸ˆí† ]ìš”ì¼/,
        };
        var parseDayPatterns = {
          any: [/^ì¼/, /^ì›”/, /^í™”/, /^ìˆ˜/, /^ëª©/, /^ê¸ˆ/, /^í† /],
        };
        var matchDayPeriodPatterns = {
          any: /^(am|pm|ì˜¤ì „|ì˜¤í›„|ìžì •|ì •ì˜¤|ì•„ì¹¨|ì €ë…|ë°¤)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^(am|ì˜¤ì „)/i,
            pm: /^(pm|ì˜¤í›„)/i,
            midnight: /^ìžì •/i,
            noon: /^ì •ì˜¤/i,
            morning: /^ì•„ì¹¨/i,
            afternoon: /^ì˜¤í›„/i,
            evening: /^ì €ë…/i,
            night: /^ë°¤/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 317 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            standalone: {
              one: "manner wá©i eng Sekonn",
              other: "manner wá©i {{count}} Sekonnen",
            },
            withPreposition: {
              one: "manner wá©i enger Sekonn",
              other: "manner wá©i {{count}} Sekonnen",
            },
          },
          xSeconds: {
            standalone: {
              one: "eng Sekonn",
              other: "{{count}} Sekonnen",
            },
            withPreposition: {
              one: "enger Sekonn",
              other: "{{count}} Sekonnen",
            },
          },
          halfAMinute: {
            standalone: "eng hallef Minutt",
            withPreposition: "enger hallwer Minutt",
          },
          lessThanXMinutes: {
            standalone: {
              one: "manner wá©i eng Minutt",
              other: "manner wá©i {{count}} Minutten",
            },
            withPreposition: {
              one: "manner wá©i enger Minutt",
              other: "manner wá©i {{count}} Minutten",
            },
          },
          xMinutes: {
            standalone: {
              one: "eng Minutt",
              other: "{{count}} Minutten",
            },
            withPreposition: {
              one: "enger Minutt",
              other: "{{count}} Minutten",
            },
          },
          aboutXHours: {
            standalone: {
              one: "ongefá©ier eng Stonn",
              other: "ongefá©ier {{count}} Stonnen",
            },
            withPreposition: {
              one: "ongefá©ier enger Stonn",
              other: "ongefá©ier {{count}} Stonnen",
            },
          },
          xHours: {
            standalone: {
              one: "eng Stonn",
              other: "{{count}} Stonnen",
            },
            withPreposition: {
              one: "enger Stonn",
              other: "{{count}} Stonnen",
            },
          },
          xDays: {
            standalone: {
              one: "een Dag",
              other: "{{count}} Deeg",
            },
            withPreposition: {
              one: "engem Dag",
              other: "{{count}} Deeg",
            },
          },
          aboutXWeeks: {
            standalone: {
              one: "ongefá©ier eng Woch",
              other: "ongefá©ier {{count}} Wochen",
            },
            withPreposition: {
              one: "ongefá©ier enger Woche",
              other: "ongefá©ier {{count}} Wochen",
            },
          },
          xWeeks: {
            standalone: {
              one: "eng Woch",
              other: "{{count}} Wochen",
            },
            withPreposition: {
              one: "enger Woch",
              other: "{{count}} Wochen",
            },
          },
          aboutXMonths: {
            standalone: {
              one: "ongefá©ier ee Mount",
              other: "ongefá©ier {{count}} Má©int",
            },
            withPreposition: {
              one: "ongefá©ier engem Mount",
              other: "ongefá©ier {{count}} Má©int",
            },
          },
          xMonths: {
            standalone: {
              one: "ee Mount",
              other: "{{count}} Má©int",
            },
            withPreposition: {
              one: "engem Mount",
              other: "{{count}} Má©int",
            },
          },
          aboutXYears: {
            standalone: {
              one: "ongefá©ier ee Joer",
              other: "ongefá©ier {{count}} Joer",
            },
            withPreposition: {
              one: "ongefá©ier engem Joer",
              other: "ongefá©ier {{count}} Joer",
            },
          },
          xYears: {
            standalone: {
              one: "ee Joer",
              other: "{{count}} Joer",
            },
            withPreposition: {
              one: "engem Joer",
              other: "{{count}} Joer",
            },
          },
          overXYears: {
            standalone: {
              one: "má©i wá©i ee Joer",
              other: "má©i wá©i {{count}} Joer",
            },
            withPreposition: {
              one: "má©i wá©i engem Joer",
              other: "má©i wá©i {{count}} Joer",
            },
          },
          almostXYears: {
            standalone: {
              one: "bal ee Joer",
              other: "bal {{count}} Joer",
            },
            withPreposition: {
              one: "bal engem Joer",
              other: "bal {{count}} Joer",
            },
          },
        };
        var EXCEPTION_CONSONANTS = ["d", "h", "n", "t", "z"];
        var VOWELS = ["a,", "e", "i", "o", "u"];
        var DIGITS_SPOKEN_N_NEEDED = [0, 1, 2, 3, 8, 9];
        var FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED = [40, 50, 60, 70]; // Eifeler Regel

        function isFinalNNeeded(nextWords) {
          var firstLetter = nextWords.charAt(0).toLowerCase();

          if (
            VOWELS.indexOf(firstLetter) != -1 ||
            EXCEPTION_CONSONANTS.indexOf(firstLetter) != -1
          ) {
            return true;
          } // Numbers would need to converted into words for checking.
          // Therefore, I have listed the digits that require a preceeding n with a few exceptions.

          var firstWord = nextWords.split(" ")[0];
          var number = parseInt(firstWord);

          if (
            !isNaN(number) &&
            DIGITS_SPOKEN_N_NEEDED.indexOf(number % 10) != -1 &&
            FIRST_TWO_DIGITS_SPOKEN_NO_N_NEEDED.indexOf(
              parseInt(firstWord.substring(0, 2))
            ) == -1
          ) {
            return true;
          } // Omit other checks as they are not expected here.

          return false;
        }

        function formatDistance(token, count, options) {
          options = options || {};
          var usageGroup = options.addSuffix
            ? formatDistanceLocale[token].withPreposition
            : formatDistanceLocale[token].standalone;
          var result;

          if (typeof usageGroup === "string") {
            result = usageGroup;
          } else if (count === 1) {
            result = usageGroup.one;
          } else {
            result = usageGroup.other.replace("{{count}}", count);
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "a" + (isFinalNNeeded(result) ? "n" : "") + " " + result;
            } else {
              return (
                "viru" + (isFinalNNeeded(result) ? "n" : "") + " " + result
              );
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 318 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008
        var dateFormats = {
          full: "EEEE, do MMMM y",
          // Má©indeg, 7. Januar 2018
          long: "do MMMM y",
          // 7. Januar 2018
          medium: "do MMM y",
          // 7. Jan 2018
          short: "dd.MM.yy", // 07.01.18
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'um' {{time}}",
          long: "{{date}} 'um' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 319 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: function (date) {
            var day = date.getUTCDay();
            var result = "'lá¤schte";

            if (day === 2 || day === 4) {
              // Eifeler Regel: Add an n before the consonant d; Here "Dá«nschdeg" "and Donneschde".
              result += "n";
            }

            result += "' eeee 'um' p";
            return result;
          },
          yesterday: "'gá«schter um' p",
          today: "'haut um' p",
          tomorrow: "'moien um' p",
          nextWeek: "eeee 'um' p",
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 320 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["v.Chr.", "n.Chr."],
          abbreviated: ["v.Chr.", "n.Chr."],
          wide: ["viru Christus", "no Christus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1. Quartal", "2. Quartal", "3. Quartal", "4. Quartal"],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Feb",
            "Má¤e",
            "Abr",
            "Mee",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Okt",
            "Nov",
            "Dez",
          ],
          wide: [
            "Januar",
            "Februar",
            "Má¤erz",
            "Abrá«ll",
            "Mee",
            "Juni",
            "Juli",
            "August",
            "September",
            "Oktober",
            "November",
            "Dezember",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "D", "M", "D", "F", "S"],
          short: ["So", "Má©", "Dá«", "Má«", "Do", "Fr", "Sa"],
          abbreviated: ["So.", "Má©.", "Dá«.", "Má«.", "Do.", "Fr.", "Sa."],
          wide: [
            "Sonndeg",
            "Má©indeg",
            "Dá«nschdeg",
            "Má«ttwoch",
            "Donneschdeg",
            "Freideg",
            "Samschdeg",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "mo.",
            pm: "nomá«.",
            midnight: "Má«tternuecht",
            noon: "Má«tteg",
            morning: "Moien",
            afternoon: "Nomá«tteg",
            evening: "Owend",
            night: "Nuecht",
          },
          abbreviated: {
            am: "moies",
            pm: "nomá«ttes",
            midnight: "Má«tternuecht",
            noon: "Má«tteg",
            morning: "Moien",
            afternoon: "Nomá«tteg",
            evening: "Owend",
            night: "Nuecht",
          },
          wide: {
            am: "moies",
            pm: "nomá«ttes",
            midnight: "Má«tternuecht",
            noon: "Má«tteg",
            morning: "Moien",
            afternoon: "Nomá«tteg",
            evening: "Owend",
            night: "Nuecht",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "mo.",
            pm: "nom.",
            midnight: "Má«tternuecht",
            noon: "má«ttes",
            morning: "moies",
            afternoon: "nomá«ttes",
            evening: "owes",
            night: "nuets",
          },
          abbreviated: {
            am: "moies",
            pm: "nomá«ttes",
            midnight: "Má«tternuecht",
            noon: "má«ttes",
            morning: "moies",
            afternoon: "nomá«ttes",
            evening: "owes",
            night: "nuets",
          },
          wide: {
            am: "moies",
            pm: "nomá«ttes",
            midnight: "Má«tternuecht",
            noon: "má«ttes",
            morning: "moies",
            afternoon: "nomá«ttes",
            evening: "owes",
            night: "nuets",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 321 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
          abbreviated: /^(v\.? ?Chr\.?|n\.? ?Chr\.?)/i,
          wide: /^(viru Christus|virun eiser Zá¤itrechnung|no Christus|eiser Zá¤itrechnung)/i,
        };
        var parseEraPatterns = {
          any: [/^v/i, /^n/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](\.)? Quartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|feb|má¤e|abr|mee|jun|jul|aug|sep|okt|nov|dez)/i,
          wide: /^(januar|februar|má¤erz|abrá«ll|mee|juni|juli|august|september|oktober|november|dezember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^má¤/i,
            /^ab/i,
            /^me/i,
            /^jun/i,
            /^jul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smdf]/i,
          short: /^(so|má©|dá«|má«|do|fr|sa)/i,
          abbreviated: /^(son?|má©i?|dá«n?|má«t?|don?|fre?|sam?)\.?/i,
          wide: /^(sonndeg|má©indeg|dá«nschdeg|má«ttwoch|donneschdeg|freideg|samschdeg)/i,
        };
        var parseDayPatterns = {
          any: [/^so/i, /^má©/i, /^dá«/i, /^má«/i, /^do/i, /^f/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(mo\.?|nomá«\.?|Má«tternuecht|má«ttes|moies|nomá«ttes|owes|nuets)/i,
          abbreviated:
            /^(moi\.?|nomá«t\.?|Má«tternuecht|má«ttes|moies|nomá«ttes|owes|nuets)/i,
          wide: /^(moies|nomá«ttes|Má«tternuecht|má«ttes|moies|nomá«ttes|owes|nuets)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^m/i,
            pm: /^n/i,
            midnight: /^Má«tter/i,
            noon: /^má«ttes/i,
            morning: /moies/i,
            afternoon: /nomá«ttes/i,
            // will never be matched. Afternoon is matched by `pm`
            evening: /owes/i,
            night: /nuets/i, // will never be matched. Night is matched by `pm`
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 322 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: translateSeconds,
            other: translate,
          },
          xSeconds: {
            one: translateSeconds,
            other: translate,
          },
          halfAMinute: "pusÄ— minutÄ—s",
          lessThanXMinutes: {
            one: translateSingular,
            other: translate,
          },
          xMinutes: {
            one: translateSingular,
            other: translate,
          },
          aboutXHours: {
            one: translateSingular,
            other: translate,
          },
          xHours: {
            one: translateSingular,
            other: translate,
          },
          xDays: {
            one: translateSingular,
            other: translate,
          },
          aboutWeeks: {
            one: translateSingular,
            other: translate,
          },
          xWeeks: {
            one: translateSingular,
            other: translate,
          },
          aboutXMonths: {
            one: translateSingular,
            other: translate,
          },
          xMonths: {
            one: translateSingular,
            other: translate,
          },
          aboutXYears: {
            one: translateSingular,
            other: translate,
          },
          xYears: {
            one: translateSingular,
            other: translate,
          },
          overXYears: {
            one: translateSingular,
            other: translate,
          },
          almostXYears: {
            one: translateSingular,
            other: translate,
          },
        };
        var translations = {
          xseconds_other: "sekundÄ—_sekundÅ¾iÅ³_sekundes",
          xminutes_one: "minutÄ—_minutÄ—s_minutÄ™",
          xminutes_other: "minutÄ—s_minuÄiÅ³_minutes",
          xhours_one: "valanda_valandos_valandÄ…",
          xhours_other: "valandos_valandÅ³_valandas",
          xdays_one: "diena_dienos_dienÄ…",
          xdays_other: "dienos_dienÅ³_dienas",
          xweeks_one: "savaitÄ—_savaitÄ—s_savaitÄ™",
          xweeks_other: "savaitÄ—s_savaiÄiÅ³_savaites",
          xmonths_one: "mÄ—nuo_mÄ—nesio_mÄ—nesÄ¯",
          xmonths_other: "mÄ—nesiai_mÄ—nesiÅ³_mÄ—nesius",
          xyears_one: "metai_metÅ³_metus",
          xyears_other: "metai_metÅ³_metus",
          about: "apie",
          over: "daugiau nei",
          almost: "beveik",
          lessthan: "maÅ¾iau nei",
        };

        function translateSeconds(number, addSuffix, key, isFuture) {
          if (!addSuffix) {
            return "kelios sekundÄ—s";
          } else {
            return isFuture ? "keliÅ³ sekundÅ¾iÅ³" : "kelias sekundes";
          }
        }

        function translateSingular(number, addSuffix, key, isFuture) {
          return !addSuffix
            ? forms(key)[0]
            : isFuture
            ? forms(key)[1]
            : forms(key)[2];
        }

        function special(number) {
          return number % 10 === 0 || (number > 10 && number < 20);
        }

        function forms(key) {
          return translations[key].split("_");
        }

        function translate(number, addSuffix, key, isFuture) {
          var result = number + " ";

          if (number === 1) {
            return (
              result + translateSingular(number, addSuffix, key[0], isFuture)
            );
          } else if (!addSuffix) {
            return result + (special(number) ? forms(key)[1] : forms(key)[0]);
          } else {
            if (isFuture) {
              return result + forms(key)[1];
            } else {
              return result + (special(number) ? forms(key)[1] : forms(key)[2]);
            }
          }
        }

        function formatDistance(token, count, options) {
          options = options || {};
          var adverb = token.match(/about|over|almost|lessthan/i);
          var unit = token.replace(adverb, "");
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one(
              count,
              options.addSuffix,
              unit.toLowerCase() + "_one"
            );
          } else {
            result = formatDistanceLocale[token].other(
              count,
              options.addSuffix,
              unit.toLowerCase() + "_other"
            );
          }

          if (adverb) {
            result = translations[adverb[0].toLowerCase()] + " " + result;
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "po " + result;
            } else {
              return "prieÅ¡ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 323 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "y 'm'. MMMM d 'd'., EEEE",
          long: "y 'm'. MMMM d 'd'.",
          medium: "y-MM-dd",
          short: "y-MM-dd",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 324 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'PraÄ—jusÄ¯' eeee p",
          yesterday: "'Vakar' p",
          today: "'Å iandien' p",
          tomorrow: "'Rytoj' p",
          nextWeek: "eeee p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 325 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["pr. Kr.", "po Kr."],
          abbreviated: ["pr. Kr.", "po Kr."],
          wide: ["prieÅ¡ KristÅ³", "po Kristaus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["I ketv.", "II ketv.", "III ketv.", "IV ketv."],
          wide: [
            "I ketvirtis",
            "II ketvirtis",
            "III ketvirtis",
            "IV ketvirtis",
          ],
        };
        var formattingQuarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["I k.", "II k.", "III k.", "IV k."],
          wide: [
            "I ketvirtis",
            "II ketvirtis",
            "III ketvirtis",
            "IV ketvirtis",
          ],
        };
        var monthValues = {
          narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"],
          abbreviated: [
            "saus.",
            "vas.",
            "kov.",
            "bal.",
            "geg.",
            "birÅ¾.",
            "liep.",
            "rugp.",
            "rugs.",
            "spal.",
            "lapkr.",
            "gruod.",
          ],
          wide: [
            "sausis",
            "vasaris",
            "kovas",
            "balandis",
            "geguÅ¾Ä—",
            "birÅ¾elis",
            "liepa",
            "rugpjÅ«tis",
            "rugsÄ—jis",
            "spalis",
            "lapkritis",
            "gruodis",
          ],
        };
        var formattingMonthValues = {
          narrow: ["S", "V", "K", "B", "G", "B", "L", "R", "R", "S", "L", "G"],
          abbreviated: [
            "saus.",
            "vas.",
            "kov.",
            "bal.",
            "geg.",
            "birÅ¾.",
            "liep.",
            "rugp.",
            "rugs.",
            "spal.",
            "lapkr.",
            "gruod.",
          ],
          wide: [
            "sausio",
            "vasario",
            "kovo",
            "balandÅ¾io",
            "geguÅ¾Ä—s",
            "birÅ¾elio",
            "liepos",
            "rugpjÅ«Äio",
            "rugsÄ—jo",
            "spalio",
            "lapkriÄio",
            "gruodÅ¾io",
          ],
        };
        var dayValues = {
          narrow: ["S", "P", "A", "T", "K", "P", "Å "],
          short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "Å t"],
          abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "Å¡t"],
          wide: [
            "sekmadienis",
            "pirmadienis",
            "antradienis",
            "treÄiadienis",
            "ketvirtadienis",
            "penktadienis",
            "Å¡eÅ¡tadienis",
          ],
        };
        var formattingDayValues = {
          narrow: ["S", "P", "A", "T", "K", "P", "Å "],
          short: ["Sk", "Pr", "An", "Tr", "Kt", "Pn", "Å t"],
          abbreviated: ["sk", "pr", "an", "tr", "kt", "pn", "Å¡t"],
          wide: [
            "sekmadienÄ¯",
            "pirmadienÄ¯",
            "antradienÄ¯",
            "treÄiadienÄ¯",
            "ketvirtadienÄ¯",
            "penktadienÄ¯",
            "Å¡eÅ¡tadienÄ¯",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "pr. p.",
            pm: "pop.",
            midnight: "vidurnaktis",
            noon: "vidurdienis",
            morning: "rytas",
            afternoon: "diena",
            evening: "vakaras",
            night: "naktis",
          },
          abbreviated: {
            am: "prieÅ¡piet",
            pm: "popiet",
            midnight: "vidurnaktis",
            noon: "vidurdienis",
            morning: "rytas",
            afternoon: "diena",
            evening: "vakaras",
            night: "naktis",
          },
          wide: {
            am: "prieÅ¡piet",
            pm: "popiet",
            midnight: "vidurnaktis",
            noon: "vidurdienis",
            morning: "rytas",
            afternoon: "diena",
            evening: "vakaras",
            night: "naktis",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "pr. p.",
            pm: "pop.",
            midnight: "vidurnaktis",
            noon: "perpiet",
            morning: "rytas",
            afternoon: "popietÄ—",
            evening: "vakaras",
            night: "naktis",
          },
          abbreviated: {
            am: "prieÅ¡piet",
            pm: "popiet",
            midnight: "vidurnaktis",
            noon: "perpiet",
            morning: "rytas",
            afternoon: "popietÄ—",
            evening: "vakaras",
            night: "naktis",
          },
          wide: {
            am: "prieÅ¡piet",
            pm: "popiet",
            midnight: "vidurnaktis",
            noon: "perpiet",
            morning: "rytas",
            afternoon: "popietÄ—",
            evening: "vakaras",
            night: "naktis",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + "-oji";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            formattingValues: formattingQuarterValues,
            defaultFormattingWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
            formattingValues: formattingDayValues,
            defaultFormattingWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 326 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(-oji)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^p(r|o)\.?\s?(kr\.?|me)/i,
          abbreviated: /^(pr\.\s?(kr\.|m\.\s?e\.)|po\s?kr\.|mÅ«sÅ³ eroje)/i,
          wide: /^(prieÅ¡ KristÅ³|prieÅ¡ mÅ«sÅ³ erÄ…|po Kristaus|mÅ«sÅ³ eroje)/i,
        };
        var parseEraPatterns = {
          wide: [/prieÅ¡/i, /(po|mÅ«sÅ³)/i],
          any: [/^pr/i, /^(po|m)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^([1234])/i,
          abbreviated: /^(I|II|III|IV)\s?ketv?\.?/i,
          wide: /^(I|II|III|IV)\s?ketvirtis/i,
        };
        var parseQuarterPatterns = {
          narrow: [/1/i, /2/i, /3/i, /4/i],
          any: [/I$/i, /II$/i, /III/i, /IV/i],
        };
        var matchMonthPatterns = {
          narrow: /^[svkbglr]/i,
          abbreviated:
            /^(saus\.|vas\.|kov\.|bal\.|geg\.|birÅ¾\.|liep\.|rugp\.|rugs\.|spal\.|lapkr\.|gruod\.)/i,
          wide: /^(sausi(s|o)|vasari(s|o)|kov(a|o)s|balandÅ¾?i(s|o)|geguÅ¾Ä—s?|birÅ¾eli(s|o)|liep(a|os)|rugpjÅ«(t|Ä)i(s|o)|rugsÄ—j(is|o)|spali(s|o)|lapkri(t|Ä)i(s|o)|gruodÅ¾?i(s|o))/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^s/i,
            /^v/i,
            /^k/i,
            /^b/i,
            /^g/i,
            /^b/i,
            /^l/i,
            /^r/i,
            /^r/i,
            /^s/i,
            /^l/i,
            /^g/i,
          ],
          any: [
            /^saus/i,
            /^vas/i,
            /^kov/i,
            /^bal/i,
            /^geg/i,
            /^birÅ¾/i,
            /^liep/i,
            /^rugp/i,
            /^rugs/i,
            /^spal/i,
            /^lapkr/i,
            /^gruod/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[spatkÅ¡]/i,
          short: /^(sk|pr|an|tr|kt|pn|Å¡t)/i,
          abbreviated: /^(sk|pr|an|tr|kt|pn|Å¡t)/i,
          wide: /^(sekmadien(is|Ä¯)|pirmadien(is|Ä¯)|antradien(is|Ä¯)|treÄiadien(is|Ä¯)|ketvirtadien(is|Ä¯)|penktadien(is|Ä¯)|Å¡eÅ¡tadien(is|Ä¯))/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^p/i, /^a/i, /^t/i, /^k/i, /^p/i, /^Å¡/i],
          wide: [/^se/i, /^pi/i, /^an/i, /^tr/i, /^ke/i, /^pe/i, /^Å¡e/i],
          any: [/^sk/i, /^pr/i, /^an/i, /^tr/i, /^kt/i, /^pn/i, /^Å¡t/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(pr.\s?p.|pop.|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietÄ—)|vakaras|naktis)/i,
          any: /^(prieÅ¡piet|popiet$|vidurnaktis|(vidurdienis|perpiet)|rytas|(diena|popietÄ—)|vakaras|naktis)/i,
        };
        var parseDayPeriodPatterns = {
          narrow: {
            am: /^pr/i,
            pm: /^pop./i,
            midnight: /^vidurnaktis/i,
            noon: /^(vidurdienis|perp)/i,
            morning: /rytas/i,
            afternoon: /(die|popietÄ—)/i,
            evening: /vakaras/i,
            night: /naktis/i,
          },
          any: {
            am: /^pr/i,
            pm: /^popiet$/i,
            midnight: /^vidurnaktis/i,
            noon: /^(vidurdienis|perp)/i,
            morning: /rytas/i,
            afternoon: /(die|popietÄ—)/i,
            evening: /vakaras/i,
            night: /naktis/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 327 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        function buildLocalizeTokenFn(schema) {
          return function (count, options) {
            if (count === 1) {
              if (options.addSuffix) {
                return schema.one[0].replace("{{time}}", schema.one[2]);
              } else {
                return schema.one[0].replace("{{time}}", schema.one[1]);
              }
            } else {
              var rem = count % 10 === 1 && count % 100 !== 11;

              if (options.addSuffix) {
                return schema.other[0]
                  .replace("{{time}}", rem ? schema.other[3] : schema.other[4])
                  .replace("{{count}}", count);
              } else {
                return schema.other[0]
                  .replace("{{time}}", rem ? schema.other[1] : schema.other[2])
                  .replace("{{count}}", count);
              }
            }
          };
        }

        var formatDistanceLocale = {
          lessThanXSeconds: buildLocalizeTokenFn({
            one: ["mazÄk par {{time}}", "sekundi", "sekundi"],
            other: [
              "mazÄk nekÄ {{count}} {{time}}",
              "sekunde",
              "sekundes",
              "sekundes",
              "sekundÄ“m",
            ],
          }),
          xSeconds: buildLocalizeTokenFn({
            one: ["1 {{time}}", "sekunde", "sekundes"],
            other: [
              "{{count}} {{time}}",
              "sekunde",
              "sekundes",
              "sekundes",
              "sekundÄ“m",
            ],
          }),
          halfAMinute: function (count, options) {
            if (options.addSuffix) {
              return "pusminÅ«tes";
            } else {
              return "pusminÅ«te";
            }
          },
          lessThanXMinutes: buildLocalizeTokenFn({
            one: ["mazÄk par {{time}}", "minÅ«ti", "minÅ«ti"],
            other: [
              "mazÄk nekÄ {{count}} {{time}}",
              "minÅ«te",
              "minÅ«tes",
              "minÅ«tes",
              "minÅ«tÄ“m",
            ],
          }),
          xMinutes: buildLocalizeTokenFn({
            one: ["1 {{time}}", "minÅ«te", "minÅ«tes"],
            other: [
              "{{count}} {{time}}",
              "minÅ«te",
              "minÅ«tes",
              "minÅ«tes",
              "minÅ«tÄ“m",
            ],
          }),
          aboutXHours: buildLocalizeTokenFn({
            one: ["apmÄ“ram 1 {{time}}", "stunda", "stundas"],
            other: [
              "apmÄ“ram {{count}} {{time}}",
              "stunda",
              "stundas",
              "stundas",
              "stundÄm",
            ],
          }),
          xHours: buildLocalizeTokenFn({
            one: ["1 {{time}}", "stunda", "stundas"],
            other: [
              "{{count}} {{time}}",
              "stunda",
              "stundas",
              "stundas",
              "stundÄm",
            ],
          }),
          xDays: buildLocalizeTokenFn({
            one: ["1 {{time}}", "diena", "dienas"],
            other: [
              "{{count}} {{time}}",
              "diena",
              "dienas",
              "dienas",
              "dienÄm",
            ],
          }),
          aboutXWeeks: buildLocalizeTokenFn({
            one: ["apmÄ“ram 1 {{time}}", "nedÄ“Ä¼a", "nedÄ“Ä¼as"],
            other: [
              "apmÄ“ram {{count}} {{time}}",
              "nedÄ“Ä¼a",
              "nedÄ“Ä¼u",
              "nedÄ“Ä¼as",
              "nedÄ“Ä¼Äm",
            ],
          }),
          xWeeks: buildLocalizeTokenFn({
            one: ["1 {{time}}", "nedÄ“Ä¼a", "nedÄ“Ä¼as"],
            other: [
              "{{count}} {{time}}", // TODO
              "nedÄ“Ä¼a",
              "nedÄ“Ä¼u",
              "nedÄ“Ä¼as",
              "nedÄ“Ä¼Äm",
            ],
          }),
          aboutXMonths: buildLocalizeTokenFn({
            one: ["apmÄ“ram 1 {{time}}", "mÄ“nesis", "mÄ“neÅ¡a"],
            other: [
              "apmÄ“ram {{count}} {{time}}",
              "mÄ“nesis",
              "mÄ“neÅ¡i",
              "mÄ“neÅ¡a",
              "mÄ“neÅ¡iem",
            ],
          }),
          xMonths: buildLocalizeTokenFn({
            one: ["1 {{time}}", "mÄ“nesis", "mÄ“neÅ¡a"],
            other: [
              "{{count}} {{time}}",
              "mÄ“nesis",
              "mÄ“neÅ¡i",
              "mÄ“neÅ¡a",
              "mÄ“neÅ¡iem",
            ],
          }),
          aboutXYears: buildLocalizeTokenFn({
            one: ["apmÄ“ram 1 {{time}}", "gads", "gada"],
            other: [
              "apmÄ“ram {{count}} {{time}}",
              "gads",
              "gadi",
              "gada",
              "gadiem",
            ],
          }),
          xYears: buildLocalizeTokenFn({
            one: ["1 {{time}}", "gads", "gada"],
            other: ["{{count}} {{time}}", "gads", "gadi", "gada", "gadiem"],
          }),
          overXYears: buildLocalizeTokenFn({
            one: ["ilgÄk par 1 {{time}}", "gadu", "gadu"],
            other: [
              "vairÄk nekÄ {{count}} {{time}}",
              "gads",
              "gadi",
              "gada",
              "gadiem",
            ],
          }),
          almostXYears: buildLocalizeTokenFn({
            one: ["gandrÄ«z 1 {{time}}", "gads", "gada"],
            other: [
              "vairÄk nekÄ {{count}} {{time}}",
              "gads",
              "gadi",
              "gada",
              "gadiem",
            ],
          }),
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result = formatDistanceLocale[token](count, options);

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "pÄ“c " + result;
            } else {
              return "pirms " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 328 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, y. 'gada' d. MMMM",
          long: "y. 'gada' d. MMMM",
          medium: "dd.MM.y.",
          short: "dd.MM.y.",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'plkst.' {{time}}",
          long: "{{date}} 'plkst.' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 329 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var weekdays = [
          "svÄ“tdienÄ",
          "pirmdienÄ",
          "otrdienÄ",
          "treÅ¡dienÄ",
          "ceturtdienÄ",
          "piektdienÄ",
          "sestdienÄ",
        ];
        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            if ((0, _index.default)(date, baseDate, options)) {
              return "eeee 'plkst.' p";
            }

            var weekday = weekdays[date.getUTCDay()];
            return "'PagÄjuÅ¡Ä " + weekday + " plkst.' p";
          },
          yesterday: "'Vakar plkst.' p",
          today: "'Å odien plkst.' p",
          tomorrow: "'RÄ«t plkst.' p",
          nextWeek: function (date, baseDate, options) {
            if ((0, _index.default)(date, baseDate, options)) {
              return "eeee 'plkst.' p";
            }

            var weekday = weekdays[date.getUTCDay()];
            return "'NÄkamajÄ " + weekday + " plkst.' p";
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 330 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["p.m.Ä“", "m.Ä“"],
          abbreviated: ["p. m. Ä“.", "m. Ä“."],
          wide: ["pirms mÅ«su Ä“ras", "mÅ«su Ä“rÄ"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."],
          wide: [
            "pirmais ceturksnis",
            "otrais ceturksnis",
            "treÅ¡ais ceturksnis",
            "ceturtais ceturksnis",
          ],
        };
        var formattingQuarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1. cet.", "2. cet.", "3. cet.", "4. cet."],
          wide: [
            "pirmajÄ ceturksnÄ«",
            "otrajÄ ceturksnÄ«",
            "treÅ¡ajÄ ceturksnÄ«",
            "ceturtajÄ ceturksnÄ«",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "janv.",
            "febr.",
            "marts",
            "apr.",
            "maijs",
            "jÅ«n.",
            "jÅ«l.",
            "aug.",
            "sept.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "janvÄris",
            "februÄris",
            "marts",
            "aprÄ«lis",
            "maijs",
            "jÅ«nijs",
            "jÅ«lijs",
            "augusts",
            "septembris",
            "oktobris",
            "novembris",
            "decembris",
          ],
        };
        var formattingMonthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "janv.",
            "febr.",
            "martÄ",
            "apr.",
            "maijs",
            "jÅ«n.",
            "jÅ«l.",
            "aug.",
            "sept.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "janvÄrÄ«",
            "februÄrÄ«",
            "martÄ",
            "aprÄ«lÄ«",
            "maijÄ",
            "jÅ«nijÄ",
            "jÅ«lijÄ",
            "augustÄ",
            "septembrÄ«",
            "oktobrÄ«",
            "novembrÄ«",
            "decembrÄ«",
          ],
        };
        var dayValues = {
          narrow: ["S", "P", "O", "T", "C", "P", "S"],
          short: ["Sv", "P", "O", "T", "C", "Pk", "S"],
          abbreviated: [
            "svÄ“td.",
            "pirmd.",
            "otrd.",
            "treÅ¡d.",
            "ceturtd.",
            "piektd.",
            "sestd.",
          ],
          wide: [
            "svÄ“tdiena",
            "pirmdiena",
            "otrdiena",
            "treÅ¡diena",
            "ceturtdiena",
            "piektdiena",
            "sestdiena",
          ],
        };
        var formattingDayValues = {
          narrow: ["S", "P", "O", "T", "C", "P", "S"],
          short: ["Sv", "P", "O", "T", "C", "Pk", "S"],
          abbreviated: [
            "svÄ“td.",
            "pirmd.",
            "otrd.",
            "treÅ¡d.",
            "ceturtd.",
            "piektd.",
            "sestd.",
          ],
          wide: [
            "svÄ“tdienÄ",
            "pirmdienÄ",
            "otrdienÄ",
            "treÅ¡dienÄ",
            "ceturtdienÄ",
            "piektdienÄ",
            "sestdienÄ",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "pusn.",
            noon: "pusd.",
            morning: "rÄ«ts",
            afternoon: "diena",
            evening: "vakars",
            night: "nakts",
          },
          abbreviated: {
            am: "am",
            pm: "pm",
            midnight: "pusn.",
            noon: "pusd.",
            morning: "rÄ«ts",
            afternoon: "pÄ“cpusd.",
            evening: "vakars",
            night: "nakts",
          },
          wide: {
            am: "am",
            pm: "pm",
            midnight: "pusnakts",
            noon: "pusdienlaiks",
            morning: "rÄ«ts",
            afternoon: "pÄ“cpusdiena",
            evening: "vakars",
            night: "nakts",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "pusn.",
            noon: "pusd.",
            morning: "rÄ«tÄ",
            afternoon: "dienÄ",
            evening: "vakarÄ",
            night: "naktÄ«",
          },
          abbreviated: {
            am: "am",
            pm: "pm",
            midnight: "pusn.",
            noon: "pusd.",
            morning: "rÄ«tÄ",
            afternoon: "pÄ“cpusd.",
            evening: "vakarÄ",
            night: "naktÄ«",
          },
          wide: {
            am: "am",
            pm: "pm",
            midnight: "pusnaktÄ«",
            noon: "pusdienlaikÄ",
            morning: "rÄ«tÄ",
            afternoon: "pÄ“cpusdienÄ",
            evening: "vakarÄ",
            night: "naktÄ«",
          },
        };

        function ordinalNumber(number, _options) {
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            formattingValues: formattingQuarterValues,
            defaultFormattingWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
            formattingValues: formattingDayValues,
            defaultFormattingWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 331 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\./i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(p\.m\.Ä“|m\.Ä“)/i,
          abbreviated: /^(p\. m\. Ä“\.|m\. Ä“\.)/i,
          wide: /^(pirms mÅ«su Ä“ras|mÅ«su Ä“rÄ)/i,
        };
        var parseEraPatterns = {
          any: [/^p/i, /^m/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234](\. cet\.)/i,
          wide: /^(pirma(is|jÄ)|otra(is|jÄ)|treÅ¡a(is|jÄ)|ceturta(is|jÄ)) ceturksn(is|Ä«)/i,
        };
        var parseQuarterPatterns = {
          narrow: [/^1/i, /^2/i, /^3/i, /^4/i],
          abbreviated: [/^1/i, /^2/i, /^3/i, /^4/i],
          wide: [/^p/i, /^o/i, /^t/i, /^c/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(janv\.|febr\.|marts|apr\.|maijs|jÅ«n\.|jÅ«l\.|aug\.|sept\.|okt\.|nov\.|dec\.)/i,
          wide: /^(janvÄr(is|Ä«)|februÄr(is|Ä«)|mart[sÄ]|aprÄ«l(is|Ä«)|maij[sÄ]|jÅ«nij[sÄ]|jÅ«lij[sÄ]|august[sÄ]|septembr(is|Ä«)|oktobr(is|Ä«)|novembr(is|Ä«)|decembr(is|Ä«))/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^mai/i,
            /^jÅ«n/i,
            /^jÅ«l/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[spotc]/i,
          short: /^(sv|pi|o|t|c|pk|s)/i,
          abbreviated:
            /^(svÄ“td\.|pirmd\.|otrd.\|treÅ¡d\.|ceturtd\.|piektd\.|sestd\.)/i,
          wide: /^(svÄ“tdien(a|Ä)|pirmdien(a|Ä)|otrdien(a|Ä)|treÅ¡dien(a|Ä)|ceturtdien(a|Ä)|piektdien(a|Ä)|sestdien(a|Ä))/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^p/i, /^o/i, /^t/i, /^c/i, /^p/i, /^s/i],
          any: [/^sv/i, /^pi/i, /^o/i, /^t/i, /^c/i, /^p/i, /^se/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(am|pm|pusn\.|pusd\.|rÄ«t(s|Ä)|dien(a|Ä)|vakar(s|Ä)|nakt(s|Ä«))/,
          abbreviated:
            /^(am|pm|pusn\.|pusd\.|rÄ«t(s|Ä)|pÄ“cpusd\.|vakar(s|Ä)|nakt(s|Ä«))/,
          wide: /^(am|pm|pusnakt(s|Ä«)|pusdienlaik(s|Ä)|rÄ«t(s|Ä)|pÄ“cpusdien(a|Ä)|vakar(s|Ä)|nakt(s|Ä«))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^am/i,
            pm: /^pm/i,
            midnight: /^pusn/i,
            noon: /^pusd/i,
            morning: /^r/i,
            afternoon: /^(d|pÄ“c)/i,
            evening: /^v/i,
            night: /^n/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 332 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Ð¿Ð¾Ð¼Ð°Ð»ÐºÑƒ Ð¾Ð´ ÑÐµÐºÑƒÐ½Ð´Ð°",
            other: "Ð¿Ð¾Ð¼Ð°Ð»ÐºÑƒ Ð¾Ð´ {{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
          },
          xSeconds: {
            one: "1 ÑÐµÐºÑƒÐ½Ð´Ð°",
            other: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
          },
          halfAMinute: "Ð¿Ð¾Ð»Ð¾Ð²Ð¸Ð½Ð° Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
          lessThanXMinutes: {
            one: "Ð¿Ð¾Ð¼Ð°Ð»ÐºÑƒ Ð¾Ð´ Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
            other: "Ð¿Ð¾Ð¼Ð°Ð»ÐºÑƒ Ð¾Ð´ {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
          },
          xMinutes: {
            one: "1 Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
            other: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ð¸",
          },
          aboutXHours: {
            one: "Ð¾ÐºÐ¾Ð»Ñƒ 1 Ñ‡Ð°Ñ",
            other: "Ð¾ÐºÐ¾Ð»Ñƒ {{count}} Ñ‡Ð°ÑÐ°",
          },
          xHours: {
            one: "1 Ñ‡Ð°Ñ",
            other: "{{count}} Ñ‡Ð°ÑÐ°",
          },
          xDays: {
            one: "1 Ð´ÐµÐ½",
            other: "{{count}} Ð´ÐµÐ½Ð°",
          },
          aboutXWeeks: {
            one: "Ð¾ÐºÐ¾Ð»Ñƒ 1 Ð½ÐµÐ´ÐµÐ»Ð°",
            other: "Ð¾ÐºÐ¾Ð»Ñƒ {{count}} Ð¼ÐµÑÐµÑ†Ð¸",
          },
          xWeeks: {
            one: "1 Ð½ÐµÐ´ÐµÐ»Ð°",
            other: "{{count}} Ð½ÐµÐ´ÐµÐ»Ð¸",
          },
          aboutXMonths: {
            one: "Ð¾ÐºÐ¾Ð»Ñƒ 1 Ð¼ÐµÑÐµÑ†",
            other: "Ð¾ÐºÐ¾Ð»Ñƒ {{count}} Ð½ÐµÐ´ÐµÐ»Ð¸",
          },
          xMonths: {
            one: "1 Ð¼ÐµÑÐµÑ†",
            other: "{{count}} Ð¼ÐµÑÐµÑ†Ð¸",
          },
          aboutXYears: {
            one: "Ð¾ÐºÐ¾Ð»Ñƒ 1 Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "Ð¾ÐºÐ¾Ð»Ñƒ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
          xYears: {
            one: "1 Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "{{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
          overXYears: {
            one: "Ð¿Ð¾Ð²ÐµÑœÐµ Ð¾Ð´ 1 Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "Ð¿Ð¾Ð²ÐµÑœÐµ Ð¾Ð´ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
          almostXYears: {
            one: "Ð±ÐµÐ·Ð¼Ð°Ð»ÐºÑƒ 1 Ð³Ð¾Ð´Ð¸Ð½Ð°",
            other: "Ð±ÐµÐ·Ð¼Ð°Ð»ÐºÑƒ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "Ð·Ð° " + result;
            } else {
              return "Ð¿Ñ€ÐµÐ´ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 333 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, dd MMMM yyyy",
          long: "dd MMMM yyyy",
          medium: "dd MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          any: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "any",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 334 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var weekdays = [
          "Ð½ÐµÐ´ÐµÐ»Ð°",
          "Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº",
          "Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº",
          "ÑÑ€ÐµÐ´Ð°",
          "Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð¾Ðº",
          "Ð¿ÐµÑ‚Ð¾Ðº",
          "ÑÐ°Ð±Ð¾Ñ‚Ð°",
        ];

        function lastWeek(day) {
          var weekday = weekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 6:
              return "'Ð¼Ð¸Ð½Ð°Ñ‚Ð°Ñ‚Ð° " + weekday + " Ð²Ð¾' p";

            case 1:
            case 2:
            case 4:
            case 5:
              return "'Ð¼Ð¸Ð½Ð°Ñ‚Ð¸Ð¾Ñ‚ " + weekday + " Ð²Ð¾' p";
          }
        }

        function thisWeek(day) {
          var weekday = weekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 6:
              return "'Ð¾Ð²Ð° " + weekday + " Ð²o' p";

            case 1:
            case 2:
            case 4:
            case 5:
              return "'Ð¾Ð²Ð¾Ñ˜ " + weekday + " Ð²o' p";
          }
        }

        function nextWeek(day) {
          var weekday = weekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 6:
              return "'ÑÐ»ÐµÐ´Ð½Ð°Ñ‚Ð° " + weekday + " Ð²o' p";

            case 1:
            case 2:
            case 4:
            case 5:
              return "'ÑÐ»ÐµÐ´Ð½Ð¸Ð¾Ñ‚ " + weekday + " Ð²o' p";
          }
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'Ð²Ñ‡ÐµÑ€Ð° Ð²Ð¾' p",
          today: "'Ð´ÐµÐ½ÐµÑ Ð²Ð¾' p",
          tomorrow: "'ÑƒÑ‚Ñ€Ðµ Ð²Ð¾' p",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 335 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ð¿Ñ€.Ð½.Ðµ.", "Ð½.Ðµ."],
          abbreviated: ["Ð¿Ñ€ÐµÐ´ Ð½. Ðµ.", "Ð½. Ðµ."],
          wide: ["Ð¿Ñ€ÐµÐ´ Ð½Ð°ÑˆÐ°Ñ‚Ð° ÐµÑ€Ð°", "Ð½Ð°ÑˆÐ°Ñ‚Ð° ÐµÑ€Ð°"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: [
            "1-Ð²Ð¸ ÐºÐ².",
            "2-Ñ€Ð¸ ÐºÐ².",
            "3-Ñ‚Ð¸ ÐºÐ².",
            "4-Ñ‚Ð¸ ÐºÐ².",
          ],
          wide: [
            "1-Ð²Ð¸ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "2-Ñ€Ð¸ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "3-Ñ‚Ð¸ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "4-Ñ‚Ð¸ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
          ],
        };
        var monthValues = {
          abbreviated: [
            "Ñ˜Ð°Ð½",
            "Ñ„ÐµÐ²",
            "Ð¼Ð°Ñ€",
            "Ð°Ð¿Ñ€",
            "Ð¼Ð°Ñ˜",
            "Ñ˜ÑƒÐ½",
            "Ñ˜ÑƒÐ»",
            "Ð°Ð²Ð³",
            "ÑÐµÐ¿Ñ‚",
            "Ð¾ÐºÑ‚",
            "Ð½Ð¾ÐµÐ¼",
            "Ð´ÐµÐº",
          ],
          wide: [
            "Ñ˜Ð°Ð½ÑƒÐ°Ñ€Ð¸",
            "Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸",
            "Ð¼Ð°Ñ€Ñ‚",
            "Ð°Ð¿Ñ€Ð¸Ð»",
            "Ð¼Ð°Ñ˜",
            "Ñ˜ÑƒÐ½Ð¸",
            "Ñ˜ÑƒÐ»Ð¸",
            "Ð°Ð²Ð³ÑƒÑÑ‚",
            "ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸",
            "Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸",
            "Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸",
            "Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸",
          ],
        };
        var dayValues = {
          narrow: ["Ð", "ÐŸ", "Ð’", "Ð¡", "Ð§", "ÐŸ", "Ð¡"],
          short: ["Ð½Ðµ", "Ð¿Ð¾", "Ð²Ñ‚", "ÑÑ€", "Ñ‡Ðµ", "Ð¿Ðµ", "ÑÐ°"],
          abbreviated: [
            "Ð½ÐµÐ´",
            "Ð¿Ð¾Ð½",
            "Ð²Ñ‚Ð¾",
            "ÑÑ€Ðµ",
            "Ñ‡ÐµÑ‚",
            "Ð¿ÐµÑ‚",
            "ÑÐ°Ð±",
          ],
          wide: [
            "Ð½ÐµÐ´ÐµÐ»Ð°",
            "Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº",
            "Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº",
            "ÑÑ€ÐµÐ´Ð°",
            "Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð¾Ðº",
            "Ð¿ÐµÑ‚Ð¾Ðº",
            "ÑÐ°Ð±Ð¾Ñ‚Ð°",
          ],
        };
        var dayPeriodValues = {
          wide: {
            am: "Ð¿Ñ€ÐµÑ‚Ð¿Ð»Ð°Ð´Ð½Ðµ",
            pm: "Ð¿Ð¾Ð¿Ð»Ð°Ð´Ð½Ðµ",
            midnight: "Ð¿Ð¾Ð»Ð½Ð¾Ñœ",
            noon: "Ð½Ð°Ð¿Ð»Ð°Ð´Ð½Ðµ",
            morning: "Ð½Ð°ÑƒÑ‚Ñ€Ð¾",
            afternoon: "Ð¿Ð¾Ð¿Ð»Ð°Ð´Ð½Ðµ",
            evening: "Ð½Ð°Ð²ÐµÑ‡ÐµÑ€",
            night: "Ð½Ð¾ÑœÐµ",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          var rem100 = number % 100;

          if (rem100 > 20 || rem100 < 10) {
            switch (rem100 % 10) {
              case 1:
                return number + "-Ð²Ð¸";

              case 2:
                return number + "-Ñ€Ð¸";

              case 7:
              case 8:
                return number + "-Ð¼Ð¸";
            }
          }

          return number + "-Ñ‚Ð¸";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 336 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(-?[Ð²Ñ€Ð¼Ñ‚][Ð¸])?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^((Ð¿Ñ€)?Ð½\.?\s?Ðµ\.?)/i,
          abbreviated: /^((Ð¿Ñ€)?Ð½\.?\s?Ðµ\.?)/i,
          wide: /^(Ð¿Ñ€ÐµÐ´ Ð½Ð°ÑˆÐ°Ñ‚Ð° ÐµÑ€Ð°|Ð½Ð°ÑˆÐ°Ñ‚Ð° ÐµÑ€Ð°)/i,
        };
        var parseEraPatterns = {
          any: [/^Ð¿/i, /^Ð½/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234](-?[Ð²Ñ€Ñ‚]?Ð¸?)? ÐºÐ².?/i,
          wide: /^[1234](-?[Ð²Ñ€Ñ‚]?Ð¸?)? ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchDayPatterns = {
          narrow: /^[Ð½Ð¿Ð²ÑÑ‡]/i,
          short: /^(Ð½Ðµ|Ð¿Ð¾|Ð²Ñ‚|ÑÑ€|Ñ‡Ðµ|Ð¿Ðµ|ÑÐ°)/i,
          abbreviated: /^(Ð½ÐµÐ´|Ð¿Ð¾Ð½|Ð²Ñ‚Ð¾|ÑÑ€Ðµ|Ñ‡ÐµÑ‚|Ð¿ÐµÑ‚|ÑÐ°Ð±)/i,
          wide: /^(Ð½ÐµÐ´ÐµÐ»Ð°|Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»Ð½Ð¸Ðº|Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº|ÑÑ€ÐµÐ´Ð°|Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð¾Ðº|Ð¿ÐµÑ‚Ð¾Ðº|ÑÐ°Ð±Ð¾Ñ‚Ð°)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð½/i, /^Ð¿/i, /^Ð²/i, /^Ñ/i, /^Ñ‡/i, /^Ð¿/i, /^Ñ/i],
          any: [
            /^Ð½[ÐµÐ´]/i,
            /^Ð¿[Ð¾Ð½]/i,
            /^Ð²Ñ‚/i,
            /^ÑÑ€/i,
            /^Ñ‡[ÐµÑ‚]/i,
            /^Ð¿[ÐµÑ‚]/i,
            /^Ñ[Ð°Ð±]/i,
          ],
        };
        var matchMonthPatterns = {
          abbreviated:
            /^(Ñ˜Ð°Ð½|Ñ„ÐµÐ²|Ð¼Ð°Ñ€|Ð°Ð¿Ñ€|Ð¼Ð°Ñ˜|Ñ˜ÑƒÐ½|Ñ˜ÑƒÐ»|Ð°Ð²Ð³|ÑÐµÐ¿|Ð¾ÐºÑ‚|Ð½Ð¾ÐµÐ¼|Ð´ÐµÐº)/i,
          wide: /^(Ñ˜Ð°Ð½ÑƒÐ°Ñ€Ð¸|Ñ„ÐµÐ²Ñ€ÑƒÐ°Ñ€Ð¸|Ð¼Ð°Ñ€Ñ‚|Ð°Ð¿Ñ€Ð¸Ð»|Ð¼Ð°Ñ˜|Ñ˜ÑƒÐ½Ð¸|Ñ˜ÑƒÐ»Ð¸|Ð°Ð²Ð³ÑƒÑÑ‚|ÑÐµÐ¿Ñ‚ÐµÐ¼Ð²Ñ€Ð¸|Ð¾ÐºÑ‚Ð¾Ð¼Ð²Ñ€Ð¸|Ð½Ð¾ÐµÐ¼Ð²Ñ€Ð¸|Ð´ÐµÐºÐµÐ¼Ð²Ñ€Ð¸)/i,
        };
        var parseMonthPatterns = {
          any: [
            /^Ñ˜Ð°/i,
            /^Ð¤/i,
            /^Ð¼Ð°Ñ€/i,
            /^Ð°Ð¿/i,
            /^Ð¼Ð°Ñ˜/i,
            /^Ñ˜ÑƒÐ½/i,
            /^Ñ˜ÑƒÐ»/i,
            /^Ð°Ð²/i,
            /^ÑÐµ/i,
            /^Ð¾ÐºÑ‚/i,
            /^Ð½Ð¾/i,
            /^Ð´Ðµ/i,
          ],
        };
        var matchDayPeriodPatterns = {
          any: /^(Ð¿Ñ€ÐµÑ‚Ð¿|Ð¿Ð¾Ð¿Ð»|Ð¿Ð¾Ð»Ð½Ð¾Ñœ|ÑƒÑ‚Ñ€Ð¾|Ð¿Ð»Ð°Ð´Ð½Ðµ|Ð²ÐµÑ‡ÐµÑ€|Ð½Ð¾Ñœ)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /Ð¿Ñ€ÐµÑ‚Ð¿Ð»Ð°Ð´Ð½Ðµ/i,
            pm: /Ð¿Ð¾Ð¿Ð»Ð°Ð´Ð½Ðµ/i,
            midnight: /Ð¿Ð¾Ð»Ð½Ð¾Ñœ/i,
            noon: /Ð½Ð°Ð¿Ð»Ð°Ð´Ð½Ðµ/i,
            morning: /Ð½Ð°ÑƒÑ‚Ñ€Ð¾/i,
            afternoon: /Ð¿Ð¾Ð¿Ð»Ð°Ð´Ð½Ðµ/i,
            evening: /Ð½Ð°Ð²ÐµÑ‡ÐµÑ€/i,
            night: /Ð½Ð¾ÑœÐµ/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 337 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "ÑÐµÐºÑƒÐ½Ð´ Ñ…Ò¯Ñ€ÑÑ…Ð³Ò¯Ð¹",
            other: "{{count}} ÑÐµÐºÑƒÐ½Ð´ Ñ…Ò¯Ñ€ÑÑ…Ð³Ò¯Ð¹",
          },
          xSeconds: {
            one: "1 ÑÐµÐºÑƒÐ½Ð´",
            other: "{{count}} ÑÐµÐºÑƒÐ½Ð´",
          },
          halfAMinute: "Ñ…Ð°Ð³Ð°Ñ Ð¼Ð¸Ð½ÑƒÑ‚",
          lessThanXMinutes: {
            one: "Ð¼Ð¸Ð½ÑƒÑ‚ Ñ…Ò¯Ñ€ÑÑ…Ð³Ò¯Ð¹",
            other: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚ Ñ…Ò¯Ñ€ÑÑ…Ð³Ò¯Ð¹",
          },
          xMinutes: {
            one: "1 Ð¼Ð¸Ð½ÑƒÑ‚",
            other: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
          },
          aboutXHours: {
            one: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ 1 Ñ†Ð°Ð³",
            other: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ {{count}} Ñ†Ð°Ð³",
          },
          xHours: {
            one: "1 Ñ†Ð°Ð³",
            other: "{{count}} Ñ†Ð°Ð³",
          },
          xDays: {
            one: "1 Ó©Ð´Ó©Ñ€",
            other: "{{count}} Ó©Ð´Ó©Ñ€",
          },
          aboutXWeeks: {
            one: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ 1 Ð´Ð¾Ð»Ð¾Ð¾ Ñ…Ð¾Ð½Ð¾Ð³",
            other: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ {{count}} Ð´Ð¾Ð»Ð¾Ð¾ Ñ…Ð¾Ð½Ð¾Ð³",
          },
          xWeeks: {
            one: "1 Ð´Ð¾Ð»Ð¾Ð¾ Ñ…Ð¾Ð½Ð¾Ð³",
            other: "{{count}} Ð´Ð¾Ð»Ð¾Ð¾ Ñ…Ð¾Ð½Ð¾Ð³",
          },
          aboutXMonths: {
            one: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ 1 ÑÐ°Ñ€",
            other: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ {{count}} ÑÐ°Ñ€",
          },
          xMonths: {
            one: "1 ÑÐ°Ñ€",
            other: "{{count}} ÑÐ°Ñ€",
          },
          aboutXYears: {
            one: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ 1 Ð¶Ð¸Ð»",
            other: "Ð¾Ð¹Ñ€Ð¾Ð»Ñ†Ð¾Ð¾Ð³Ð¾Ð¾Ñ€ {{count}} Ð¶Ð¸Ð»",
          },
          xYears: {
            one: "1 Ð¶Ð¸Ð»",
            other: "{{count}} Ð¶Ð¸Ð»",
          },
          overXYears: {
            one: "1 Ð¶Ð¸Ð» Ð³Ð°Ñ€Ð°Ð½",
            other: "{{count}} Ð¶Ð¸Ð» Ð³Ð°Ñ€Ð°Ð½",
          },
          almostXYears: {
            one: "Ð±Ð°Ñ€Ð°Ð³ 1 Ð¶Ð¸Ð»",
            other: "Ð±Ð°Ñ€Ð°Ð³ {{count}} Ð¶Ð¸Ð»",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            /**
             * Append genitive case
             */
            var words = result.split(" ");
            var lastword = words.pop();
            result = words.join(" ");

            switch (lastword) {
              case "ÑÐµÐºÑƒÐ½Ð´":
                result += " ÑÐµÐºÑƒÐ½Ð´Ð¸Ð¹Ð½";
                break;

              case "Ð¼Ð¸Ð½ÑƒÑ‚":
                result += " Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹Ð½";
                break;

              case "Ñ†Ð°Ð³":
                result += " Ñ†Ð°Ð³Ð¸Ð¹Ð½";
                break;

              case "Ó©Ð´Ó©Ñ€":
                result += " Ó©Ð´Ñ€Ð¸Ð¹Ð½";
                break;

              case "ÑÐ°Ñ€":
                result += " ÑÐ°Ñ€Ñ‹Ð½";
                break;

              case "Ð¶Ð¸Ð»":
                result += " Ð¶Ð¸Ð»Ð¸Ð¹Ð½";
                break;

              case "Ñ…Ð¾Ð½Ð¾Ð³":
                result += " Ñ…Ð¾Ð½Ð¾Ð³Ð¸Ð¹Ð½";
                break;

              case "Ð³Ð°Ñ€Ð°Ð½":
                result += " Ð³Ð°Ñ€Ð°Ð½Ñ‹";
                break;

              case "Ñ…Ò¯Ñ€ÑÑ…Ð³Ò¯Ð¹":
                result += " Ñ…Ò¯Ñ€ÑÑ…Ð³Ò¯Ð¹ Ñ…ÑƒÐ³Ð°Ñ†Ð°Ð°Ð½Ñ‹";
                break;

              default:
                result += lastword + "-Ð½";
            }

            if (options.comparison > 0) {
              return result + " Ð´Ð°Ñ€Ð°Ð°";
            } else {
              return result + " Ó©Ð¼Ð½Ó©";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 338 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "y 'Ð¾Ð½Ñ‹' MMMM'Ñ‹Ð½' d, EEEE 'Ð³Ð°Ñ€Ð°Ð³'",
          long: "y 'Ð¾Ð½Ñ‹' MMMM'Ñ‹Ð½' d",
          medium: "y 'Ð¾Ð½Ñ‹' MMM'Ñ‹Ð½' d",
          short: "y.MM.dd",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 339 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'Ó©Ð½Ð³Ó©Ñ€ÑÓ©Ð½' eeee 'Ð³Ð°Ñ€Ð°Ð³Ð¸Ð¹Ð½' p 'Ñ†Ð°Ð³Ñ‚'",
          yesterday: "'Ó©Ñ‡Ð¸Ð³Ð´Ó©Ñ€' p 'Ñ†Ð°Ð³Ñ‚'",
          today: "'Ó©Ð½Ó©Ó©Ð´Ó©Ñ€' p 'Ñ†Ð°Ð³Ñ‚'",
          tomorrow: "'Ð¼Ð°Ñ€Ð³Ð°Ð°Ñˆ' p 'Ñ†Ð°Ð³Ñ‚'",
          nextWeek: "'Ð¸Ñ€ÑÑ…' eeee 'Ð³Ð°Ñ€Ð°Ð³Ð¸Ð¹Ð½' p 'Ñ†Ð°Ð³Ñ‚'",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 340 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["ÐÐ¢Ó¨", "ÐÐ¢"],
          abbreviated: ["ÐÐ¢Ó¨", "ÐÐ¢"],
          wide: [
            "Ð½Ð¸Ð¹Ñ‚Ð¸Ð¹Ð½ Ñ‚Ð¾Ð¾Ð»Ð»Ñ‹Ð½ Ó©Ð¼Ð½Ó©Ñ…",
            "Ð½Ð¸Ð¹Ñ‚Ð¸Ð¹Ð½ Ñ‚Ð¾Ð¾Ð»Ð»Ñ‹Ð½",
          ],
        };
        var quarterValues = {
          narrow: ["I", "II", "III", "IV"],
          abbreviated: [
            "I ÑƒÐ»Ð¸Ñ€Ð°Ð»",
            "II ÑƒÐ»Ð¸Ñ€Ð°Ð»",
            "III ÑƒÐ»Ð¸Ñ€Ð°Ð»",
            "IV ÑƒÐ»Ð¸Ñ€Ð°Ð»",
          ],
          wide: [
            "1-Ñ€ ÑƒÐ»Ð¸Ñ€Ð°Ð»",
            "2-Ñ€ ÑƒÐ»Ð¸Ñ€Ð°Ð»",
            "3-Ñ€ ÑƒÐ»Ð¸Ñ€Ð°Ð»",
            "4-Ñ€ ÑƒÐ»Ð¸Ñ€Ð°Ð»",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: [
            "I",
            "II",
            "III",
            "IV",
            "V",
            "VI",
            "VII",
            "VIII",
            "IX",
            "X",
            "XI",
            "XII",
          ],
          abbreviated: [
            "1-Ñ€ ÑÐ°Ñ€",
            "2-Ñ€ ÑÐ°Ñ€",
            "3-Ñ€ ÑÐ°Ñ€",
            "4-Ñ€ ÑÐ°Ñ€",
            "5-Ñ€ ÑÐ°Ñ€",
            "6-Ñ€ ÑÐ°Ñ€",
            "7-Ñ€ ÑÐ°Ñ€",
            "8-Ñ€ ÑÐ°Ñ€",
            "9-Ñ€ ÑÐ°Ñ€",
            "10-Ñ€ ÑÐ°Ñ€",
            "11-Ñ€ ÑÐ°Ñ€",
            "12-Ñ€ ÑÐ°Ñ€",
          ],
          wide: [
            "ÐÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "Ð¥Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð“ÑƒÑ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð”Ó©Ñ€Ó©Ð²Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "Ð¢Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð—ÑƒÑ€Ð³Ð°Ð°Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð”Ð¾Ð»Ð¾Ð¾Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "ÐÐ°Ð¹Ð¼Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð•ÑÐ´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "ÐÑ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "ÐÑ€Ð²Ð°Ð½Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "ÐÑ€Ð²Ð°Ð½ Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "I",
            "II",
            "III",
            "IV",
            "V",
            "VI",
            "VII",
            "VIII",
            "IX",
            "X",
            "XI",
            "XII",
          ],
          abbreviated: [
            "1-Ñ€ ÑÐ°Ñ€",
            "2-Ñ€ ÑÐ°Ñ€",
            "3-Ñ€ ÑÐ°Ñ€",
            "4-Ñ€ ÑÐ°Ñ€",
            "5-Ñ€ ÑÐ°Ñ€",
            "6-Ñ€ ÑÐ°Ñ€",
            "7-Ñ€ ÑÐ°Ñ€",
            "8-Ñ€ ÑÐ°Ñ€",
            "9-Ñ€ ÑÐ°Ñ€",
            "10-Ñ€ ÑÐ°Ñ€",
            "11-Ñ€ ÑÐ°Ñ€",
            "12-Ñ€ ÑÐ°Ñ€",
          ],
          wide: [
            "Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð³ÑƒÑ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð´Ó©Ñ€Ó©Ð²Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "Ñ‚Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð·ÑƒÑ€Ð³Ð°Ð°Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð´Ð¾Ð»Ð¾Ð¾Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð½Ð°Ð¹Ð¼Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "ÐµÑÐ´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "Ð°Ñ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
            "Ð°Ñ€Ð²Ð°Ð½Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€",
            "Ð°Ñ€Ð²Ð°Ð½ Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€",
          ],
        };
        var dayValues = {
          narrow: ["Ð", "Ð”", "Ðœ", "Ð›", "ÐŸ", "Ð‘", "Ð‘"],
          short: ["ÐÑ", "Ð”Ð°", "ÐœÑ", "Ð›Ñ…", "ÐŸÒ¯", "Ð‘Ð°", "Ð‘Ñ"],
          abbreviated: [
            "ÐÑÐ¼",
            "Ð”Ð°Ð²",
            "ÐœÑÐ³",
            "Ð›Ñ…Ð°",
            "ÐŸÒ¯Ñ€",
            "Ð‘Ð°Ð°",
            "Ð‘ÑÐ¼",
          ],
          wide: [
            "ÐÑÐ¼",
            "Ð”Ð°Ð²Ð°Ð°",
            "ÐœÑÐ³Ð¼Ð°Ñ€",
            "Ð›Ñ…Ð°Ð³Ð²Ð°",
            "ÐŸÒ¯Ñ€ÑÐ²",
            "Ð‘Ð°Ð°ÑÐ°Ð½",
            "Ð‘ÑÐ¼Ð±Ð°",
          ],
        };
        var formattingDayValues = {
          narrow: ["Ð", "Ð”", "Ðœ", "Ð›", "ÐŸ", "Ð‘", "Ð‘"],
          short: ["ÐÑ", "Ð”Ð°", "ÐœÑ", "Ð›Ñ…", "ÐŸÒ¯", "Ð‘Ð°", "Ð‘Ñ"],
          abbreviated: [
            "ÐÑÐ¼",
            "Ð”Ð°Ð²",
            "ÐœÑÐ³",
            "Ð›Ñ…Ð°",
            "ÐŸÒ¯Ñ€",
            "Ð‘Ð°Ð°",
            "Ð‘ÑÐ¼",
          ],
          wide: [
            "Ð½ÑÐ¼",
            "Ð´Ð°Ð²Ð°Ð°",
            "Ð¼ÑÐ³Ð¼Ð°Ñ€",
            "Ð»Ñ…Ð°Ð³Ð²Ð°",
            "Ð¿Ò¯Ñ€ÑÐ²",
            "Ð±Ð°Ð°ÑÐ°Ð½",
            "Ð±ÑÐ¼Ð±Ð°",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ò¯.Ó©.",
            pm: "Ò¯.Ñ….",
            midnight: "ÑˆÓ©Ð½Ó© Ð´ÑƒÐ½Ð´",
            noon: "Ò¯Ð´ Ð´ÑƒÐ½Ð´",
            morning: "Ó©Ð³Ð»Ó©Ó©",
            afternoon: "Ó©Ð´Ó©Ñ€",
            evening: "Ð¾Ñ€Ð¾Ð¹",
            night: "ÑˆÓ©Ð½Ó©",
          },
          abbreviated: {
            am: "Ò¯.Ó©.",
            pm: "Ò¯.Ñ….",
            midnight: "ÑˆÓ©Ð½Ó© Ð´ÑƒÐ½Ð´",
            noon: "Ò¯Ð´ Ð´ÑƒÐ½Ð´",
            morning: "Ó©Ð³Ð»Ó©Ó©",
            afternoon: "Ó©Ð´Ó©Ñ€",
            evening: "Ð¾Ñ€Ð¾Ð¹",
            night: "ÑˆÓ©Ð½Ó©",
          },
          wide: {
            am: "Ò¯.Ó©.",
            pm: "Ò¯.Ñ….",
            midnight: "ÑˆÓ©Ð½Ó© Ð´ÑƒÐ½Ð´",
            noon: "Ò¯Ð´ Ð´ÑƒÐ½Ð´",
            morning: "Ó©Ð³Ð»Ó©Ó©",
            afternoon: "Ó©Ð´Ó©Ñ€",
            evening: "Ð¾Ñ€Ð¾Ð¹",
            night: "ÑˆÓ©Ð½Ó©",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          return number;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
            formattingValues: formattingDayValues,
            defaultFormattingWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 341 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /\d+/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ð½Ñ‚Ó©|Ð½Ñ‚)/i,
          abbreviated: /^(Ð½Ñ‚Ó©|Ð½Ñ‚)/i,
          wide: /^(Ð½Ð¸Ð¹Ñ‚Ð¸Ð¹Ð½ Ñ‚Ð¾Ð¾Ð»Ð»Ñ‹Ð½ Ó©Ð¼Ð½Ó©|Ð½Ð¸Ð¹Ñ‚Ð¸Ð¹Ð½ Ñ‚Ð¾Ð¾Ð»Ð»Ñ‹Ð½)/i,
        };
        var parseEraPatterns = {
          any: [
            /^(Ð½Ñ‚Ó©|Ð½Ð¸Ð¹Ñ‚Ð¸Ð¹Ð½ Ñ‚Ð¾Ð¾Ð»Ð»Ñ‹Ð½ Ó©Ð¼Ð½Ó©)/i,
            /^(Ð½Ñ‚|Ð½Ð¸Ð¹Ñ‚Ð¸Ð¹Ð½ Ñ‚Ð¾Ð¾Ð»Ð»Ñ‹Ð½)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^(iv|iii|ii|i)/i,
          abbreviated: /^(iv|iii|ii|i) ÑƒÐ»Ð¸Ñ€Ð°Ð»/i,
          wide: /^[1-4]-Ñ€ ÑƒÐ»Ð¸Ñ€Ð°Ð»/i,
        };
        var parseQuarterPatterns = {
          any: [
            /^(i(\s|$)|1)/i,
            /^(ii(\s|$)|2)/i,
            /^(iii(\s|$)|3)/i,
            /^(iv(\s|$)|4)/i,
          ],
        };
        var matchMonthPatterns = {
          narrow: /^(xii|xi|x|ix|viii|vii|vi|v|iv|iii|ii|i)/i,
          abbreviated:
            /^(1-Ñ€ ÑÐ°Ñ€|2-Ñ€ ÑÐ°Ñ€|3-Ñ€ ÑÐ°Ñ€|4-Ñ€ ÑÐ°Ñ€|5-Ñ€ ÑÐ°Ñ€|6-Ñ€ ÑÐ°Ñ€|7-Ñ€ ÑÐ°Ñ€|8-Ñ€ ÑÐ°Ñ€|9-Ñ€ ÑÐ°Ñ€|10-Ñ€ ÑÐ°Ñ€|11-Ñ€ ÑÐ°Ñ€|12-Ñ€ ÑÐ°Ñ€)/i,
          wide: /^(Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€|Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€|Ð³ÑƒÑ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€|Ð´Ó©Ñ€Ó©Ð²Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€|Ñ‚Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€|Ð·ÑƒÑ€Ð³Ð°Ð°Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€|Ð´Ð¾Ð»Ð¾Ð¾Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€|Ð½Ð°Ð¹Ð¼Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€|ÐµÑÐ´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€|Ð°Ñ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€|Ð°Ñ€Ð²Ð°Ð½ Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€ ÑÐ°Ñ€|Ð°Ñ€Ð²Ð°Ð½ Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€ ÑÐ°Ñ€)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^i$/i,
            /^ii$/i,
            /^iii$/i,
            /^iv$/i,
            /^v$/i,
            /^vi$/i,
            /^vii$/i,
            /^viii$/i,
            /^ix$/i,
            /^x$/i,
            /^xi$/i,
            /^xii$/i,
          ],
          any: [
            /^(1|Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€)/i,
            /^(2|Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
            /^(3|Ð³ÑƒÑ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
            /^(4|Ð´Ó©Ñ€Ó©Ð²Ð´Ò¯Ð³ÑÑÑ€)/i,
            /^(5|Ñ‚Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
            /^(6|Ð·ÑƒÑ€Ð³Ð°Ð°Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
            /^(7|Ð´Ð¾Ð»Ð¾Ð¾Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
            /^(8|Ð½Ð°Ð¹Ð¼Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
            /^(9|ÐµÑÐ´Ò¯Ð³ÑÑÑ€)/i,
            /^(10|Ð°Ñ€Ð°Ð²Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
            /^(11|Ð°Ñ€Ð²Ð°Ð½ Ð½ÑÐ³Ð´Ò¯Ð³ÑÑÑ€)/i,
            /^(12|Ð°Ñ€Ð²Ð°Ð½ Ñ…Ð¾Ñ‘Ñ€Ð´ÑƒÐ³Ð°Ð°Ñ€)/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ð½Ð´Ð¼Ð»Ð¿Ð±Ð±]/i,
          short: /^(Ð½Ñ|Ð´Ð°|Ð¼Ñ|Ð»Ñ…|Ð¿Ò¯|Ð±Ð°|Ð±Ñ)/i,
          abbreviated: /^(Ð½ÑÐ¼|Ð´Ð°Ð²|Ð¼ÑÐ³|Ð»Ñ…Ð°|Ð¿Ò¯Ñ€|Ð±Ð°Ð°|Ð±ÑÐ¼)/i,
          wide: /^(Ð½ÑÐ¼|Ð´Ð°Ð²Ð°Ð°|Ð¼ÑÐ³Ð¼Ð°Ñ€|Ð»Ñ…Ð°Ð³Ð²Ð°|Ð¿Ò¯Ñ€ÑÐ²|Ð±Ð°Ð°ÑÐ°Ð½|Ð±ÑÐ¼Ð±Ð°)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð½/i, /^Ð´/i, /^Ð¼/i, /^Ð»/i, /^Ð¿/i, /^Ð±/i, /^Ð±/i],
          any: [
            /^Ð½Ñ/i,
            /^Ð´Ð°/i,
            /^Ð¼Ñ/i,
            /^Ð»Ñ…/i,
            /^Ð¿Ò¯/i,
            /^Ð±Ð°/i,
            /^Ð±Ñ/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(Ò¯\.Ó©\.|Ò¯\.Ñ…\.|ÑˆÓ©Ð½Ó© Ð´ÑƒÐ½Ð´|Ò¯Ð´ Ð´ÑƒÐ½Ð´|Ó©Ð³Ð»Ó©Ó©|Ó©Ð´Ó©Ñ€|Ð¾Ñ€Ð¾Ð¹|ÑˆÓ©Ð½Ó©)/i,
          any: /^(Ò¯\.Ó©\.|Ò¯\.Ñ…\.|ÑˆÓ©Ð½Ó© Ð´ÑƒÐ½Ð´|Ò¯Ð´ Ð´ÑƒÐ½Ð´|Ó©Ð³Ð»Ó©Ó©|Ó©Ð´Ó©Ñ€|Ð¾Ñ€Ð¾Ð¹|ÑˆÓ©Ð½Ó©)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ò¯\.Ó©\./i,
            pm: /^Ò¯\.Ñ…\./i,
            midnight: /^ÑˆÓ©Ð½Ó© Ð´ÑƒÐ½Ð´/i,
            noon: /^Ò¯Ð´ Ð´ÑƒÐ½Ð´/i,
            morning: /Ó©Ð³Ð»Ó©Ó©/i,
            afternoon: /Ó©Ð´Ó©Ñ€/i,
            evening: /Ð¾Ñ€Ð¾Ð¹/i,
            night: /ÑˆÓ©Ð½Ó©/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 342 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "kurang dari 1 saat",
            other: "kurang dari {{count}} saat",
          },
          xSeconds: {
            one: "1 saat",
            other: "{{count}} saat",
          },
          halfAMinute: "setengah minit",
          lessThanXMinutes: {
            one: "kurang dari 1 minit",
            other: "kurang dari {{count}} minit",
          },
          xMinutes: {
            one: "1 minit",
            other: "{{count}} minit",
          },
          aboutXHours: {
            one: "sekitar 1 jam",
            other: "sekitar {{count}} jam",
          },
          xHours: {
            one: "1 jam",
            other: "{{count}} jam",
          },
          xDays: {
            one: "1 hari",
            other: "{{count}} hari",
          },
          aboutXWeeks: {
            one: "sekitar 1 minggu",
            other: "sekitar {{count}} minggu",
          },
          xWeeks: {
            one: "1 minggu",
            other: "{{count}} minggu",
          },
          aboutXMonths: {
            one: "sekitar 1 bulan",
            other: "sekitar {{count}} bulan",
          },
          xMonths: {
            one: "1 bulan",
            other: "{{count}} bulan",
          },
          aboutXYears: {
            one: "sekitar 1 tahun",
            other: "sekitar {{count}} tahun",
          },
          xYears: {
            one: "1 tahun",
            other: "{{count}} tahun",
          },
          overXYears: {
            one: "lebih dari 1 tahun",
            other: "lebih dari {{count}} tahun",
          },
          almostXYears: {
            one: "hampir 1 tahun",
            other: "hampir {{count}} tahun",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "dalam masa " + result;
            } else {
              return result + " yang lalu";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 343 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "d/M/yyyy",
        };
        var timeFormats = {
          full: "HH.mm.ss",
          long: "HH.mm.ss",
          medium: "HH.mm",
          short: "HH.mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'pukul' {{time}}",
          long: "{{date}} 'pukul' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 344 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'lepas pada jam' p",
          yesterday: "'Semalam pada jam' p",
          today: "'Hari ini pada jam' p",
          tomorrow: "'Esok pada jam' p",
          nextWeek: "eeee 'pada jam' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 345 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Most data for localization are taken from this page
        // https://www.unicode.org/cldr/charts/32/summary/ms.html
        var eraValues = {
          narrow: ["SM", "M"],
          abbreviated: ["SM", "M"],
          wide: ["Sebelum Masihi", "Masihi"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["S1", "S2", "S3", "S4"],
          wide: ["Suku pertama", "Suku kedua", "Suku ketiga", "Suku keempat"], // Note: in Malay, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "O", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Feb",
            "Mac",
            "Apr",
            "Mei",
            "Jun",
            "Jul",
            "Ogo",
            "Sep",
            "Okt",
            "Nov",
            "Dis",
          ],
          wide: [
            "Januari",
            "Februari",
            "Mac",
            "April",
            "Mei",
            "Jun",
            "Julai",
            "Ogos",
            "September",
            "Oktober",
            "November",
            "Disember",
          ],
        };
        var dayValues = {
          narrow: ["A", "I", "S", "R", "K", "J", "S"],
          short: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
          abbreviated: ["Ahd", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
          wide: [
            "Ahad",
            "Isnin",
            "Selasa",
            "Rabu",
            "Khamis",
            "Jumaat",
            "Sabtu",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "tgh malam",
            noon: "tgh hari",
            morning: "pagi",
            afternoon: "tengah hari",
            evening: "petang",
            night: "malam",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "tengah hari",
            evening: "petang",
            night: "malam",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "tengah hari",
            evening: "petang",
            night: "malam",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "tengah hari",
            evening: "petang",
            night: "malam",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "tengah hari",
            evening: "petang",
            night: "malam",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "tengah malam",
            noon: "tengah hari",
            morning: "pagi",
            afternoon: "tengah hari",
            evening: "petang",
            night: "malam",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // Can't use "pertama", "kedua" because can't be parsed

          switch (number) {
            default:
              return "ke-" + number;
          }
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 346 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^ke-(\d+)?/i;
        var parseOrdinalNumberPattern = /petama|\d+/i;
        var matchEraPatterns = {
          narrow: /^(sm|m)/i,
          abbreviated: /^(s\.?\s?m\.?|m\.?)/i,
          wide: /^(sebelum masihi|masihi)/i,
        };
        var parseEraPatterns = {
          any: [/^s/i, /^(m)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^S[1234]/i,
          wide: /Suku (pertama|kedua|ketiga|keempat)/i,
        };
        var parseQuarterPatterns = {
          any: [/pertama|1/i, /kedua|2/i, /ketiga|3/i, /keempat|4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|feb|mac|apr|mei|jun|jul|ogo|sep|okt|nov|dis)/i,
          wide: /^(januari|februari|mac|april|mei|jun|julai|ogos|september|oktober|november|disember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^o/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^ma/i,
            /^ap/i,
            /^me/i,
            /^jun/i,
            /^jul/i,
            /^og/i,
            /^s/i,
            /^ok/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[aisrkj]/i,
          short: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
          abbreviated: /^(ahd|isn|sel|rab|kha|jum|sab)/i,
          wide: /^(ahad|isnin|selasa|rabu|khamis|jumaat|sabtu)/i,
        };
        var parseDayPatterns = {
          narrow: [/^a/i, /^i/i, /^s/i, /^r/i, /^k/i, /^j/i, /^s/i],
          any: [/^a/i, /^i/i, /^se/i, /^r/i, /^k/i, /^j/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(am|pm|tengah malam|tengah hari|pagi|petang|malam)/i,
          any: /^([ap]\.?\s?m\.?|tengah malam|tengah hari|pagi|petang|malam)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^pm/i,
            midnight: /^tengah m/i,
            noon: /^tengah h/i,
            morning: /pa/i,
            afternoon: /tengah h/i,
            evening: /pe/i,
            night: /m/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 347 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "inqas minn sekonda",
            other: "inqas minn {{count}} sekondi",
          },
          xSeconds: {
            one: "sekonda",
            other: "{{count}} sekondi",
          },
          halfAMinute: "nofs minuta",
          lessThanXMinutes: {
            one: "inqas minn minuta",
            other: "inqas minn {{count}} minuti",
          },
          xMinutes: {
            one: "minuta",
            other: "{{count}} minuti",
          },
          aboutXHours: {
            one: "madwar siegÄ§a",
            other: "madwar {{count}} siegÄ§at",
          },
          xHours: {
            one: "siegÄ§a",
            other: "{{count}} siegÄ§at",
          },
          xDays: {
            one: "Ä¡urnata",
            other: "{{count}} Ä¡ranet",
          },
          aboutXWeeks: {
            one: "madwar Ä¡imgÄ§a",
            other: "madwar {{count}} Ä¡imgÄ§at",
          },
          xWeeks: {
            one: "Ä¡imgÄ§a",
            other: "{{count}} Ä¡imgÄ§at",
          },
          aboutXMonths: {
            one: "madwar xahar",
            other: "madwar {{count}} xhur",
          },
          xMonths: {
            one: "xahar",
            other: "{{count}} xhur",
          },
          aboutXYears: {
            one: "madwar sena",
            two: "madwar sentejn",
            other: "madwar {{count}} snin",
          },
          xYears: {
            one: "sena",
            two: "sentejn",
            other: "{{count}} snin",
          },
          overXYears: {
            one: "aktar minn sena",
            two: "aktar minn sentejn",
            other: "aktar minn {{count}} snin",
          },
          almostXYears: {
            one: "kwaÅ¼i sena",
            two: "kwaÅ¼i sentejn",
            other: "kwaÅ¼i {{count}} snin",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var adverb = token.match(/years/i);
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else if (count === 2 && adverb) {
            result = formatDistanceLocale[token].two;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "f'" + result;
            } else {
              return result + " ilu";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 348 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 349 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'li gÄ§adda' 'fil-'p",
          yesterday: "'Il-bieraÄ§ fil-'p",
          today: "'Illum fil-'p",
          tomorrow: "'GÄ§ada fil-'p",
          nextWeek: "eeee 'fil-'p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 350 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Q", "W"],
          abbreviated: ["QK", "WK"],
          wide: ["qabel Kristu", "wara Kristu"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: ["1. kwart", "2. kwart", "3. kwart", "4. kwart"],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "Ä ", "L", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Fra",
            "Mar",
            "Apr",
            "Mej",
            "Ä un",
            "Lul",
            "Aww",
            "Set",
            "Ott",
            "Nov",
            "DiÄ‹",
          ],
          wide: [
            "Jannar",
            "Frar",
            "Marzu",
            "April",
            "Mejju",
            "Ä unju",
            "Lulju",
            "Awwissu",
            "Settembru",
            "Ottubru",
            "Novembru",
            "DiÄ‹embru",
          ],
        };
        var dayValues = {
          narrow: ["Ä¦", "T", "T", "E", "Ä¦", "Ä ", "S"],
          short: ["Ä¦a", "Tn", "Tl", "Er", "Ä¦a", "Ä i", "Si"],
          abbreviated: ["Ä¦ad", "Tne", "Tli", "Erb", "Ä¦am", "Ä im", "Sib"],
          wide: [
            "Il-Ä¦add",
            "It-Tnejn",
            "It-Tlieta",
            "L-ErbgÄ§a",
            "Il-Ä¦amis",
            "Il-Ä imgÄ§a",
            "Is-Sibt",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "nofsillejl",
            noon: "nofsinhar",
            morning: "gÄ§odwa",
            afternoon: "wara nofsinhar",
            evening: "filgÄ§axija",
            night: "lejl",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "nofsillejl",
            noon: "nofsinhar",
            morning: "gÄ§odwa",
            afternoon: "wara nofsinhar",
            evening: "filgÄ§axija",
            night: "lejl",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "nofsillejl",
            noon: "nofsinhar",
            morning: "gÄ§odwa",
            afternoon: "wara nofsinhar",
            evening: "filgÄ§axija",
            night: "lejl",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "f'nofsillejl",
            noon: "f'nofsinhar",
            morning: "filgÄ§odu",
            afternoon: "wara nofsinhar",
            evening: "filgÄ§axija",
            night: "billejl",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "f'nofsillejl",
            noon: "f'nofsinhar",
            morning: "filgÄ§odu",
            afternoon: "wara nofsinhar",
            evening: "filgÄ§axija",
            night: "billejl",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "f'nofsillejl",
            noon: "f'nofsinhar",
            morning: "filgÄ§odu",
            afternoon: "wara nofsinhar",
            evening: "filgÄ§axija",
            night: "billejl",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "Âº";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 351 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(Âº)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(q|w)/i,
          abbreviated: /^(q\.?\s?k\.?|b\.?\s?c\.?\s?e\.?|w\.?\s?k\.?)/i,
          wide: /^(qabel kristu|before common era|wara kristu|common era)/i,
        };
        var parseEraPatterns = {
          any: [/^(q|b)/i, /^(w|c)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^k[1234]/i,
          wide: /^[1234](\.)? kwart/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmaglsond]/i,
          abbreviated: /^(jan|fra|mar|apr|mej|Ä¡un|lul|aww|set|ott|nov|diÄ‹)/i,
          wide: /^(jannar|frar|marzu|april|mejju|Ä¡unju|lulju|awwissu|settembru|ottubru|novembru|diÄ‹embru)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^Ä¡/i,
            /^l/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^mej/i,
            /^Ä¡/i,
            /^l/i,
            /^aw/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ä§teÄ¡s]/i,
          short: /^(Ä§a|tn|tl|er|Ä§a|Ä¡i|si)/i,
          abbreviated: /^(Ä§ad|tne|tli|erb|Ä§am|Ä¡im|sib)/i,
          wide: /^(il-Ä§add|it-tnejn|it-tlieta|l-erbgÄ§a|il-Ä§amis|il-Ä¡imgÄ§a|is-sibt)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ä§/i, /^t/i, /^t/i, /^e/i, /^Ä§/i, /^Ä¡/i, /^s/i],
          any: [
            /^(il-)?Ä§ad/i,
            /^(it-)?tn/i,
            /^(it-)?tl/i,
            /^(l-)?er/i,
            /^(il-)?ham/i,
            /^(il-)?Ä¡i/i,
            /^(is-)?si/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(a|p|f'nofsillejl|f'nofsinhar|(ta') (gÄ§odwa|wara nofsinhar|filgÄ§axija|lejl))/i,
          any: /^([ap]\.?\s?m\.?|f'nofsillejl|f'nofsinhar|(ta') (gÄ§odwa|wara nofsinhar|filgÄ§axija|lejl))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^f'nofsillejl/i,
            noon: /^f'nofsinhar/i,
            morning: /gÄ§odwa/i,
            afternoon: /wara(\s.*)nofsinhar/i,
            evening: /filgÄ§axija/i,
            night: /lejl/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 352 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            singular: "mindre enn ett sekund",
            plural: "mindre enn {{count}} sekunder",
          },
          xSeconds: {
            singular: "ett sekund",
            plural: "{{count}} sekunder",
          },
          halfAMinute: "et halvt minutt",
          lessThanXMinutes: {
            singular: "mindre enn ett minutt",
            plural: "mindre enn {{count}} minutter",
          },
          xMinutes: {
            singular: "ett minutt",
            plural: "{{count}} minutter",
          },
          aboutXHours: {
            singular: "omtrent en time",
            plural: "omtrent {{count}} timer",
          },
          xHours: {
            singular: "en time",
            plural: "{{count}} timer",
          },
          xDays: {
            singular: "en dag",
            plural: "{{count}} dager",
          },
          aboutXWeeks: {
            singular: "omtrent en uke",
            plural: "omtrent {{count}} uker",
          },
          xWeeks: {
            singular: "en uke",
            plural: "{{count}} uker",
          },
          aboutXMonths: {
            singular: "omtrent en má¥ned",
            plural: "omtrent {{count}} má¥neder",
          },
          xMonths: {
            singular: "en má¥ned",
            plural: "{{count}} má¥neder",
          },
          aboutXYears: {
            singular: "omtrent ett á¥r",
            plural: "omtrent {{count}} á¥r",
          },
          xYears: {
            singular: "ett á¥r",
            plural: "{{count}} á¥r",
          },
          overXYears: {
            singular: "over ett á¥r",
            plural: "over {{count}} á¥r",
          },
          almostXYears: {
            singular: "nesten ett á¥r",
            plural: "nesten {{count}} á¥r",
          },
        };
        var wordMapping = [
          "null",
          "en",
          "to",
          "tre",
          "fire",
          "fem",
          "seks",
          "sju",
          "á¥tte",
          "ni",
          "ti",
          "elleve",
          "tolv",
        ];

        function formatDistance(token, count, options) {
          options = options || {
            onlyNumeric: false,
          };
          var translation = formatDistanceLocale[token];
          var result;

          if (typeof translation === "string") {
            result = translation;
          } else if (count === 0 || count > 1) {
            if (options.onlyNumeric) {
              result = translation.plural.replace("{{count}}", count);
            } else {
              result = translation.plural.replace(
                "{{count}}",
                count < 13 ? wordMapping[count] : count
              );
            }
          } else {
            result = translation.singular;
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "om " + result;
            } else {
              return result + " siden";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 353 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d. MMMM y",
          long: "d. MMMM y",
          medium: "d. MMM y",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "'kl'. HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'kl.' {{time}}",
          long: "{{date}} 'kl.' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 354 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'forrige' eeee 'kl.' p",
          yesterday: "'i gá¥r kl.' p",
          today: "'i dag kl.' p",
          tomorrow: "'i morgen kl.' p",
          nextWeek: "EEEE 'kl.' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 355 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["f.Kr.", "e.Kr."],
          abbreviated: ["f.Kr.", "e.Kr."],
          wide: ["fá¸r Kristus", "etter Kristus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jan.",
            "feb.",
            "mars",
            "apr.",
            "mai",
            "juni",
            "juli",
            "aug.",
            "sep.",
            "okt.",
            "nov.",
            "des.",
          ],
          wide: [
            "januar",
            "februar",
            "mars",
            "april",
            "mai",
            "juni",
            "juli",
            "august",
            "september",
            "oktober",
            "november",
            "desember",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "T", "O", "T", "F", "L"],
          short: ["sá¸", "ma", "ti", "on", "to", "fr", "lá¸"],
          abbreviated: ["sá¸n", "man", "tir", "ons", "tor", "fre", "lá¸r"],
          wide: [
            "sá¸ndag",
            "mandag",
            "tirsdag",
            "onsdag",
            "torsdag",
            "fredag",
            "lá¸rdag",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morg.",
            afternoon: "pá¥ etterm.",
            evening: "pá¥ kvelden",
            night: "pá¥ natten",
          },
          abbreviated: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morg.",
            afternoon: "pá¥ etterm.",
            evening: "pá¥ kvelden",
            night: "pá¥ natten",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morgenen",
            afternoon: "pá¥ ettermiddagen",
            evening: "pá¥ kvelden",
            night: "pá¥ natten",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 356 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\.?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
          abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
          wide: /^(fá¸r Kristus|fá¸r vá¥r tid|etter Kristus|vá¥r tid)/i,
        };
        var parseEraPatterns = {
          any: [/^f/i, /^e/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](\.)? kvartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
          wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^mai/i,
            /^jun/i,
            /^jul/i,
            /^aug/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtofl]/i,
          short: /^(sá¸|ma|ti|on|to|fr|lá¸)/i,
          abbreviated: /^(sá¸n|man|tir|ons|tor|fre|lá¸r)/i,
          wide: /^(sá¸ndag|mandag|tirsdag|onsdag|torsdag|fredag|lá¸rdag)/i,
        };
        var parseDayPatterns = {
          any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(midnatt|middag|(pá¥) (morgenen|ettermiddagen|kvelden|natten)|[ap])/i,
          any: /^([ap]\.?\s?m\.?|midnatt|middag|(pá¥) (morgenen|ettermiddagen|kvelden|natten))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a(\.?\s?m\.?)?$/i,
            pm: /^p(\.?\s?m\.?)?$/i,
            midnight: /^midn/i,
            noon: /^midd/i,
            morning: /morgen/i,
            afternoon: /ettermiddag/i,
            evening: /kveld/i,
            night: /natt/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 357 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "minder dan een seconde",
            other: "minder dan {{count}} seconden",
          },
          xSeconds: {
            one: "1 seconde",
            other: "{{count}} seconden",
          },
          halfAMinute: "een halve minuut",
          lessThanXMinutes: {
            one: "minder dan een minuut",
            other: "minder dan {{count}} minuten",
          },
          xMinutes: {
            one: "een minuut",
            other: "{{count}} minuten",
          },
          aboutXHours: {
            one: "ongeveer 1 uur",
            other: "ongeveer {{count}} uur",
          },
          xHours: {
            one: "1 uur",
            other: "{{count}} uur",
          },
          xDays: {
            one: "1 dag",
            other: "{{count}} dagen",
          },
          aboutXWeeks: {
            one: "ongeveer 1 week",
            other: "ongeveer {{count}} weken",
          },
          xWeeks: {
            one: "1 week",
            other: "{{count}} weken",
          },
          aboutXMonths: {
            one: "ongeveer 1 maand",
            other: "ongeveer {{count}} maanden",
          },
          xMonths: {
            one: "1 maand",
            other: "{{count}} maanden",
          },
          aboutXYears: {
            one: "ongeveer 1 jaar",
            other: "ongeveer {{count}} jaar",
          },
          xYears: {
            one: "1 jaar",
            other: "{{count}} jaar",
          },
          overXYears: {
            one: "meer dan 1 jaar",
            other: "meer dan {{count}} jaar",
          },
          almostXYears: {
            one: "bijna 1 jaar",
            other: "bijna {{count}} jaar",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "over " + result;
            } else {
              return result + " geleden";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 358 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "dd-MM-y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'om' {{time}}",
          long: "{{date}} 'om' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 359 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'vorige' eeee 'om' p",
          yesterday: "'gisteren om' p",
          today: "'vandaag om' p",
          tomorrow: "'morgen om' p",
          nextWeek: "eeee 'om' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 360 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["v.C.", "n.C."],
          abbreviated: ["v.Chr.", "n.Chr."],
          wide: ["voor Christus", "na Christus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jan.",
            "feb.",
            "mrt.",
            "apr.",
            "mei",
            "jun.",
            "jul.",
            "aug.",
            "sep.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "januari",
            "februari",
            "maart",
            "april",
            "mei",
            "juni",
            "juli",
            "augustus",
            "september",
            "oktober",
            "november",
            "december",
          ],
        };
        var dayValues = {
          narrow: ["Z", "M", "D", "W", "D", "V", "Z"],
          short: ["zo", "ma", "di", "wo", "do", "vr", "za"],
          abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"],
          wide: [
            "zondag",
            "maandag",
            "dinsdag",
            "woensdag",
            "donderdag",
            "vrijdag",
            "zaterdag",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "middernacht",
            noon: "het middag",
            morning: "'s ochtends",
            afternoon: "'s namiddags",
            evening: "'s avonds",
            night: "'s nachts",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "middernacht",
            noon: "het middag",
            morning: "'s ochtends",
            afternoon: "'s namiddags",
            evening: "'s avonds",
            night: "'s nachts",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "middernacht",
            noon: "het middag",
            morning: "'s ochtends",
            afternoon: "'s namiddags",
            evening: "'s avonds",
            night: "'s nachts",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "e";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 361 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)e?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^([vn]\.? ?C\.?)/,
          abbreviated: /^([vn]\. ?Chr\.?)/,
          wide: /^((voor|na) Christus)/,
        };
        var parseEraPatterns = {
          any: [/^v/, /^n/],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^K[1234]/i,
          wide: /^[1234]e kwartaal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
          wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^jan/i,
            /^feb/i,
            /^m(r|a)/i,
            /^apr/i,
            /^mei/i,
            /^jun/i,
            /^jul/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[zmdwv]/i,
          short: /^(zo|ma|di|wo|do|vr|za)/i,
          abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
          wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,
        };
        var parseDayPatterns = {
          narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],
          any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^am/i,
            pm: /^pm/i,
            midnight: /^middernacht/i,
            noon: /^het middaguur/i,
            morning: /ochtend/i,
            afternoon: /middag/i,
            evening: /avond/i,
            night: /nacht/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 362 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "minder dan een seconde",
            other: "minder dan {{count}} seconden",
          },
          xSeconds: {
            one: "1 seconde",
            other: "{{count}} seconden",
          },
          halfAMinute: "een halve minuut",
          lessThanXMinutes: {
            one: "minder dan een minuut",
            other: "minder dan {{count}} minuten",
          },
          xMinutes: {
            one: "een minuut",
            other: "{{count}} minuten",
          },
          aboutXHours: {
            one: "ongeveer 1 uur",
            other: "ongeveer {{count}} uur",
          },
          xHours: {
            one: "1 uur",
            other: "{{count}} uur",
          },
          xDays: {
            one: "1 dag",
            other: "{{count}} dagen",
          },
          aboutXWeeks: {
            one: "ongeveer 1 week",
            other: "ongeveer {{count}} weken",
          },
          xWeeks: {
            one: "1 week",
            other: "{{count}} weken",
          },
          aboutXMonths: {
            one: "ongeveer 1 maand",
            other: "ongeveer {{count}} maanden",
          },
          xMonths: {
            one: "1 maand",
            other: "{{count}} maanden",
          },
          aboutXYears: {
            one: "ongeveer 1 jaar",
            other: "ongeveer {{count}} jaar",
          },
          xYears: {
            one: "1 jaar",
            other: "{{count}} jaar",
          },
          overXYears: {
            one: "meer dan 1 jaar",
            other: "meer dan {{count}} jaar",
          },
          almostXYears: {
            one: "bijna 1 jaar",
            other: "bijna {{count}} jaar",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "over " + result;
            } else {
              return result + " geleden";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 363 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "dd-MM-y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'om' {{time}}",
          long: "{{date}} 'om' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 364 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'afgelopen' eeee 'om' p",
          yesterday: "'gisteren om' p",
          today: "'vandaag om' p",
          tomorrow: "'morgen om' p",
          nextWeek: "eeee 'om' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 365 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["v.C.", "n.C."],
          abbreviated: ["v.Chr.", "n.Chr."],
          wide: ["voor Christus", "na Christus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["K1", "K2", "K3", "K4"],
          wide: ["1e kwartaal", "2e kwartaal", "3e kwartaal", "4e kwartaal"],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jan.",
            "feb.",
            "mrt.",
            "apr.",
            "mei",
            "jun.",
            "jul.",
            "aug.",
            "sep.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "januari",
            "februari",
            "maart",
            "april",
            "mei",
            "juni",
            "juli",
            "augustus",
            "september",
            "oktober",
            "november",
            "december",
          ],
        };
        var dayValues = {
          narrow: ["Z", "M", "D", "W", "D", "V", "Z"],
          short: ["zo", "ma", "di", "wo", "do", "vr", "za"],
          abbreviated: ["zon", "maa", "din", "woe", "don", "vri", "zat"],
          wide: [
            "zondag",
            "maandag",
            "dinsdag",
            "woensdag",
            "donderdag",
            "vrijdag",
            "zaterdag",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "middernacht",
            noon: "het middaguur",
            morning: "'s ochtends",
            afternoon: "'s middags",
            evening: "'s avonds",
            night: "'s nachts",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "middernacht",
            noon: "het middaguur",
            morning: "'s ochtends",
            afternoon: "'s middags",
            evening: "'s avonds",
            night: "'s nachts",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "middernacht",
            noon: "het middaguur",
            morning: "'s ochtends",
            afternoon: "'s middags",
            evening: "'s avonds",
            night: "'s nachts",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "e";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 366 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)e?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^([vn]\.? ?C\.?)/,
          abbreviated: /^([vn]\. ?Chr\.?)/,
          wide: /^((voor|na) Christus)/,
        };
        var parseEraPatterns = {
          any: [/^v/, /^n/],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^K[1234]/i,
          wide: /^[1234]e kwartaal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan.|feb.|mrt.|apr.|mei|jun.|jul.|aug.|sep.|okt.|nov.|dec.)/i,
          wide: /^(januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^jan/i,
            /^feb/i,
            /^m(r|a)/i,
            /^apr/i,
            /^mei/i,
            /^jun/i,
            /^jul/i,
            /^aug/i,
            /^sep/i,
            /^okt/i,
            /^nov/i,
            /^dec/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[zmdwv]/i,
          short: /^(zo|ma|di|wo|do|vr|za)/i,
          abbreviated: /^(zon|maa|din|woe|don|vri|zat)/i,
          wide: /^(zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag)/i,
        };
        var parseDayPatterns = {
          narrow: [/^z/i, /^m/i, /^d/i, /^w/i, /^d/i, /^v/i, /^z/i],
          any: [/^zo/i, /^ma/i, /^di/i, /^wo/i, /^do/i, /^vr/i, /^za/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(am|pm|middernacht|het middaguur|'s (ochtends|middags|avonds|nachts))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^am/i,
            pm: /^pm/i,
            midnight: /^middernacht/i,
            noon: /^het middaguur/i,
            morning: /ochtend/i,
            afternoon: /middag/i,
            evening: /avond/i,
            night: /nacht/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 367 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            singular: "mindre enn eitt sekund",
            plural: "mindre enn {{count}} sekund",
          },
          xSeconds: {
            singular: "eitt sekund",
            plural: "{{count}} sekund",
          },
          halfAMinute: "eit halvt minutt",
          lessThanXMinutes: {
            singular: "mindre enn eitt minutt",
            plural: "mindre enn {{count}} minutt",
          },
          xMinutes: {
            singular: "eitt minutt",
            plural: "{{count}} minutt",
          },
          aboutXHours: {
            singular: "omtrent ein time",
            plural: "omtrent {{count}} timar",
          },
          xHours: {
            singular: "ein time",
            plural: "{{count}} timar",
          },
          xDays: {
            singular: "ein dag",
            plural: "{{count}} dagar",
          },
          aboutXWeeks: {
            singular: "omtrent ei veke",
            plural: "omtrent {{count}} veker",
          },
          xWeeks: {
            singular: "ei veke",
            plural: "{{count}} veker",
          },
          aboutXMonths: {
            singular: "omtrent ein má¥nad",
            plural: "omtrent {{count}} má¥nader",
          },
          xMonths: {
            singular: "ein má¥nad",
            plural: "{{count}} má¥nader",
          },
          aboutXYears: {
            singular: "omtrent eitt á¥r",
            plural: "omtrent {{count}} á¥r",
          },
          xYears: {
            singular: "eitt á¥r",
            plural: "{{count}} á¥r",
          },
          overXYears: {
            singular: "over eitt á¥r",
            plural: "over {{count}} á¥r",
          },
          almostXYears: {
            singular: "nesten eitt á¥r",
            plural: "nesten {{count}} á¥r",
          },
        };
        var wordMapping = [
          "null",
          "ein",
          "to",
          "tre",
          "fire",
          "fem",
          "seks",
          "sju",
          "á¥tte",
          "ni",
          "ti",
          "elleve",
          "tolv",
        ];

        function formatDistance(token, count, options) {
          options = options || {
            onlyNumeric: false,
          };
          var translation = formatDistanceLocale[token];
          var result;

          if (typeof translation === "string") {
            result = translation;
          } else if (count === 0 || count > 1) {
            if (options.onlyNumeric) {
              result = translation.plural.replace("{{count}}", count);
            } else {
              result = translation.plural.replace(
                "{{count}}",
                count < 13 ? wordMapping[count] : count
              );
            }
          } else {
            result = translation.singular;
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "om " + result;
            } else {
              return result + " sidan";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 368 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d. MMMM y",
          long: "d. MMMM y",
          medium: "d. MMM y",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "'kl'. HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'kl.' {{time}}",
          long: "{{date}} 'kl.' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 369 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'fá¸rre' eeee 'kl.' p",
          yesterday: "'i gá¥r kl.' p",
          today: "'i dag kl.' p",
          tomorrow: "'i morgon kl.' p",
          nextWeek: "EEEE 'kl.' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 370 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["f.Kr.", "e.Kr."],
          abbreviated: ["f.Kr.", "e.Kr."],
          wide: ["fá¸r Kristus", "etter Kristus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jan.",
            "feb.",
            "mars",
            "apr.",
            "mai",
            "juni",
            "juli",
            "aug.",
            "sep.",
            "okt.",
            "nov.",
            "des.",
          ],
          wide: [
            "januar",
            "februar",
            "mars",
            "april",
            "mai",
            "juni",
            "juli",
            "august",
            "september",
            "oktober",
            "november",
            "desember",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "T", "O", "T", "F", "L"],
          short: ["su", "má¥", "ty", "on", "to", "fr", "lau"],
          abbreviated: ["sun", "má¥n", "tys", "ons", "tor", "fre", "laur"],
          wide: [
            "sundag",
            "má¥ndag",
            "tysdag",
            "onsdag",
            "torsdag",
            "fredag",
            "laurdag",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morg.",
            afternoon: "pá¥ etterm.",
            evening: "pá¥ kvelden",
            night: "pá¥ natta",
          },
          abbreviated: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morg.",
            afternoon: "pá¥ etterm.",
            evening: "pá¥ kvelden",
            night: "pá¥ natta",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morgonen",
            afternoon: "pá¥ ettermiddagen",
            evening: "pá¥ kvelden",
            night: "pá¥ natta",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 371 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\.?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
          abbreviated: /^(f\.? ?Kr\.?|fvt\.?|e\.? ?Kr\.?|evt\.?)/i,
          wide: /^(fá¸r Kristus|fá¸r vá¥r tid|etter Kristus|vá¥r tid)/i,
        };
        var parseEraPatterns = {
          any: [/^f/i, /^e/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](\.)? kvartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan|feb|mars?|apr|mai|juni?|juli?|aug|sep|okt|nov|des)\.?/i,
          wide: /^(januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^mai/i,
            /^jun/i,
            /^jul/i,
            /^aug/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtofl]/i,
          short: /^(su|má¥|ty|on|to|fr|la)/i,
          abbreviated: /^(sun|má¥n|tys|ons|tor|fre|laur)/i,
          wide: /^(sundag|má¥ndag|tysdag|onsdag|torsdag|fredag|laurdag)/i,
        };
        var parseDayPatterns = {
          any: [/^s/i, /^m/i, /^ty/i, /^o/i, /^to/i, /^f/i, /^l/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(midnatt|middag|(pá¥) (morgonen|ettermiddagen|kvelden|natta)|[ap])/i,
          any: /^([ap]\.?\s?m\.?|midnatt|middag|(pá¥) (morgonen|ettermiddagen|kvelden|natta))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a(\.?\s?m\.?)?$/i,
            pm: /^p(\.?\s?m\.?)?$/i,
            midnight: /^midn/i,
            noon: /^midd/i,
            morning: /morgon/i,
            afternoon: /ettermiddag/i,
            evening: /kveld/i,
            night: /natt/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 372 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        function declensionGroup(scheme, count) {
          if (count === 1) {
            return scheme.one;
          }

          var rem100 = count % 100; // ends with 11-20

          if (rem100 <= 20 && rem100 > 10) {
            return scheme.other;
          }

          var rem10 = rem100 % 10; // ends with 2, 3, 4

          if (rem10 >= 2 && rem10 <= 4) {
            return scheme.twoFour;
          }

          return scheme.other;
        }

        function declension(scheme, count, time) {
          time = time || "regular";
          var group = declensionGroup(scheme, count);
          var finalText = group[time] || group;
          return finalText.replace("{{count}}", count);
        }

        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: {
              regular: "mniej niÅ¼ sekunda",
              past: "mniej niÅ¼ sekundÄ™",
              future: "mniej niÅ¼ sekundÄ™",
            },
            twoFour: "mniej niÅ¼ {{count}} sekundy",
            other: "mniej niÅ¼ {{count}} sekund",
          },
          xSeconds: {
            one: {
              regular: "sekunda",
              past: "sekundÄ™",
              future: "sekundÄ™",
            },
            twoFour: "{{count}} sekundy",
            other: "{{count}} sekund",
          },
          halfAMinute: {
            one: "pá³Å‚ minuty",
            twoFour: "pá³Å‚ minuty",
            other: "pá³Å‚ minuty",
          },
          lessThanXMinutes: {
            one: {
              regular: "mniej niÅ¼ minuta",
              past: "mniej niÅ¼ minutÄ™",
              future: "mniej niÅ¼ minutÄ™",
            },
            twoFour: "mniej niÅ¼ {{count}} minuty",
            other: "mniej niÅ¼ {{count}} minut",
          },
          xMinutes: {
            one: {
              regular: "minuta",
              past: "minutÄ™",
              future: "minutÄ™",
            },
            twoFour: "{{count}} minuty",
            other: "{{count}} minut",
          },
          aboutXHours: {
            one: {
              regular: "okoÅ‚o godziny",
              past: "okoÅ‚o godziny",
              future: "okoÅ‚o godzinÄ™",
            },
            twoFour: "okoÅ‚o {{count}} godziny",
            other: "okoÅ‚o {{count}} godzin",
          },
          xHours: {
            one: {
              regular: "godzina",
              past: "godzinÄ™",
              future: "godzinÄ™",
            },
            twoFour: "{{count}} godziny",
            other: "{{count}} godzin",
          },
          xDays: {
            one: {
              regular: "dzieÅ„",
              past: "dzieÅ„",
              future: "1 dzieÅ„",
            },
            twoFour: "{{count}} dni",
            other: "{{count}} dni",
          },
          aboutXWeeks: {
            one: "okoÅ‚o tygodnia",
            twoFour: "okoÅ‚o {{count}} tygodni",
            other: "okoÅ‚o {{count}} tygodni",
          },
          xWeeks: {
            one: "tydzieÅ„",
            twoFour: "{{count}} tygodnie",
            other: "{{count}} tygodni",
          },
          aboutXMonths: {
            one: "okoÅ‚o miesiÄ…c",
            twoFour: "okoÅ‚o {{count}} miesiÄ…ce",
            other: "okoÅ‚o {{count}} miesiÄ™cy",
          },
          xMonths: {
            one: "miesiÄ…c",
            twoFour: "{{count}} miesiÄ…ce",
            other: "{{count}} miesiÄ™cy",
          },
          aboutXYears: {
            one: "okoÅ‚o rok",
            twoFour: "okoÅ‚o {{count}} lata",
            other: "okoÅ‚o {{count}} lat",
          },
          xYears: {
            one: "rok",
            twoFour: "{{count}} lata",
            other: "{{count}} lat",
          },
          overXYears: {
            one: "ponad rok",
            twoFour: "ponad {{count}} lata",
            other: "ponad {{count}} lat",
          },
          almostXYears: {
            one: "prawie rok",
            twoFour: "prawie {{count}} lata",
            other: "prawie {{count}} lat",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var scheme = formatDistanceLocale[token];

          if (!options.addSuffix) {
            return declension(scheme, count);
          }

          if (options.comparison > 0) {
            return "za " + declension(scheme, count, "future");
          } else {
            return declension(scheme, count, "past") + " temu";
          }
        }

        module.exports = exports.default;

        /***/
      },
      /* 373 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM y",
          long: "do MMMM y",
          medium: "do MMM y",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 374 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var adjectivesLastWeek = {
          masculine: "ostatni",
          feminine: "ostatnia",
        };
        var adjectivesThisWeek = {
          masculine: "ten",
          feminine: "ta",
        };
        var adjectivesNextWeek = {
          masculine: "nastÄ™pny",
          feminine: "nastÄ™pna",
        };
        var dayGrammaticalGender = {
          0: "feminine",
          1: "masculine",
          2: "masculine",
          3: "feminine",
          4: "masculine",
          5: "masculine",
          6: "feminine",
        };

        function getAdjectives(token, date, baseDate, options) {
          if ((0, _index.default)(date, baseDate, options)) {
            return adjectivesThisWeek;
          } else if (token === "lastWeek") {
            return adjectivesLastWeek;
          } else if (token === "nextWeek") {
            return adjectivesNextWeek;
          } else {
            throw new Error(
              "Cannot determine adjectives for token ".concat(token)
            );
          }
        }

        function getAdjective(token, date, baseDate, options) {
          var day = date.getUTCDay();
          var adjectives = getAdjectives(token, date, baseDate, options);
          var grammaticalGender = dayGrammaticalGender[day];
          return adjectives[grammaticalGender];
        }

        function dayAndTimeWithAdjective(token, date, baseDate, options) {
          var adjective = getAdjective(token, date, baseDate, options);
          return "'".concat(adjective, "' eeee 'o' p");
        }

        var formatRelativeLocale = {
          lastWeek: dayAndTimeWithAdjective,
          yesterday: "'wczoraj o' p",
          today: "'dzisiaj o' p",
          tomorrow: "'jutro o' p",
          nextWeek: dayAndTimeWithAdjective,
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(token, date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 375 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return String(number);
        }

        var eraValues = {
          narrow: ["p.n.e.", "n.e."],
          abbreviated: ["p.n.e.", "n.e."],
          wide: ["przed naszÄ… erÄ…", "naszej ery"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["I kw.", "II kw.", "III kw.", "IV kw."],
          wide: ["I kwartaÅ‚", "II kwartaÅ‚", "III kwartaÅ‚", "IV kwartaÅ‚"],
        };
        var monthValues = {
          narrow: ["S", "L", "M", "K", "M", "C", "L", "S", "W", "P", "L", "G"],
          abbreviated: [
            "sty",
            "lut",
            "mar",
            "kwi",
            "maj",
            "cze",
            "lip",
            "sie",
            "wrz",
            "paÅº",
            "lis",
            "gru",
          ],
          wide: [
            "styczeÅ„",
            "luty",
            "marzec",
            "kwiecieÅ„",
            "maj",
            "czerwiec",
            "lipiec",
            "sierpieÅ„",
            "wrzesieÅ„",
            "paÅºdziernik",
            "listopad",
            "grudzieÅ„",
          ],
        };
        var monthFormattingValues = {
          narrow: ["s", "l", "m", "k", "m", "c", "l", "s", "w", "p", "l", "g"],
          abbreviated: [
            "sty",
            "lut",
            "mar",
            "kwi",
            "maj",
            "cze",
            "lip",
            "sie",
            "wrz",
            "paÅº",
            "lis",
            "gru",
          ],
          wide: [
            "stycznia",
            "lutego",
            "marca",
            "kwietnia",
            "maja",
            "czerwca",
            "lipca",
            "sierpnia",
            "wrzeÅ›nia",
            "paÅºdziernika",
            "listopada",
            "grudnia",
          ],
        };
        var dayValues = {
          narrow: ["N", "P", "W", "Åš", "C", "P", "S"],
          short: ["nie", "pon", "wto", "Å›ro", "czw", "piÄ…", "sob"],
          abbreviated: ["niedz.", "pon.", "wt.", "Å›r.", "czw.", "pt.", "sob."],
          wide: [
            "niedziela",
            "poniedziaÅ‚ek",
            "wtorek",
            "Å›roda",
            "czwartek",
            "piÄ…tek",
            "sobota",
          ],
        };
        var dayFormattingValues = {
          narrow: ["n", "p", "w", "Å›", "c", "p", "s"],
          short: ["nie", "pon", "wto", "Å›ro", "czw", "piÄ…", "sob"],
          abbreviated: ["niedz.", "pon.", "wt.", "Å›r.", "czw.", "pt.", "sob."],
          wide: [
            "niedziela",
            "poniedziaÅ‚ek",
            "wtorek",
            "Å›roda",
            "czwartek",
            "piÄ…tek",
            "sobota",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "pá³Å‚n.",
            noon: "poÅ‚",
            morning: "rano",
            afternoon: "popoÅ‚.",
            evening: "wiecz.",
            night: "noc",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "pá³Å‚noc",
            noon: "poÅ‚udnie",
            morning: "rano",
            afternoon: "popoÅ‚udnie",
            evening: "wieczá³r",
            night: "noc",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "pá³Å‚noc",
            noon: "poÅ‚udnie",
            morning: "rano",
            afternoon: "popoÅ‚udnie",
            evening: "wieczá³r",
            night: "noc",
          },
        };
        var dayPeriodFormattingValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "o pá³Å‚n.",
            noon: "w poÅ‚.",
            morning: "rano",
            afternoon: "po poÅ‚.",
            evening: "wiecz.",
            night: "w nocy",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "o pá³Å‚nocy",
            noon: "w poÅ‚udnie",
            morning: "rano",
            afternoon: "po poÅ‚udniu",
            evening: "wieczorem",
            night: "w nocy",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "o pá³Å‚nocy",
            noon: "w poÅ‚udnie",
            morning: "rano",
            afternoon: "po poÅ‚udniu",
            evening: "wieczorem",
            night: "w nocy",
          },
        };
        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: monthFormattingValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
            formattingValues: dayFormattingValues,
            defaultFormattingWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: dayPeriodFormattingValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 376 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
          abbreviated: /^(p\.?\s*n\.?\s*e\.?\s*|n\.?\s*e\.?\s*)/i,
          wide: /^(przed\s*nasz(Ä…|a)\s*er(Ä…|a)|naszej\s*ery)/i,
        };
        var parseEraPatterns = {
          any: [/^p/i, /^n/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^(I|II|III|IV)\s*kw\.?/i,
          wide: /^(I|II|III|IV)\s*kwarta(Å‚|l)/i,
        };
        var parseQuarterPatterns = {
          narrow: [/1/i, /2/i, /3/i, /4/i],
          any: [/^I kw/i, /^II kw/i, /^III kw/i, /^IV kw/i],
        };
        var matchMonthPatterns = {
          narrow: /^[slmkcwpg]/i,
          abbreviated:
            /^(sty|lut|mar|kwi|maj|cze|lip|sie|wrz|pa(Åº|z)|lis|gru)/i,
          wide: /^(stycznia|stycze(Å„|n)|lutego|luty|marca|marzec|kwietnia|kwiecie(Å„|n)|maja|maj|czerwca|czerwiec|lipca|lipiec|sierpnia|sierpie(Å„|n)|wrze(Å›|s)nia|wrzesie(Å„|n)|pa(Åº|z)dziernika|pa(Åº|z)dziernik|listopada|listopad|grudnia|grudzie(Å„|n))/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^s/i,
            /^l/i,
            /^m/i,
            /^k/i,
            /^m/i,
            /^c/i,
            /^l/i,
            /^s/i,
            /^w/i,
            /^p/i,
            /^l/i,
            /^g/i,
          ],
          any: [
            /^st/i,
            /^lu/i,
            /^mar/i,
            /^k/i,
            /^maj/i,
            /^c/i,
            /^lip/i,
            /^si/i,
            /^w/i,
            /^p/i,
            /^lis/i,
            /^g/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[npwÅ›cs]/i,
          short: /^(nie|pon|wto|(Å›|s)ro|czw|pi(Ä…|a)|sob)/i,
          abbreviated: /^(niedz|pon|wt|(Å›|s)r|czw|pt|sob)\.?/i,
          wide: /^(niedziela|poniedzia(Å‚|l)ek|wtorek|(Å›|s)roda|czwartek|pi(Ä…|a)tek|sobota)/i,
        };
        var parseDayPatterns = {
          narrow: [/^n/i, /^p/i, /^w/i, /^Å›/i, /^c/i, /^p/i, /^s/i],
          abbreviated: [
            /^n/i,
            /^po/i,
            /^w/i,
            /^(Å›|s)r/i,
            /^c/i,
            /^pt/i,
            /^so/i,
          ],
          any: [/^n/i, /^po/i, /^w/i, /^(Å›|s)r/i, /^c/i, /^pi/i, /^so/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(^a$|^p$|pá³(Å‚|l)n\.?|o\s*pá³(Å‚|l)n\.?|po(Å‚|l)\.?|w\s*po(Å‚|l)\.?|po\s*po(Å‚|l)\.?|rano|wiecz\.?|noc|w\s*nocy)/i,
          any: /^(am|pm|pá³(Å‚|l)noc|o\s*pá³(Å‚|l)nocy|po(Å‚|l)udnie|w\s*po(Å‚|l)udnie|popo(Å‚|l)udnie|po\s*po(Å‚|l)udniu|rano|wieczá³r|wieczorem|noc|w\s*nocy)/i,
        };
        var parseDayPeriodPatterns = {
          narrow: {
            am: /^a$/i,
            pm: /^p$/i,
            midnight: /pá³(Å‚|l)n/i,
            noon: /po(Å‚|l)/i,
            morning: /rano/i,
            afternoon: /po\s*po(Å‚|l)/i,
            evening: /wiecz/i,
            night: /noc/i,
          },
          any: {
            am: /^am/i,
            pm: /^pm/i,
            midnight: /pá³(Å‚|l)n/i,
            noon: /po(Å‚|l)/i,
            morning: /rano/i,
            afternoon: /po\s*po(Å‚|l)/i,
            evening: /wiecz/i,
            night: /noc/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 377 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "menos de um segundo",
            other: "menos de {{count}} segundos",
          },
          xSeconds: {
            one: "1 segundo",
            other: "{{count}} segundos",
          },
          halfAMinute: "meio minuto",
          lessThanXMinutes: {
            one: "menos de um minuto",
            other: "menos de {{count}} minutos",
          },
          xMinutes: {
            one: "1 minuto",
            other: "{{count}} minutos",
          },
          aboutXHours: {
            one: "cerca de 1 hora",
            other: "cerca de {{count}} horas",
          },
          xHours: {
            one: "1 hora",
            other: "{{count}} horas",
          },
          xDays: {
            one: "1 dia",
            other: "{{count}} dias",
          },
          aboutXWeeks: {
            one: "cerca de 1 semana",
            other: "cerca de {{count}} semanas",
          },
          xWeeks: {
            one: "1 semana",
            other: "{{count}} semanas",
          },
          aboutXMonths: {
            one: "cerca de 1 máªs",
            other: "cerca de {{count}} meses",
          },
          xMonths: {
            one: "1 máªs",
            other: "{{count}} meses",
          },
          aboutXYears: {
            one: "cerca de 1 ano",
            other: "cerca de {{count}} anos",
          },
          xYears: {
            one: "1 ano",
            other: "{{count}} anos",
          },
          overXYears: {
            one: "mais de 1 ano",
            other: "mais de {{count}} anos",
          },
          almostXYears: {
            one: "quase 1 ano",
            other: "quase {{count}} anos",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "em " + result;
            } else {
              return "há¡ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 378 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d 'de' MMMM 'de' y",
          long: "d 'de' MMMM 'de' y",
          medium: "d MMM y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'á s' {{time}}",
          long: "{{date}} 'á s' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 379 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: function (date, _baseDate, _options) {
            var weekday = date.getUTCDay();
            var last = weekday === 0 || weekday === 6 ? "último" : "última";
            return "'" + last + "' eeee 'á s' p";
          },
          yesterday: "'ontem á s' p",
          today: "'hoje á s' p",
          tomorrow: "'amanhã á s' p",
          nextWeek: "eeee 'á s' p",
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 380 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["AC", "DC"],
          abbreviated: ["AC", "DC"],
          wide: ["antes de cristo", "depois de cristo"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["T1", "T2", "T3", "T4"],
          wide: [
            "1º trimestre",
            "2º trimestre",
            "3º trimestre",
            "4º trimestre",
          ],
        };
        var monthValues = {
          narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
          abbreviated: [
            "jan",
            "fev",
            "mar",
            "abr",
            "mai",
            "jun",
            "jul",
            "ago",
            "set",
            "out",
            "nov",
            "dez",
          ],
          wide: [
            "janeiro",
            "fevereiro",
            "mará§o",
            "abril",
            "maio",
            "junho",
            "julho",
            "agosto",
            "setembro",
            "outubro",
            "novembro",
            "dezembro",
          ],
        };
        var dayValues = {
          narrow: ["D", "S", "T", "Q", "Q", "S", "S"],
          short: ["dom", "seg", "ter", "qua", "qui", "sex", "sab"],
          abbreviated: ["dom", "seg", "ter", "qua", "qui", "sex", "sáb"],
          wide: [
            "domingo",
            "segunda-feira",
            "terça-feira",
            "quarta-feira",
            "quinta-feira",
            "sexta-feira",
            "sábado",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "md",
            morning: "manhã",
            afternoon: "tarde",
            evening: "tarde",
            night: "noite",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "manhã",
            afternoon: "tarde",
            evening: "tarde",
            night: "noite",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "manhã",
            afternoon: "tarde",
            evening: "tarde",
            night: "noite",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "md",
            morning: "da manhã",
            afternoon: "da tarde",
            evening: "da tarde",
            night: "da noite",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "da manhã",
            afternoon: "da tarde",
            evening: "da tarde",
            night: "da noite",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "da manhã",
            afternoon: "da tarde",
            evening: "da tarde",
            night: "da noite",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber);
          var options = dirtyOptions || {};
          var unit = String(options.unit);

          if (unit === "week" || unit === "isoWeek") {
            return number + "ª";
          }

          return number + "º";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 381 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)[ÂºÂªo]?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(ac|dc|a|d)/i,
          abbreviated: /^(a\.?\s?c\.?|d\.?\s?c\.?)/i,
          wide: /^(antes de cristo|depois de cristo)/i,
        };
        var parseEraPatterns = {
          any: [/^ac/i, /^dc/i],
          wide: [/^antes de cristo/i, /^depois de cristo/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^T[1234]/i,
          wide: /^[1234](Âº)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmajsond]/i,
          abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
          wide: /^(janeiro|fevereiro|mará§o|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^fev/i,
            /^mar/i,
            /^abr/i,
            /^mai/i,
            /^jun/i,
            /^jul/i,
            /^ago/i,
            /^set/i,
            /^out/i,
            /^nov/i,
            /^dez/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(dom|[23456]Âª?|s[aá¡]b)/i,
          short: /^(dom|[23456]Âª?|s[aá¡]b)/i,
          abbreviated: /^(dom|seg|ter|qua|qui|sex|s[aá¡]b)/i,
          wide: /^(domingo|(segunda|ter[cá§]a|quarta|quinta|sexta)([- ]feira)?|s[aá¡]bado)/i,
        };
        var parseDayPatterns = {
          short: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá¡]/i],
          narrow: [/^d/i, /^2/i, /^3/i, /^4/i, /^5/i, /^6/i, /^s[aá¡]/i],
          any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[aá¡]b/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mn|md|(da) (manhã|tarde|noite))/i,
          any: /^([ap]\.?\s?m\.?|meia[-\s]noite|meio[-\s]dia|(da) (manhã|tarde|noite))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mn|^meia[-\s]noite/i,
            noon: /^md|^meio[-\s]dia/i,
            morning: /manhã/i,
            afternoon: /tarde/i,
            evening: /tarde/i,
            night: /noite/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 382 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "menos de um segundo",
            other: "menos de {{count}} segundos",
          },
          xSeconds: {
            one: "1 segundo",
            other: "{{count}} segundos",
          },
          halfAMinute: "meio minuto",
          lessThanXMinutes: {
            one: "menos de um minuto",
            other: "menos de {{count}} minutos",
          },
          xMinutes: {
            one: "1 minuto",
            other: "{{count}} minutos",
          },
          aboutXHours: {
            one: "aproximadamente 1 hora",
            other: "aproximadamente {{count}} horas",
          },
          xHours: {
            one: "1 hora",
            other: "{{count}} horas",
          },
          xDays: {
            one: "1 dia",
            other: "{{count}} dias",
          },
          aboutXWeeks: {
            one: "aproximadamente 1 semana",
            other: "aproximadamente {{count}} semanas",
          },
          xWeeks: {
            one: "1 semana",
            other: "{{count}} semanas",
          },
          aboutXMonths: {
            one: "aproximadamente 1 máªs",
            other: "aproximadamente {{count}} meses",
          },
          xMonths: {
            one: "1 máªs",
            other: "{{count}} meses",
          },
          aboutXYears: {
            one: "aproximadamente 1 ano",
            other: "aproximadamente {{count}} anos",
          },
          xYears: {
            one: "1 ano",
            other: "{{count}} anos",
          },
          overXYears: {
            one: "mais de 1 ano",
            other: "mais de {{count}} anos",
          },
          almostXYears: {
            one: "quase 1 ano",
            other: "quase {{count}} anos",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "daqui a " + result;
            } else {
              return "há¡ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 383 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d 'de' MMMM 'de' y",
          long: "d 'de' MMMM 'de' y",
          medium: "d 'de' MMM 'de' y",
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'á s' {{time}}",
          long: "{{date}} 'á s' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 384 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'na áºltima' eeee 'á s' p",
          yesterday: "'ontem á s' p",
          today: "'hoje á s' p",
          tomorrow: "'amanhã á s' p",
          nextWeek: "eeee 'á s' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 385 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number + "Âº";
        }

        var eraValues = {
          narrow: ["aC", "dC"],
          abbreviated: ["a.C.", "d.C."],
          wide: ["antes de Cristo", "depois de Cristo"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["T1", "T2", "T3", "T4"],
          wide: [
            "1Âº trimestre",
            "2Âº trimestre",
            "3Âº trimestre",
            "4Âº trimestre",
          ],
        };
        var monthValues = {
          narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
          abbreviated: [
            "jan",
            "fev",
            "mar",
            "abr",
            "mai",
            "jun",
            "jul",
            "ago",
            "set",
            "out",
            "nov",
            "dez",
          ],
          wide: [
            "janeiro",
            "fevereiro",
            "mará§o",
            "abril",
            "maio",
            "junho",
            "julho",
            "agosto",
            "setembro",
            "outubro",
            "novembro",
            "dezembro",
          ],
        };
        var dayValues = {
          narrow: ["d", "s", "t", "q", "q", "s", "s"],
          short: ["dom", "seg", "ter", "qua", "qui", "sex", "sá¡b"],
          abbreviated: ["dom", "seg", "ter", "qua", "qui", "sex", "sá¡b"],
          wide: [
            "domingo",
            "segunda-feira",
            "terá§a-feira",
            "quarta-feira",
            "quinta-feira",
            "sexta-feira",
            "sá¡bado",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "manhã",
            afternoon: "tarde",
            evening: "noite",
            night: "madrugada",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "manhã",
            afternoon: "tarde",
            evening: "noite",
            night: "madrugada",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "manhã",
            afternoon: "tarde",
            evening: "noite",
            night: "madrugada",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "da manhã",
            afternoon: "da tarde",
            evening: "da noite",
            night: "da madrugada",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "da manhã",
            afternoon: "da tarde",
            evening: "da noite",
            night: "da madrugada",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "meia-noite",
            noon: "meio-dia",
            morning: "da manhã",
            afternoon: "da tarde",
            evening: "da noite",
            night: "da madrugada",
          },
        };
        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 386 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(Âº|Âª)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(ac|dc|a|d)/i,
          abbreviated:
            /^(a\.?\s?c\.?|a\.?\s?e\.?\s?c\.?|d\.?\s?c\.?|e\.?\s?c\.?)/i,
          wide: /^(antes de cristo|antes da era comum|depois de cristo|era comum)/i,
        };
        var parseEraPatterns = {
          any: [/^ac/i, /^dc/i],
          wide: [
            /^(antes de cristo|antes da era comum)/i,
            /^(depois de cristo|era comum)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^T[1234]/i,
          wide: /^[1234](Âº|Âª)? trimestre/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|fev|mar|abr|mai|jun|jul|ago|set|out|nov|dez)/i,
          wide: /^(janeiro|fevereiro|mará§o|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ab/i,
            /^mai/i,
            /^jun/i,
            /^jul/i,
            /^ag/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dstq]/i,
          short: /^(dom|seg|ter|qua|qui|sex|s[á¡a]b)/i,
          abbreviated: /^(dom|seg|ter|qua|qui|sex|s[á¡a]b)/i,
          wide: /^(domingo|segunda-?\s?feira|terá§a-?\s?feira|quarta-?\s?feira|quinta-?\s?feira|sexta-?\s?feira|s[á¡a]bado)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^s/i, /^t/i, /^q/i, /^q/i, /^s/i, /^s/i],
          any: [/^d/i, /^seg/i, /^t/i, /^qua/i, /^qui/i, /^sex/i, /^s[á¡a]/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(a|p|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,
          any: /^([ap]\.?\s?m\.?|meia-?\s?noite|meio-?\s?dia|(da) (manh[ãa]|tarde|noite|madrugada))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^meia/i,
            noon: /^meio/i,
            morning: /manh[ãa]/i,
            afternoon: /tarde/i,
            evening: /noite/i,
            night: /madrugada/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 387 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "mai puÈ›in de o secundÄƒ",
            other: "mai puÈ›in de {{count}} secunde",
          },
          xSeconds: {
            one: "1 secundÄƒ",
            other: "{{count}} secunde",
          },
          halfAMinute: "jumÄƒtate de minut",
          lessThanXMinutes: {
            one: "mai puÈ›in de un minut",
            other: "mai puÈ›in de {{count}} minute",
          },
          xMinutes: {
            one: "1 minut",
            other: "{{count}} minute",
          },
          aboutXHours: {
            one: "circa 1 orÄƒ",
            other: "circa {{count}} ore",
          },
          xHours: {
            one: "1 orÄƒ",
            other: "{{count}} ore",
          },
          xDays: {
            one: "1 zi",
            other: "{{count}} zile",
          },
          aboutXWeeks: {
            one: "circa o sÄƒptÄƒmá¢nÄƒ",
            other: "circa {{count}} sÄƒptÄƒmá¢ni",
          },
          xWeeks: {
            one: "1 sÄƒptÄƒmá¢nÄƒ",
            other: "{{count}} sÄƒptÄƒmá¢ni",
          },
          aboutXMonths: {
            one: "circa 1 lunÄƒ",
            other: "circa {{count}} luni",
          },
          xMonths: {
            one: "1 lunÄƒ",
            other: "{{count}} luni",
          },
          aboutXYears: {
            one: "circa 1 an",
            other: "circa {{count}} ani",
          },
          xYears: {
            one: "1 an",
            other: "{{count}} ani",
          },
          overXYears: {
            one: "peste 1 an",
            other: "peste {{count}} ani",
          },
          almostXYears: {
            one: "aproape 1 an",
            other: "aproape {{count}} ani",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "á®n " + result;
            } else {
              return result + " á®n urmÄƒ";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 388 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d MMMM yyyy",
          long: "d MMMM yyyy",
          medium: "d MMM yyyy",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'la' {{time}}",
          long: "{{date}} 'la' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 389 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'trecutÄƒ la' p",
          yesterday: "'ieri la' p",
          today: "'astÄƒzi la' p",
          tomorrow: "'má¢ine la' p",
          nextWeek: "eeee 'viitoare la' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 390 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["áŽ", "D"],
          abbreviated: ["áŽ.d.C.", "D.C."],
          wide: ["áŽnainte de Cristos", "DupÄƒ Cristos"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["T1", "T2", "T3", "T4"],
          wide: [
            "primul trimestru",
            "al doilea trimestru",
            "al treilea trimestru",
            "al patrulea trimestru",
          ],
        };
        var monthValues = {
          narrow: ["I", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"],
          abbreviated: [
            "ian",
            "feb",
            "mar",
            "apr",
            "mai",
            "iun",
            "iul",
            "aug",
            "sep",
            "oct",
            "noi",
            "dec",
          ],
          wide: [
            "ianuarie",
            "februarie",
            "martie",
            "aprilie",
            "mai",
            "iunie",
            "iulie",
            "august",
            "septembrie",
            "octombrie",
            "noiembrie",
            "decembrie",
          ],
        };
        var dayValues = {
          narrow: ["d", "l", "m", "m", "j", "v", "s"],
          short: ["du", "lu", "ma", "mi", "jo", "vi", "sá¢"],
          abbreviated: ["dum", "lun", "mar", "mie", "joi", "vin", "sá¢m"],
          wide: [
            "duminicÄƒ",
            "luni",
            "marÈ›i",
            "miercuri",
            "joi",
            "vineri",
            "sá¢mbÄƒtÄƒ",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "ami",
            morning: "dim",
            afternoon: "da",
            evening: "s",
            night: "n",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "miezul nopÈ›ii",
            noon: "amiazÄƒ",
            morning: "dimineaÈ›Äƒ",
            afternoon: "dupÄƒ-amiazÄƒ",
            evening: "searÄƒ",
            night: "noapte",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "miezul nopÈ›ii",
            noon: "amiazÄƒ",
            morning: "dimineaÈ›Äƒ",
            afternoon: "dupÄƒ-amiazÄƒ",
            evening: "searÄƒ",
            night: "noapte",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mn",
            noon: "amiazÄƒ",
            morning: "dimineaÈ›Äƒ",
            afternoon: "dupÄƒ-amiazÄƒ",
            evening: "searÄƒ",
            night: "noapte",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "miezul nopÈ›ii",
            noon: "amiazÄƒ",
            morning: "dimineaÈ›Äƒ",
            afternoon: "dupÄƒ-amiazÄƒ",
            evening: "searÄƒ",
            night: "noapte",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "miezul nopÈ›ii",
            noon: "amiazÄƒ",
            morning: "dimineaÈ›Äƒ",
            afternoon: "dupÄƒ-amiazÄƒ",
            evening: "searÄƒ",
            night: "noapte",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return String(number);
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 391 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(áŽ|D)/i,
          abbreviated:
            /^(áŽ\.?\s?d\.?\s?C\.?|áŽ\.?\s?e\.?\s?n\.?|D\.?\s?C\.?|e\.?\s?n\.?)/i,
          wide: /^(áŽnainte de Cristos|áŽnaintea erei noastre|DupÄƒ Cristos|Era noastrÄƒ)/i,
        };
        var parseEraPatterns = {
          any: [/^áŽC/i, /^DC/i],
          wide: [
            /^(áŽnainte de Cristos|áŽnaintea erei noastre)/i,
            /^(DupÄƒ Cristos|Era noastrÄƒ)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^T[1234]/i,
          wide: /^trimestrul [1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[ifmaasond]/i,
          abbreviated: /^(ian|feb|mar|apr|mai|iun|iul|aug|sep|oct|noi|dec)/i,
          wide: /^(ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^i/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^i/i,
            /^i/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ia/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^mai/i,
            /^iun/i,
            /^iul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dlmjvs]/i,
          short: /^(d|l|ma|mi|j|v|s)/i,
          abbreviated: /^(dum|lun|mar|mie|jo|vi|sá¢)/i,
          wide: /^(duminica|luni|marÅ£i|miercuri|joi|vineri|sá¢mbÄƒtÄƒ)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],
          any: [/^d/i, /^l/i, /^ma/i, /^mi/i, /^j/i, /^v/i, /^s/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mn|a|(dimineaÅ£a|dupÄƒ-amiaza|seara|noaptea))/i,
          any: /^([ap]\.?\s?m\.?|miezul nopÈ›ii|amiaza|(dimineaÅ£a|dupÄƒ-amiaza|seara|noaptea))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mn/i,
            noon: /amiaza/i,
            morning: /dimineaÅ£a/i,
            afternoon: /dupÄƒ-amiaza/i,
            evening: /seara/i,
            night: /noaptea/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 392 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        function declension(scheme, count) {
          // scheme for count=1 exists
          if (scheme.one !== undefined && count === 1) {
            return scheme.one;
          }

          var rem10 = count % 10;
          var rem100 = count % 100; // 1, 21, 31, ...

          if (rem10 === 1 && rem100 !== 11) {
            return scheme.singularNominative.replace("{{count}}", count); // 2, 3, 4, 22, 23, 24, 32 ...
          } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
            return scheme.singularGenitive.replace("{{count}}", count); // 5, 6, 7, 8, 9, 10, 11, ...
          } else {
            return scheme.pluralGenitive.replace("{{count}}", count);
          }
        }

        function buildLocalizeTokenFn(scheme) {
          return function (count, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                if (scheme.future) {
                  return declension(scheme.future, count);
                } else {
                  return "Ñ‡ÐµÑ€ÐµÐ· " + declension(scheme.regular, count);
                }
              } else {
                if (scheme.past) {
                  return declension(scheme.past, count);
                } else {
                  return declension(scheme.regular, count) + " Ð½Ð°Ð·Ð°Ð´";
                }
              }
            } else {
              return declension(scheme.regular, count);
            }
          };
        }

        var formatDistanceLocale = {
          lessThanXSeconds: buildLocalizeTokenFn({
            regular: {
              one: "Ð¼ÐµÐ½ÑŒÑˆÐµ ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              singularNominative: "Ð¼ÐµÐ½ÑŒÑˆÐµ {{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              singularGenitive: "Ð¼ÐµÐ½ÑŒÑˆÐµ {{count}} ÑÐµÐºÑƒÐ½Ð´",
              pluralGenitive: "Ð¼ÐµÐ½ÑŒÑˆÐµ {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
            future: {
              one: "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularNominative:
                "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularGenitive:
                "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              pluralGenitive:
                "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
          }),
          xSeconds: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð°",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
            past: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ Ð½Ð°Ð·Ð°Ð´",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹ Ð½Ð°Ð·Ð°Ð´",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´ Ð½Ð°Ð·Ð°Ð´",
            },
            future: {
              singularNominative: "Ñ‡ÐµÑ€ÐµÐ· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularGenitive: "Ñ‡ÐµÑ€ÐµÐ· {{count}} ÑÐµÐºÑƒÐ½Ð´Ñ‹",
              pluralGenitive: "Ñ‡ÐµÑ€ÐµÐ· {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
          }),
          halfAMinute: function (_, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                return "Ñ‡ÐµÑ€ÐµÐ· Ð¿Ð¾Ð»Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹";
              } else {
                return "Ð¿Ð¾Ð»Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹ Ð½Ð°Ð·Ð°Ð´";
              }
            }

            return "Ð¿Ð¾Ð»Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹";
          },
          lessThanXMinutes: buildLocalizeTokenFn({
            regular: {
              one: "Ð¼ÐµÐ½ÑŒÑˆÐµ Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹",
              singularNominative: "Ð¼ÐµÐ½ÑŒÑˆÐµ {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹",
              singularGenitive: "Ð¼ÐµÐ½ÑŒÑˆÐµ {{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
              pluralGenitive: "Ð¼ÐµÐ½ÑŒÑˆÐµ {{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
            },
            future: {
              one: "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ",
              singularNominative:
                "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ",
              singularGenitive:
                "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹",
              pluralGenitive:
                "Ð¼ÐµÐ½ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
            },
          }),
          xMinutes: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
              singularGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹",
              pluralGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
            },
            past: {
              singularNominative: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ Ð½Ð°Ð·Ð°Ð´",
              singularGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹ Ð½Ð°Ð·Ð°Ð´",
              pluralGenitive: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚ Ð½Ð°Ð·Ð°Ð´",
            },
            future: {
              singularNominative: "Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ",
              singularGenitive: "Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ñ‹",
              pluralGenitive: "Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼Ð¸Ð½ÑƒÑ‚",
            },
          }),
          aboutXHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ñ‡Ð°ÑÐ°",
              singularGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ñ‡Ð°ÑÐ¾Ð²",
              pluralGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ñ‡Ð°ÑÐ¾Ð²",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ñ‡Ð°Ñ",
              singularGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ñ‡Ð°ÑÐ°",
              pluralGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ñ‡Ð°ÑÐ¾Ð²",
            },
          }),
          xHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ñ‡Ð°Ñ",
              singularGenitive: "{{count}} Ñ‡Ð°ÑÐ°",
              pluralGenitive: "{{count}} Ñ‡Ð°ÑÐ¾Ð²",
            },
          }),
          xDays: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð´ÐµÐ½ÑŒ",
              singularGenitive: "{{count}} Ð´Ð½Ñ",
              pluralGenitive: "{{count}} Ð´Ð½ÐµÐ¹",
            },
          }),
          aboutXWeeks: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð½ÐµÐ´ÐµÐ»Ð¸",
              singularGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð½ÐµÐ´ÐµÐ»ÑŒ",
              pluralGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð½ÐµÐ´ÐµÐ»ÑŒ",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð½ÐµÐ´ÐµÐ»ÑŽ",
              singularGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð½ÐµÐ´ÐµÐ»Ð¸",
              pluralGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð½ÐµÐ´ÐµÐ»ÑŒ",
            },
          }),
          xWeeks: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð½ÐµÐ´ÐµÐ»Ñ",
              singularGenitive: "{{count}} Ð½ÐµÐ´ÐµÐ»Ð¸",
              pluralGenitive: "{{count}} Ð½ÐµÐ´ÐµÐ»ÑŒ",
            },
          }),
          aboutXMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð¼ÐµÑÑÑ†Ð°",
              singularGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð¼ÐµÑÑÑ†ÐµÐ²",
              pluralGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð¼ÐµÑÑÑ†ÐµÐ²",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼ÐµÑÑÑ†",
              singularGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼ÐµÑÑÑ†Ð°",
              pluralGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð¼ÐµÑÑÑ†ÐµÐ²",
            },
          }),
          xMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¼ÐµÑÑÑ†",
              singularGenitive: "{{count}} Ð¼ÐµÑÑÑ†Ð°",
              pluralGenitive: "{{count}} Ð¼ÐµÑÑÑ†ÐµÐ²",
            },
          }),
          aboutXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð³Ð¾Ð´Ð°",
              singularGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð»ÐµÑ‚",
              pluralGenitive: "Ð¾ÐºÐ¾Ð»Ð¾ {{count}} Ð»ÐµÑ‚",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð³Ð¾Ð´",
              singularGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð³Ð¾Ð´Ð°",
              pluralGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð¸Ñ‚ÐµÐ»ÑŒÐ½Ð¾ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð»ÐµÑ‚",
            },
          }),
          xYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð³Ð¾Ð´",
              singularGenitive: "{{count}} Ð³Ð¾Ð´Ð°",
              pluralGenitive: "{{count}} Ð»ÐµÑ‚",
            },
          }),
          overXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð±Ð¾Ð»ÑŒÑˆÐµ {{count}} Ð³Ð¾Ð´Ð°",
              singularGenitive: "Ð±Ð¾Ð»ÑŒÑˆÐµ {{count}} Ð»ÐµÑ‚",
              pluralGenitive: "Ð±Ð¾Ð»ÑŒÑˆÐµ {{count}} Ð»ÐµÑ‚",
            },
            future: {
              singularNominative:
                "Ð±Ð¾Ð»ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð³Ð¾Ð´",
              singularGenitive:
                "Ð±Ð¾Ð»ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð³Ð¾Ð´Ð°",
              pluralGenitive:
                "Ð±Ð¾Ð»ÑŒÑˆÐµ, Ñ‡ÐµÐ¼ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð»ÐµÑ‚",
            },
          }),
          almostXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ {{count}} Ð³Ð¾Ð´",
              singularGenitive: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ {{count}} Ð³Ð¾Ð´Ð°",
              pluralGenitive: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ {{count}} Ð»ÐµÑ‚",
            },
            future: {
              singularNominative: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð³Ð¾Ð´",
              singularGenitive: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð³Ð¾Ð´Ð°",
              pluralGenitive: "Ð¿Ð¾Ñ‡Ñ‚Ð¸ Ñ‡ÐµÑ€ÐµÐ· {{count}} Ð»ÐµÑ‚",
            },
          }),
        };

        function formatDistance(token, count, options) {
          options = options || {};
          return formatDistanceLocale[token](count, options);
        }

        module.exports = exports.default;

        /***/
      },
      /* 393 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM y 'Ð³.'",
          long: "do MMMM y 'Ð³.'",
          medium: "d MMM y 'Ð³.'",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          any: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "any",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 394 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var accusativeWeekdays = [
          "Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ",
          "Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº",
          "Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº",
          "ÑÑ€ÐµÐ´Ñƒ",
          "Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³",
          "Ð¿ÑÑ‚Ð½Ð¸Ñ†Ñƒ",
          "ÑÑƒÐ±Ð±Ð¾Ñ‚Ñƒ",
        ];

        function lastWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
              return "'Ð² Ð¿Ñ€Ð¾ÑˆÐ»Ð¾Ðµ " + weekday + " Ð²' p";

            case 1:
            case 2:
            case 4:
              return "'Ð² Ð¿Ñ€Ð¾ÑˆÐ»Ñ‹Ð¹ " + weekday + " Ð²' p";

            case 3:
            case 5:
            case 6:
              return "'Ð² Ð¿Ñ€Ð¾ÑˆÐ»ÑƒÑŽ " + weekday + " Ð²' p";
          }
        }

        function thisWeek(day) {
          var weekday = accusativeWeekdays[day];

          if (
            day === 2
            /* Tue */
          ) {
            return "'Ð²Ð¾ " + weekday + " Ð²' p";
          } else {
            return "'Ð² " + weekday + " Ð²' p";
          }
        }

        function nextWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
              return "'Ð² ÑÐ»ÐµÐ´ÑƒÑŽÑ‰ÐµÐµ " + weekday + " Ð²' p";

            case 1:
            case 2:
            case 4:
              return "'Ð² ÑÐ»ÐµÐ´ÑƒÑŽÑ‰Ð¸Ð¹ " + weekday + " Ð²' p";

            case 3:
            case 5:
            case 6:
              return "'Ð² ÑÐ»ÐµÐ´ÑƒÑŽÑ‰ÑƒÑŽ " + weekday + " Ð²' p";
          }
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'Ð²Ñ‡ÐµÑ€Ð° Ð²' p",
          today: "'ÑÐµÐ³Ð¾Ð´Ð½Ñ Ð²' p",
          tomorrow: "'Ð·Ð°Ð²Ñ‚Ñ€Ð° Ð²' p",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 395 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ð´Ð¾ Ð½.Ñ.", "Ð½.Ñ."],
          abbreviated: ["Ð´Ð¾ Ð½. Ñ.", "Ð½. Ñ."],
          wide: ["Ð´Ð¾ Ð½Ð°ÑˆÐµÐ¹ ÑÑ€Ñ‹", "Ð½Ð°ÑˆÐµÐ¹ ÑÑ€Ñ‹"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1-Ð¹ ÐºÐ².", "2-Ð¹ ÐºÐ².", "3-Ð¹ ÐºÐ².", "4-Ð¹ ÐºÐ²."],
          wide: [
            "1-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "2-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "3-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "4-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
          ],
        };
        var monthValues = {
          narrow: [
            "Ð¯",
            "Ð¤",
            "Ðœ",
            "Ð",
            "Ðœ",
            "Ð˜",
            "Ð˜",
            "Ð",
            "Ð¡",
            "Ðž",
            "Ð",
            "Ð”",
          ],
          abbreviated: [
            "ÑÐ½Ð².",
            "Ñ„ÐµÐ².",
            "Ð¼Ð°Ñ€Ñ‚",
            "Ð°Ð¿Ñ€.",
            "Ð¼Ð°Ð¹",
            "Ð¸ÑŽÐ½ÑŒ",
            "Ð¸ÑŽÐ»ÑŒ",
            "Ð°Ð²Ð³.",
            "ÑÐµÐ½Ñ‚.",
            "Ð¾ÐºÑ‚.",
            "Ð½Ð¾ÑÐ±.",
            "Ð´ÐµÐº.",
          ],
          wide: [
            "ÑÐ½Ð²Ð°Ñ€ÑŒ",
            "Ñ„ÐµÐ²Ñ€Ð°Ð»ÑŒ",
            "Ð¼Ð°Ñ€Ñ‚",
            "Ð°Ð¿Ñ€ÐµÐ»ÑŒ",
            "Ð¼Ð°Ð¹",
            "Ð¸ÑŽÐ½ÑŒ",
            "Ð¸ÑŽÐ»ÑŒ",
            "Ð°Ð²Ð³ÑƒÑÑ‚",
            "ÑÐµÐ½Ñ‚ÑÐ±Ñ€ÑŒ",
            "Ð¾ÐºÑ‚ÑÐ±Ñ€ÑŒ",
            "Ð½Ð¾ÑÐ±Ñ€ÑŒ",
            "Ð´ÐµÐºÐ°Ð±Ñ€ÑŒ",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "Ð¯",
            "Ð¤",
            "Ðœ",
            "Ð",
            "Ðœ",
            "Ð˜",
            "Ð˜",
            "Ð",
            "Ð¡",
            "Ðž",
            "Ð",
            "Ð”",
          ],
          abbreviated: [
            "ÑÐ½Ð².",
            "Ñ„ÐµÐ².",
            "Ð¼Ð°Ñ€.",
            "Ð°Ð¿Ñ€.",
            "Ð¼Ð°Ñ",
            "Ð¸ÑŽÐ½.",
            "Ð¸ÑŽÐ».",
            "Ð°Ð²Ð³.",
            "ÑÐµÐ½Ñ‚.",
            "Ð¾ÐºÑ‚.",
            "Ð½Ð¾ÑÐ±.",
            "Ð´ÐµÐº.",
          ],
          wide: [
            "ÑÐ½Ð²Ð°Ñ€Ñ",
            "Ñ„ÐµÐ²Ñ€Ð°Ð»Ñ",
            "Ð¼Ð°Ñ€Ñ‚Ð°",
            "Ð°Ð¿Ñ€ÐµÐ»Ñ",
            "Ð¼Ð°Ñ",
            "Ð¸ÑŽÐ½Ñ",
            "Ð¸ÑŽÐ»Ñ",
            "Ð°Ð²Ð³ÑƒÑÑ‚Ð°",
            "ÑÐµÐ½Ñ‚ÑÐ±Ñ€Ñ",
            "Ð¾ÐºÑ‚ÑÐ±Ñ€Ñ",
            "Ð½Ð¾ÑÐ±Ñ€Ñ",
            "Ð´ÐµÐºÐ°Ð±Ñ€Ñ",
          ],
        };
        var dayValues = {
          narrow: ["Ð’", "ÐŸ", "Ð’", "Ð¡", "Ð§", "ÐŸ", "Ð¡"],
          short: ["Ð²Ñ", "Ð¿Ð½", "Ð²Ñ‚", "ÑÑ€", "Ñ‡Ñ‚", "Ð¿Ñ‚", "ÑÐ±"],
          abbreviated: [
            "Ð²ÑÐº",
            "Ð¿Ð½Ð´",
            "Ð²Ñ‚Ñ€",
            "ÑÑ€Ð´",
            "Ñ‡Ñ‚Ð²",
            "Ð¿Ñ‚Ð½",
            "ÑÑƒÐ±",
          ],
          wide: [
            "Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒÐµ",
            "Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸Ðº",
            "Ð²Ñ‚Ð¾Ñ€Ð½Ð¸Ðº",
            "ÑÑ€ÐµÐ´Ð°",
            "Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³",
            "Ð¿ÑÑ‚Ð½Ð¸Ñ†Ð°",
            "ÑÑƒÐ±Ð±Ð¾Ñ‚Ð°",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾Ð»Ð½.",
            noon: "Ð¿Ð¾Ð»Ð´.",
            morning: "ÑƒÑ‚Ñ€Ð¾",
            afternoon: "Ð´ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡ÑŒ",
          },
          abbreviated: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾Ð»Ð½.",
            noon: "Ð¿Ð¾Ð»Ð´.",
            morning: "ÑƒÑ‚Ñ€Ð¾",
            afternoon: "Ð´ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡ÑŒ",
          },
          wide: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾Ð»Ð½Ð¾Ñ‡ÑŒ",
            noon: "Ð¿Ð¾Ð»Ð´ÐµÐ½ÑŒ",
            morning: "ÑƒÑ‚Ñ€Ð¾",
            afternoon: "Ð´ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡ÐµÑ€",
            night: "Ð½Ð¾Ñ‡ÑŒ",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾Ð»Ð½.",
            noon: "Ð¿Ð¾Ð»Ð´.",
            morning: "ÑƒÑ‚Ñ€Ð°",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡Ð¸",
          },
          abbreviated: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾Ð»Ð½.",
            noon: "Ð¿Ð¾Ð»Ð´.",
            morning: "ÑƒÑ‚Ñ€Ð°",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡Ð¸",
          },
          wide: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ð¾Ð»Ð½Ð¾Ñ‡ÑŒ",
            noon: "Ð¿Ð¾Ð»Ð´ÐµÐ½ÑŒ",
            morning: "ÑƒÑ‚Ñ€Ð°",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡ÐµÑ€Ð°",
            night: "Ð½Ð¾Ñ‡Ð¸",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var suffix;

          if (unit === "date") {
            suffix = "-Ðµ";
          } else if (
            unit === "week" ||
            unit === "minute" ||
            unit === "second"
          ) {
            suffix = "-Ñ";
          } else {
            suffix = "-Ð¹";
          }

          return dirtyNumber + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "any",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 396 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern =
          /^(\d+)(-?(Ðµ|Ñ|Ð¹|Ð¾Ðµ|ÑŒÐµ|Ð°Ñ|ÑŒÑ|Ñ‹Ð¹|Ð¾Ð¹|Ð¸Ð¹|Ñ‹Ð¹))?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^((Ð´Ð¾ )?Ð½\.?\s?Ñ\.?)/i,
          abbreviated: /^((Ð´Ð¾ )?Ð½\.?\s?Ñ\.?)/i,
          wide: /^(Ð´Ð¾ Ð½Ð°ÑˆÐµÐ¹ ÑÑ€Ñ‹|Ð½Ð°ÑˆÐµÐ¹ ÑÑ€Ñ‹|Ð½Ð°ÑˆÐ° ÑÑ€Ð°)/i,
        };
        var parseEraPatterns = {
          any: [/^Ð´/i, /^Ð½/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234](-?[Ñ‹Ð¾Ð¸]?Ð¹?)? ÐºÐ².?/i,
          wide: /^[1234](-?[Ñ‹Ð¾Ð¸]?Ð¹?)? ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[ÑÑ„Ð¼Ð°Ð¸ÑÐ¾Ð½Ð´]/i,
          abbreviated:
            /^(ÑÐ½Ð²|Ñ„ÐµÐ²|Ð¼Ð°Ñ€Ñ‚?|Ð°Ð¿Ñ€|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑŽÐ½[ÑŒÑ]?|Ð¸ÑŽÐ»[ÑŒÑ]?|Ð°Ð²Ð³|ÑÐµÐ½Ñ‚?|Ð¾ÐºÑ‚|Ð½Ð¾ÑÐ±?|Ð´ÐµÐº)\.?/i,
          wide: /^(ÑÐ½Ð²Ð°Ñ€[ÑŒÑ]|Ñ„ÐµÐ²Ñ€Ð°Ð»[ÑŒÑ]|Ð¼Ð°Ñ€Ñ‚Ð°?|Ð°Ð¿Ñ€ÐµÐ»[ÑŒÑ]|Ð¼Ð°[Ð¹Ñ]|Ð¸ÑŽÐ½[ÑŒÑ]|Ð¸ÑŽÐ»[ÑŒÑ]|Ð°Ð²Ð³ÑƒÑÑ‚Ð°?|ÑÐµÐ½Ñ‚ÑÐ±Ñ€[ÑŒÑ]|Ð¾ÐºÑ‚ÑÐ±Ñ€[ÑŒÑ]|Ð¾ÐºÑ‚ÑÐ±Ñ€[ÑŒÑ]|Ð½Ð¾ÑÐ±Ñ€[ÑŒÑ]|Ð´ÐµÐºÐ°Ð±Ñ€[ÑŒÑ])/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^Ñ/i,
            /^Ñ„/i,
            /^Ð¼/i,
            /^Ð°/i,
            /^Ð¼/i,
            /^Ð¸/i,
            /^Ð¸/i,
            /^Ð°/i,
            /^Ñ/i,
            /^Ð¾/i,
            /^Ð½/i,
            /^Ñ/i,
          ],
          any: [
            /^Ñ/i,
            /^Ñ„/i,
            /^Ð¼Ð°Ñ€/i,
            /^Ð°Ð¿/i,
            /^Ð¼Ð°[Ð¹Ñ]/i,
            /^Ð¸ÑŽÐ½/i,
            /^Ð¸ÑŽÐ»/i,
            /^Ð°Ð²/i,
            /^Ñ/i,
            /^Ð¾/i,
            /^Ð½/i,
            /^Ð´/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ð²Ð¿ÑÑ‡]/i,
          short:
            /^(Ð²Ñ|Ð²Ð¾|Ð¿Ð½|Ð¿Ð¾|Ð²Ñ‚|ÑÑ€|Ñ‡Ñ‚|Ñ‡Ðµ|Ð¿Ñ‚|Ð¿Ñ|ÑÐ±|ÑÑƒ)\.?/i,
          abbreviated:
            /^(Ð²ÑÐº|Ð²Ð¾Ñ|Ð¿Ð½Ð´|Ð¿Ð¾Ð½|Ð²Ñ‚Ñ€|Ð²Ñ‚Ð¾|ÑÑ€Ð´|ÑÑ€Ðµ|Ñ‡Ñ‚Ð²|Ñ‡ÐµÑ‚|Ð¿Ñ‚Ð½|Ð¿ÑÑ‚|ÑÑƒÐ±).?/i,
          wide: /^(Ð²Ð¾ÑÐºÑ€ÐµÑÐµÐ½ÑŒ[ÐµÑ]|Ð¿Ð¾Ð½ÐµÐ´ÐµÐ»ÑŒÐ½Ð¸ÐºÐ°?|Ð²Ñ‚Ð¾Ñ€Ð½Ð¸ÐºÐ°?|ÑÑ€ÐµÐ´[Ð°Ñ‹]|Ñ‡ÐµÑ‚Ð²ÐµÑ€Ð³Ð°?|Ð¿ÑÑ‚Ð½Ð¸Ñ†[Ð°Ñ‹]|ÑÑƒÐ±Ð±Ð¾Ñ‚[Ð°Ñ‹])/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð²/i, /^Ð¿/i, /^Ð²/i, /^Ñ/i, /^Ñ‡/i, /^Ð¿/i, /^Ñ/i],
          any: [
            /^Ð²[Ð¾Ñ]/i,
            /^Ð¿[Ð¾Ð½]/i,
            /^Ð²/i,
            /^ÑÑ€/i,
            /^Ñ‡/i,
            /^Ð¿[ÑÑ‚]/i,
            /^Ñ[ÑƒÐ±]/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^([Ð´Ð¿]Ð¿|Ð¿Ð¾Ð»Ð½\.?|Ð¿Ð¾Ð»Ð´\.?|ÑƒÑ‚Ñ€[Ð¾Ð°]|Ð´ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡\.?|Ð½Ð¾Ñ‡[ÑŒÐ¸])/i,
          abbreviated:
            /^([Ð´Ð¿]Ð¿|Ð¿Ð¾Ð»Ð½\.?|Ð¿Ð¾Ð»Ð´\.?|ÑƒÑ‚Ñ€[Ð¾Ð°]|Ð´ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡\.?|Ð½Ð¾Ñ‡[ÑŒÐ¸])/i,
          wide: /^([Ð´Ð¿]Ð¿|Ð¿Ð¾Ð»Ð½Ð¾Ñ‡ÑŒ|Ð¿Ð¾Ð»Ð´ÐµÐ½ÑŒ|ÑƒÑ‚Ñ€[Ð¾Ð°]|Ð´ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡ÐµÑ€Ð°?|Ð½Ð¾Ñ‡[ÑŒÐ¸])/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ð´Ð¿/i,
            pm: /^Ð¿Ð¿/i,
            midnight: /^Ð¿Ð¾Ð»Ð½/i,
            noon: /^Ð¿Ð¾Ð»Ð´/i,
            morning: /^Ñƒ/i,
            afternoon: /^Ð´[ÐµÐ½]/i,
            evening: /^Ð²/i,
            night: /^Ð½/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 397 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        // NOTE: should prolly be improved
        // https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1308
        function declensionGroup(scheme, count) {
          if (count === 1) {
            return scheme.one;
          }

          if (count >= 2 && count <= 4) {
            return scheme.twoFour;
          } // if count === null || count === 0 || count >= 5

          return scheme.other;
        }

        function declension(scheme, count, time) {
          var group = declensionGroup(scheme, count);
          var finalText = group[time] || group;
          return finalText.replace("{{count}}", count);
        }

        function extractPreposition(token) {
          var result = ["lessThan", "about", "over", "almost"].filter(function (
            preposition
          ) {
            return !!token.match(new RegExp("^" + preposition));
          });
          return result[0];
        }

        function prefixPreposition(preposition) {
          var translation = "";

          if (preposition === "almost") {
            translation = "takmer";
          }

          if (preposition === "about") {
            translation = "pribliÅ¾ne";
          }

          return translation.length > 0 ? translation + " " : "";
        }

        function suffixPreposition(preposition) {
          var translation = "";

          if (preposition === "lessThan") {
            translation = "menej neÅ¾";
          }

          if (preposition === "over") {
            translation = "viac neÅ¾";
          }

          return translation.length > 0 ? translation + " " : "";
        }

        function lowercaseFirstLetter(string) {
          return string.charAt(0).toLowerCase() + string.slice(1);
        }

        var formatDistanceLocale = {
          xSeconds: {
            one: {
              regular: "sekunda",
              past: "sekundou",
              future: "sekundu",
            },
            twoFour: {
              regular: "{{count}} sekundy",
              past: "{{count}} sekundami",
              future: "{{count}} sekundy",
            },
            other: {
              regular: "{{count}} sekáºnd",
              past: "{{count}} sekundami",
              future: "{{count}} sekáºnd",
            },
          },
          halfAMinute: {
            other: {
              regular: "pol mináºty",
              past: "pol mináºtou",
              future: "pol mináºty",
            },
          },
          xMinutes: {
            one: {
              regular: "mináºta",
              past: "mináºtou",
              future: "mináºtu",
            },
            twoFour: {
              regular: "{{count}} mináºty",
              past: "{{count}} mináºtami",
              future: "{{count}} mináºty",
            },
            other: {
              regular: "{{count}} mináºt",
              past: "{{count}} mináºtami",
              future: "{{count}} mináºt",
            },
          },
          xHours: {
            one: {
              regular: "hodina",
              past: "hodinou",
              future: "hodinu",
            },
            twoFour: {
              regular: "{{count}} hodiny",
              past: "{{count}} hodinami",
              future: "{{count}} hodiny",
            },
            other: {
              regular: "{{count}} hodá­n",
              past: "{{count}} hodinami",
              future: "{{count}} hodá­n",
            },
          },
          xDays: {
            one: {
              regular: "deÅˆ",
              past: "dÅˆom",
              future: "deÅˆ",
            },
            twoFour: {
              regular: "{{count}} dni",
              past: "{{count}} dÅˆami",
              future: "{{count}} dni",
            },
            other: {
              regular: "{{count}} dná­",
              past: "{{count}} dÅˆami",
              future: "{{count}} dná­",
            },
          },
          xWeeks: {
            one: {
              regular: "mesiac",
              // TODO
              past: "mesiacom",
              // TODO
              future: "mesiac", // TODO
            },
            twoFour: {
              regular: "{{count}} mesiace",
              // TODO
              past: "{{count}} mesiacmi",
              // TODO
              future: "{{count}} mesiace", // TODO
            },
            other: {
              regular: "{{count}} mesiacov",
              // TODO
              past: "{{count}} mesiacmi",
              // TODO
              future: "{{count}} mesiacov", // TODO
            },
          },
          xMonths: {
            one: {
              regular: "mesiac",
              past: "mesiacom",
              future: "mesiac",
            },
            twoFour: {
              regular: "{{count}} mesiace",
              past: "{{count}} mesiacmi",
              future: "{{count}} mesiace",
            },
            other: {
              regular: "{{count}} mesiacov",
              past: "{{count}} mesiacmi",
              future: "{{count}} mesiacov",
            },
          },
          xYears: {
            one: {
              regular: "rok",
              past: "rokom",
              future: "rok",
            },
            twoFour: {
              regular: "{{count}} roky",
              past: "{{count}} rokmi",
              future: "{{count}} roky",
            },
            other: {
              regular: "{{count}} rokov",
              past: "{{count}} rokmi",
              future: "{{count}} rokov",
            },
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var preposition = extractPreposition(token) || "";
          var key = lowercaseFirstLetter(token.substring(preposition.length));
          var scheme = formatDistanceLocale[key];

          if (!options.addSuffix) {
            return (
              prefixPreposition(preposition) +
              suffixPreposition(preposition) +
              declension(scheme, count, "regular")
            );
          }

          if (options.comparison > 0) {
            return (
              prefixPreposition(preposition) +
              "o " +
              suffixPreposition(preposition) +
              declension(scheme, count, "future")
            );
          } else {
            return (
              prefixPreposition(preposition) +
              "pred " +
              suffixPreposition(preposition) +
              declension(scheme, count, "past")
            );
          }
        }

        module.exports = exports.default;

        /***/
      },
      /* 398 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1986
        var dateFormats = {
          full: "EEEE d. MMMM y",
          long: "d. MMMM y",
          medium: "d. M. y",
          short: "d. M. y", // https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#2149
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm", // https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1994
        };
        var dateTimeFormats = {
          full: "{{date}}, {{time}}",
          long: "{{date}}, {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 399 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // https://www.unicode.org/cldr/charts/32/summary/sk.html?hide#1308
        var accusativeWeekdays = [
          "nedeÄ¾u",
          "pondelok",
          "utorok",
          "stredu",
          "Å¡tvrtok",
          "piatok",
          "sobotu",
        ];

        function lastWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
            /* Sun */

            case 3:
            /* Wed */

            case 6:
              /* Sat */
              return "'minuláº " + weekday + " o' p";

            default:
              return "'minulá½' eeee 'o' p";
          }
        }

        function thisWeek(day) {
          var weekday = accusativeWeekdays[day];

          if (
            day === 4
            /* Thu */
          ) {
            return "'vo' eeee 'o' p";
          } else {
            return "'v " + weekday + " o' p";
          }
        }

        function nextWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
            /* Sun */

            case 4:
            /* Wed */

            case 6:
              /* Sat */
              return "'budáºcu' " + weekday + " 'o' p";

            default:
              return "'budáºci' eeee 'o' p";
          }
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'vÄera o' p",
          today: "'dnes o' p",
          tomorrow: "'zajtra o' p",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 400 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // https://www.unicode.org/cldr/charts/32/summary/sk.html#1772
        var eraValues = {
          narrow: ["pred Kr.", "po Kr."],
          abbreviated: ["pred Kr.", "po Kr."],
          wide: ["pred Kristom", "po Kristovi"], // https://www.unicode.org/cldr/charts/32/summary/sk.html#1780
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: [
            "1. Å¡tvrÅ¥rok",
            "2. Å¡tvrÅ¥rok",
            "3. Å¡tvrÅ¥rok",
            "4. Å¡tvrÅ¥rok",
          ], // https://www.unicode.org/cldr/charts/32/summary/sk.html#1804
        };
        var monthValues = {
          narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
          abbreviated: [
            "jan",
            "feb",
            "mar",
            "apr",
            "má¡j",
            "jáºn",
            "jáºl",
            "aug",
            "sep",
            "okt",
            "nov",
            "dec",
          ],
          wide: [
            "januá¡r",
            "februá¡r",
            "marec",
            "aprá­l",
            "má¡j",
            "jáºn",
            "jáºl",
            "august",
            "september",
            "oktá³ber",
            "november",
            "december",
          ],
        };
        var formattingMonthValues = {
          narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
          abbreviated: [
            "jan",
            "feb",
            "mar",
            "apr",
            "má¡j",
            "jáºn",
            "jáºl",
            "aug",
            "sep",
            "okt",
            "nov",
            "dec",
          ],
          wide: [
            "januá¡ra",
            "februá¡ra",
            "marca",
            "aprá­la",
            "má¡ja",
            "jáºna",
            "jáºla",
            "augusta",
            "septembra",
            "oktá³bra",
            "novembra",
            "decembra",
          ], // https://www.unicode.org/cldr/charts/32/summary/sk.html#1876
        };
        var dayValues = {
          narrow: ["n", "p", "u", "s", "Å¡", "p", "s"],
          short: ["ne", "po", "ut", "st", "Å¡t", "pi", "so"],
          abbreviated: ["ne", "po", "ut", "st", "Å¡t", "pi", "so"],
          wide: [
            "nedeÄ¾a",
            "pondelok",
            "utorok",
            "streda",
            "Å¡tvrtok",
            "piatok",
            "sobota",
          ], // https://www.unicode.org/cldr/charts/32/summary/sk.html#1932
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "poln.",
            noon: "pol.",
            morning: "rá¡no",
            afternoon: "pop.",
            evening: "veÄ.",
            night: "noc",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "poln.",
            noon: "pol.",
            morning: "rá¡no",
            afternoon: "popol.",
            evening: "veÄer",
            night: "noc",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "polnoc",
            noon: "poludnie",
            morning: "rá¡no",
            afternoon: "popoludnie",
            evening: "veÄer",
            night: "noc",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "o poln.",
            noon: "nap.",
            morning: "rá¡no",
            afternoon: "pop.",
            evening: "veÄ.",
            night: "v n.",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "o poln.",
            noon: "napol.",
            morning: "rá¡no",
            afternoon: "popol.",
            evening: "veÄer",
            night: "v noci",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "o polnoci",
            noon: "napoludnie",
            morning: "rá¡no",
            afternoon: "popoludná­",
            evening: "veÄer",
            night: "v noci",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues, // defaultWidth: 'wide'
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 401 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\.?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
          abbreviated: /^(pred Kr\.|pred n\. l\.|po Kr\.|n\. l\.)/i,
          wide: /^(pred Kristom|pred na[Å¡s][á­i]m letopo[Äc]tom|po Kristovi|n[á¡a][Å¡s]ho letopo[Äc]tu)/i,
        };
        var parseEraPatterns = {
          any: [/^pr/i, /^(po|n)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234]\. [Å¡s]tvr[Å¥t]rok/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan|feb|mar|apr|m[á¡a]j|j[áºu]n|j[áºu]l|aug|sep|okt|nov|dec)/i,
          wide: /^(janu[á¡a]ra?|febru[á¡a]ra?|(marec|marca)|apr[á­i]la?|m[á¡a]ja?|j[áºu]na?|j[áºu]la?|augusta?|(september|septembra)|(okt[á³o]ber|okt[á³o]bra)|(november|novembra)|(december|decembra))/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^m[á¡a]j/i,
            /^j[áºu]n/i,
            /^j[áºu]l/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[npusÅ¡p]/i,
          short: /^(ne|po|ut|st|Å¡t|pi|so)/i,
          abbreviated: /^(ne|po|ut|st|Å¡t|pi|so)/i,
          wide: /^(nede[Ä¾l]a|pondelok|utorok|streda|[Å¡s]tvrtok|piatok|sobota])/i,
        };
        var parseDayPatterns = {
          narrow: [/^n/i, /^p/i, /^u/i, /^s/i, /^Å¡/i, /^p/i, /^s/i],
          any: [/^n/i, /^po/i, /^u/i, /^st/i, /^(Å¡t|stv)/i, /^pi/i, /^so/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(am|pm|(o )?poln\.?|(nap\.?|pol\.?)|r[á¡a]no|pop\.?|ve[Äc]\.?|(v n\.?|noc))/i,
          abbreviated:
            /^(am|pm|(o )?poln\.?|(napol\.?|pol\.?)|r[á¡a]no|pop\.?|ve[Äc]er|(v )?noci?)/i,
          any: /^(am|pm|(o )?polnoci?|(na)?poludnie|r[á¡a]no|popoludn(ie|á­|i)|ve[Äc]er|(v )?noci?)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^am/i,
            pm: /^pm/i,
            midnight: /poln/i,
            noon: /^(nap|(na)?pol(\.|u))/i,
            morning: /^r[á¡a]no/i,
            afternoon: /^pop/i,
            evening: /^ve[Äc]/i,
            night: /^(noc|v n\.)/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 402 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var distanceInWordsLocale = {
          lessThanXSeconds: {
            one: "manj kot {{count}} sekunda",
            two: "manj kot {{count}} sekundi",
            few: "manj kot {{count}} sekunde",
            other: "manj kot {{count}} sekund",
          },
          xSeconds: {
            one: "{{count}} sekunda",
            two: "{{count}} sekundi",
            few: "{{count}} sekunde",
            other: "{{count}} sekund",
          },
          halfAMinute: "pol minute",
          lessThanXMinutes: {
            one: "manj kot {{count}} minuta",
            two: "manj kot {{count}} minuti",
            few: "manj kot {{count}} minute",
            other: "manj kot {{count}} minut",
          },
          xMinutes: {
            one: "{{count}} minuta",
            two: "{{count}} minuti",
            few: "{{count}} minute",
            other: "{{count}} minut",
          },
          aboutXHours: {
            one: "pribliÅ¾no {{count}} ura",
            two: "pribliÅ¾no {{count}} uri",
            few: "pribliÅ¾no {{count}} ure",
            other: "pribliÅ¾no {{count}} ur",
          },
          xHours: {
            one: "{{count}} ura",
            two: "{{count}} uri",
            few: "{{count}} ure",
            other: "{{count}} ur",
          },
          xDays: {
            one: "{{count}} dan",
            two: "{{count}} dni",
            few: "{{count}} dni",
            other: "{{count}} dni",
          },
          aboutXWeeks: {
            one: "pribliÅ¾no {{count}} teden",
            two: "pribliÅ¾no {{count}} tedna",
            few: "pribliÅ¾no {{count}} tedne",
            other: "pribliÅ¾no {{count}} tednov",
          },
          xWeeks: {
            one: "{{count}} teden",
            two: "{{count}} tedna",
            few: "{{count}} tedne",
            other: "{{count}} tednov",
          },
          aboutXMonths: {
            one: "pribliÅ¾no {{count}} mesec",
            two: "pribliÅ¾no {{count}} meseca",
            few: "pribliÅ¾no {{count}} mesece",
            other: "pribliÅ¾no {{count}} mesecev",
          },
          xMonths: {
            one: "{{count}} mesec",
            two: "{{count}} meseca",
            few: "{{count}} meseci",
            other: "{{count}} mesecev",
          },
          aboutXYears: {
            one: "pribliÅ¾no {{count}} leto",
            two: "pribliÅ¾no {{count}} leti",
            few: "pribliÅ¾no {{count}} leta",
            other: "pribliÅ¾no {{count}} let",
          },
          xYears: {
            one: "{{count}} leto",
            two: "{{count}} leti",
            few: "{{count}} leta",
            other: "{{count}} let",
          },
          overXYears: {
            one: "veÄ kot {{count}} leto",
            two: "veÄ kot {{count}} leti",
            few: "veÄ kot {{count}} leta",
            other: "veÄ kot {{count}} let",
          },
          almostXYears: {
            one: "skoraj {{count}} leto",
            two: "skoraj {{count}} leti",
            few: "skoraj {{count}} leta",
            other: "skoraj {{count}} let",
          },
        };
        var distanceInWordsLocalePast = {
          lessThanXSeconds: {
            one: "manj kot {{count}} sekundo",
            two: "manj kot {{count}} sekundama",
            few: "manj kot {{count}} sekundami",
            other: "manj kot {{count}} sekundami",
          },
          xSeconds: {
            one: "{{count}} sekundo",
            two: "{{count}} sekundama",
            few: "{{count}} sekundami",
            other: "{{count}} sekundami",
          },
          halfAMinute: "pol minute",
          lessThanXMinutes: {
            one: "manj kot {{count}} minuto",
            two: "manj kot {{count}} minutama",
            few: "manj kot {{count}} minutami",
            other: "manj kot {{count}} minutami",
          },
          xMinutes: {
            one: "{{count}} minuto",
            two: "{{count}} minutama",
            few: "{{count}} minutami",
            other: "{{count}} minutami",
          },
          aboutXHours: {
            one: "pribliÅ¾no {{count}} uro",
            two: "pribliÅ¾no {{count}} urama",
            few: "pribliÅ¾no {{count}} urami",
            other: "pribliÅ¾no {{count}} urami",
          },
          xHours: {
            one: "{{count}} uro",
            two: "{{count}} urama",
            few: "{{count}} urami",
            other: "{{count}} urami",
          },
          xDays: {
            one: "{{count}} dnem",
            two: "{{count}} dnevoma",
            few: "{{count}} dnevi",
            other: "{{count}} dnevi",
          },
          aboutXMonths: {
            one: "pribliÅ¾no {{count}} mesecem",
            two: "pribliÅ¾no {{count}} mesecema",
            few: "pribliÅ¾no {{count}} meseci",
            other: "pribliÅ¾no {{count}} meseci",
          },
          xMonths: {
            one: "{{count}} mesecem",
            two: "{{count}} mesecema",
            few: "{{count}} meseci",
            other: "{{count}} meseci",
          },
          aboutXYears: {
            one: "pribliÅ¾no {{count}} letom",
            two: "pribliÅ¾no {{count}} letoma",
            few: "pribliÅ¾no {{count}} leti",
            other: "pribliÅ¾no {{count}} leti",
          },
          xYears: {
            one: "{{count}} letom",
            two: "{{count}} letoma",
            few: "{{count}} leti",
            other: "{{count}} leti",
          },
          overXYears: {
            one: "veÄ kot {{count}} letom",
            two: "veÄ kot {{count}} letoma",
            few: "veÄ kot {{count}} leti",
            other: "veÄ kot {{count}} leti",
          },
          almostXYears: {
            one: "skoraj {{count}} letom",
            two: "skoraj {{count}} letoma",
            few: "skoraj {{count}} leti",
            other: "skoraj {{count}} leti",
          },
        };
        var distanceInWordsLocaleFuture = {
          lessThanXSeconds: {
            one: "manj kot {{count}} sekundo",
            two: "manj kot {{count}} sekundi",
            few: "manj kot {{count}} sekunde",
            other: "manj kot {{count}} sekund",
          },
          xSeconds: {
            one: "{{count}} sekundo",
            two: "{{count}} sekundi",
            few: "{{count}} sekunde",
            other: "{{count}} sekund",
          },
          halfAMinute: "pol minute",
          lessThanXMinutes: {
            one: "manj kot {{count}} minuto",
            two: "manj kot {{count}} minuti",
            few: "manj kot {{count}} minute",
            other: "manj kot {{count}} minut",
          },
          xMinutes: {
            one: "{{count}} minuto",
            two: "{{count}} minuti",
            few: "{{count}} minute",
            other: "{{count}} minut",
          },
          aboutXHours: {
            one: "pribliÅ¾no {{count}} uro",
            two: "pribliÅ¾no {{count}} uri",
            few: "pribliÅ¾no {{count}} ure",
            other: "pribliÅ¾no {{count}} ur",
          },
          xHours: {
            one: "{{count}} uro",
            two: "{{count}} uri",
            few: "{{count}} ure",
            other: "{{count}} ur",
          },
          xDays: {
            one: "{{count}} dan",
            two: "{{count}} dni",
            few: "{{count}} dni",
            other: "{{count}} dni",
          },
          aboutXMonths: {
            one: "pribliÅ¾no {{count}} mesec",
            two: "pribliÅ¾no {{count}} meseca",
            few: "pribliÅ¾no {{count}} mesece",
            other: "pribliÅ¾no {{count}} mesecev",
          },
          xMonths: {
            one: "{{count}} mesec",
            two: "{{count}} meseca",
            few: "{{count}} mesece",
            other: "{{count}} mesecev",
          },
          aboutXYears: {
            one: "pribliÅ¾no {{count}} leto",
            two: "pribliÅ¾no {{count}} leti",
            few: "pribliÅ¾no {{count}} leta",
            other: "pribliÅ¾no {{count}} let",
          },
          xYears: {
            one: "{{count}} leto",
            two: "{{count}} leti",
            few: "{{count}} leta",
            other: "{{count}} let",
          },
          overXYears: {
            one: "veÄ kot {{count}} leto",
            two: "veÄ kot {{count}} leti",
            few: "veÄ kot {{count}} leta",
            other: "veÄ kot {{count}} let",
          },
          almostXYears: {
            one: "skoraj {{count}} leto",
            two: "skoraj {{count}} leti",
            few: "skoraj {{count}} leta",
            other: "skoraj {{count}} let",
          },
        };

        function getFormFromCount(count) {
          switch (count % 100) {
            case 1:
              return "one";

            case 2:
              return "two";

            case 3:
            case 4:
              return "few";

            default:
              return "other";
          }
        }

        function formatDistance(token, count, options) {
          options = options || {};
          var localeObject = distanceInWordsLocale;
          var result = "";

          if (options.addSuffix) {
            if (options.comparison > 0) {
              localeObject = distanceInWordsLocaleFuture;
              result += "Äez ";
            } else {
              localeObject = distanceInWordsLocalePast;
              result += "pred ";
            }
          }

          if (typeof localeObject[token] === "string") {
            result += localeObject[token];
          } else {
            var form = getFormFromCount(count);
            result += localeObject[token][form].replace("{{count}}", count);
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 403 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, dd. MMMM y",
          long: "dd. MMMM y",
          medium: "d. MMM y",
          short: "d. MM. yy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 404 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'prejÅ¡njo nedeljo ob' p";

              case 3:
                return "'prejÅ¡njo sredo ob' p";

              case 6:
                return "'prejÅ¡njo soboto ob' p";

              default:
                return "'prejÅ¡nji' EEEE 'ob' p";
            }
          },
          yesterday: "'vÄeraj ob' p",
          today: "'danes ob' p",
          tomorrow: "'jutri ob' p",
          nextWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'naslednjo nedeljo ob' p";

              case 3:
                return "'naslednjo sredo ob' p";

              case 6:
                return "'naslednjo soboto ob' p";

              default:
                return "'naslednji' EEEE 'ob' p";
            }
          },
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 405 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return String(number).concat(".");
        }

        var eraValues = {
          narrow: ["pr. n. Å¡t.", "po n. Å¡t."],
          abbreviated: ["pr. n. Å¡t.", "po n. Å¡t."],
          wide: ["pred naÅ¡im Å¡tetjem", "po naÅ¡em Å¡tetju"],
        };
        var monthValues = {
          narrow: ["j", "f", "m", "a", "m", "j", "j", "a", "s", "o", "n", "d"],
          abbreviated: [
            "jan.",
            "feb.",
            "mar.",
            "apr.",
            "maj",
            "jun.",
            "jul.",
            "avg.",
            "sep.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "januar",
            "februar",
            "marec",
            "april",
            "maj",
            "junij",
            "julij",
            "avgust",
            "september",
            "oktober",
            "november",
            "december",
          ],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1. Äet.", "2. Äet.", "3. Äet.", "4. Äet."],
          wide: [
            "1. Äetrtletje",
            "2. Äetrtletje",
            "3. Äetrtletje",
            "4. Äetrtletje",
          ],
        };
        var dayValues = {
          narrow: ["n", "p", "t", "s", "Ä", "p", "s"],
          short: ["ned.", "pon.", "tor.", "sre.", "Äet.", "pet.", "sob."],
          abbreviated: ["ned.", "pon.", "tor.", "sre.", "Äet.", "pet.", "sob."],
          wide: [
            "nedelja",
            "ponedeljek",
            "torek",
            "sreda",
            "Äetrtek",
            "petek",
            "sobota",
          ],
        };
        var dayPeriodValuesStandalone = {
          narrow: {
            am: "d",
            pm: "p",
            midnight: "24.00",
            noon: "12.00",
            morning: "j",
            afternoon: "p",
            evening: "v",
            night: "n",
          },
          abbreviated: {
            am: "dop.",
            pm: "pop.",
            midnight: "poln.",
            noon: "pold.",
            morning: "jut.",
            afternoon: "pop.",
            evening: "veÄ.",
            night: "noÄ",
          },
          wide: {
            am: "dop.",
            pm: "pop.",
            midnight: "polnoÄ",
            noon: "poldne",
            morning: "jutro",
            afternoon: "popoldne",
            evening: "veÄer",
            night: "noÄ",
          },
        };
        var dayPeriodValuesFormatting = {
          narrow: {
            am: "d",
            pm: "p",
            midnight: "24.00",
            noon: "12.00",
            morning: "zj",
            afternoon: "p",
            evening: "zv",
            night: "po",
          },
          abbreviated: {
            am: "dop.",
            pm: "pop.",
            midnight: "opoln.",
            noon: "opold.",
            morning: "zjut.",
            afternoon: "pop.",
            evening: "zveÄ.",
            night: "ponoÄi",
          },
          wide: {
            am: "dop.",
            pm: "pop.",
            midnight: "opolnoÄi",
            noon: "opoldne",
            morning: "zjutraj",
            afternoon: "popoldan",
            evening: "zveÄer",
            night: "ponoÄi",
          },
        };
        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValuesStandalone,
            defaultWidth: "wide",
            formattingValues: dayPeriodValuesFormatting,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 406 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\./i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          abbreviated: /^(pr\. n\. Å¡t\.|po n\. Å¡t\.)/i,
          wide: /^(pred Kristusom|pred na[sÅ¡]im [sÅ¡]tetjem|po Kristusu|po na[sÅ¡]em [sÅ¡]tetju|na[sÅ¡]ega [sÅ¡]tetja)/i,
        };
        var parseEraPatterns = {
          any: [/^pr/i, /^(po|na[sÅ¡]em)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]\.\s?[Äc]et\.?/i,
          wide: /^[1234]\. [Äc]etrtletje/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated:
            /^(jan\.|feb\.|mar\.|apr\.|maj|jun\.|jul\.|avg\.|sep\.|okt\.|nov\.|dec\.)/i,
          wide: /^(januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          abbreviated: [
            /^ja/i,
            /^fe/i,
            /^mar/i,
            /^ap/i,
            /^maj/i,
            /^jun/i,
            /^jul/i,
            /^av/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          wide: [
            /^ja/i,
            /^fe/i,
            /^mar/i,
            /^ap/i,
            /^maj/i,
            /^jun/i,
            /^jul/i,
            /^av/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[nptsÄc]/i,
          short: /^(ned\.|pon\.|tor\.|sre\.|[cÄ]et\.|pet\.|sob\.)/i,
          abbreviated: /^(ned\.|pon\.|tor\.|sre\.|[cÄ]et\.|pet\.|sob\.)/i,
          wide: /^(nedelja|ponedeljek|torek|sreda|[cÄ]etrtek|petek|sobota)/i,
        };
        var parseDayPatterns = {
          narrow: [/^n/i, /^p/i, /^t/i, /^s/i, /^[cÄ]/i, /^p/i, /^s/i],
          any: [/^n/i, /^po/i, /^t/i, /^sr/i, /^[cÄ]/i, /^pe/i, /^so/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(d|po?|z?v|n|z?j|24\.00|12\.00)/i,
          any: /^(dop\.|pop\.|o?poln(\.|o[cÄ]i?)|o?pold(\.|ne)|z?ve[cÄ](\.|er)|(po)?no[cÄ]i?|popold(ne|an)|jut(\.|ro)|zjut(\.|raj))/i,
        };
        var parseDayPeriodPatterns = {
          narrow: {
            am: /^d/i,
            pm: /^p/i,
            midnight: /^24/i,
            noon: /^12/i,
            morning: /^(z?j)/i,
            afternoon: /^p/i,
            evening: /^(z?v)/i,
            night: /^(n|po)/i,
          },
          any: {
            am: /^dop\./i,
            pm: /^pop\./i,
            midnight: /^o?poln/i,
            noon: /^o?pold/i,
            morning: /j/i,
            afternoon: /^pop\./i,
            evening: /^z?ve/i,
            night: /(po)?no/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "wide",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 407 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "má« pak se njá« sekondá«",
            other: "má« pak se {{count}} sekonda",
          },
          xSeconds: {
            one: "1 sekondá«",
            other: "{{count}} sekonda",
          },
          halfAMinute: "gjysá«m minuti",
          lessThanXMinutes: {
            one: "má« pak se njá« minute",
            other: "má« pak se {{count}} minuta",
          },
          xMinutes: {
            one: "1 minutá«",
            other: "{{count}} minuta",
          },
          aboutXHours: {
            one: "rreth 1 orá«",
            other: "rreth {{count}} orá«",
          },
          xHours: {
            one: "1 orá«",
            other: "{{count}} orá«",
          },
          xDays: {
            one: "1 ditá«",
            other: "{{count}} ditá«",
          },
          aboutXWeeks: {
            one: "rreth 1 javá«",
            other: "rreth {{count}} javá«",
          },
          xWeeks: {
            one: "1 javá«",
            other: "{{count}} javá«",
          },
          aboutXMonths: {
            one: "rreth 1 muaj",
            other: "rreth {{count}} muaj",
          },
          xMonths: {
            one: "1 muaj",
            other: "{{count}} muaj",
          },
          aboutXYears: {
            one: "rreth 1 vit",
            other: "rreth {{count}} vite",
          },
          xYears: {
            one: "1 vit",
            other: "{{count}} vite",
          },
          overXYears: {
            one: "mbi 1 vit",
            other: "mbi {{count}} vite",
          },
          almostXYears: {
            one: "pothuajse 1 vit",
            other: "pothuajse {{count}} vite",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "ná« " + result;
            } else {
              return result + " má« pará«";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 408 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'ná«' {{time}}",
          long: "{{date}} 'ná«' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 409 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'tá«' eeee 'e shkuar ná«' p",
          yesterday: "'dje ná«' p",
          today: "'sot ná«' p",
          tomorrow: "'nesá«r ná«' p",
          nextWeek: "eeee 'at' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 410 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["P", "M"],
          abbreviated: ["PK", "MK"],
          wide: ["Para Krishtit", "Mbas Krishtit"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["4-mujori I", "4-mujori II", "4-mujori III", "4-mujori IV"], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["J", "S", "M", "P", "M", "Q", "K", "G", "S", "T", "N", "D"],
          abbreviated: [
            "Jan",
            "Shk",
            "Mar",
            "Pri",
            "Maj",
            "Qer",
            "Kor",
            "Gus",
            "Sht",
            "Tet",
            "Ná«n",
            "Dhj",
          ],
          wide: [
            "Janar",
            "Shkurt",
            "Mars",
            "Prill",
            "Maj",
            "Qershor",
            "Korrik",
            "Gusht",
            "Shtator",
            "Tetor",
            "Ná«ntor",
            "Dhjetor",
          ],
        };
        var dayValues = {
          narrow: ["D", "H", "M", "M", "E", "P", "S"],
          short: ["Di", "Há«", "Ma", "Má«", "En", "Pr", "Sh"],
          abbreviated: ["Die", "Há«n", "Mar", "Má«r", "Enj", "Pre", "Sht"],
          wide: [
            "Dielá«",
            "Há«ná«",
            "Martá«",
            "Má«rkurá«",
            "Enjte",
            "Premte",
            "Shtuná«",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "p",
            pm: "m",
            midnight: "m",
            noon: "d",
            morning: "má«ngjes",
            afternoon: "dite",
            evening: "mbrá«mje",
            night: "natá«",
          },
          abbreviated: {
            am: "PD",
            pm: "MD",
            midnight: "mesná«tá«",
            noon: "drek",
            morning: "má«ngjes",
            afternoon: "mbasdite",
            evening: "mbrá«mje",
            night: "natá«",
          },
          wide: {
            am: "p.d.",
            pm: "m.d.",
            midnight: "mesná«tá«",
            noon: "drek",
            morning: "má«ngjes",
            afternoon: "mbasdite",
            evening: "mbrá«mje",
            night: "natá«",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "p",
            pm: "m",
            midnight: "m",
            noon: "d",
            morning: "ná« má«ngjes",
            afternoon: "ná« mbasdite",
            evening: "ná« mbrá«mje",
            night: "ná« mesnatá«",
          },
          abbreviated: {
            am: "PD",
            pm: "MD",
            midnight: "mesnatá«",
            noon: "drek",
            morning: "ná« má«ngjes",
            afternoon: "ná« mbasdite",
            evening: "ná« mbrá«mje",
            night: "ná« mesnatá«",
          },
          wide: {
            am: "p.d.",
            pm: "m.d.",
            midnight: "mesnatá«",
            noon: "drek",
            morning: "ná« má«ngjes",
            afternoon: "ná« mbasdite",
            evening: "ná« mbrá«mje",
            night: "ná« mesnatá«",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          var options = _dirtyOptions || {};
          var unit = String(options.unit);
          if (unit === "hour") return number;
          if (number === 1) return number + "-rá«";
          if (number === 4) return number + "t";
          return number + "-tá«";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 411 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(-rá«|-tá«|t|)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(p|m)/i,
          abbreviated:
            /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
          wide: /^(para krishtit|mbas krishtit)/i,
        };
        var parseEraPatterns = {
          any: [/^b/i, /^(p|m)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234]-mujori (i{1,3}|iv)/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jsmpqkftnd]/i,
          abbreviated: /^(jan|shk|mar|pri|maj|qer|kor|gus|sht|tet|ná«n|dhj)/i,
          wide: /^(janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|ná«ntor|dhjetor)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^s/i,
            /^m/i,
            /^p/i,
            /^m/i,
            /^q/i,
            /^k/i,
            /^g/i,
            /^s/i,
            /^t/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^shk/i,
            /^mar/i,
            /^pri/i,
            /^maj/i,
            /^qer/i,
            /^kor/i,
            /^gu/i,
            /^sht/i,
            /^tet/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[dhmeps]/i,
          short: /^(di|há«|ma|má«|en|pr|sh)/i,
          abbreviated: /^(die|há«n|mar|má«r|enj|pre|sht)/i,
          wide: /^(dielá«|há«ná«|martá«|má«rkurá«|enjte|premte|shtuná«)/i,
        };
        var parseDayPatterns = {
          narrow: [/^d/i, /^h/i, /^m/i, /^m/i, /^e/i, /^p/i, /^s/i],
          any: [/^d/i, /^h/i, /^ma/i, /^má«/i, /^e/i, /^p/i, /^s/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(p|m|me|ná« (má«ngjes|mbasdite|mbrá«mje|mesnatá«))/i,
          any: /^([pm]\.?\s?d\.?|drek|ná« (má«ngjes|mbasdite|mbrá«mje|mesnatá«))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^p/i,
            pm: /^m/i,
            midnight: /^me/i,
            noon: /^dr/i,
            morning: /má«ngjes/i,
            afternoon: /mbasdite/i,
            evening: /mbrá«mje/i,
            night: /natá«/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 412 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: {
              standalone: "manje od 1 sekunde",
              withPrepositionAgo: "manje od 1 sekunde",
              withPrepositionIn: "manje od 1 sekundu",
            },
            dual: "manje od {{count}} sekunde",
            other: "manje od {{count}} sekundi",
          },
          xSeconds: {
            one: {
              standalone: "1 sekunda",
              withPrepositionAgo: "1 sekunde",
              withPrepositionIn: "1 sekundu",
            },
            dual: "{{count}} sekunde",
            other: "{{count}} sekundi",
          },
          halfAMinute: "pola minute",
          lessThanXMinutes: {
            one: {
              standalone: "manje od 1 minute",
              withPrepositionAgo: "manje od 1 minute",
              withPrepositionIn: "manje od 1 minutu",
            },
            dual: "manje od {{count}} minute",
            other: "manje od {{count}} minuta",
          },
          xMinutes: {
            one: {
              standalone: "1 minuta",
              withPrepositionAgo: "1 minute",
              withPrepositionIn: "1 minutu",
            },
            dual: "{{count}} minute",
            other: "{{count}} minuta",
          },
          aboutXHours: {
            one: {
              standalone: "oko 1 sat",
              withPrepositionAgo: "oko 1 sat",
              withPrepositionIn: "oko 1 sat",
            },
            dual: "oko {{count}} sata",
            other: "oko {{count}} sati",
          },
          xHours: {
            one: {
              standalone: "1 sat",
              withPrepositionAgo: "1 sat",
              withPrepositionIn: "1 sat",
            },
            dual: "{{count}} sata",
            other: "{{count}} sati",
          },
          xDays: {
            one: {
              standalone: "1 dan",
              withPrepositionAgo: "1 dan",
              withPrepositionIn: "1 dan",
            },
            dual: "{{count}} dana",
            other: "{{count}} dana",
          },
          aboutXWeeks: {
            one: {
              standalone: "oko 1 nedelju",
              withPrepositionAgo: "oko 1 nedelju",
              withPrepositionIn: "oko 1 nedelju",
            },
            dual: "oko {{count}} nedelje",
            other: "oko {{count}} nedelje",
          },
          xWeeks: {
            one: {
              standalone: "1 nedelju",
              withPrepositionAgo: "1 nedelju",
              withPrepositionIn: "1 nedelju",
            },
            dual: "{{count}} nedelje",
            other: "{{count}} nedelje",
          },
          aboutXMonths: {
            one: {
              standalone: "oko 1 mesec",
              withPrepositionAgo: "oko 1 mesec",
              withPrepositionIn: "oko 1 mesec",
            },
            dual: "oko {{count}} meseca",
            other: "oko {{count}} meseci",
          },
          xMonths: {
            one: {
              standalone: "1 mesec",
              withPrepositionAgo: "1 mesec",
              withPrepositionIn: "1 mesec",
            },
            dual: "{{count}} meseca",
            other: "{{count}} meseci",
          },
          aboutXYears: {
            one: {
              standalone: "oko 1 godinu",
              withPrepositionAgo: "oko 1 godinu",
              withPrepositionIn: "oko 1 godinu",
            },
            dual: "oko {{count}} godine",
            other: "oko {{count}} godina",
          },
          xYears: {
            one: {
              standalone: "1 godina",
              withPrepositionAgo: "1 godine",
              withPrepositionIn: "1 godinu",
            },
            dual: "{{count}} godine",
            other: "{{count}} godina",
          },
          overXYears: {
            one: {
              standalone: "preko 1 godinu",
              withPrepositionAgo: "preko 1 godinu",
              withPrepositionIn: "preko 1 godinu",
            },
            dual: "preko {{count}} godine",
            other: "preko {{count}} godina",
          },
          almostXYears: {
            one: {
              standalone: "gotovo 1 godinu",
              withPrepositionAgo: "gotovo 1 godinu",
              withPrepositionIn: "gotovo 1 godinu",
            },
            dual: "gotovo {{count}} godine",
            other: "gotovo {{count}} godina",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                result = formatDistanceLocale[token].one.withPrepositionIn;
              } else {
                result = formatDistanceLocale[token].one.withPrepositionAgo;
              }
            } else {
              result = formatDistanceLocale[token].one.standalone;
            }
          } else if (
            count % 10 > 1 &&
            count % 10 < 5 && // if last digit is between 2 and 4
            String(count).substr(-2, 1) !== "1" // unless the 2nd to last digit is "1"
          ) {
            result = formatDistanceLocale[token].dual.replace(
              "{{count}}",
              count
            );
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "za " + result;
            } else {
              return "pre " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 413 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d. MMMM yyyy.",
          long: "d. MMMM yyyy.",
          medium: "d. MMM yy.",
          short: "dd. MM. yy.",
        };
        var timeFormats = {
          full: "HH:mm:ss (zzzz)",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'u' {{time}}",
          long: "{{date}} 'u' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 414 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'proÅ¡le nedelje u' p";

              case 3:
                return "'proÅ¡le srede u' p";

              case 6:
                return "'proÅ¡le subote u' p";

              default:
                return "'proÅ¡li' EEEE 'u' p";
            }
          },
          yesterday: "'juÄe u' p",
          today: "'danas u' p",
          tomorrow: "'sutra u' p",
          nextWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'sledeÄ‡e nedelje u' p";

              case 3:
                return "'sledeÄ‡u sredu u' p";

              case 6:
                return "'sledeÄ‡u subotu u' p";

              default:
                return "'sledeÄ‡i' EEEE 'u' p";
            }
          },
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 415 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return String(number).concat(".");
        }

        var eraValues = {
          narrow: ["pr.n.e.", "AD"],
          abbreviated: ["pr. Hr.", "po. Hr."],
          wide: ["Pre Hrista", "Posle Hrista"],
        };
        var monthValues = {
          narrow: [
            "1.",
            "2.",
            "3.",
            "4.",
            "5.",
            "6.",
            "7.",
            "8.",
            "9.",
            "10.",
            "11.",
            "12.",
          ],
          abbreviated: [
            "jan",
            "feb",
            "mar",
            "apr",
            "maj",
            "jun",
            "jul",
            "avg",
            "sep",
            "okt",
            "nov",
            "dec",
          ],
          wide: [
            "januar",
            "februar",
            "mart",
            "april",
            "maj",
            "jun",
            "jul",
            "avgust",
            "septembar",
            "oktobar",
            "novembar",
            "decembar",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "1.",
            "2.",
            "3.",
            "4.",
            "5.",
            "6.",
            "7.",
            "8.",
            "9.",
            "10.",
            "11.",
            "12.",
          ],
          abbreviated: [
            "jan",
            "feb",
            "mar",
            "apr",
            "maj",
            "jun",
            "jul",
            "avg",
            "sep",
            "okt",
            "nov",
            "dec",
          ],
          wide: [
            "januar",
            "februar",
            "mart",
            "april",
            "maj",
            "jun",
            "jul",
            "avgust",
            "septembar",
            "oktobar",
            "novembar",
            "decembar",
          ],
        };
        var quarterValues = {
          narrow: ["1.", "2.", "3.", "4."],
          abbreviated: ["1. kv.", "2. kv.", "3. kv.", "4. kv."],
          wide: ["1. kvartal", "2. kvartal", "3. kvartal", "4. kvartal"],
        };
        var dayValues = {
          narrow: ["N", "P", "U", "S", "ÄŒ", "P", "S"],
          short: ["ned", "pon", "uto", "sre", "Äet", "pet", "sub"],
          abbreviated: ["ned", "pon", "uto", "sre", "Äet", "pet", "sub"],
          wide: [
            "nedelja",
            "ponedeljak",
            "utorak",
            "sreda",
            "Äetvrtak",
            "petak",
            "subota",
          ],
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutru",
            afternoon: "popodne",
            evening: "uveÄe",
            night: "noÄ‡u",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutru",
            afternoon: "popodne",
            evening: "uveÄe",
            night: "noÄ‡u",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutru",
            afternoon: "posle podne",
            evening: "uveÄe",
            night: "noÄ‡u",
          },
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutru",
            afternoon: "popodne",
            evening: "uveÄe",
            night: "noÄ‡u",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutru",
            afternoon: "popodne",
            evening: "uveÄe",
            night: "noÄ‡u",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "ponoÄ‡",
            noon: "podne",
            morning: "ujutru",
            afternoon: "posle podne",
            evening: "uveÄe",
            night: "noÄ‡u",
          },
        };
        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 416 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\./i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(pr\.n\.e\.|AD)/i,
          abbreviated: /^(pr\.\s?Hr\.|po\.\s?Hr\.)/i,
          wide: /^(Pre Hrista|pre nove ere|Posle Hrista|nova era)/i,
        };
        var parseEraPatterns = {
          any: [/^pr/i, /^(po|nova)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]\.\s?kv\.?/i,
          wide: /^[1234]\. kvartal/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^(10|11|12|[123456789])\./i,
          abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|avg|sep|okt|nov|dec)/i,
          wide: /^((januar|januara)|(februar|februara)|(mart|marta)|(april|aprila)|(maj|maja)|(jun|juna)|(jul|jula)|(avgust|avgusta)|(septembar|septembra)|(oktobar|oktobra)|(novembar|novembra)|(decembar|decembra))/i,
        };
        var parseMonthPatterns = {
          narrow: [/(10|11|12|[123456789])/i],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^maj/i,
            /^jun/i,
            /^jul/i,
            /^avg/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[npusÄc]/i,
          short: /^(ned|pon|uto|sre|(Äet|cet)|pet|sub)/i,
          abbreviated: /^(ned|pon|uto|sre|(Äet|cet)|pet|sub)/i,
          wide: /^(nedelja|ponedeljak|utorak|sreda|(Äetvrtak|cetvrtak)|petak|subota)/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
          any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(am|pm|ponoc|ponoÄ‡|(po)?podne|uvece|uveÄe|noÄ‡u|posle podne|ujutru)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^pono/i,
            noon: /^pod/i,
            morning: /jutro/i,
            afternoon: /(posle\s|po)+podne/i,
            evening: /(uvece|uveÄe)/i,
            night: /(nocu|noÄ‡u)/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 417 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: {
              standalone: "Ð¼Ð°ÑšÐµ Ð¾Ð´ 1 ÑÐµÐºÑƒÐ½Ð´Ðµ",
              withPrepositionAgo: "Ð¼Ð°ÑšÐµ Ð¾Ð´ 1 ÑÐµÐºÑƒÐ½Ð´Ðµ",
              withPrepositionIn: "Ð¼Ð°ÑšÐµ Ð¾Ð´ 1 ÑÐµÐºÑƒÐ½Ð´Ñƒ",
            },
            dual: "Ð¼Ð°ÑšÐµ Ð¾Ð´ {{count}} ÑÐµÐºÑƒÐ½Ð´Ðµ",
            other: "Ð¼Ð°ÑšÐµ Ð¾Ð´ {{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
          },
          xSeconds: {
            one: {
              standalone: "1 ÑÐµÐºÑƒÐ½Ð´Ð°",
              withPrepositionAgo: "1 ÑÐµÐºÑƒÐ½Ð´Ðµ",
              withPrepositionIn: "1 ÑÐµÐºÑƒÐ½Ð´Ñƒ",
            },
            dual: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ðµ",
            other: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
          },
          halfAMinute: "Ð¿Ð¾Ð»Ð° Ð¼Ð¸Ð½ÑƒÑ‚Ðµ",
          lessThanXMinutes: {
            one: {
              standalone: "Ð¼Ð°ÑšÐµ Ð¾Ð´ 1 Ð¼Ð¸Ð½ÑƒÑ‚Ðµ",
              withPrepositionAgo: "Ð¼Ð°ÑšÐµ Ð¾Ð´ 1 Ð¼Ð¸Ð½ÑƒÑ‚Ðµ",
              withPrepositionIn: "Ð¼Ð°ÑšÐµ Ð¾Ð´ 1 Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ",
            },
            dual: "Ð¼Ð°ÑšÐµ Ð¾Ð´ {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ðµ",
            other: "Ð¼Ð°ÑšÐµ Ð¾Ð´ {{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
          },
          xMinutes: {
            one: {
              standalone: "1 Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
              withPrepositionAgo: "1 Ð¼Ð¸Ð½ÑƒÑ‚Ðµ",
              withPrepositionIn: "1 Ð¼Ð¸Ð½ÑƒÑ‚Ñƒ",
            },
            dual: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ðµ",
            other: "{{count}} Ð¼Ð¸Ð½ÑƒÑ‚Ð°",
          },
          aboutXHours: {
            one: {
              standalone: "Ð¾ÐºÐ¾ 1 ÑÐ°Ñ‚",
              withPrepositionAgo: "Ð¾ÐºÐ¾ 1 ÑÐ°Ñ‚",
              withPrepositionIn: "Ð¾ÐºÐ¾ 1 ÑÐ°Ñ‚",
            },
            dual: "Ð¾ÐºÐ¾ {{count}} ÑÐ°Ñ‚Ð°",
            other: "Ð¾ÐºÐ¾ {{count}} ÑÐ°Ñ‚Ð¸",
          },
          xHours: {
            one: {
              standalone: "1 ÑÐ°Ñ‚",
              withPrepositionAgo: "1 ÑÐ°Ñ‚",
              withPrepositionIn: "1 ÑÐ°Ñ‚",
            },
            dual: "{{count}} ÑÐ°Ñ‚Ð°",
            other: "{{count}} ÑÐ°Ñ‚Ð¸",
          },
          xDays: {
            one: {
              standalone: "1 Ð´Ð°Ð½",
              withPrepositionAgo: "1 Ð´Ð°Ð½",
              withPrepositionIn: "1 Ð´Ð°Ð½",
            },
            dual: "{{count}} Ð´Ð°Ð½Ð°",
            other: "{{count}} Ð´Ð°Ð½Ð°",
          },
          aboutXWeeks: {
            one: {
              standalone: "Ð¾ÐºÐ¾ 1 Ð½ÐµÐ´ÐµÑ™Ñƒ",
              withPrepositionAgo: "Ð¾ÐºÐ¾ 1 Ð½ÐµÐ´ÐµÑ™Ñƒ",
              withPrepositionIn: "Ð¾ÐºÐ¾ 1 Ð½ÐµÐ´ÐµÑ™Ñƒ",
            },
            dual: "Ð¾ÐºÐ¾ {{count}} Ð½ÐµÐ´ÐµÑ™Ðµ",
            other: "Ð¾ÐºÐ¾ {{count}} Ð½ÐµÐ´ÐµÑ™Ðµ",
          },
          xWeeks: {
            one: {
              standalone: "1 Ð½ÐµÐ´ÐµÑ™Ñƒ",
              withPrepositionAgo: "1 Ð½ÐµÐ´ÐµÑ™Ñƒ",
              withPrepositionIn: "1 Ð½ÐµÐ´ÐµÑ™Ñƒ",
            },
            dual: "{{count}} Ð½ÐµÐ´ÐµÑ™Ðµ",
            other: "{{count}} Ð½ÐµÐ´ÐµÑ™Ðµ",
          },
          aboutXMonths: {
            one: {
              standalone: "Ð¾ÐºÐ¾ 1 Ð¼ÐµÑÐµÑ†",
              withPrepositionAgo: "Ð¾ÐºÐ¾ 1 Ð¼ÐµÑÐµÑ†",
              withPrepositionIn: "Ð¾ÐºÐ¾ 1 Ð¼ÐµÑÐµÑ†",
            },
            dual: "Ð¾ÐºÐ¾ {{count}} Ð¼ÐµÑÐµÑ†Ð°",
            other: "Ð¾ÐºÐ¾ {{count}} Ð¼ÐµÑÐµÑ†Ð¸",
          },
          xMonths: {
            one: {
              standalone: "1 Ð¼ÐµÑÐµÑ†",
              withPrepositionAgo: "1 Ð¼ÐµÑÐµÑ†",
              withPrepositionIn: "1 Ð¼ÐµÑÐµÑ†",
            },
            dual: "{{count}} Ð¼ÐµÑÐµÑ†Ð°",
            other: "{{count}} Ð¼ÐµÑÐµÑ†Ð¸",
          },
          aboutXYears: {
            one: {
              standalone: "Ð¾ÐºÐ¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              withPrepositionAgo: "Ð¾ÐºÐ¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              withPrepositionIn: "Ð¾ÐºÐ¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
            },
            dual: "Ð¾ÐºÐ¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ðµ",
            other: "Ð¾ÐºÐ¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð°",
          },
          xYears: {
            one: {
              standalone: "1 Ð³Ð¾Ð´Ð¸Ð½Ð°",
              withPrepositionAgo: "1 Ð³Ð¾Ð´Ð¸Ð½Ðµ",
              withPrepositionIn: "1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
            },
            dual: "{{count}} Ð³Ð¾Ð´Ð¸Ð½Ðµ",
            other: "{{count}} Ð³Ð¾Ð´Ð¸Ð½Ð°",
          },
          overXYears: {
            one: {
              standalone: "Ð¿Ñ€ÐµÐºÐ¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              withPrepositionAgo: "Ð¿Ñ€ÐµÐºÐ¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              withPrepositionIn: "Ð¿Ñ€ÐµÐºÐ¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
            },
            dual: "Ð¿Ñ€ÐµÐºÐ¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ðµ",
            other: "Ð¿Ñ€ÐµÐºÐ¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð°",
          },
          almostXYears: {
            one: {
              standalone: "Ð³Ð¾Ñ‚Ð¾Ð²Ð¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              withPrepositionAgo: "Ð³Ð¾Ñ‚Ð¾Ð²Ð¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              withPrepositionIn: "Ð³Ð¾Ñ‚Ð¾Ð²Ð¾ 1 Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
            },
            dual: "Ð³Ð¾Ñ‚Ð¾Ð²Ð¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ðµ",
            other: "Ð³Ð¾Ñ‚Ð¾Ð²Ð¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð°",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                result = formatDistanceLocale[token].one.withPrepositionIn;
              } else {
                result = formatDistanceLocale[token].one.withPrepositionAgo;
              }
            } else {
              result = formatDistanceLocale[token].one.standalone;
            }
          } else if (
            count % 10 > 1 &&
            count % 10 < 5 && // if last digit is between 2 and 4
            String(count).substr(-2, 1) !== "1" // unless the 2nd to last digit is "1"
          ) {
            result = formatDistanceLocale[token].dual.replace(
              "{{count}}",
              count
            );
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "Ð·Ð° " + result;
            } else {
              return "Ð¿Ñ€Ðµ " + result;
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 418 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, d. MMMM yyyy.",
          long: "d. MMMM yyyy.",
          medium: "d. MMM yy.",
          short: "dd. MM. yy.",
        };
        var timeFormats = {
          full: "HH:mm:ss (zzzz)",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Ñƒ' {{time}}",
          long: "{{date}} 'Ñƒ' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 419 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'Ð¿Ñ€Ð¾ÑˆÐ»Ðµ Ð½ÐµÐ´ÐµÑ™Ðµ Ñƒ' p";

              case 3:
                return "'Ð¿Ñ€Ð¾ÑˆÐ»Ðµ ÑÑ€ÐµÐ´Ðµ Ñƒ' p";

              case 6:
                return "'Ð¿Ñ€Ð¾ÑˆÐ»Ðµ ÑÑƒÐ±Ð¾Ñ‚Ðµ Ñƒ' p";

              default:
                return "'Ð¿Ñ€Ð¾ÑˆÐ»Ð¸' EEEE 'Ñƒ' p";
            }
          },
          yesterday: "'Ñ˜ÑƒÑ‡Ðµ Ñƒ' p",
          today: "'Ð´Ð°Ð½Ð°Ñ Ñƒ' p",
          tomorrow: "'ÑÑƒÑ‚Ñ€Ð° Ñƒ' p",
          nextWeek: function (date) {
            var day = date.getUTCDay();

            switch (day) {
              case 0:
                return "'ÑÐ»ÐµÐ´ÐµÑ›Ðµ Ð½ÐµÐ´ÐµÑ™Ðµ Ñƒ' p";

              case 3:
                return "'ÑÐ»ÐµÐ´ÐµÑ›Ñƒ ÑÑ€ÐµÐ´Ñƒ Ñƒ' p";

              case 6:
                return "'ÑÐ»ÐµÐ´ÐµÑ›Ñƒ ÑÑƒÐ±Ð¾Ñ‚Ñƒ Ñƒ' p";

              default:
                return "'ÑÐ»ÐµÐ´ÐµÑ›Ð¸' EEEE 'Ñƒ' p";
            }
          },
          other: "P",
        };

        function formatRelative(token, date, _baseDate, _options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 420 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return String(number).concat(".");
        }

        var eraValues = {
          narrow: ["Ð¿Ñ€.Ð½.Ðµ.", "ÐÐ”"],
          abbreviated: ["Ð¿Ñ€. Ð¥Ñ€.", "Ð¿Ð¾. Ð¥Ñ€."],
          wide: ["ÐŸÑ€Ðµ Ð¥Ñ€Ð¸ÑÑ‚Ð°", "ÐŸÐ¾ÑÐ»Ðµ Ð¥Ñ€Ð¸ÑÑ‚Ð°"],
        };
        var monthValues = {
          narrow: [
            "1.",
            "2.",
            "3.",
            "4.",
            "5.",
            "6.",
            "7.",
            "8.",
            "9.",
            "10.",
            "11.",
            "12.",
          ],
          abbreviated: [
            "Ñ˜Ð°Ð½",
            "Ñ„ÐµÐ±",
            "Ð¼Ð°Ñ€",
            "Ð°Ð¿Ñ€",
            "Ð¼Ð°Ñ˜",
            "Ñ˜ÑƒÐ½",
            "Ñ˜ÑƒÐ»",
            "Ð°Ð²Ð³",
            "ÑÐµÐ¿",
            "Ð¾ÐºÑ‚",
            "Ð½Ð¾Ð²",
            "Ð´ÐµÑ†",
          ],
          wide: [
            "Ñ˜Ð°Ð½ÑƒÐ°Ñ€",
            "Ñ„ÐµÐ±Ñ€ÑƒÐ°Ñ€",
            "Ð¼Ð°Ñ€Ñ‚",
            "Ð°Ð¿Ñ€Ð¸Ð»",
            "Ð¼Ð°Ñ˜",
            "Ñ˜ÑƒÐ½",
            "Ñ˜ÑƒÐ»",
            "Ð°Ð²Ð³ÑƒÑÑ‚",
            "ÑÐµÐ¿Ñ‚ÐµÐ¼Ð±Ð°Ñ€",
            "Ð¾ÐºÑ‚Ð¾Ð±Ð°Ñ€",
            "Ð½Ð¾Ð²ÐµÐ¼Ð±Ð°Ñ€",
            "Ð´ÐµÑ†ÐµÐ¼Ð±Ð°Ñ€",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "1.",
            "2.",
            "3.",
            "4.",
            "5.",
            "6.",
            "7.",
            "8.",
            "9.",
            "10.",
            "11.",
            "12.",
          ],
          abbreviated: [
            "Ñ˜Ð°Ð½",
            "Ñ„ÐµÐ±",
            "Ð¼Ð°Ñ€",
            "Ð°Ð¿Ñ€",
            "Ð¼Ð°Ñ˜",
            "Ñ˜ÑƒÐ½",
            "Ñ˜ÑƒÐ»",
            "Ð°Ð²Ð³",
            "ÑÐµÐ¿",
            "Ð¾ÐºÑ‚",
            "Ð½Ð¾Ð²",
            "Ð´ÐµÑ†",
          ],
          wide: [
            "Ñ˜Ð°Ð½ÑƒÐ°Ñ€",
            "Ñ„ÐµÐ±Ñ€ÑƒÐ°Ñ€",
            "Ð¼Ð°Ñ€Ñ‚",
            "Ð°Ð¿Ñ€Ð¸Ð»",
            "Ð¼Ð°Ñ˜",
            "Ñ˜ÑƒÐ½",
            "Ñ˜ÑƒÐ»",
            "Ð°Ð²Ð³ÑƒÑÑ‚",
            "ÑÐµÐ¿Ñ‚ÐµÐ¼Ð±Ð°Ñ€",
            "Ð¾ÐºÑ‚Ð¾Ð±Ð°Ñ€",
            "Ð½Ð¾Ð²ÐµÐ¼Ð±Ð°Ñ€",
            "Ð´ÐµÑ†ÐµÐ¼Ð±Ð°Ñ€",
          ],
        };
        var quarterValues = {
          narrow: ["1.", "2.", "3.", "4."],
          abbreviated: ["1. ÐºÐ².", "2. ÐºÐ².", "3. ÐºÐ².", "4. ÐºÐ²."],
          wide: [
            "1. ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "2. ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "3. ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "4. ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
          ],
        };
        var dayValues = {
          narrow: ["Ð", "ÐŸ", "Ð£", "Ð¡", "Ð§", "ÐŸ", "Ð¡"],
          short: [
            "Ð½ÐµÐ´",
            "Ð¿Ð¾Ð½",
            "ÑƒÑ‚Ð¾",
            "ÑÑ€Ðµ",
            "Ñ‡ÐµÑ‚",
            "Ð¿ÐµÑ‚",
            "ÑÑƒÐ±",
          ],
          abbreviated: [
            "Ð½ÐµÐ´",
            "Ð¿Ð¾Ð½",
            "ÑƒÑ‚Ð¾",
            "ÑÑ€Ðµ",
            "Ñ‡ÐµÑ‚",
            "Ð¿ÐµÑ‚",
            "ÑÑƒÐ±",
          ],
          wide: [
            "Ð½ÐµÐ´ÐµÑ™Ð°",
            "Ð¿Ð¾Ð½ÐµÐ´ÐµÑ™Ð°Ðº",
            "ÑƒÑ‚Ð¾Ñ€Ð°Ðº",
            "ÑÑ€ÐµÐ´Ð°",
            "Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð°Ðº",
            "Ð¿ÐµÑ‚Ð°Ðº",
            "ÑÑƒÐ±Ð¾Ñ‚Ð°",
          ],
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "ÐÐœ",
            pm: "ÐŸÐœ",
            midnight: "Ð¿Ð¾Ð½Ð¾Ñ›",
            noon: "Ð¿Ð¾Ð´Ð½Ðµ",
            morning: "ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ",
            afternoon: "Ð¿Ð¾Ð¿Ð¾Ð´Ð½Ðµ",
            evening: "ÑƒÐ²ÐµÑ‡Ðµ",
            night: "Ð½Ð¾Ñ›Ñƒ",
          },
          abbreviated: {
            am: "ÐÐœ",
            pm: "ÐŸÐœ",
            midnight: "Ð¿Ð¾Ð½Ð¾Ñ›",
            noon: "Ð¿Ð¾Ð´Ð½Ðµ",
            morning: "ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ",
            afternoon: "Ð¿Ð¾Ð¿Ð¾Ð´Ð½Ðµ",
            evening: "ÑƒÐ²ÐµÑ‡Ðµ",
            night: "Ð½Ð¾Ñ›Ñƒ",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "Ð¿Ð¾Ð½Ð¾Ñ›",
            noon: "Ð¿Ð¾Ð´Ð½Ðµ",
            morning: "ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ",
            afternoon: "Ð¿Ð¾ÑÐ»Ðµ Ð¿Ð¾Ð´Ð½Ðµ",
            evening: "ÑƒÐ²ÐµÑ‡Ðµ",
            night: "Ð½Ð¾Ñ›Ñƒ",
          },
        };
        var dayPeriodValues = {
          narrow: {
            am: "AM",
            pm: "PM",
            midnight: "Ð¿Ð¾Ð½Ð¾Ñ›",
            noon: "Ð¿Ð¾Ð´Ð½Ðµ",
            morning: "ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ",
            afternoon: "Ð¿Ð¾Ð¿Ð¾Ð´Ð½Ðµ",
            evening: "ÑƒÐ²ÐµÑ‡Ðµ",
            night: "Ð½Ð¾Ñ›Ñƒ",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "Ð¿Ð¾Ð½Ð¾Ñ›",
            noon: "Ð¿Ð¾Ð´Ð½Ðµ",
            morning: "ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ",
            afternoon: "Ð¿Ð¾Ð¿Ð¾Ð´Ð½Ðµ",
            evening: "ÑƒÐ²ÐµÑ‡Ðµ",
            night: "Ð½Ð¾Ñ›Ñƒ",
          },
          wide: {
            am: "AM",
            pm: "PM",
            midnight: "Ð¿Ð¾Ð½Ð¾Ñ›",
            noon: "Ð¿Ð¾Ð´Ð½Ðµ",
            morning: "ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ",
            afternoon: "Ð¿Ð¾ÑÐ»Ðµ Ð¿Ð¾Ð´Ð½Ðµ",
            evening: "ÑƒÐ²ÐµÑ‡Ðµ",
            night: "Ð½Ð¾Ñ›Ñƒ",
          },
        };
        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 421 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(4));

        var _index2 = _interopRequireDefault(__webpack_require__(5));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)\./i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ð¿Ñ€\.Ð½\.Ðµ\.|ÐÐ”)/i,
          abbreviated: /^(Ð¿Ñ€\.\s?Ð¥Ñ€\.|Ð¿Ð¾\.\s?Ð¥Ñ€\.)/i,
          wide: /^(ÐŸÑ€Ðµ Ð¥Ñ€Ð¸ÑÑ‚Ð°|Ð¿Ñ€Ðµ Ð½Ð¾Ð²Ðµ ÐµÑ€Ðµ|ÐŸÐ¾ÑÐ»Ðµ Ð¥Ñ€Ð¸ÑÑ‚Ð°|Ð½Ð¾Ð²Ð° ÐµÑ€Ð°)/i,
        };
        var parseEraPatterns = {
          any: [/^Ð¿Ñ€/i, /^(Ð¿Ð¾|Ð½Ð¾Ð²Ð°)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]\.\s?ÐºÐ²\.?/i,
          wide: /^[1234]\. ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^(10|11|12|[123456789])\./i,
          abbreviated:
            /^(Ñ˜Ð°Ð½|Ñ„ÐµÐ±|Ð¼Ð°Ñ€|Ð°Ð¿Ñ€|Ð¼Ð°Ñ˜|Ñ˜ÑƒÐ½|Ñ˜ÑƒÐ»|Ð°Ð²Ð³|ÑÐµÐ¿|Ð¾ÐºÑ‚|Ð½Ð¾Ð²|Ð´ÐµÑ†)/i,
          wide: /^((Ñ˜Ð°Ð½ÑƒÐ°Ñ€|Ñ˜Ð°Ð½ÑƒÐ°Ñ€Ð°)|(Ñ„ÐµÐ±Ñ€ÑƒÐ°Ñ€|Ñ„ÐµÐ±Ñ€ÑƒÐ°Ñ€Ð°)|(Ð¼Ð°Ñ€Ñ‚|Ð¼Ð°Ñ€Ñ‚Ð°)|(Ð°Ð¿Ñ€Ð¸Ð»|Ð°Ð¿Ñ€Ð¸Ð»Ð°)|(Ð¼Ñ˜Ð°|Ð¼Ð°Ñ˜Ð°)|(Ñ˜ÑƒÐ½|Ñ˜ÑƒÐ½Ð°)|(Ñ˜ÑƒÐ»|Ñ˜ÑƒÐ»Ð°)|(Ð°Ð²Ð³ÑƒÑÑ‚|Ð°Ð²Ð³ÑƒÑÑ‚Ð°)|(ÑÐµÐ¿Ñ‚ÐµÐ¼Ð±Ð°Ñ€|ÑÐµÐ¿Ñ‚ÐµÐ¼Ð±Ñ€Ð°)|(Ð¾ÐºÑ‚Ð¾Ð±Ð°Ñ€|Ð¾ÐºÑ‚Ð¾Ð±Ñ€Ð°)|(Ð½Ð¾Ð²ÐµÐ¼Ð±Ð°Ñ€|Ð½Ð¾Ð²ÐµÐ¼Ð±Ñ€Ð°)|(Ð´ÐµÑ†ÐµÐ¼Ð±Ð°Ñ€|Ð´ÐµÑ†ÐµÐ¼Ð±Ñ€Ð°))/i,
        };
        var parseMonthPatterns = {
          narrow: [/(10|11|12|[123456789])/i],
          any: [
            /^Ñ˜Ð°/i,
            /^Ñ„/i,
            /^Ð¼Ð°Ñ€/i,
            /^Ð°Ð¿/i,
            /^Ð¼Ð°Ñ˜/i,
            /^Ñ˜ÑƒÐ½/i,
            /^Ñ˜ÑƒÐ»/i,
            /^Ð°Ð²Ð³/i,
            /^Ñ/i,
            /^Ð¾/i,
            /^Ð½/i,
            /^Ð´/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ð¿ÑƒÑÑ‡Ð½]/i,
          short: /^(Ð½ÐµÐ´|Ð¿Ð¾Ð½|ÑƒÑ‚Ð¾|ÑÑ€Ðµ|Ñ‡ÐµÑ‚|Ð¿ÐµÑ‚|ÑÑƒÐ±)/i,
          abbreviated: /^(Ð½ÐµÐ´|Ð¿Ð¾Ð½|ÑƒÑ‚Ð¾|ÑÑ€Ðµ|Ñ‡ÐµÑ‚|Ð¿ÐµÑ‚|ÑÑƒÐ±)/i,
          wide: /^(Ð½ÐµÐ´ÐµÑ™Ð°|Ð¿Ð¾Ð½ÐµÐ´ÐµÑ™Ð°Ðº|ÑƒÑ‚Ð¾Ñ€Ð°Ðº|ÑÑ€ÐµÐ´Ð°|Ñ‡ÐµÑ‚Ð²Ñ€Ñ‚Ð°Ðº|Ð¿ÐµÑ‚Ð°Ðº|ÑÑƒÐ±Ð¾Ñ‚Ð°)/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð¿/i, /^Ñƒ/i, /^Ñ/i, /^Ñ‡/i, /^Ð½/i],
          any: [
            /^Ð½ÐµÐ´/i,
            /^Ð¿Ð¾Ð½/i,
            /^ÑƒÑ‚Ð¾/i,
            /^ÑÑ€Ðµ/i,
            /^Ñ‡ÐµÑ‚/i,
            /^Ð¿ÐµÑ‚/i,
            /^ÑÑƒÐ±/i,
          ],
        };
        var matchDayPeriodPatterns = {
          any: /^(Ð°Ð¼|Ð¿Ð¼|Ð¿Ð¾Ð½Ð¾Ñ›|(Ð¿Ð¾)?Ð¿Ð¾Ð´Ð½Ðµ|ÑƒÐ²ÐµÑ‡Ðµ|Ð½Ð¾Ñ›Ñƒ|Ð¿Ð¾ÑÐ»Ðµ Ð¿Ð¾Ð´Ð½Ðµ|ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^Ð¿Ð¾Ð½Ð¾/i,
            noon: /^Ð¿Ð¾Ð´/i,
            morning: /ÑƒÑ˜ÑƒÑ‚Ñ€Ñƒ/i,
            afternoon: /(Ð¿Ð¾ÑÐ»Ðµ\s|Ð¿Ð¾)+Ð¿Ð¾Ð´Ð½Ðµ/i,
            evening: /(ÑƒÐ²ÐµÑ‡Ðµ)/i,
            night: /(Ð½Ð¾Ñ›Ñƒ)/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index2.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 422 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            singular: "mindre á¤n en sekund",
            plural: "mindre á¤n {{count}} sekunder",
          },
          xSeconds: {
            singular: "en sekund",
            plural: "{{count}} sekunder",
          },
          halfAMinute: "en halv minut",
          lessThanXMinutes: {
            singular: "mindre á¤n en minut",
            plural: "mindre á¤n {{count}} minuter",
          },
          xMinutes: {
            singular: "en minut",
            plural: "{{count}} minuter",
          },
          aboutXHours: {
            singular: "ungefá¤r en timme",
            plural: "ungefá¤r {{count}} timmar",
          },
          xHours: {
            singular: "en timme",
            plural: "{{count}} timmar",
          },
          xDays: {
            singular: "en dag",
            plural: "{{count}} dagar",
          },
          aboutXWeeks: {
            singular: "ungefá¤r en vecka",
            plural: "ungefá¤r {{count}} vecka",
          },
          xWeeks: {
            singular: "en vecka",
            plural: "{{count}} vecka",
          },
          aboutXMonths: {
            singular: "ungefá¤r en má¥nad",
            plural: "ungefá¤r {{count}} má¥nader",
          },
          xMonths: {
            singular: "en má¥nad",
            plural: "{{count}} má¥nader",
          },
          aboutXYears: {
            singular: "ungefá¤r ett á¥r",
            plural: "ungefá¤r {{count}} á¥r",
          },
          xYears: {
            singular: "ett á¥r",
            plural: "{{count}} á¥r",
          },
          overXYears: {
            singular: "á¶ver ett á¥r",
            plural: "á¶ver {{count}} á¥r",
          },
          almostXYears: {
            singular: "ná¤stan ett á¥r",
            plural: "ná¤stan {{count}} á¥r",
          },
        };
        var wordMapping = [
          "noll",
          "en",
          "tvá¥",
          "tre",
          "fyra",
          "fem",
          "sex",
          "sju",
          "á¥tta",
          "nio",
          "tio",
          "elva",
          "tolv",
        ];

        function formatDistance(token, count, options) {
          options = options || {
            onlyNumeric: false,
          };
          var translation = formatDistanceLocale[token];
          var result;

          if (typeof translation === "string") {
            result = translation;
          } else if (count === 0 || count > 1) {
            if (options.onlyNumeric) {
              result = translation.plural.replace("{{count}}", count);
            } else {
              result = translation.plural.replace(
                "{{count}}",
                count < 13 ? wordMapping[count] : count
              );
            }
          } else {
            result = translation.singular;
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "om " + result;
            } else {
              return result + " sedan";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 423 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE d MMMM y",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "y-MM-dd",
        };
        var timeFormats = {
          full: "'kl'. HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'kl.' {{time}}",
          long: "{{date}} 'kl.' {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 424 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'i' EEEE's kl.' p",
          yesterday: "'igá¥r kl.' p",
          today: "'idag kl.' p",
          tomorrow: "'imorgon kl.' p",
          nextWeek: "EEEE 'kl.' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 425 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["f.Kr.", "e.Kr."],
          abbreviated: ["f.Kr.", "e.Kr."],
          wide: ["fá¶re Kristus", "efter Kristus"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: [
            "1:a kvartalet",
            "2:a kvartalet",
            "3:e kvartalet",
            "4:e kvartalet",
          ],
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "jan.",
            "feb.",
            "mars",
            "apr.",
            "maj",
            "juni",
            "juli",
            "aug.",
            "sep.",
            "okt.",
            "nov.",
            "dec.",
          ],
          wide: [
            "januari",
            "februari",
            "mars",
            "april",
            "maj",
            "juni",
            "juli",
            "augusti",
            "september",
            "oktober",
            "november",
            "december",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "T", "O", "T", "F", "L"],
          short: ["sá¶", "má¥", "ti", "on", "to", "fr", "lá¶"],
          abbreviated: ["sá¶n", "má¥n", "tis", "ons", "tors", "fre", "lá¶r"],
          wide: [
            "sá¶ndag",
            "má¥ndag",
            "tisdag",
            "onsdag",
            "torsdag",
            "fredag",
            "lá¶rdag",
          ], // https://www.unicode.org/cldr/charts/32/summary/sv.html#1888
        };
        var dayPeriodValues = {
          narrow: {
            am: "fm",
            pm: "em",
            midnight: "midnatt",
            noon: "middag",
            morning: "morg.",
            afternoon: "efterm.",
            evening: "kvá¤ll",
            night: "natt",
          },
          abbreviated: {
            am: "f.m.",
            pm: "e.m.",
            midnight: "midnatt",
            noon: "middag",
            morning: "morgon",
            afternoon: "efterm.",
            evening: "kvá¤ll",
            night: "natt",
          },
          wide: {
            am: "fá¶rmiddag",
            pm: "eftermiddag",
            midnight: "midnatt",
            noon: "middag",
            morning: "morgon",
            afternoon: "eftermiddag",
            evening: "kvá¤ll",
            night: "natt",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "fm",
            pm: "em",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morg.",
            afternoon: "pá¥ efterm.",
            evening: "pá¥ kvá¤llen",
            night: "pá¥ natten",
          },
          abbreviated: {
            am: "fm",
            pm: "em",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morg.",
            afternoon: "pá¥ efterm.",
            evening: "pá¥ kvá¤llen",
            night: "pá¥ natten",
          },
          wide: {
            am: "fm",
            pm: "em",
            midnight: "midnatt",
            noon: "middag",
            morning: "pá¥ morgonen",
            afternoon: "pá¥ eftermiddagen",
            evening: "pá¥ kvá¤llen",
            night: "pá¥ natten",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          var rem100 = number % 100;

          if (rem100 > 20 || rem100 < 10) {
            switch (rem100 % 10) {
              case 1:
              case 2:
                return number + ":a";
            }
          }

          return number + ":e";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 426 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(:a|:e)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
          abbreviated:
            /^(f\.? ?Kr\.?|f\.? ?v\.? ?t\.?|e\.? ?Kr\.?|v\.? ?t\.?)/i,
          wide: /^(fá¶re Kristus|fá¶re vá¥r tid|efter Kristus|vá¥r tid)/i,
        };
        var parseEraPatterns = {
          any: [/^f/i, /^[ev]/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](:a|:e)? kvartalet/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|feb|mar|apr|maj|jun|jul|aug|sep|okt|nov|dec)\.?/i,
          wide: /^(januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^maj/i,
            /^jun/i,
            /^jul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtofl]/i,
          short: /^(sá¶|má¥|ti|on|to|fr|lá¶)/i,
          abbreviated: /^(sá¶n|má¥n|tis|ons|tors|fre|lá¶r)/i,
          wide: /^(sá¶ndag|má¥ndag|tisdag|onsdag|torsdag|fredag|lá¶rdag)/i,
        };
        var parseDayPatterns = {
          any: [/^s/i, /^m/i, /^ti/i, /^o/i, /^to/i, /^f/i, /^l/i],
        };
        var matchDayPeriodPatterns = {
          any: /^([fe]\.?\s?m\.?|midn(att)?|midd(ag)?|(pá¥) (morgonen|eftermiddagen|kvá¤llen|natten))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^f/i,
            pm: /^e/i,
            midnight: /^midn/i,
            noon: /^midd/i,
            morning: /morgon/i,
            afternoon: /eftermiddag/i,
            evening: /kvá¤ll/i,
            night: /natt/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 427 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: {
              default:
                "à®’à®°à¯ à®µà®¿à®©à®¾à®Ÿà®¿à®•à¯à®•à¯ à®•à¯à®±à¯ˆà®µà®¾à®•",
              in: "à®’à®°à¯ à®µà®¿à®©à®¾à®Ÿà®¿à®•à¯à®•à¯à®³à¯",
              ago: "à®’à®°à¯ à®µà®¿à®©à®¾à®Ÿà®¿à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default:
                "{{count}} à®µà®¿à®©à®¾à®Ÿà®¿à®•à®³à¯à®•à¯à®•à¯ à®•à¯à®±à¯ˆà®µà®¾à®•",
              in: "{{count}} à®µà®¿à®©à®¾à®Ÿà®¿à®•à®³à¯à®•à¯à®•à¯à®³à¯",
              ago: "{{count}} à®µà®¿à®©à®¾à®Ÿà®¿à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          xSeconds: {
            one: {
              default: "1 à®µà®¿à®©à®¾à®Ÿà®¿",
              in: "1 à®µà®¿à®©à®¾à®Ÿà®¿à®¯à®¿à®²à¯",
              ago: "1 à®µà®¿à®©à®¾à®Ÿà®¿ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "{{count}} à®µà®¿à®¨à®¾à®Ÿà®¿à®•à®³à¯",
              in: "{{count}} à®µà®¿à®©à®¾à®Ÿà®¿à®•à®³à®¿à®²à¯",
              ago: "{{count}} à®µà®¿à®¨à®¾à®Ÿà®¿à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          halfAMinute: {
            default: "à®…à®°à¯ˆ à®¨à®¿à®®à®¿à®Ÿà®®à¯",
            in: "à®…à®°à¯ˆ à®¨à®¿à®®à®¿à®Ÿà®¤à¯à®¤à®¿à®²à¯",
            ago: "à®…à®°à¯ˆ à®¨à®¿à®®à®¿à®Ÿà®®à¯ à®®à¯à®©à¯à®ªà¯",
          },
          lessThanXMinutes: {
            one: {
              default:
                "à®’à®°à¯ à®¨à®¿à®®à®¿à®Ÿà®¤à¯à®¤à®¿à®±à¯à®•à¯à®®à¯ à®•à¯à®±à¯ˆà®µà®¾à®•",
              in: "à®’à®°à¯ à®¨à®¿à®®à®¿à®Ÿà®¤à¯à®¤à®¿à®±à¯à®•à¯à®³à¯",
              ago: "à®’à®°à¯ à®¨à®¿à®®à®¿à®Ÿà®¤à¯à®¤à®¿à®±à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default:
                "{{count}} à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à¯à®•à¯à®•à¯à®®à¯ à®•à¯à®±à¯ˆà®µà®¾à®•",
              in: "{{count}} à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à¯à®•à¯à®•à¯à®³à¯",
              ago: "{{count}} à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          xMinutes: {
            one: {
              default: "1 à®¨à®¿à®®à®¿à®Ÿà®®à¯",
              in: "1 à®¨à®¿à®®à®¿à®Ÿà®¤à¯à®¤à®¿à®²à¯",
              ago: "1 à®¨à®¿à®®à®¿à®Ÿà®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "{{count}} à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à¯",
              in: "{{count}} à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à®¿à®²à¯",
              ago: "{{count}} à®¨à®¿à®®à®¿à®Ÿà®™à¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          aboutXHours: {
            one: {
              default: "à®šà¯à®®à®¾à®°à¯ 1 à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
              in: "à®šà¯à®®à®¾à®°à¯ 1 à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®²à¯",
              ago: "à®šà¯à®®à®¾à®°à¯ 1 à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®±à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "à®šà¯à®®à®¾à®°à¯ {{count}} à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
              in: "à®šà¯à®®à®¾à®°à¯ {{count}} à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®±à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
              ago: "à®šà¯à®®à®¾à®°à¯ {{count}} à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®²à¯",
            },
          },
          xHours: {
            one: {
              default: "1 à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
              in: "1 à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®²à¯",
              ago: "1 à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®±à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "{{count}} à®®à®£à®¿ à®¨à¯‡à®°à®®à¯",
              in: "{{count}} à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®²à¯",
              ago: "{{count}} à®®à®£à®¿ à®¨à¯‡à®°à®¤à¯à®¤à®¿à®±à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          xDays: {
            one: {
              default: "1 à®¨à®¾à®³à¯",
              in: "1 à®¨à®¾à®³à®¿à®²à¯",
              ago: "1 à®¨à®¾à®³à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "{{count}} à®¨à®¾à®Ÿà¯à®•à®³à¯",
              in: "{{count}} à®¨à®¾à®Ÿà¯à®•à®³à®¿à®²à¯",
              ago: "{{count}} à®¨à®¾à®Ÿà¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          aboutXWeeks: {
            one: {
              default: "à®šà¯à®®à®¾à®°à¯ 1 à®µà®¾à®°à®®à¯",
              in: "à®šà¯à®®à®¾à®°à¯ 1 à®µà®¾à®°à®¤à¯à®¤à®¿à®²à¯",
              ago: "à®šà¯à®®à®¾à®°à¯ 1 à®µà®¾à®°à®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "à®šà¯à®®à®¾à®°à¯ {{count}} à®µà®¾à®°à®™à¯à®•à®³à¯",
              in: "à®šà¯à®®à®¾à®°à¯ {{count}} à®µà®¾à®°à®™à¯à®•à®³à®¿à®²à¯",
              ago: "à®šà¯à®®à®¾à®°à¯ {{count}} à®µà®¾à®°à®™à¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          xWeeks: {
            one: {
              default: "1 à®µà®¾à®°à®®à¯",
              in: "1 à®µà®¾à®°à®¤à¯à®¤à®¿à®²à¯",
              ago: "1 à®µà®¾à®°à®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "{{count}} à®µà®¾à®°à®™à¯à®•à®³à¯",
              in: "{{count}} à®µà®¾à®°à®™à¯à®•à®³à®¿à®²à¯",
              ago: "{{count}} à®µà®¾à®°à®™à¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          aboutXMonths: {
            one: {
              default: "à®šà¯à®®à®¾à®°à¯ 1 à®®à®¾à®¤à®®à¯",
              in: "à®šà¯à®®à®¾à®°à¯ 1 à®®à®¾à®¤à®¤à¯à®¤à®¿à®²à¯",
              ago: "à®šà¯à®®à®¾à®°à¯ 1 à®®à®¾à®¤à®¤à¯à®¤à®¿à®±à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "à®šà¯à®®à®¾à®°à¯ {{count}} à®®à®¾à®¤à®™à¯à®•à®³à¯",
              in: "à®šà¯à®®à®¾à®°à¯ {{count}} à®®à®¾à®¤à®™à¯à®•à®³à®¿à®²à¯",
              ago: "à®šà¯à®®à®¾à®°à¯ {{count}} à®®à®¾à®¤à®™à¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          xMonths: {
            one: {
              default: "1 à®®à®¾à®¤à®®à¯",
              in: "1 à®®à®¾à®¤à®¤à¯à®¤à®¿à®²à¯",
              ago: "1 à®®à®¾à®¤à®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "{{count}} à®®à®¾à®¤à®™à¯à®•à®³à¯",
              in: "{{count}} à®®à®¾à®¤à®™à¯à®•à®³à®¿à®²à¯",
              ago: "{{count}} à®®à®¾à®¤à®™à¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          aboutXYears: {
            one: {
              default: "à®šà¯à®®à®¾à®°à¯ 1 à®µà®°à¯à®Ÿà®®à¯",
              in: "à®šà¯à®®à®¾à®°à¯ 1 à®†à®£à¯à®Ÿà®¿à®²à¯",
              ago: "à®šà¯à®®à®¾à®°à¯ 1 à®µà®°à¯à®Ÿà®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "à®šà¯à®®à®¾à®°à¯ {{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯",
              in: "à®šà¯à®®à®¾à®°à¯ {{count}} à®†à®£à¯à®Ÿà¯à®•à®³à®¿à®²à¯",
              ago: "à®šà¯à®®à®¾à®°à¯ {{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          xYears: {
            one: {
              default: "1 à®µà®°à¯à®Ÿà®®à¯",
              in: "1 à®†à®£à¯à®Ÿà®¿à®²à¯",
              ago: "1 à®µà®°à¯à®Ÿà®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default: "{{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯",
              in: "{{count}} à®†à®£à¯à®Ÿà¯à®•à®³à®¿à®²à¯",
              ago: "{{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          overXYears: {
            one: {
              default: "1 à®µà®°à¯à®Ÿà®¤à¯à®¤à®¿à®±à¯à®•à¯ à®®à¯‡à®²à¯",
              in: "1 à®µà®°à¯à®Ÿà®¤à¯à®¤à®¿à®±à¯à®•à¯à®®à¯ à®®à¯‡à®²à®¾à®•",
              ago: "1 à®µà®°à¯à®Ÿà®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default:
                "{{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯à®•à¯à®•à¯à®®à¯ à®®à¯‡à®²à®¾à®•",
              in: "{{count}} à®†à®£à¯à®Ÿà¯à®•à®³à®¿à®²à¯",
              ago: "{{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
          almostXYears: {
            one: {
              default: "à®•à®¿à®Ÿà¯à®Ÿà®¤à¯à®¤à®Ÿà¯à®Ÿ 1 à®µà®°à¯à®Ÿà®®à¯",
              in: "à®•à®¿à®Ÿà¯à®Ÿà®¤à¯à®¤à®Ÿà¯à®Ÿ 1 à®†à®£à¯à®Ÿà®¿à®²à¯",
              ago: "à®•à®¿à®Ÿà¯à®Ÿà®¤à¯à®¤à®Ÿà¯à®Ÿ 1 à®µà®°à¯à®Ÿà®®à¯ à®®à¯à®©à¯à®ªà¯",
            },
            other: {
              default:
                "à®•à®¿à®Ÿà¯à®Ÿà®¤à¯à®¤à®Ÿà¯à®Ÿ {{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯",
              in: "à®•à®¿à®Ÿà¯à®Ÿà®¤à¯à®¤à®Ÿà¯à®Ÿ {{count}} à®†à®£à¯à®Ÿà¯à®•à®³à®¿à®²à¯",
              ago: "à®•à®¿à®Ÿà¯à®Ÿà®¤à¯à®¤à®Ÿà¯à®Ÿ {{count}} à®†à®£à¯à®Ÿà¯à®•à®³à¯à®•à¯à®•à¯ à®®à¯à®©à¯à®ªà¯",
            },
          },
        };

        function getFormatDistanceLocaleWithSuffix(resultObj, options) {
          if (options.addSuffix) {
            if (options.comparison > 0) {
              return resultObj.in;
            } else {
              return resultObj.ago;
            }
          }

          return resultObj.default;
        }

        function formatDistance(token, count) {
          var options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {};
          var result;

          if (formatDistanceLocale[token].default) {
            result = getFormatDistanceLocaleWithSuffix(
              formatDistanceLocale[token],
              options
            );
          } else if (count === 1) {
            result = getFormatDistanceLocaleWithSuffix(
              formatDistanceLocale[token].one,
              options
            );
          } else {
            result = getFormatDistanceLocaleWithSuffix(
              formatDistanceLocale[token].other,
              options
            );
          }

          return result.replace("{{count}}", count);
        }

        module.exports = exports.default;

        /***/
      },
      /* 428 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html
        // CLDR #1846 - #1849
        var dateFormats = {
          full: "EEEE, d MMMM, y",
          long: "d MMMM, y",
          medium: "d MMM, y",
          short: "d/M/yy", // CLDR #1850 - #1853
        };
        var timeFormats = {
          full: "a h:mm:ss zzzz",
          long: "a h:mm:ss z",
          medium: "a h:mm:ss",
          short: "a h:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 429 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'à®•à®Ÿà®¨à¯à®¤' eeee p 'à®®à®£à®¿à®•à¯à®•à¯'",
          yesterday: "'à®¨à¯‡à®±à¯à®±à¯ ' p 'à®®à®£à®¿à®•à¯à®•à¯'",
          today: "'à®‡à®©à¯à®±à¯ ' p 'à®®à®£à®¿à®•à¯à®•à¯'",
          tomorrow: "'à®¨à®¾à®³à¯ˆ ' p 'à®®à®£à®¿à®•à¯à®•à¯'",
          nextWeek: "eeee p 'à®®à®£à®¿à®•à¯à®•à¯'",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 430 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Ref: https://www.unicode.org/cldr/charts/32/summary/ta.html
        var eraValues = {
          narrow: ["à®•à®¿.à®®à¯.", "à®•à®¿.à®ªà®¿."],
          abbreviated: ["à®•à®¿.à®®à¯.", "à®•à®¿.à®ªà®¿."],
          // CLDR #1624, #1626
          wide: [
            "à®•à®¿à®±à®¿à®¸à¯à®¤à¯à®µà¯à®•à¯à®•à¯ à®®à¯à®©à¯",
            "à®…à®©à¯à®©à¯‹ à®Ÿà¯‹à®®à®¿à®©à®¿",
          ], // CLDR #1620, #1622
        };
        var quarterValues = {
          // CLDR #1644 - #1647
          narrow: ["1", "2", "3", "4"],
          // CLDR #1636 - #1639
          abbreviated: [
            "à®•à®¾à®²à®¾.1",
            "à®•à®¾à®²à®¾.2",
            "à®•à®¾à®²à®¾.3",
            "à®•à®¾à®²à®¾.4",
          ],
          // CLDR #1628 - #1631
          wide: [
            "à®’à®©à¯à®±à®¾à®®à¯ à®•à®¾à®²à®¾à®£à¯à®Ÿà¯",
            "à®‡à®°à®£à¯à®Ÿà®¾à®®à¯ à®•à®¾à®²à®¾à®£à¯à®Ÿà¯",
            "à®®à¯‚à®©à¯à®±à®¾à®®à¯ à®•à®¾à®²à®¾à®£à¯à®Ÿà¯",
            "à®¨à®¾à®©à¯à®•à®¾à®®à¯ à®•à®¾à®²à®¾à®£à¯à®Ÿà¯",
          ],
        };
        var monthValues = {
          // CLDR #700 - #711
          narrow: [
            "à®œ",
            "à®ªà®¿",
            "à®®à®¾",
            "à®",
            "à®®à¯‡",
            "à®œà¯‚",
            "à®œà¯‚",
            "à®†",
            "à®šà¯†",
            "à®…",
            "à®¨",
            "à®Ÿà®¿",
          ],
          // CLDR #1676 - #1687
          abbreviated: [
            "à®œà®©.",
            "à®ªà®¿à®ªà¯.",
            "à®®à®¾à®°à¯.",
            "à®à®ªà¯.",
            "à®®à¯‡",
            "à®œà¯‚à®©à¯",
            "à®œà¯‚à®²à¯ˆ",
            "à®†à®•.",
            "à®šà¯†à®ªà¯.",
            "à®…à®•à¯.",
            "à®¨à®µ.",
            "à®Ÿà®¿à®š.",
          ],
          // CLDR #1652 - #1663
          wide: [
            "à®œà®©à®µà®°à®¿", // January
            "à®ªà®¿à®ªà¯à®°à®µà®°à®¿", // February
            "à®®à®¾à®°à¯à®šà¯", // March
            "à®à®ªà¯à®°à®²à¯", // April
            "à®®à¯‡", // May
            "à®œà¯‚à®©à¯", // June
            "à®œà¯‚à®²à¯ˆ", // July
            "à®†à®•à®¸à¯à®Ÿà¯", // August
            "à®šà¯†à®ªà¯à®Ÿà®®à¯à®ªà®°à¯", // September
            "à®…à®•à¯à®Ÿà¯‹à®ªà®°à¯", // October
            "à®¨à®µà®®à¯à®ªà®°à¯", // November
            "à®Ÿà®¿à®šà®®à¯à®ªà®°à¯", // December
          ],
        };
        var dayValues = {
          // CLDR #1766 - #1772
          narrow: [
            "à®žà®¾",
            "à®¤à®¿",
            "à®šà¯†",
            "à®ªà¯",
            "à®µà®¿",
            "à®µà¯†",
            "à®š",
          ],
          // CLDR #1752 - #1758
          short: [
            "à®žà®¾",
            "à®¤à®¿",
            "à®šà¯†",
            "à®ªà¯",
            "à®µà®¿",
            "à®µà¯†",
            "à®š",
          ],
          // CLDR #1738 - #1744
          abbreviated: [
            "à®žà®¾à®¯à®¿.",
            "à®¤à®¿à®™à¯.",
            "à®šà¯†à®µà¯.",
            "à®ªà¯à®¤.",
            "à®µà®¿à®¯à®¾.",
            "à®µà¯†à®³à¯.",
            "à®šà®©à®¿",
          ],
          // CLDR #1724 - #1730
          wide: [
            "à®žà®¾à®¯à®¿à®±à¯", // Sunday
            "à®¤à®¿à®™à¯à®•à®³à¯", // Monday
            "à®šà¯†à®µà¯à®µà®¾à®¯à¯", // Tuesday
            "à®ªà¯à®¤à®©à¯", // Wednesday
            "à®µà®¿à®¯à®¾à®´à®©à¯", // Thursday
            "à®µà¯†à®³à¯à®³à®¿", // Friday
            "à®šà®©à®¿", // Saturday
          ], // CLDR #1780 - #1845
        };
        var dayPeriodValues = {
          narrow: {
            am: "à®®à¯.à®ª",
            pm: "à®ªà®¿.à®ª",
            midnight: "à®¨à®³à¯.",
            noon: "à®¨à®£à¯.",
            morning: "à®•à®¾.",
            afternoon: "à®®à®¤à®¿.",
            evening: "à®®à®¾.",
            night: "à®‡à®°.",
          },
          abbreviated: {
            am: "à®®à¯à®±à¯à®ªà®•à®²à¯",
            pm: "à®ªà®¿à®±à¯à®ªà®•à®²à¯",
            midnight: "à®¨à®³à¯à®³à®¿à®°à®µà¯",
            noon: "à®¨à®£à¯à®ªà®•à®²à¯",
            morning: "à®•à®¾à®²à¯ˆ",
            afternoon: "à®®à®¤à®¿à®¯à®®à¯",
            evening: "à®®à®¾à®²à¯ˆ",
            night: "à®‡à®°à®µà¯",
          },
          wide: {
            am: "à®®à¯à®±à¯à®ªà®•à®²à¯",
            pm: "à®ªà®¿à®±à¯à®ªà®•à®²à¯",
            midnight: "à®¨à®³à¯à®³à®¿à®°à®µà¯",
            noon: "à®¨à®£à¯à®ªà®•à®²à¯",
            morning: "à®•à®¾à®²à¯ˆ",
            afternoon: "à®®à®¤à®¿à®¯à®®à¯",
            evening: "à®®à®¾à®²à¯ˆ",
            night: "à®‡à®°à®µà¯",
          }, // CLDR #1780 - #1845
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "à®®à¯.à®ª",
            pm: "à®ªà®¿.à®ª",
            midnight: "à®¨à®³à¯.",
            noon: "à®¨à®£à¯.",
            morning: "à®•à®¾.",
            afternoon: "à®®à®¤à®¿.",
            evening: "à®®à®¾.",
            night: "à®‡à®°.",
          },
          abbreviated: {
            am: "à®®à¯à®±à¯à®ªà®•à®²à¯",
            pm: "à®ªà®¿à®±à¯à®ªà®•à®²à¯",
            midnight: "à®¨à®³à¯à®³à®¿à®°à®µà¯",
            noon: "à®¨à®£à¯à®ªà®•à®²à¯",
            morning: "à®•à®¾à®²à¯ˆ",
            afternoon: "à®®à®¤à®¿à®¯à®®à¯",
            evening: "à®®à®¾à®²à¯ˆ",
            night: "à®‡à®°à®µà¯",
          },
          wide: {
            am: "à®®à¯à®±à¯à®ªà®•à®²à¯",
            pm: "à®ªà®¿à®±à¯à®ªà®•à®²à¯",
            midnight: "à®¨à®³à¯à®³à®¿à®°à®µà¯",
            noon: "à®¨à®£à¯à®ªà®•à®²à¯",
            morning: "à®•à®¾à®²à¯ˆ",
            afternoon: "à®®à®¤à®¿à®¯à®®à¯",
            evening: "à®®à®¾à®²à¯ˆ",
            night: "à®‡à®°à®µà¯",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'
          // var rem100 = number % 100
          // if (rem100 > 20 || rem100 < 10) {
          //   switch (rem100 % 10) {
          //     case 1:
          //       return number + 'st'
          //     case 2:
          //       return number + 'nd'
          //     case 3:
          //       return number + 'rd'
          //   }
          // }
          // return number + 'th'

          return number;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 431 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(à®µà®¤à¯)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(à®•à®¿.à®®à¯.|à®•à®¿.à®ªà®¿.)/i,
          abbreviated: /^(à®•à®¿\.?\s?à®®à¯\.?|à®•à®¿\.?\s?à®ªà®¿\.?)/,
          wide: /^(à®•à®¿à®±à®¿à®¸à¯à®¤à¯à®µà¯à®•à¯à®•à¯\sà®®à¯à®©à¯|à®…à®©à¯à®©à¯‹\sà®Ÿà¯‹à®®à®¿à®©à®¿)/i,
        };
        var parseEraPatterns = {
          any: [/à®•à®¿\.?\s?à®®à¯\.?/, /à®•à®¿\.?\s?à®ªà®¿\.?/],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^à®•à®¾à®²à®¾.[1234]/i,
          wide: /^(à®’à®©à¯à®±à®¾à®®à¯|à®‡à®°à®£à¯à®Ÿà®¾à®®à¯|à®®à¯‚à®©à¯à®±à®¾à®®à¯|à®¨à®¾à®©à¯à®•à®¾à®®à¯) à®•à®¾à®²à®¾à®£à¯à®Ÿà¯/i,
        };
        var parseQuarterPatterns = {
          narrow: [/1/i, /2/i, /3/i, /4/i],
          any: [
            /(1|à®•à®¾à®²à®¾.1|à®’à®©à¯à®±à®¾à®®à¯)/i,
            /(2|à®•à®¾à®²à®¾.2|à®‡à®°à®£à¯à®Ÿà®¾à®®à¯)/i,
            /(3|à®•à®¾à®²à®¾.3|à®®à¯‚à®©à¯à®±à®¾à®®à¯)/i,
            /(4|à®•à®¾à®²à®¾.4|à®¨à®¾à®©à¯à®•à®¾à®®à¯)/i,
          ],
        };
        var matchMonthPatterns = {
          narrow:
            /^(à®œ|à®ªà®¿|à®®à®¾|à®|à®®à¯‡|à®œà¯‚|à®†|à®šà¯†|à®…|à®¨|à®Ÿà®¿)$/i,
          abbreviated:
            /^(à®œà®©.|à®ªà®¿à®ªà¯.|à®®à®¾à®°à¯.|à®à®ªà¯.|à®®à¯‡|à®œà¯‚à®©à¯|à®œà¯‚à®²à¯ˆ|à®†à®•.|à®šà¯†à®ªà¯.|à®…à®•à¯.|à®¨à®µ.|à®Ÿà®¿à®š.)/i,
          wide: /^(à®œà®©à®µà®°à®¿|à®ªà®¿à®ªà¯à®°à®µà®°à®¿|à®®à®¾à®°à¯à®šà¯|à®à®ªà¯à®°à®²à¯|à®®à¯‡|à®œà¯‚à®©à¯|à®œà¯‚à®²à¯ˆ|à®†à®•à®¸à¯à®Ÿà¯|à®šà¯†à®ªà¯à®Ÿà®®à¯à®ªà®°à¯|à®…à®•à¯à®Ÿà¯‹à®ªà®°à¯|à®¨à®µà®®à¯à®ªà®°à¯|à®Ÿà®¿à®šà®®à¯à®ªà®°à¯)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^à®œ$/i,
            /^à®ªà®¿/i,
            /^à®®à®¾/i,
            /^à®/i,
            /^à®®à¯‡/i,
            /^à®œà¯‚/i,
            /^à®œà¯‚/i,
            /^à®†/i,
            /^à®šà¯†/i,
            /^à®…/i,
            /^à®¨/i,
            /^à®Ÿà®¿/i,
          ],
          any: [
            /^à®œà®©/i,
            /^à®ªà®¿/i,
            /^à®®à®¾/i,
            /^à®/i,
            /^à®®à¯‡/i,
            /^à®œà¯‚à®©à¯/i,
            /^à®œà¯‚à®²à¯ˆ/i,
            /^à®†/i,
            /^à®šà¯†/i,
            /^à®…/i,
            /^à®¨/i,
            /^à®Ÿà®¿/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(à®žà®¾|à®¤à®¿|à®šà¯†|à®ªà¯|à®µà®¿|à®µà¯†|à®š)/i,
          short: /^(à®žà®¾|à®¤à®¿|à®šà¯†|à®ªà¯|à®µà®¿|à®µà¯†|à®š)/i,
          abbreviated:
            /^(à®žà®¾à®¯à®¿.|à®¤à®¿à®™à¯.|à®šà¯†à®µà¯.|à®ªà¯à®¤.|à®µà®¿à®¯à®¾.|à®µà¯†à®³à¯.|à®šà®©à®¿)/i,
          wide: /^(à®žà®¾à®¯à®¿à®±à¯|à®¤à®¿à®™à¯à®•à®³à¯|à®šà¯†à®µà¯à®µà®¾à®¯à¯|à®ªà¯à®¤à®©à¯|à®µà®¿à®¯à®¾à®´à®©à¯|à®µà¯†à®³à¯à®³à®¿|à®šà®©à®¿)/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^à®žà®¾/i,
            /^à®¤à®¿/i,
            /^à®šà¯†/i,
            /^à®ªà¯/i,
            /^à®µà®¿/i,
            /^à®µà¯†/i,
            /^à®š/i,
          ],
          any: [
            /^à®žà®¾/i,
            /^à®¤à®¿/i,
            /^à®šà¯†/i,
            /^à®ªà¯/i,
            /^à®µà®¿/i,
            /^à®µà¯†/i,
            /^à®š/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(à®®à¯.à®ª|à®ªà®¿.à®ª|à®¨à®³à¯|à®¨à®£à¯|à®•à®¾à®²à¯ˆ|à®®à®¤à®¿à®¯à®®à¯|à®®à®¾à®²à¯ˆ|à®‡à®°à®µà¯)/i,
          any: /^(à®®à¯.à®ª|à®ªà®¿.à®ª|à®®à¯à®±à¯à®ªà®•à®²à¯|à®ªà®¿à®±à¯à®ªà®•à®²à¯|à®¨à®³à¯à®³à®¿à®°à®µà¯|à®¨à®£à¯à®ªà®•à®²à¯|à®•à®¾à®²à¯ˆ|à®®à®¤à®¿à®¯à®®à¯|à®®à®¾à®²à¯ˆ|à®‡à®°à®µà¯)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^à®®à¯/i,
            pm: /^à®ªà®¿/i,
            midnight: /^à®¨à®³à¯/i,
            noon: /^à®¨à®£à¯/i,
            morning: /à®•à®¾à®²à¯ˆ/i,
            afternoon: /à®®à®¤à®¿à®¯à®®à¯/i,
            evening: /à®®à®¾à®²à¯ˆ/i,
            night: /à®‡à®°à®µà¯/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 432 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        // Source: https://www.unicode.org/cldr/charts/32/summary/te.html
        var formatDistanceLocale = {
          lessThanXSeconds: {
            standalone: {
              one: "à°¸à±†à°•à°¨à± à°•à°¨à±à°¨à°¾ à°¤à°•à±à°•à±à°µ",
              other:
                "{{count}} à°¸à±†à°•à°¨à±à°² à°•à°¨à±à°¨à°¾ à°¤à°•à±à°•à±à°µ",
            },
            withPreposition: {
              one: "à°¸à±†à°•à°¨à±",
              other: "{{count}} à°¸à±†à°•à°¨à±à°²",
            },
          },
          xSeconds: {
            standalone: {
              one: "à°’à°• à°¸à±†à°•à°¨à±",
              // CLDR #1314
              other: "{{count}} à°¸à±†à°•à°¨à±à°²",
            },
            withPreposition: {
              one: "à°’à°• à°¸à±†à°•à°¨à±",
              other: "{{count}} à°¸à±†à°•à°¨à±à°²",
            },
          },
          halfAMinute: {
            standalone: "à°…à°° à°¨à°¿à°®à°¿à°·à°‚",
            withPreposition: "à°…à°° à°¨à°¿à°®à°¿à°·à°‚",
          },
          lessThanXMinutes: {
            standalone: {
              one: "à°’à°• à°¨à°¿à°®à°¿à°·à°‚ à°•à°¨à±à°¨à°¾ à°¤à°•à±à°•à±à°µ",
              other:
                "{{count}} à°¨à°¿à°®à°¿à°·à°¾à°² à°•à°¨à±à°¨à°¾ à°¤à°•à±à°•à±à°µ",
            },
            withPreposition: {
              one: "à°’à°• à°¨à°¿à°®à°¿à°·à°‚",
              other: "{{count}} à°¨à°¿à°®à°¿à°·à°¾à°²",
            },
          },
          xMinutes: {
            standalone: {
              one: "à°’à°• à°¨à°¿à°®à°¿à°·à°‚",
              // CLDR #1311
              other: "{{count}} à°¨à°¿à°®à°¿à°·à°¾à°²à±",
            },
            withPreposition: {
              one: "à°’à°• à°¨à°¿à°®à°¿à°·à°‚",
              // CLDR #1311
              other: "{{count}} à°¨à°¿à°®à°¿à°·à°¾à°²",
            },
          },
          aboutXHours: {
            standalone: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°—à°‚à°Ÿ",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°—à°‚à°Ÿà°²à±",
            },
            withPreposition: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°—à°‚à°Ÿ",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°—à°‚à°Ÿà°²",
            },
          },
          xHours: {
            standalone: {
              one: "à°’à°• à°—à°‚à°Ÿ",
              // CLDR #1308
              other: "{{count}} à°—à°‚à°Ÿà°²à±",
            },
            withPreposition: {
              one: "à°’à°• à°—à°‚à°Ÿ",
              other: "{{count}} à°—à°‚à°Ÿà°²",
            },
          },
          xDays: {
            standalone: {
              one: "à°’à°• à°°à±‹à°œà±",
              // CLDR #1292
              other: "{{count}} à°°à±‹à°œà±à°²à±",
            },
            withPreposition: {
              one: "à°’à°• à°°à±‹à°œà±",
              other: "{{count}} à°°à±‹à°œà±à°²",
            },
          },
          aboutXWeeks: {
            standalone: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°µà°¾à°°à°‚",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°µà°¾à°°à°¾à°²à±",
            },
            withPreposition: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°µà°¾à°°à°‚",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°µà°¾à°°à°¾à°²à°²",
            },
          },
          xWeeks: {
            standalone: {
              one: "à°’à°• à°µà°¾à°°à°‚",
              other: "{{count}} à°µà°¾à°°à°¾à°²à±",
            },
            withPreposition: {
              one: "à°’à°• à°µà°¾à°°à°‚",
              other: "{{count}} à°µà°¾à°°à°¾à°²à°²",
            },
          },
          aboutXMonths: {
            standalone: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°¨à±†à°²",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°¨à±†à°²à°²à±",
            },
            withPreposition: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°¨à±†à°²",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°¨à±†à°²à°²",
            },
          },
          xMonths: {
            standalone: {
              one: "à°’à°• à°¨à±†à°²",
              // CLDR #1281
              other: "{{count}} à°¨à±†à°²à°²à±",
            },
            withPreposition: {
              one: "à°’à°• à°¨à±†à°²",
              other: "{{count}} à°¨à±†à°²à°²",
            },
          },
          aboutXYears: {
            standalone: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²à±",
            },
            withPreposition: {
              one: "à°¸à±à°®à°¾à°°à± à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
              other: "à°¸à±à°®à°¾à°°à± {{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²",
            },
          },
          xYears: {
            standalone: {
              one: "à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
              // CLDR #1275
              other: "{{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²à±",
            },
            withPreposition: {
              one: "à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
              other: "{{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²",
            },
          },
          overXYears: {
            standalone: {
              one: "à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚ à°ªà±ˆà°—à°¾",
              other: "{{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²à°•à± à°ªà±ˆà°—à°¾",
            },
            withPreposition: {
              one: "à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
              other: "{{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²",
            },
          },
          almostXYears: {
            standalone: {
              one: "à°¦à°¾à°¦à°¾à°ªà± à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
              other: "à°¦à°¾à°¦à°¾à°ªà± {{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²à±",
            },
            withPreposition: {
              one: "à°¦à°¾à°¦à°¾à°ªà± à°’à°• à°¸à°‚à°µà°¤à±à°¸à°°à°‚",
              other: "à°¦à°¾à°¦à°¾à°ªà± {{count}} à°¸à°‚à°µà°¤à±à°¸à°°à°¾à°²",
            },
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var usageGroup = options.addSuffix
            ? formatDistanceLocale[token].withPreposition
            : formatDistanceLocale[token].standalone;
          var result;

          if (typeof usageGroup === "string") {
            result = usageGroup;
          } else if (count === 1) {
            result = usageGroup.one;
          } else {
            result = usageGroup.other.replace("{{count}}", count);
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + "à°²à±‹";
            } else {
              return result + " à°•à±à°°à°¿à°¤à°‚";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 433 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Source: https://www.unicode.org/cldr/charts/32/summary/te.html
        // CLDR #1807 - #1811
        var dateFormats = {
          full: "d, MMMM y, EEEE",
          long: "d MMMM, y",
          medium: "d MMM, y",
          short: "dd-MM-yy", // CLDR #1807 - #1811
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a", // CLDR #1815 - #1818
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}'à°•à°¿'",
          long: "{{date}} {{time}}'à°•à°¿'",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 434 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        // Source: https://www.unicode.org/cldr/charts/32/summary/te.html
        var formatRelativeLocale = {
          lastWeek: "'à°—à°¤' eeee p",
          // CLDR #1384
          yesterday: "'à°¨à°¿à°¨à±à°¨' p",
          // CLDR #1393
          today: "'à°ˆ à°°à±‹à°œà±' p",
          // CLDR #1394
          tomorrow: "'à°°à±‡à°ªà±' p",
          // CLDR #1395
          nextWeek: "'à°¤à°¦à±à°ªà°°à°¿' eeee p",
          // CLDR #1386
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 435 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Source: https://www.unicode.org/cldr/charts/32/summary/te.html
        // Source: https://dsal.uchicago.edu/dictionaries/brown/
        // CLDR #1605 - #1608
        var eraValues = {
          narrow: ["à°•à±à°°à±€.à°ªà±‚.", "à°•à±à°°à±€.à°¶."],
          abbreviated: ["à°•à±à°°à±€.à°ªà±‚.", "à°•à±à°°à±€.à°¶."],
          wide: [
            "à°•à±à°°à±€à°¸à±à°¤à± à°ªà±‚à°°à±à°µà°‚",
            "à°•à±à°°à±€à°¸à±à°¤à±à°¶à°•à°‚",
          ], // CLDR #1613 - #1628
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: [
            "à°¤à±à°°à±ˆ1",
            "à°¤à±à°°à±ˆ2",
            "à°¤à±à°°à±ˆ3",
            "à°¤à±à°°à±ˆ4",
          ],
          wide: [
            "1à°µ à°¤à±à°°à±ˆà°®à°¾à°¸à°¿à°•à°‚",
            "2à°µ à°¤à±à°°à±ˆà°®à°¾à°¸à°¿à°•à°‚",
            "3à°µ à°¤à±à°°à±ˆà°®à°¾à°¸à°¿à°•à°‚",
            "4à°µ à°¤à±à°°à±ˆà°®à°¾à°¸à°¿à°•à°‚",
          ], // CLDR #1637 - #1708
        };
        var monthValues = {
          narrow: [
            "à°œ",
            "à°«à°¿",
            "à°®à°¾",
            "à°",
            "à°®à±‡",
            "à°œà±‚",
            "à°œà±",
            "à°†",
            "à°¸à±†",
            "à°…",
            "à°¨",
            "à°¡à°¿",
          ],
          abbreviated: [
            "à°œà°¨",
            "à°«à°¿à°¬à±à°°",
            "à°®à°¾à°°à±à°šà°¿",
            "à°à°ªà±à°°à°¿",
            "à°®à±‡",
            "à°œà±‚à°¨à±",
            "à°œà±à°²à±ˆ",
            "à°†à°—",
            "à°¸à±†à°ªà±à°Ÿà±†à°‚",
            "à°…à°•à±à°Ÿà±‹",
            "à°¨à°µà°‚",
            "à°¡à°¿à°¸à±†à°‚",
          ],
          wide: [
            "à°œà°¨à°µà°°à°¿",
            "à°«à°¿à°¬à±à°°à°µà°°à°¿",
            "à°®à°¾à°°à±à°šà°¿",
            "à°à°ªà±à°°à°¿à°²à±",
            "à°®à±‡",
            "à°œà±‚à°¨à±",
            "à°œà±à°²à±ˆ",
            "à°†à°—à°¸à±à°Ÿà±",
            "à°¸à±†à°ªà±à°Ÿà±†à°‚à°¬à°°à±",
            "à°…à°•à±à°Ÿà±‹à°¬à°°à±",
            "à°¨à°µà°‚à°¬à°°à±",
            "à°¡à°¿à°¸à±†à°‚à°¬à°°à±",
          ], // CLDR #1709 - #1764
        };
        var dayValues = {
          narrow: ["à°†", "à°¸à±‹", "à°®", "à°¬à±", "à°—à±", "à°¶à±", "à°¶"],
          short: [
            "à°†à°¦à°¿",
            "à°¸à±‹à°®",
            "à°®à°‚à°—à°³",
            "à°¬à±à°§",
            "à°—à±à°°à±",
            "à°¶à±à°•à±à°°",
            "à°¶à°¨à°¿",
          ],
          abbreviated: [
            "à°†à°¦à°¿",
            "à°¸à±‹à°®",
            "à°®à°‚à°—à°³",
            "à°¬à±à°§",
            "à°—à±à°°à±",
            "à°¶à±à°•à±à°°",
            "à°¶à°¨à°¿",
          ],
          wide: [
            "à°†à°¦à°¿à°µà°¾à°°à°‚",
            "à°¸à±‹à°®à°µà°¾à°°à°‚",
            "à°®à°‚à°—à°³à°µà°¾à°°à°‚",
            "à°¬à±à°§à°µà°¾à°°à°‚",
            "à°—à±à°°à±à°µà°¾à°°à°‚",
            "à°¶à±à°•à±à°°à°µà°¾à°°à°‚",
            "à°¶à°¨à°¿à°µà°¾à°°à°‚",
          ], // CLDR #1767 - #1806
        };
        var dayPeriodValues = {
          narrow: {
            am: "à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚",
            pm: "à°…à°ªà°°à°¾à°¹à±à°¨à°‚",
            midnight: "à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿",
            noon: "à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            morning: "à°‰à°¦à°¯à°‚",
            afternoon: "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            evening: "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚",
            night: "à°°à°¾à°¤à±à°°à°¿",
          },
          abbreviated: {
            am: "à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚",
            pm: "à°…à°ªà°°à°¾à°¹à±à°¨à°‚",
            midnight: "à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿",
            noon: "à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            morning: "à°‰à°¦à°¯à°‚",
            afternoon: "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            evening: "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚",
            night: "à°°à°¾à°¤à±à°°à°¿",
          },
          wide: {
            am: "à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚",
            pm: "à°…à°ªà°°à°¾à°¹à±à°¨à°‚",
            midnight: "à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿",
            noon: "à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            morning: "à°‰à°¦à°¯à°‚",
            afternoon: "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            evening: "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚",
            night: "à°°à°¾à°¤à±à°°à°¿",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚",
            pm: "à°…à°ªà°°à°¾à°¹à±à°¨à°‚",
            midnight: "à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿",
            noon: "à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            morning: "à°‰à°¦à°¯à°‚",
            afternoon: "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            evening: "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚",
            night: "à°°à°¾à°¤à±à°°à°¿",
          },
          abbreviated: {
            am: "à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚",
            pm: "à°…à°ªà°°à°¾à°¹à±à°¨à°‚",
            midnight: "à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿",
            noon: "à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            morning: "à°‰à°¦à°¯à°‚",
            afternoon: "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            evening: "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚",
            night: "à°°à°¾à°¤à±à°°à°¿",
          },
          wide: {
            am: "à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚",
            pm: "à°…à°ªà°°à°¾à°¹à±à°¨à°‚",
            midnight: "à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿",
            noon: "à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            morning: "à°‰à°¦à°¯à°‚",
            afternoon: "à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚",
            evening: "à°¸à°¾à°¯à°‚à°¤à±à°°à°‚",
            night: "à°°à°¾à°¤à±à°°à°¿",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + "à°µ";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 436 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(à°µ)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(à°•à±à°°à±€\.à°ªà±‚\.|à°•à±à°°à±€\.à°¶\.)/i,
          abbreviated:
            /^(à°•à±à°°à±€\.?\s?à°ªà±‚\.?|à°ªà±à°°\.?\s?à°¶\.?\s?à°ªà±‚\.?|à°•à±à°°à±€\.?\s?à°¶\.?|à°¸à°¾\.?\s?à°¶\.?)/i,
          wide: /^(à°•à±à°°à±€à°¸à±à°¤à± à°ªà±‚à°°à±à°µà°‚|à°ªà±à°°à°¸à±à°¤à±à°¤ à°¶à°•à°¾à°¨à°¿à°•à°¿ à°ªà±‚à°°à±à°µà°‚|à°•à±à°°à±€à°¸à±à°¤à± à°¶à°•à°‚|à°ªà±à°°à°¸à±à°¤à±à°¤ à°¶à°•à°‚)/i,
        };
        var parseEraPatterns = {
          any: [/^(à°ªà±‚|à°¶)/i, /^à°¸à°¾/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^à°¤à±à°°à±ˆ[1234]/i,
          wide: /^[1234](à°µ)? à°¤à±à°°à±ˆà°®à°¾à°¸à°¿à°•à°‚/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow:
            /^(à°œà±‚|à°œà±|à°œ|à°«à°¿|à°®à°¾|à°|à°®à±‡|à°†|à°¸à±†|à°…|à°¨|à°¡à°¿)/i,
          abbreviated:
            /^(à°œà°¨|à°«à°¿à°¬à±à°°|à°®à°¾à°°à±à°šà°¿|à°à°ªà±à°°à°¿|à°®à±‡|à°œà±‚à°¨à±|à°œà±à°²à±ˆ|à°†à°—|à°¸à±†à°ªà±|à°…à°•à±à°Ÿà±‹|à°¨à°µ|à°¡à°¿à°¸à±†)/i,
          wide: /^(à°œà°¨à°µà°°à°¿|à°«à°¿à°¬à±à°°à°µà°°à°¿|à°®à°¾à°°à±à°šà°¿|à°à°ªà±à°°à°¿à°²à±|à°®à±‡|à°œà±‚à°¨à±|à°œà±à°²à±ˆ|à°†à°—à°¸à±à°Ÿà±|à°¸à±†à°ªà±à°Ÿà±†à°‚à°¬à°°à±|à°…à°•à±à°Ÿà±‹à°¬à°°à±|à°¨à°µà°‚à°¬à°°à±|à°¡à°¿à°¸à±†à°‚à°¬à°°à±)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^à°œ/i,
            /^à°«à°¿/i,
            /^à°®à°¾/i,
            /^à°/i,
            /^à°®à±‡/i,
            /^à°œà±‚/i,
            /^à°œà±/i,
            /^à°†/i,
            /^à°¸à±†/i,
            /^à°…/i,
            /^à°¨/i,
            /^à°¡à°¿/i,
          ],
          any: [
            /^à°œà°¨/i,
            /^à°«à°¿/i,
            /^à°®à°¾/i,
            /^à°/i,
            /^à°®à±‡/i,
            /^à°œà±‚à°¨à±/i,
            /^à°œà±à°²à±ˆ/i,
            /^à°†à°—/i,
            /^à°¸à±†/i,
            /^à°…/i,
            /^à°¨/i,
            /^à°¡à°¿/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(à°†|à°¸à±‹|à°®|à°¬à±|à°—à±|à°¶à±|à°¶)/i,
          short:
            /^(à°†à°¦à°¿|à°¸à±‹à°®|à°®à°‚|à°¬à±à°§|à°—à±à°°à±|à°¶à±à°•à±à°°|à°¶à°¨à°¿)/i,
          abbreviated:
            /^(à°†à°¦à°¿|à°¸à±‹à°®|à°®à°‚|à°¬à±à°§|à°—à±à°°à±|à°¶à±à°•à±à°°|à°¶à°¨à°¿)/i,
          wide: /^(à°†à°¦à°¿à°µà°¾à°°à°‚|à°¸à±‹à°®à°µà°¾à°°à°‚|à°®à°‚à°—à°³à°µà°¾à°°à°‚|à°¬à±à°§à°µà°¾à°°à°‚|à°—à±à°°à±à°µà°¾à°°à°‚|à°¶à±à°•à±à°°à°µà°¾à°°à°‚|à°¶à°¨à°¿à°µà°¾à°°à°‚)/i,
        };
        var parseDayPatterns = {
          narrow: [
            /^à°†/i,
            /^à°¸à±‹/i,
            /^à°®/i,
            /^à°¬à±/i,
            /^à°—à±/i,
            /^à°¶à±/i,
            /^à°¶/i,
          ],
          any: [
            /^à°†à°¦à°¿/i,
            /^à°¸à±‹à°®/i,
            /^à°®à°‚/i,
            /^à°¬à±à°§/i,
            /^à°—à±à°°à±/i,
            /^à°¶à±à°•à±à°°/i,
            /^à°¶à°¨à°¿/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚|à°…à°ªà°°à°¾à°¹à±à°¨à°‚|à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿|à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚|à°‰à°¦à°¯à°‚|à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚|à°¸à°¾à°¯à°‚à°¤à±à°°à°‚|à°°à°¾à°¤à±à°°à°¿)/i,
          any: /^(à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚|à°…à°ªà°°à°¾à°¹à±à°¨à°‚|à°…à°°à±à°§à°°à°¾à°¤à±à°°à°¿|à°®à°¿à°Ÿà±à°Ÿà°®à°§à±à°¯à°¾à°¹à±à°¨à°‚|à°‰à°¦à°¯à°‚|à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚|à°¸à°¾à°¯à°‚à°¤à±à°°à°‚|à°°à°¾à°¤à±à°°à°¿)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^à°ªà±‚à°°à±à°µà°¾à°¹à±à°¨à°‚/i,
            pm: /^à°…à°ªà°°à°¾à°¹à±à°¨à°‚/i,
            midnight: /^à°…à°°à±à°§/i,
            noon: /^à°®à°¿à°Ÿà±à°Ÿ/i,
            morning: /à°‰à°¦à°¯à°‚/i,
            afternoon: /à°®à°§à±à°¯à°¾à°¹à±à°¨à°‚/i,
            evening: /à°¸à°¾à°¯à°‚à°¤à±à°°à°‚/i,
            night: /à°°à°¾à°¤à±à°°à°¿/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 437 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "à¸™à¹‰à¸­à¸¢à¸à¸§à¹ˆà¸² 1 à¸§à¸´à¸™à¸²à¸—à¸µ",
            other: "à¸™à¹‰à¸­à¸¢à¸à¸§à¹ˆà¸² {{count}} à¸§à¸´à¸™à¸²à¸—à¸µ",
          },
          xSeconds: {
            one: "1 à¸§à¸´à¸™à¸²à¸—à¸µ",
            other: "{{count}} à¸§à¸´à¸™à¸²à¸—à¸µ",
          },
          halfAMinute: "à¸„à¸£à¸¶à¹ˆà¸‡à¸™à¸²à¸—à¸µ",
          lessThanXMinutes: {
            one: "à¸™à¹‰à¸­à¸¢à¸à¸§à¹ˆà¸² 1 à¸™à¸²à¸—à¸µ",
            other: "à¸™à¹‰à¸­à¸¢à¸à¸§à¹ˆà¸² {{count}} à¸™à¸²à¸—à¸µ",
          },
          xMinutes: {
            one: "1 à¸™à¸²à¸—à¸µ",
            other: "{{count}} à¸™à¸²à¸—à¸µ",
          },
          aboutXHours: {
            one: "à¸›à¸£à¸°à¸¡à¸²à¸“ 1 à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
            other: "à¸›à¸£à¸°à¸¡à¸²à¸“ {{count}} à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
          },
          xHours: {
            one: "1 à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
            other: "{{count}} à¸Šà¸±à¹ˆà¸§à¹‚à¸¡à¸‡",
          },
          xDays: {
            one: "1 à¸§à¸±à¸™",
            other: "{{count}} à¸§à¸±à¸™",
          },
          aboutXWeeks: {
            one: "à¸›à¸£à¸°à¸¡à¸²à¸“ 1 à¸ªà¸±à¸›à¸”à¸²à¸«à¹Œ",
            other: "à¸›à¸£à¸°à¸¡à¸²à¸“ {{count}} à¸ªà¸±à¸›à¸”à¸²à¸«à¹Œ",
          },
          xWeeks: {
            one: "1 à¸ªà¸±à¸›à¸”à¸²à¸«à¹Œ",
            other: "{{count}} à¸ªà¸±à¸›à¸”à¸²à¸«à¹Œ",
          },
          aboutXMonths: {
            one: "à¸›à¸£à¸°à¸¡à¸²à¸“ 1 à¹€à¸”à¸·à¸­à¸™",
            other: "à¸›à¸£à¸°à¸¡à¸²à¸“ {{count}} à¹€à¸”à¸·à¸­à¸™",
          },
          xMonths: {
            one: "1 à¹€à¸”à¸·à¸­à¸™",
            other: "{{count}} à¹€à¸”à¸·à¸­à¸™",
          },
          aboutXYears: {
            one: "à¸›à¸£à¸°à¸¡à¸²à¸“ 1 à¸›à¸µ",
            other: "à¸›à¸£à¸°à¸¡à¸²à¸“ {{count}} à¸›à¸µ",
          },
          xYears: {
            one: "1 à¸›à¸µ",
            other: "{{count}} à¸›à¸µ",
          },
          overXYears: {
            one: "à¸¡à¸²à¸à¸à¸§à¹ˆà¸² 1 à¸›à¸µ",
            other: "à¸¡à¸²à¸à¸à¸§à¹ˆà¸² {{count}} à¸›à¸µ",
          },
          almostXYears: {
            one: "à¹€à¸à¸·à¸­à¸š 1 à¸›à¸µ",
            other: "à¹€à¸à¸·à¸­à¸š {{count}} à¸›à¸µ",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              if (token === "halfAMinute") {
                return "à¹ƒà¸™" + result;
              } else {
                return "à¹ƒà¸™ " + result;
              }
            } else {
              return result + "à¸—à¸µà¹ˆà¸œà¹ˆà¸²à¸™à¸¡à¸²";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 438 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "à¸§à¸±à¸™EEEEà¸—à¸µà¹ˆ do MMMM y",
          long: "do MMMM y",
          medium: "d MMM y",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "H:mm:ss à¸™. zzzz",
          long: "H:mm:ss à¸™. z",
          medium: "H:mm:ss à¸™.",
          short: "H:mm à¸™.",
        };
        var dateTimeFormats = {
          full: "{{date}} 'à¹€à¸§à¸¥à¸²' {{time}}",
          long: "{{date}} 'à¹€à¸§à¸¥à¸²' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "medium",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 439 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee'à¸—à¸µà¹ˆà¹à¸¥à¹‰à¸§à¹€à¸§à¸¥à¸²' p",
          yesterday: "'à¹€à¸¡à¸·à¹ˆà¸­à¸§à¸²à¸™à¸™à¸µà¹‰à¹€à¸§à¸¥à¸²' p",
          today: "'à¸§à¸±à¸™à¸™à¸µà¹‰à¹€à¸§à¸¥à¸²' p",
          tomorrow: "'à¸žà¸£à¸¸à¹ˆà¸‡à¸™à¸µà¹‰à¹€à¸§à¸¥à¸²' p",
          nextWeek: "eeee 'à¹€à¸§à¸¥à¸²' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 440 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["B", "à¸„à¸¨"],
          abbreviated: ["BC", "à¸„.à¸¨."],
          wide: [
            "à¸›à¸µà¸à¹ˆà¸­à¸™à¸„à¸£à¸´à¸ªà¸•à¸à¸²à¸¥",
            "à¸„à¸£à¸´à¸ªà¸•à¹Œà¸¨à¸±à¸à¸£à¸²à¸Š",
          ],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: [
            "à¹„à¸•à¸£à¸¡à¸²à¸ªà¹à¸£à¸",
            "à¹„à¸•à¸£à¸¡à¸²à¸ªà¸—à¸µà¹ˆà¸ªà¸­à¸‡",
            "à¹„à¸•à¸£à¸¡à¸²à¸ªà¸—à¸µà¹ˆà¸ªà¸²à¸¡",
            "à¹„à¸•à¸£à¸¡à¸²à¸ªà¸—à¸µà¹ˆà¸ªà¸µà¹ˆ",
          ],
        };
        var dayValues = {
          narrow: [
            "à¸­à¸².",
            "à¸ˆ.",
            "à¸­.",
            "à¸ž.",
            "à¸žà¸¤.",
            "à¸¨.",
            "à¸ª.",
          ],
          short: ["à¸­à¸².", "à¸ˆ.", "à¸­.", "à¸ž.", "à¸žà¸¤.", "à¸¨.", "à¸ª."],
          abbreviated: [
            "à¸­à¸².",
            "à¸ˆ.",
            "à¸­.",
            "à¸ž.",
            "à¸žà¸¤.",
            "à¸¨.",
            "à¸ª.",
          ],
          wide: [
            "à¸­à¸²à¸—à¸´à¸•à¸¢à¹Œ",
            "à¸ˆà¸±à¸™à¸—à¸£à¹Œ",
            "à¸­à¸±à¸‡à¸„à¸²à¸£",
            "à¸žà¸¸à¸˜",
            "à¸žà¸¤à¸«à¸±à¸ªà¸šà¸”à¸µ",
            "à¸¨à¸¸à¸à¸£à¹Œ",
            "à¹€à¸ªà¸²à¸£à¹Œ",
          ],
        };
        var monthValues = {
          narrow: [
            "à¸¡.à¸„.",
            "à¸.à¸ž.",
            "à¸¡à¸µ.à¸„.",
            "à¹€à¸¡.à¸¢.",
            "à¸ž.à¸„.",
            "à¸¡à¸´.à¸¢.",
            "à¸.à¸„.",
            "à¸ª.à¸„.",
            "à¸.à¸¢.",
            "à¸•.à¸„.",
            "à¸ž.à¸¢.",
            "à¸˜.à¸„.",
          ],
          abbreviated: [
            "à¸¡.à¸„.",
            "à¸.à¸ž.",
            "à¸¡à¸µ.à¸„.",
            "à¹€à¸¡.à¸¢.",
            "à¸ž.à¸„.",
            "à¸¡à¸´.à¸¢.",
            "à¸.à¸„.",
            "à¸ª.à¸„.",
            "à¸.à¸¢.",
            "à¸•.à¸„.",
            "à¸ž.à¸¢.",
            "à¸˜.à¸„.",
          ],
          wide: [
            "à¸¡à¸à¸£à¸²à¸„à¸¡",
            "à¸à¸¸à¸¡à¸ à¸²à¸žà¸±à¸™à¸˜à¹Œ",
            "à¸¡à¸µà¸™à¸²à¸„à¸¡",
            "à¹€à¸¡à¸©à¸²à¸¢à¸™",
            "à¸žà¸¤à¸©à¸ à¸²à¸„à¸¡",
            "à¸¡à¸´à¸–à¸¸à¸™à¸²à¸¢à¸™",
            "à¸à¸£à¸à¸Žà¸²à¸„à¸¡",
            "à¸ªà¸´à¸‡à¸«à¸²à¸„à¸¡",
            "à¸à¸±à¸™à¸¢à¸²à¸¢à¸™",
            "à¸•à¸¸à¸¥à¸²à¸„à¸¡",
            "à¸žà¸¤à¸¨à¸ˆà¸´à¸à¸²à¸¢à¸™",
            "à¸˜à¸±à¸™à¸§à¸²à¸„à¸¡",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            pm: "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            midnight: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™",
            noon: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            morning: "à¹€à¸Šà¹‰à¸²",
            afternoon: "à¸šà¹ˆà¸²à¸¢",
            evening: "à¹€à¸¢à¹‡à¸™",
            night: "à¸à¸¥à¸²à¸‡à¸„à¸·à¸™",
          },
          abbreviated: {
            am: "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            pm: "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            midnight: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™",
            noon: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            morning: "à¹€à¸Šà¹‰à¸²",
            afternoon: "à¸šà¹ˆà¸²à¸¢",
            evening: "à¹€à¸¢à¹‡à¸™",
            night: "à¸à¸¥à¸²à¸‡à¸„à¸·à¸™",
          },
          wide: {
            am: "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            pm: "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            midnight: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™",
            noon: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            morning: "à¹€à¸Šà¹‰à¸²",
            afternoon: "à¸šà¹ˆà¸²à¸¢",
            evening: "à¹€à¸¢à¹‡à¸™",
            night: "à¸à¸¥à¸²à¸‡à¸„à¸·à¸™",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            pm: "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            midnight: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™",
            noon: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            morning: "à¸•à¸­à¸™à¹€à¸Šà¹‰à¸²",
            afternoon: "à¸•à¸­à¸™à¸à¸¥à¸²à¸‡à¸§à¸±à¸™",
            evening: "à¸•à¸­à¸™à¹€à¸¢à¹‡à¸™",
            night: "à¸•à¸­à¸™à¸à¸¥à¸²à¸‡à¸„à¸·à¸™",
          },
          abbreviated: {
            am: "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            pm: "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            midnight: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™",
            noon: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            morning: "à¸•à¸­à¸™à¹€à¸Šà¹‰à¸²",
            afternoon: "à¸•à¸­à¸™à¸à¸¥à¸²à¸‡à¸§à¸±à¸™",
            evening: "à¸•à¸­à¸™à¹€à¸¢à¹‡à¸™",
            night: "à¸•à¸­à¸™à¸à¸¥à¸²à¸‡à¸„à¸·à¸™",
          },
          wide: {
            am: "à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            pm: "à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            midnight: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™",
            noon: "à¹€à¸—à¸µà¹ˆà¸¢à¸‡",
            morning: "à¸•à¸­à¸™à¹€à¸Šà¹‰à¸²",
            afternoon: "à¸•à¸­à¸™à¸à¸¥à¸²à¸‡à¸§à¸±à¸™",
            evening: "à¸•à¸­à¸™à¹€à¸¢à¹‡à¸™",
            night: "à¸•à¸­à¸™à¸à¸¥à¸²à¸‡à¸„à¸·à¸™",
          },
        };

        function ordinalNumber(dirtyNumber) {
          var number = Number(dirtyNumber);
          return number;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 441 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^\d+/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^([bB]|[aA]|à¸„à¸¨)/i,
          abbreviated:
            /^([bB]\.?\s?[cC]\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?|à¸„\.?à¸¨\.?)/i,
          wide: /^(à¸à¹ˆà¸­à¸™à¸„à¸£à¸´à¸ªà¸•à¸à¸²à¸¥|à¸„à¸£à¸´à¸ªà¸•à¹Œà¸¨à¸±à¸à¸£à¸²à¸Š|à¸„à¸£à¸´à¸ªà¸•à¸à¸²à¸¥)/i,
        };
        var parseEraPatterns = {
          any: [
            /^[bB]/i,
            /^(^[aA]|à¸„\.?à¸¨\.?|à¸„à¸£à¸´à¸ªà¸•à¸à¸²à¸¥|à¸„à¸£à¸´à¸ªà¸•à¹Œà¸¨à¸±à¸à¸£à¸²à¸Š|)/i,
          ],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^à¹„à¸•à¸£à¸¡à¸²à¸ª(à¸—à¸µà¹ˆ)? ?[1234]/i,
        };
        var parseQuarterPatterns = {
          any: [
            /(1|à¹à¸£à¸|à¸«à¸™à¸¶à¹ˆà¸‡)/i,
            /(2|à¸ªà¸­à¸‡)/i,
            /(3|à¸ªà¸²à¸¡)/i,
            /(4|à¸ªà¸µà¹ˆ)/i,
          ],
        };
        var matchMonthPatterns = {
          narrow:
            /^(à¸¡\.?à¸„\.?|à¸\.?à¸ž\.?|à¸¡à¸µ\.?à¸„\.?|à¹€à¸¡\.?à¸¢\.?|à¸ž\.?à¸„\.?|à¸¡à¸´\.?à¸¢\.?|à¸\.?à¸„\.?|à¸ª\.?à¸„\.?|à¸\.?à¸¢\.?|à¸•\.?à¸„\.?|à¸ž\.?à¸¢\.?|à¸˜\.?à¸„\.?)/i,
          abbreviated:
            /^(à¸¡\.?à¸„\.?|à¸\.?à¸ž\.?|à¸¡à¸µ\.?à¸„\.?|à¹€à¸¡\.?à¸¢\.?|à¸ž\.?à¸„\.?|à¸¡à¸´\.?à¸¢\.?|à¸\.?à¸„\.?|à¸ª\.?à¸„\.?|à¸\.?à¸¢\.?|à¸•\.?à¸„\.?|à¸ž\.?à¸¢\.?|à¸˜\.?à¸„\.?')/i,
          wide: /^(à¸¡à¸à¸£à¸²à¸„à¸¡|à¸à¸¸à¸¡à¸ à¸²à¸žà¸±à¸™à¸˜à¹Œ|à¸¡à¸µà¸™à¸²à¸„à¸¡|à¹€à¸¡à¸©à¸²à¸¢à¸™|à¸žà¸¤à¸©à¸ à¸²à¸„à¸¡|à¸¡à¸´à¸–à¸¸à¸™à¸²à¸¢à¸™|à¸à¸£à¸à¸Žà¸²à¸„à¸¡|à¸ªà¸´à¸‡à¸«à¸²à¸„à¸¡|à¸à¸±à¸™à¸¢à¸²à¸¢à¸™|à¸•à¸¸à¸¥à¸²à¸„à¸¡|à¸žà¸¤à¸¨à¸ˆà¸´à¸à¸²à¸¢à¸™|à¸˜à¸±à¸™à¸§à¸²à¸„à¸¡)/i,
        };
        var parseMonthPatterns = {
          wide: [
            /^à¸¡à¸/i,
            /^à¸à¸¸à¸¡/i,
            /^à¸¡à¸µ/i,
            /^à¹€à¸¡/i,
            /^à¸žà¸¤à¸©/i,
            /^à¸¡à¸´/i,
            /^à¸à¸£à¸/i,
            /^à¸ª/i,
            /^à¸à¸±à¸™/i,
            /^à¸•/i,
            /^à¸žà¸¤à¸¨/i,
            /^à¸˜/i,
          ],
          any: [
            /^à¸¡\.?à¸„\.?/i,
            /^à¸\.?à¸ž\.?/i,
            /^à¸¡à¸µ\.?à¸„\.?/i,
            /^à¹€à¸¡\.?à¸¢\.?/i,
            /^à¸ž\.?à¸„\.?/i,
            /^à¸¡à¸´\.?à¸¢\.?/i,
            /^à¸\.?à¸„\.?/i,
            /^à¸ª\.?à¸„\.?/i,
            /^à¸\.?à¸¢\.?/i,
            /^à¸•\.?à¸„\.?/i,
            /^à¸ž\.?à¸¢\.?/i,
            /^à¸˜\.?à¸„\.?/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(à¸­à¸²\.?|à¸ˆ\.?|à¸­\.?|à¸žà¸¤\.?|à¸ž\.?|à¸¨\.?|à¸ª\.?)/i,
          short: /^(à¸­à¸²\.?|à¸ˆ\.?|à¸­\.?|à¸žà¸¤\.?|à¸ž\.?|à¸¨\.?|à¸ª\.?)/i,
          abbreviated:
            /^(à¸­à¸²\.?|à¸ˆ\.?|à¸­\.?|à¸žà¸¤\.?|à¸ž\.?|à¸¨\.?|à¸ª\.?)/i,
          wide: /^(à¸­à¸²à¸—à¸´à¸•à¸¢à¹Œ|à¸ˆà¸±à¸™à¸—à¸£à¹Œ|à¸­à¸±à¸‡à¸„à¸²à¸£|à¸žà¸¸à¸˜|à¸žà¸¤à¸«à¸±à¸ªà¸šà¸”à¸µ|à¸¨à¸¸à¸à¸£à¹Œ|à¹€à¸ªà¸²à¸£à¹Œ)/i,
        };
        var parseDayPatterns = {
          wide: [
            /^à¸­à¸²/i,
            /^à¸ˆà¸±/i,
            /^à¸­à¸±/i,
            /^à¸žà¸¸à¸˜/i,
            /^à¸žà¸¤/i,
            /^à¸¨/i,
            /^à¹€à¸ª/i,
          ],
          any: [
            /^à¸­à¸²/i,
            /^à¸ˆ/i,
            /^à¸­/i,
            /^à¸ž(?!à¸¤)/i,
            /^à¸žà¸¤/i,
            /^à¸¨/i,
            /^à¸ª/i,
          ],
        };
        var matchDayPeriodPatterns = {
          any: /^(à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡|à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡|à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™|à¹€à¸—à¸µà¹ˆà¸¢à¸‡|(à¸•à¸­à¸™.*?)?.*(à¹€à¸—à¸µà¹ˆà¸¢à¸‡|à¹€à¸Šà¹‰à¸²|à¸šà¹ˆà¸²à¸¢|à¹€à¸¢à¹‡à¸™|à¸à¸¥à¸²à¸‡à¸„à¸·à¸™))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^à¸à¹ˆà¸­à¸™à¹€à¸—à¸µà¹ˆà¸¢à¸‡/i,
            pm: /^à¸«à¸¥à¸±à¸‡à¹€à¸—à¸µà¹ˆà¸¢à¸‡/i,
            midnight: /^à¹€à¸—à¸µà¹ˆà¸¢à¸‡à¸„à¸·à¸™/i,
            noon: /^à¹€à¸—à¸µà¹ˆà¸¢à¸‡/i,
            morning: /à¹€à¸Šà¹‰à¸²/i,
            afternoon: /à¸šà¹ˆà¸²à¸¢/i,
            evening: /à¹€à¸¢à¹‡à¸™/i,
            night: /à¸à¸¥à¸²à¸‡à¸„à¸·à¸™/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 442 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "bir saniyeden az",
            other: "{{count}} saniyeden az",
          },
          xSeconds: {
            one: "1 saniye",
            other: "{{count}} saniye",
          },
          halfAMinute: "yarÄ±m dakika",
          lessThanXMinutes: {
            one: "bir dakikadan az",
            other: "{{count}} dakikadan az",
          },
          xMinutes: {
            one: "1 dakika",
            other: "{{count}} dakika",
          },
          aboutXHours: {
            one: "yaklaÅŸÄ±k 1 saat",
            other: "yaklaÅŸÄ±k {{count}} saat",
          },
          xHours: {
            one: "1 saat",
            other: "{{count}} saat",
          },
          xDays: {
            one: "1 gá¼n",
            other: "{{count}} gá¼n",
          },
          aboutXWeeks: {
            one: "yaklaÅŸÄ±k 1 hafta",
            other: "yaklaÅŸÄ±k {{count}} hafta",
          },
          xWeeks: {
            one: "1 hafta",
            other: "{{count}} hafta",
          },
          aboutXMonths: {
            one: "yaklaÅŸÄ±k 1 ay",
            other: "yaklaÅŸÄ±k {{count}} ay",
          },
          xMonths: {
            one: "1 ay",
            other: "{{count}} ay",
          },
          aboutXYears: {
            one: "yaklaÅŸÄ±k 1 yÄ±l",
            other: "yaklaÅŸÄ±k {{count}} yÄ±l",
          },
          xYears: {
            one: "1 yÄ±l",
            other: "{{count}} yÄ±l",
          },
          overXYears: {
            one: "1 yÄ±ldan fazla",
            other: "{{count}} yÄ±ldan fazla",
          },
          almostXYears: {
            one: "neredeyse 1 yÄ±l",
            other: "neredeyse {{count}} yÄ±l",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " sonra";
            } else {
              return result + " á¶nce";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 443 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "d MMMM y EEEE",
          long: "d MMMM y",
          medium: "d MMM y",
          short: "dd.MM.yyyy",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'saat' {{time}}",
          long: "{{date}} 'saat' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 444 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'geá§en hafta' eeee 'saat' p",
          yesterday: "'dá¼n saat' p",
          today: "'bugá¼n saat' p",
          tomorrow: "'yarÄ±n saat' p",
          nextWeek: "eeee 'saat' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 445 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          abbreviated: ["Má–", "MS"],
          narrow: ["Má–", "MS"],
          wide: ["Milattan á–nce", "Milattan Sonra"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1á‡", "2á‡", "3á‡", "4á‡"],
          wide: [
            "Ä°lk á§eyrek",
            "Ä°kinci á‡eyrek",
            "áœá§á¼ncá¼ á§eyrek",
            "Son á§eyrek",
          ],
        };
        var monthValues = {
          narrow: ["O", "Åž", "M", "N", "M", "H", "T", "A", "E", "E", "K", "A"],
          abbreviated: [
            "Oca",
            "Åžub",
            "Mar",
            "Nis",
            "May",
            "Haz",
            "Tem",
            "AÄŸu",
            "Eyl",
            "Eki",
            "Kas",
            "Ara",
          ],
          wide: [
            "Ocak",
            "Åžubat",
            "Mart",
            "Nisan",
            "MayÄ±s",
            "Haziran",
            "Temmuz",
            "AÄŸustos",
            "Eylá¼l",
            "Ekim",
            "KasÄ±m",
            "AralÄ±k",
          ],
        };
        var dayValues = {
          narrow: ["P", "P", "S", "á‡", "P", "C", "C"],
          short: ["Pz", "Pt", "Sa", "á‡a", "Pe", "Cu", "Ct"],
          abbreviated: ["Paz", "Pts", "Sal", "á‡ar", "Per", "Cum", "Cts"],
          wide: [
            "Pazar",
            "Pazartesi",
            "SalÄ±",
            "á‡arÅŸamba",
            "PerÅŸembe",
            "Cuma",
            "Cumartesi",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "á¶á¶",
            pm: "á¶s",
            midnight: "gy",
            noon: "á¶",
            morning: "sa",
            afternoon: "á¶s",
            evening: "ak",
            night: "ge",
          },
          abbreviated: {
            am: "á–á–",
            pm: "á–S",
            midnight: "gece yarÄ±sÄ±",
            noon: "á¶ÄŸle",
            morning: "sabah",
            afternoon: "á¶ÄŸleden sonra",
            evening: "akÅŸam",
            night: "gece",
          },
          wide: {
            am: "á–.á–.",
            pm: "á–.S.",
            midnight: "gece yarÄ±sÄ±",
            noon: "á¶ÄŸle",
            morning: "sabah",
            afternoon: "á¶ÄŸleden sonra",
            evening: "akÅŸam",
            night: "gece",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "á¶á¶",
            pm: "á¶s",
            midnight: "gy",
            noon: "á¶",
            morning: "sa",
            afternoon: "á¶s",
            evening: "ak",
            night: "ge",
          },
          abbreviated: {
            am: "á–á–",
            pm: "á–S",
            midnight: "gece yarÄ±sÄ±",
            noon: "á¶ÄŸlen",
            morning: "sabahleyin",
            afternoon: "á¶ÄŸleden sonra",
            evening: "akÅŸamleyin",
            night: "geceleyin",
          },
          wide: {
            am: "á¶.á¶.",
            pm: "á¶.s.",
            midnight: "gece yarÄ±sÄ±",
            noon: "á¶ÄŸlen",
            morning: "sabahleyin",
            afternoon: "á¶ÄŸleden sonra",
            evening: "akÅŸamleyin",
            night: "geceleyin",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber);
          return number + ".";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaulFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 446 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(\.)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(má¶|ms)/i,
          abbreviated: /^(má¶|ms)/i,
          wide: /^(milattan á¶nce|milattan sonra)/i,
        };
        var parseEraPatterns = {
          any: [/(^má¶|^milattan á¶nce)/i, /(^ms|^milattan sonra)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234]á§/i,
          wide: /^((i|Ä°)lk|(i|Ä°)kinci|á¼á§á¼ncá¼|son) á§eyrek/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
          abbreviated: [/1á§/i, /2á§/i, /3á§/i, /4á§/i],
          wide: [
            /^(i|Ä°)lk á§eyrek/i,
            /(i|Ä°)kinci á§eyrek/i,
            /á¼á§á¼ncá¼ á§eyrek/i,
            /son á§eyrek/i,
          ],
        };
        var matchMonthPatterns = {
          narrow: /^[oÅŸmnhtaek]/i,
          abbreviated: /^(oca|ÅŸub|mar|nis|may|haz|tem|aÄŸu|eyl|eki|kas|ara)/i,
          wide: /^(ocak|ÅŸubat|mart|nisan|mayÄ±s|haziran|temmuz|aÄŸustos|eylá¼l|ekim|kasÄ±m|aralÄ±k)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^o/i,
            /^ÅŸ/i,
            /^m/i,
            /^n/i,
            /^m/i,
            /^h/i,
            /^t/i,
            /^a/i,
            /^e/i,
            /^e/i,
            /^k/i,
            /^a/i,
          ],
          any: [
            /^o/i,
            /^ÅŸ/i,
            /^mar/i,
            /^n/i,
            /^may/i,
            /^h/i,
            /^t/i,
            /^aÄŸ/i,
            /^ey/i,
            /^ek/i,
            /^k/i,
            /^ar/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[psá§c]/i,
          short: /^(pz|pt|sa|á§a|pe|cu|ct)/i,
          abbreviated: /^(paz|pts|sal|á§ar|per|cum|cts)/i,
          wide: /^(pazar|pazartesi|salÄ±|á§arÅŸamba|perÅŸembe|cuma|cumartesi)/i,
        };
        var parseDayPatterns = {
          narrow: [/^p/i, /^p/i, /^s/i, /^á§/i, /^p/i, /^c/i, /^c/i],
          any: [/^pz/i, /^pt/i, /^sa/i, /^á§a/i, /^pe/i, /^cu/i, /^ct/i],
          wide: [
            /^pazar/i,
            /^pazartesi/i,
            /^salÄ±/i,
            /^á§arÅŸamba/i,
            /^perÅŸembe/i,
            /^cuma/i,
            /cumartesi/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(á¶á¶|á¶s|gy|á¶|sa|á¶s|ak|ge)/i,
          any: /^(á¶\.?\s?[á¶s]\.?|á¶ÄŸleden sonra|gece yarÄ±sÄ±|á¶ÄŸle|(sabah|á¶ÄŸ|akÅŸam|gece)(leyin))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^á¶\.?á¶\.?/i,
            pm: /^á¶\.?s\.?/i,
            midnight: /^(gy|gece yarÄ±sÄ±)/i,
            noon: /^á¶ÄŸ/i,
            morning: /^sa/i,
            afternoon: /^á¶ÄŸleden sonra/i,
            evening: /^ak/i,
            night: /^ge/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 447 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "Ø¨Ù‰Ø± Ø³Ù‰ÙƒÛ‡Ù†Øª Ø¦Ù‰Ú†Ù‰Ø¯Û•",
            other: "Ø³Ù‰ÙƒÛ‡Ù†Øª Ø¦Ù‰Ú†Ù‰Ø¯Û• {{count}}",
          },
          xSeconds: {
            one: "Ø¨Ù‰Ø± Ø³Ù‰ÙƒÛ‡Ù†Øª",
            other: "Ø³Ù‰ÙƒÛ‡Ù†Øª {{count}}",
          },
          halfAMinute: "ÙŠÙ‰Ø±Ù‰Ù… Ù…Ù‰Ù†Û‡Øª",
          lessThanXMinutes: {
            one: "Ø¨Ù‰Ø± Ù…Ù‰Ù†Û‡Øª Ø¦Ù‰Ú†Ù‰Ø¯Û•",
            other: "Ù…Ù‰Ù†Û‡Øª Ø¦Ù‰Ú†Ù‰Ø¯Û• {{count}}",
          },
          xMinutes: {
            one: "Ø¨Ù‰Ø± Ù…Ù‰Ù†Û‡Øª",
            other: "Ù…Ù‰Ù†Û‡Øª {{count}}",
          },
          aboutXHours: {
            one: "ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù† Ø¨Ù‰Ø± Ø³Ø§Ø¦Û•Øª",
            other: "Ø³Ø§Ø¦Û•Øª {{count}} ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù†",
          },
          xHours: {
            one: "Ø¨Ù‰Ø± Ø³Ø§Ø¦Û•Øª",
            other: "Ø³Ø§Ø¦Û•Øª {{count}}",
          },
          xDays: {
            one: "Ø¨Ù‰Ø± ÙƒÛˆÙ†",
            other: "ÙƒÛˆÙ† {{count}}",
          },
          aboutXWeeks: {
            one: "ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù† Ø¨Ù‰Ø±Ú¾Û•Ù¾ØªÛ•",
            other: "Ú¾Û•Ù¾ØªÛ• {{count}} ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù†",
          },
          xWeeks: {
            one: "Ø¨Ù‰Ø±Ú¾Û•Ù¾ØªÛ•",
            other: "Ú¾Û•Ù¾ØªÛ• {{count}}",
          },
          aboutXMonths: {
            one: "ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù† Ø¨Ù‰Ø± Ø¦Ø§ÙŠ",
            other: "Ø¦Ø§ÙŠ {{count}} ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù†",
          },
          xMonths: {
            one: "Ø¨Ù‰Ø± Ø¦Ø§ÙŠ",
            other: "Ø¦Ø§ÙŠ {{count}}",
          },
          aboutXYears: {
            one: "ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù† Ø¨Ù‰Ø± ÙŠÙ‰Ù„",
            other: "ÙŠÙ‰Ù„ {{count}} ØªÛ•Ø®Ù…Ù‰Ù†Û•Ù†",
          },
          xYears: {
            one: "Ø¨Ù‰Ø± ÙŠÙ‰Ù„",
            other: "ÙŠÙ‰Ù„ {{count}}",
          },
          overXYears: {
            one: "Ø¨Ù‰Ø± ÙŠÙ‰Ù„Ø¯Ù‰Ù† Ø¦Ø§Ø±ØªÛ‡Ù‚",
            other: "ÙŠÙ‰Ù„Ø¯Ù‰Ù† Ø¦Ø§Ø±ØªÛ‡Ù‚ {{count}}",
          },
          almostXYears: {
            one: "Ø¦Ø§Ø³Ø§Ø³Û•Ù† Ø¨Ù‰Ø± ÙŠÙ‰Ù„",
            other: "ÙŠÙ‰Ù„ {{count}} Ø¦Ø§Ø³Ø§Ø³Û•Ù†",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result;
            } else {
              return result + " Ø¨ÙˆÙ„Ø¯Ù‰";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 448 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Ø¯Û•' {{time}}",
          long: "{{date}} 'Ø¯Û•' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 449 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'Ø¦â€Û†ØªÙƒÛ•Ù†' eeee 'Ø¯Û•' p",
          yesterday: "'ØªÛˆÙ†ÛˆÚ¯ÛˆÙ† Ø¯Û•' p",
          today: "'Ø¨ÛˆÚ¯ÛˆÙ† Ø¯Û•' p",
          tomorrow: "'Ø¦Û•ØªÛ• Ø¯Û•' p",
          nextWeek: "eeee 'Ø¯Û•' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 450 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ø¨", "Ùƒ"],
          abbreviated: ["Ø¨", "Ùƒ"],
          wide: [
            "Ù…Ù‰ÙŠÙ„Ø§Ø¯Ù‰Ø¯Ù‰Ù† Ø¨Û‡Ø±Û‡Ù†",
            "Ù…Ù‰ÙŠÙ„Ø§Ø¯Ù‰Ø¯Ù‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†",
          ],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1", "2", "3", "4"],
          wide: [
            "Ø¨Ù‰Ø±Ù‰Ù†Ø¬Ù‰ Ú†Ø§Ø±Û•Ùƒ",
            "Ø¦Ù‰ÙƒÙƒÙ‰Ù†Ø¬Ù‰ Ú†Ø§Ø±Û•Ùƒ",
            "Ø¦ÛˆÚ†Ù‰Ù†Ø¬Ù‰ Ú†Ø§Ø±Û•Ùƒ",
            "ØªÛ†ØªÙ‰Ù†Ø¬Ù‰ Ú†Ø§Ø±Û•Ùƒ",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: [
            "ÙŠ",
            "Ù",
            "Ù…",
            "Ø§",
            "Ù…",
            "Ù‰",
            "Ù‰",
            "Ø§",
            "Ø³",
            "Û†",
            "Ù†",
            "Ø¯",
          ],
          abbreviated: [
            "ÙŠØ§Ù†Û‹Ø§Ø±",
            "ÙÛÛ‹Ù‰Ø±Ø§Ù„",
            "Ù…Ø§Ø±Øª",
            "Ø¦Ø§Ù¾Ø±Ù‰Ù„",
            "Ù…Ø§ÙŠ",
            "Ø¦Ù‰ÙŠÛ‡Ù†",
            "Ø¦Ù‰ÙŠÙˆÙ„",
            "Ø¦Ø§Û‹ØºÛ‡Ø³Øª",
            "Ø³Ù‰Ù†ØªÛ•Ø¨Ù‰Ø±",
            "Ø¦Û†ÙƒØªÛ•Ø¨Ù‰Ø±",
            "Ù†ÙˆÙŠØ§Ø¨Ù‰Ø±",
            "Ø¯Ù‰ÙƒØ§Ø¨Ù‰Ø±",
          ],
          wide: [
            "ÙŠØ§Ù†Û‹Ø§Ø±",
            "ÙÛÛ‹Ù‰Ø±Ø§Ù„",
            "Ù…Ø§Ø±Øª",
            "Ø¦Ø§Ù¾Ø±Ù‰Ù„",
            "Ù…Ø§ÙŠ",
            "Ø¦Ù‰ÙŠÛ‡Ù†",
            "Ø¦Ù‰ÙŠÙˆÙ„",
            "Ø¦Ø§Û‹ØºÛ‡Ø³Øª",
            "Ø³Ù‰Ù†ØªÛ•Ø¨Ù‰Ø±",
            "Ø¦Û†ÙƒØªÛ•Ø¨Ù‰Ø±",
            "Ù†ÙˆÙŠØ§Ø¨Ù‰Ø±",
            "Ø¯Ù‰ÙƒØ§Ø¨Ù‰Ø±",
          ],
        };
        var dayValues = {
          narrow: ["ÙŠ", "Ø¯", "Ø³", "Ú†", "Ù¾", "Ø¬", "Ø´"],
          short: ["ÙŠ", "Ø¯", "Ø³", "Ú†", "Ù¾", "Ø¬", "Ø´"],
          abbreviated: [
            "ÙŠÛ•ÙƒØ´Û•Ù†Ø¨Û•",
            "Ø¯ÛˆØ´Û•Ù†Ø¨Û•",
            "Ø³Û•ÙŠØ´Û•Ù†Ø¨Û•",
            "Ú†Ø§Ø±Ø´Û•Ù†Ø¨Û•",
            "Ù¾Û•ÙŠØ´Û•Ù†Ø¨Û•",
            "Ø¬ÛˆÙ…Û•",
            "Ø´Û•Ù†Ø¨Û•",
          ],
          wide: [
            "ÙŠÛ•ÙƒØ´Û•Ù†Ø¨Û•",
            "Ø¯ÛˆØ´Û•Ù†Ø¨Û•",
            "Ø³Û•ÙŠØ´Û•Ù†Ø¨Û•",
            "Ú†Ø§Ø±Ø´Û•Ù†Ø¨Û•",
            "Ù¾Û•ÙŠØ´Û•Ù†Ø¨Û•",
            "Ø¬ÛˆÙ…Û•",
            "Ø´Û•Ù†Ø¨Û•",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ø¦Û•",
            pm: "Ú†",
            midnight: "Ùƒ",
            noon: "Ú†",
            morning: "Ø¦Û•ØªÙ‰Ú¯Û•Ù†",
            afternoon: "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†",
            evening: "Ø¦Ø§Ø®Ø´Ù‰Ù…",
            night: "ÙƒÙ‰Ú†Û•",
          },
          abbreviated: {
            am: "Ø¦Û•",
            pm: "Ú†",
            midnight: "Ùƒ",
            noon: "Ú†",
            morning: "Ø¦Û•ØªÙ‰Ú¯Û•Ù†",
            afternoon: "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†",
            evening: "Ø¦Ø§Ø®Ø´Ù‰Ù…",
            night: "ÙƒÙ‰Ú†Û•",
          },
          wide: {
            am: "Ø¦Û•",
            pm: "Ú†",
            midnight: "Ùƒ",
            noon: "Ú†",
            morning: "Ø¦Û•ØªÙ‰Ú¯Û•Ù†",
            afternoon: "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†",
            evening: "Ø¦Ø§Ø®Ø´Ù‰Ù…",
            night: "ÙƒÙ‰Ú†Û•",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Ø¦Û•",
            pm: "Ú†",
            midnight: "Ùƒ",
            noon: "Ú†",
            morning: "Ø¦Û•ØªÙ‰Ú¯Û•Ù†Ø¯Û•",
            afternoon: "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†",
            evening: "Ø¦Ø§Ø®Ø´Ø§Ù…Ø¯Ø§",
            night: "ÙƒÙ‰Ú†Ù‰Ø¯Û•",
          },
          abbreviated: {
            am: "Ø¦Û•",
            pm: "Ú†",
            midnight: "Ùƒ",
            noon: "Ú†",
            morning: "Ø¦Û•ØªÙ‰Ú¯Û•Ù†Ø¯Û•",
            afternoon: "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†",
            evening: "Ø¦Ø§Ø®Ø´Ø§Ù…Ø¯Ø§",
            night: "ÙƒÙ‰Ú†Ù‰Ø¯Û•",
          },
          wide: {
            am: "Ø¦Û•",
            pm: "Ú†",
            midnight: "Ùƒ",
            noon: "Ú†",
            morning: "Ø¦Û•ØªÙ‰Ú¯Û•Ù†Ø¯Û•",
            afternoon: "Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†",
            evening: "Ø¦Ø§Ø®Ø´Ø§Ù…Ø¯Ø§",
            night: "ÙƒÙ‰Ú†Ù‰Ø¯Û•",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          return String(dirtyNumber);
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 451 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(Ø¨|Ùƒ)/i,
          wide: /^(Ù…Ù‰ÙŠÙ„Ø§Ø¯Ù‰Ø¯Ù‰Ù† Ø¨Û‡Ø±Û‡Ù†|Ù…Ù‰ÙŠÙ„Ø§Ø¯Ù‰Ø¯Ù‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†)/i,
        };
        var parseEraPatterns = {
          any: [/^Ø¨Û‡Ø±Û‡Ù†/i, /^ÙƒÙ‰ÙŠÙ‰Ù†/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^Ú†[1234]/i,
          wide: /^Ú†Ø§Ø±Û•Ùƒ [1234]/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[ÙŠÙÙ…Ø¦Ø§Ù…Ø¦â€Ø¦Ø§Ø³Û†Ù†Ø¯]/i,
          abbreviated:
            /^(ÙŠØ§Ù†Û‹Ø§Ø±|ÙÛÛ‹Ù‰Ø±Ø§Ù„|Ù…Ø§Ø±Øª|Ø¦Ø§Ù¾Ø±Ù‰Ù„|Ù…Ø§ÙŠ|Ø¦Ù‰ÙŠÛ‡Ù†|Ø¦Ù‰ÙŠÙˆÙ„|Ø¦Ø§Û‹ØºÛ‡Ø³Øª|Ø³Ù‰Ù†ØªÛ•Ø¨Ù‰Ø±|Ø¦Û†ÙƒØªÛ•Ø¨Ù‰Ø±|Ù†ÙˆÙŠØ§Ø¨Ù‰Ø±|Ø¯Ù‰ÙƒØ§Ø¨Ù‰Ø±)/i,
          wide: /^(ÙŠØ§Ù†Û‹Ø§Ø±|ÙÛÛ‹Ù‰Ø±Ø§Ù„|Ù…Ø§Ø±Øª|Ø¦Ø§Ù¾Ø±Ù‰Ù„|Ù…Ø§ÙŠ|Ø¦Ù‰ÙŠÛ‡Ù†|Ø¦Ù‰ÙŠÙˆÙ„|Ø¦Ø§Û‹ØºÛ‡Ø³Øª|Ø³Ù‰Ù†ØªÛ•Ø¨Ù‰Ø±|Ø¦Û†ÙƒØªÛ•Ø¨Ù‰Ø±|Ù†ÙˆÙŠØ§Ø¨Ù‰Ø±|Ø¯Ù‰ÙƒØ§Ø¨Ù‰Ø±)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^ÙŠ/i,
            /^Ù/i,
            /^Ù…/i,
            /^Ø§/i,
            /^Ù…/i,
            /^Ù‰â€/i,
            /^Ù‰â€/i,
            /^Ø§â€/i,
            /^Ø³/i,
            /^Û†/i,
            /^Ù†/i,
            /^Ø¯/i,
          ],
          any: [
            /^ÙŠØ§Ù†/i,
            /^ÙÛÛ‹/i,
            /^Ù…Ø§Ø±/i,
            /^Ø¦Ø§Ù¾/i,
            /^Ù…Ø§ÙŠ/i,
            /^Ø¦Ù‰ÙŠÛ‡Ù†/i,
            /^Ø¦Ù‰ÙŠÙˆÙ„/i,
            /^Ø¦Ø§Û‹/i,
            /^Ø³Ù‰Ù†/i,
            /^Ø¦Û†Ùƒ/i,
            /^Ù†ÙˆÙŠ/i,
            /^Ø¯Ù‰Ùƒ/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ø¯Ø³Ú†Ù¾Ø¬Ø´ÙŠ]/i,
          short: /^(ÙŠÛ•|Ø¯Ûˆ|Ø³Û•|Ú†Ø§|Ù¾Û•|Ø¬Ûˆ|Ø´Û•)/i,
          abbreviated: /^(ÙŠÛ•|Ø¯Ûˆ|Ø³Û•|Ú†Ø§|Ù¾Û•|Ø¬Ûˆ|Ø´Û•)/i,
          wide: /^(ÙŠÛ•ÙƒØ´Û•Ù†Ø¨Û•|Ø¯ÛˆØ´Û•Ù†Ø¨Û•|Ø³Û•ÙŠØ´Û•Ù†Ø¨Û•|Ú†Ø§Ø±Ø´Û•Ù†Ø¨Û•|Ù¾Û•ÙŠØ´Û•Ù†Ø¨Û•|Ø¬ÛˆÙ…Û•|Ø´Û•Ù†Ø¨Û•)/i,
        };
        var parseDayPatterns = {
          narrow: [/^ÙŠ/i, /^Ø¯/i, /^Ø³/i, /^Ú†/i, /^Ù¾/i, /^Ø¬/i, /^Ø´/i],
          any: [/^ÙŠ/i, /^Ø¯/i, /^Ø³/i, /^Ú†/i, /^Ù¾/i, /^Ø¬/i, /^Ø´/i],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^(Ø¦Û•|Ú†|Ùƒ|Ú†|(Ø¯Û•|Ø¦Û•ØªÙ‰Ú¯Û•Ù†) ( Ø¦Û•â€|Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†|Ø¦Ø§Ø®Ø´Ù‰Ù…|ÙƒÙ‰Ú†Û•))/i,
          any: /^(Ø¦Û•|Ú†|Ùƒ|Ú†|(Ø¯Û•|Ø¦Û•ØªÙ‰Ú¯Û•Ù†) ( Ø¦Û•â€|Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†|Ø¦Ø§Ø®Ø´Ù‰Ù…|ÙƒÙ‰Ú†Û•))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ø¦Û•/i,
            pm: /^Ú†/i,
            midnight: /^Ùƒ/i,
            noon: /^Ú†/i,
            morning: /Ø¦Û•ØªÙ‰Ú¯Û•Ù†/i,
            afternoon: /Ú†ÛˆØ´ØªÙ‰Ù† ÙƒÙ‰ÙŠÙ‰Ù†/i,
            evening: /Ø¦Ø§Ø®Ø´Ù‰Ù…/i,
            night: /ÙƒÙ‰Ú†Û•/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 452 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;

        function declension(scheme, count) {
          // scheme for count=1 exists
          if (scheme.one !== undefined && count === 1) {
            return scheme.one;
          }

          var rem10 = count % 10;
          var rem100 = count % 100; // 1, 21, 31, ...

          if (rem10 === 1 && rem100 !== 11) {
            return scheme.singularNominative.replace("{{count}}", count); // 2, 3, 4, 22, 23, 24, 32 ...
          } else if (rem10 >= 2 && rem10 <= 4 && (rem100 < 10 || rem100 > 20)) {
            return scheme.singularGenitive.replace("{{count}}", count); // 5, 6, 7, 8, 9, 10, 11, ...
          } else {
            return scheme.pluralGenitive.replace("{{count}}", count);
          }
        }

        function buildLocalizeTokenFn(scheme) {
          return function (count, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                if (scheme.future) {
                  return declension(scheme.future, count);
                } else {
                  return "Ð·Ð° " + declension(scheme.regular, count);
                }
              } else {
                if (scheme.past) {
                  return declension(scheme.past, count);
                } else {
                  return declension(scheme.regular, count) + " Ñ‚Ð¾Ð¼Ñƒ";
                }
              }
            } else {
              return declension(scheme.regular, count);
            }
          };
        }

        var formatDistanceLocale = {
          lessThanXSeconds: buildLocalizeTokenFn({
            regular: {
              one: "Ð¼ÐµÐ½ÑˆÐµ ÑÐµÐºÑƒÐ½Ð´Ð¸",
              singularNominative: "Ð¼ÐµÐ½ÑˆÐµ {{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
              singularGenitive: "Ð¼ÐµÐ½ÑˆÐµ {{count}} ÑÐµÐºÑƒÐ½Ð´",
              pluralGenitive: "Ð¼ÐµÐ½ÑˆÐµ {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
            future: {
              one: "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularNominative:
                "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularGenitive:
                "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
              pluralGenitive: "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
          }),
          xSeconds: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð°",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
            past: {
              singularNominative: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ Ñ‚Ð¾Ð¼Ñƒ",
              singularGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸ Ñ‚Ð¾Ð¼Ñƒ",
              pluralGenitive: "{{count}} ÑÐµÐºÑƒÐ½Ð´ Ñ‚Ð¾Ð¼Ñƒ",
            },
            future: {
              singularNominative: "Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´Ñƒ",
              singularGenitive: "Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´Ð¸",
              pluralGenitive: "Ð·Ð° {{count}} ÑÐµÐºÑƒÐ½Ð´",
            },
          }),
          halfAMinute: function (_, options) {
            if (options.addSuffix) {
              if (options.comparison > 0) {
                return "Ð·Ð° Ð¿Ñ–Ð²Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸";
              } else {
                return "Ð¿Ñ–Ð²Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸ Ñ‚Ð¾Ð¼Ñƒ";
              }
            }

            return "Ð¿Ñ–Ð²Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸";
          },
          lessThanXMinutes: buildLocalizeTokenFn({
            regular: {
              one: "Ð¼ÐµÐ½ÑˆÐµ Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸",
              singularNominative: "Ð¼ÐµÐ½ÑˆÐµ {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸",
              singularGenitive: "Ð¼ÐµÐ½ÑˆÐµ {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½",
              pluralGenitive: "Ð¼ÐµÐ½ÑˆÐµ {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½",
            },
            future: {
              one: "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ",
              singularNominative:
                "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ",
              singularGenitive:
                "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸",
              pluralGenitive: "Ð¼ÐµÐ½ÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½",
            },
          }),
          xMinutes: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð°",
              singularGenitive: "{{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸",
              pluralGenitive: "{{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½",
            },
            past: {
              singularNominative: "{{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ Ñ‚Ð¾Ð¼Ñƒ",
              singularGenitive: "{{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸ Ñ‚Ð¾Ð¼Ñƒ",
              pluralGenitive: "{{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½ Ñ‚Ð¾Ð¼Ñƒ",
            },
            future: {
              singularNominative: "Ð·Ð° {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ñƒ",
              singularGenitive: "Ð·Ð° {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½Ð¸",
              pluralGenitive: "Ð·Ð° {{count}} Ñ…Ð²Ð¸Ð»Ð¸Ð½",
            },
          }),
          aboutXHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
              singularGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½",
              pluralGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ð³Ð¾Ð´Ð¸Ð½",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              singularGenitive:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
              pluralGenitive: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ð³Ð¾Ð´Ð¸Ð½",
            },
          }),
          xHours: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð³Ð¾Ð´Ð¸Ð½Ñƒ",
              singularGenitive: "{{count}} Ð³Ð¾Ð´Ð¸Ð½Ð¸",
              pluralGenitive: "{{count}} Ð³Ð¾Ð´Ð¸Ð½",
            },
          }),
          xDays: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð´ÐµÐ½ÑŒ",
              singularGenitive: "{{count}} Ð´Ð½Ñ",
              pluralGenitive: "{{count}} Ð´Ð½Ñ–Ð²",
            },
          }),
          aboutXWeeks: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ñ‚Ð¸Ð¶Ð½Ñ",
              singularGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ñ‚Ð¸Ð¶Ð½Ñ–Ð²",
              pluralGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ñ‚Ð¸Ð¶Ð½Ñ–Ð²",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ",
              singularGenitive: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ñ‚Ð¸Ð¶Ð½Ñ–",
              pluralGenitive: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ñ‚Ð¸Ð¶Ð½Ñ–",
            },
          }),
          xWeeks: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ñ‚Ð¸Ð¶Ð´ÐµÐ½ÑŒ",
              singularGenitive: "{{count}} Ñ‚Ð¸Ð¶Ð½Ñ",
              pluralGenitive: "{{count}} Ñ‚Ð¸Ð¶Ð½Ñ–",
            },
          }),
          aboutXMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ð¼Ñ–ÑÑÑ†Ñ",
              singularGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ð¼Ñ–ÑÑÑ†Ñ–Ð²",
              pluralGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ð¼Ñ–ÑÑÑ†Ñ–Ð²",
            },
            future: {
              singularNominative:
                "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ð¼Ñ–ÑÑÑ†ÑŒ",
              singularGenitive: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ð¼Ñ–ÑÑÑ†Ñ",
              pluralGenitive: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ð¼Ñ–ÑÑÑ†Ñ–Ð²",
            },
          }),
          xMonths: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ð¼Ñ–ÑÑÑ†ÑŒ",
              singularGenitive: "{{count}} Ð¼Ñ–ÑÑÑ†Ñ",
              pluralGenitive: "{{count}} Ð¼Ñ–ÑÑÑ†Ñ–Ð²",
            },
          }),
          aboutXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ñ€Ð¾ÐºÑƒ",
              singularGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ñ€Ð¾ÐºÑ–Ð²",
              pluralGenitive: "Ð±Ð»Ð¸Ð·ÑŒÐºÐ¾ {{count}} Ñ€Ð¾ÐºÑ–Ð²",
            },
            future: {
              singularNominative: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ñ€Ñ–Ðº",
              singularGenitive: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ñ€Ð¾ÐºÐ¸",
              pluralGenitive: "Ð¿Ñ€Ð¸Ð±Ð»Ð¸Ð·Ð½Ð¾ Ð·Ð° {{count}} Ñ€Ð¾ÐºÑ–Ð²",
            },
          }),
          xYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "{{count}} Ñ€Ñ–Ðº",
              singularGenitive: "{{count}} Ñ€Ð¾ÐºÐ¸",
              pluralGenitive: "{{count}} Ñ€Ð¾ÐºÑ–Ð²",
            },
          }),
          overXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð±Ñ–Ð»ÑŒÑˆÐµ {{count}} Ñ€Ð¾ÐºÑƒ",
              singularGenitive: "Ð±Ñ–Ð»ÑŒÑˆÐµ {{count}} Ñ€Ð¾ÐºÑ–Ð²",
              pluralGenitive: "Ð±Ñ–Ð»ÑŒÑˆÐµ {{count}} Ñ€Ð¾ÐºÑ–Ð²",
            },
            future: {
              singularNominative: "Ð±Ñ–Ð»ÑŒÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} Ñ€Ñ–Ðº",
              singularGenitive: "Ð±Ñ–Ð»ÑŒÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} Ñ€Ð¾ÐºÐ¸",
              pluralGenitive: "Ð±Ñ–Ð»ÑŒÑˆÐµ, Ð½Ñ–Ð¶ Ð·Ð° {{count}} Ñ€Ð¾ÐºÑ–Ð²",
            },
          }),
          almostXYears: buildLocalizeTokenFn({
            regular: {
              singularNominative: "Ð¼Ð°Ð¹Ð¶Ðµ {{count}} Ñ€Ñ–Ðº",
              singularGenitive: "Ð¼Ð°Ð¹Ð¶Ðµ {{count}} Ñ€Ð¾ÐºÐ¸",
              pluralGenitive: "Ð¼Ð°Ð¹Ð¶Ðµ {{count}} Ñ€Ð¾ÐºÑ–Ð²",
            },
            future: {
              singularNominative: "Ð¼Ð°Ð¹Ð¶Ðµ Ð·Ð° {{count}} Ñ€Ñ–Ðº",
              singularGenitive: "Ð¼Ð°Ð¹Ð¶Ðµ Ð·Ð° {{count}} Ñ€Ð¾ÐºÐ¸",
              pluralGenitive: "Ð¼Ð°Ð¹Ð¶Ðµ Ð·Ð° {{count}} Ñ€Ð¾ÐºÑ–Ð²",
            },
          }),
        };

        function formatDistance(token, count, options) {
          options = options || {};
          return formatDistanceLocale[token](count, options);
        }

        module.exports = exports.default;

        /***/
      },
      /* 453 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM y 'Ñ€.'",
          long: "do MMMM y 'Ñ€.'",
          medium: "d MMM y 'Ñ€.'",
          short: "dd.MM.y",
        };
        var timeFormats = {
          full: "H:mm:ss zzzz",
          long: "H:mm:ss z",
          medium: "H:mm:ss",
          short: "H:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} 'Ð¾' {{time}}",
          long: "{{date}} 'Ð¾' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 454 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var accusativeWeekdays = [
          "Ð½ÐµÐ´Ñ–Ð»ÑŽ",
          "Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº",
          "Ð²Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº",
          "ÑÐµÑ€ÐµÐ´Ñƒ",
          "Ñ‡ÐµÑ‚Ð²ÐµÑ€",
          "Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†ÑŽ",
          "ÑÑƒÐ±Ð¾Ñ‚Ñƒ",
        ];

        function lastWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 5:
            case 6:
              return "'Ñƒ Ð¼Ð¸Ð½ÑƒÐ»Ñƒ " + weekday + " Ð¾' p";

            case 1:
            case 2:
            case 4:
              return "'Ñƒ Ð¼Ð¸Ð½ÑƒÐ»Ð¸Ð¹ " + weekday + " Ð¾' p";
          }
        }

        function thisWeek(day) {
          var weekday = accusativeWeekdays[day];
          return "'Ñƒ " + weekday + " Ð¾' p";
        }

        function nextWeek(day) {
          var weekday = accusativeWeekdays[day];

          switch (day) {
            case 0:
            case 3:
            case 5:
            case 6:
              return "'Ñƒ Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½Ñƒ " + weekday + " Ð¾' p";

            case 1:
            case 2:
            case 4:
              return "'Ñƒ Ð½Ð°ÑÑ‚ÑƒÐ¿Ð½Ð¸Ð¹ " + weekday + " Ð¾' p";
          }
        }

        var formatRelativeLocale = {
          lastWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return lastWeek(day);
            }
          },
          yesterday: "'Ð²Ñ‡Ð¾Ñ€Ð° Ð¾' p",
          today: "'ÑÑŒÐ¾Ð³Ð¾Ð´Ð½Ñ– Ð¾' p",
          tomorrow: "'Ð·Ð°Ð²Ñ‚Ñ€Ð° Ð¾' p",
          nextWeek: function (date, baseDate, options) {
            var day = date.getUTCDay();

            if ((0, _index.default)(date, baseDate, options)) {
              return thisWeek(day);
            } else {
              return nextWeek(day);
            }
          },
          other: "P",
        };

        function formatRelative(token, date, baseDate, options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(date, baseDate, options);
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 455 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["Ð´Ð¾ Ð½.Ðµ.", "Ð½.Ðµ."],
          abbreviated: ["Ð´Ð¾ Ð½. Ðµ.", "Ð½. Ðµ."],
          wide: ["Ð´Ð¾ Ð½Ð°ÑˆÐ¾Ñ— ÐµÑ€Ð¸", "Ð½Ð°ÑˆÐ¾Ñ— ÐµÑ€Ð¸"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["1-Ð¹ ÐºÐ².", "2-Ð¹ ÐºÐ².", "3-Ð¹ ÐºÐ².", "4-Ð¹ ÐºÐ²."],
          wide: [
            "1-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "2-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "3-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
            "4-Ð¹ ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»",
          ],
        };
        var monthValues = {
          // Ð”Ð¡Ð¢Ð£ 3582:2013
          narrow: [
            "Ð¡",
            "Ð›",
            "Ð‘",
            "Ðš",
            "Ð¢",
            "Ð§",
            "Ð›",
            "Ð¡",
            "Ð’",
            "Ð–",
            "Ð›",
            "Ð“",
          ],
          abbreviated: [
            "ÑÑ–Ñ‡.",
            "Ð»ÑŽÑ‚.",
            "Ð±ÐµÑ€ÐµÐ·.",
            "ÐºÐ²Ñ–Ñ‚.",
            "Ñ‚Ñ€Ð°Ð².",
            "Ñ‡ÐµÑ€Ð².",
            "Ð»Ð¸Ð¿.",
            "ÑÐµÑ€Ð¿.",
            "Ð²ÐµÑ€ÐµÑ.",
            "Ð¶Ð¾Ð²Ñ‚.",
            "Ð»Ð¸ÑÑ‚Ð¾Ð¿.",
            "Ð³Ñ€ÑƒÐ´.",
          ],
          wide: [
            "ÑÑ–Ñ‡ÐµÐ½ÑŒ",
            "Ð»ÑŽÑ‚Ð¸Ð¹",
            "Ð±ÐµÑ€ÐµÐ·ÐµÐ½ÑŒ",
            "ÐºÐ²Ñ–Ñ‚ÐµÐ½ÑŒ",
            "Ñ‚Ñ€Ð°Ð²ÐµÐ½ÑŒ",
            "Ñ‡ÐµÑ€Ð²ÐµÐ½ÑŒ",
            "Ð»Ð¸Ð¿ÐµÐ½ÑŒ",
            "ÑÐµÑ€Ð¿ÐµÐ½ÑŒ",
            "Ð²ÐµÑ€ÐµÑÐµÐ½ÑŒ",
            "Ð¶Ð¾Ð²Ñ‚ÐµÐ½ÑŒ",
            "Ð»Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´",
            "Ð³Ñ€ÑƒÐ´ÐµÐ½ÑŒ",
          ],
        };
        var formattingMonthValues = {
          narrow: [
            "Ð¡",
            "Ð›",
            "Ð‘",
            "Ðš",
            "Ð¢",
            "Ð§",
            "Ð›",
            "Ð¡",
            "Ð’",
            "Ð–",
            "Ð›",
            "Ð“",
          ],
          abbreviated: [
            "ÑÑ–Ñ‡.",
            "Ð»ÑŽÑ‚.",
            "Ð±ÐµÑ€ÐµÐ·.",
            "ÐºÐ²Ñ–Ñ‚.",
            "Ñ‚Ñ€Ð°Ð².",
            "Ñ‡ÐµÑ€Ð².",
            "Ð»Ð¸Ð¿.",
            "ÑÐµÑ€Ð¿.",
            "Ð²ÐµÑ€ÐµÑ.",
            "Ð¶Ð¾Ð²Ñ‚.",
            "Ð»Ð¸ÑÑ‚Ð¾Ð¿.",
            "Ð³Ñ€ÑƒÐ´.",
          ],
          wide: [
            "ÑÑ–Ñ‡Ð½Ñ",
            "Ð»ÑŽÑ‚Ð¾Ð³Ð¾",
            "Ð±ÐµÑ€ÐµÐ·Ð½Ñ",
            "ÐºÐ²Ñ–Ñ‚Ð½Ñ",
            "Ñ‚Ñ€Ð°Ð²Ð½Ñ",
            "Ñ‡ÐµÑ€Ð²Ð½Ñ",
            "Ð»Ð¸Ð¿Ð½Ñ",
            "ÑÐµÑ€Ð¿Ð½Ñ",
            "Ð²ÐµÑ€ÐµÑÐ½Ñ",
            "Ð¶Ð¾Ð²Ñ‚Ð½Ñ",
            "Ð»Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´Ð°",
            "Ð³Ñ€ÑƒÐ´Ð½Ñ",
          ],
        };
        var dayValues = {
          narrow: ["Ð", "ÐŸ", "Ð’", "Ð¡", "Ð§", "ÐŸ", "Ð¡"],
          short: ["Ð½Ð´", "Ð¿Ð½", "Ð²Ñ‚", "ÑÑ€", "Ñ‡Ñ‚", "Ð¿Ñ‚", "ÑÐ±"],
          abbreviated: [
            "Ð½ÐµÐ´",
            "Ð¿Ð¾Ð½",
            "Ð²Ñ–Ð²",
            "ÑÐµÑ€",
            "Ñ‡Ñ‚Ð²",
            "Ð¿Ñ‚Ð½",
            "ÑÑƒÐ±",
          ],
          wide: [
            "Ð½ÐµÐ´Ñ–Ð»Ñ",
            "Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»Ð¾Ðº",
            "Ð²Ñ–Ð²Ñ‚Ð¾Ñ€Ð¾Ðº",
            "ÑÐµÑ€ÐµÐ´Ð°",
            "Ñ‡ÐµÑ‚Ð²ÐµÑ€",
            "Ð¿â€™ÑÑ‚Ð½Ð¸Ñ†Ñ",
            "ÑÑƒÐ±Ð¾Ñ‚Ð°",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ñ–Ð²Ð½.",
            noon: "Ð¿Ð¾Ð».",
            morning: "Ñ€Ð°Ð½Ð¾Ðº",
            afternoon: "Ð´ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ñ–Ñ‡",
          },
          abbreviated: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ñ–Ð²Ð½.",
            noon: "Ð¿Ð¾Ð».",
            morning: "Ñ€Ð°Ð½Ð¾Ðº",
            afternoon: "Ð´ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ñ–Ñ‡",
          },
          wide: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ñ–Ð²Ð½Ñ–Ñ‡",
            noon: "Ð¿Ð¾Ð»ÑƒÐ´ÐµÐ½ÑŒ",
            morning: "Ñ€Ð°Ð½Ð¾Ðº",
            afternoon: "Ð´ÐµÐ½ÑŒ",
            evening: "Ð²ÐµÑ‡Ñ–Ñ€",
            night: "Ð½Ñ–Ñ‡",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ñ–Ð²Ð½.",
            noon: "Ð¿Ð¾Ð».",
            morning: "Ñ€Ð°Ð½ÐºÑƒ",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡Ñ–",
          },
          abbreviated: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ñ–Ð²Ð½.",
            noon: "Ð¿Ð¾Ð».",
            morning: "Ñ€Ð°Ð½ÐºÑƒ",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡Ñ–",
          },
          wide: {
            am: "Ð”ÐŸ",
            pm: "ÐŸÐŸ",
            midnight: "Ð¿Ñ–Ð²Ð½Ñ–Ñ‡",
            noon: "Ð¿Ð¾Ð»ÑƒÐ´ÐµÐ½ÑŒ",
            morning: "Ñ€Ð°Ð½ÐºÑƒ",
            afternoon: "Ð´Ð½Ñ",
            evening: "Ð²ÐµÑ‡.",
            night: "Ð½Ð¾Ñ‡Ñ–",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var suffix;

          if (unit === "date") {
            if (dirtyNumber === 3 || dirtyNumber === 23) {
              suffix = "-Ñ”";
            } else {
              suffix = "-Ðµ";
            }
          } else if (
            unit === "minute" ||
            unit === "second" ||
            unit === "hour"
          ) {
            suffix = "-Ð°";
          } else {
            suffix = "-Ð¹";
          }

          return dirtyNumber + suffix;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "any",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 456 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(-?(Ðµ|Ð¹|Ñ”|Ð°|Ñ))?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^((Ð´Ð¾ )?Ð½\.?\s?Ðµ\.?)/i,
          abbreviated: /^((Ð´Ð¾ )?Ð½\.?\s?Ðµ\.?)/i,
          wide: /^(Ð´Ð¾ Ð½Ð°ÑˆÐ¾Ñ— ÐµÑ€Ð¸|Ð½Ð°ÑˆÐ¾Ñ— ÐµÑ€Ð¸|Ð½Ð°ÑˆÐ° ÐµÑ€Ð°)/i,
        };
        var parseEraPatterns = {
          any: [/^Ð´/i, /^Ð½/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^[1234](-?[Ð¸Ñ–]?Ð¹?)? ÐºÐ².?/i,
          wide: /^[1234](-?[Ð¸Ñ–]?Ð¹?)? ÐºÐ²Ð°Ñ€Ñ‚Ð°Ð»/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[ÑÐ»Ð±ÐºÑ‚Ñ‡Ð²Ð¶Ð³]/i,
          abbreviated:
            /^(ÑÑ–Ñ‡|Ð»ÑŽÑ‚|Ð±ÐµÑ€|Ð±ÐµÑ€ÐµÐ·|ÐºÐ²Ñ–|Ñ‚Ñ€Ð°Ð²?|Ñ‡ÐµÑ€|Ð»Ð¸Ð¿|ÑÐµÑ€|Ð²ÐµÑ€|Ð¶Ð¾Ð²|Ð»Ð¸Ñ(Ñ‚Ð¾Ð¿)?|Ð³Ñ€ÑƒÐ´)\.?/i,
          wide: /^(ÑÑ–Ñ‡ÐµÐ½ÑŒ|ÑÑ–Ñ‡Ð½Ñ|Ð»ÑŽÑ‚Ð¸Ð¹|Ð»ÑŽÑ‚Ð¾Ð³Ð¾|Ð±ÐµÑ€ÐµÐ·ÐµÐ½ÑŒ|Ð±ÐµÑ€ÐµÐ·Ð½Ñ|ÐºÐ²Ñ–Ñ‚ÐµÐ½ÑŒ|ÐºÐ²Ñ–Ñ‚Ð½Ñ|Ñ‚Ñ€Ð°Ð²ÐµÐ½ÑŒ|Ñ‚Ñ€Ð°Ð²Ð½Ñ|Ð»Ð¸Ð¿ÐµÐ½ÑŒ|Ð»Ð¸Ð¿Ð½Ñ|ÑÐµÑ€Ð¿ÐµÐ½ÑŒ|ÑÐµÑ€Ð¿Ð½Ñ|Ð²ÐµÑ€ÐµÑÐµÐ½ÑŒ|Ð²ÐµÑ€ÐµÑÐ½Ñ|Ð¶Ð¾Ð²Ñ‚ÐµÐ½ÑŒ|Ð¶Ð¾Ð²Ñ‚Ð½Ñ|Ð»Ð¸ÑÑ‚Ð¾Ð¿Ð°Ð´Ð°?|Ð³Ñ€ÑƒÐ´ÐµÐ½ÑŒ|Ð³Ñ€ÑƒÐ´Ð½Ñ)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^Ñ/i,
            /^Ð»/i,
            /^Ð±/i,
            /^Ðº/i,
            /^Ñ‚/i,
            /^Ñ‡/i,
            /^Ð»/i,
            /^Ñ/i,
            /^Ð²/i,
            /^Ð¶/i,
            /^Ð»/i,
            /^Ð³/i,
          ],
          any: [
            /^ÑÑ–/i,
            /^Ð»ÑŽ/i,
            /^Ð±/i,
            /^Ðº/i,
            /^Ñ‚/i,
            /^Ñ‡/i,
            /^Ð»Ð¸Ð¿/i,
            /^ÑÐµ/i,
            /^Ð²/i,
            /^Ð¶/i,
            /^Ð»Ð¸Ñ/i,
            /^Ð³/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[Ð½Ð¿Ð²ÑÑ‡]/i,
          short: /^(Ð½Ð´|Ð¿Ð½|Ð²Ñ‚|ÑÑ€|Ñ‡Ñ‚|Ð¿Ñ‚|ÑÐ±)\.?/i,
          abbreviated:
            /^(Ð½ÐµÐ´|Ð¿Ð¾Ð½|Ð²Ñ–Ð²|ÑÐµÑ€|Ñ‡Ðµ?Ñ‚Ð²|Ð¿Ñ‚Ð½?|ÑÑƒÐ±)\.?/i,
          wide: /^(Ð½ÐµÐ´Ñ–Ð»[ÑÑ–]|Ð¿Ð¾Ð½ÐµÐ´Ñ–Ð»[Ð¾Ðº][ÐºÐ°]|Ð²Ñ–Ð²Ñ‚Ð¾Ñ€[Ð¾Ðº][ÐºÐ°]|ÑÐµÑ€ÐµÐ´[Ð°Ð¸]|Ñ‡ÐµÑ‚Ð²ÐµÑ€(Ð³Ð°)?|Ð¿\W*?ÑÑ‚Ð½Ð¸Ñ†[ÑÑ–]|ÑÑƒÐ±Ð¾Ñ‚[Ð°Ð¸])/i,
        };
        var parseDayPatterns = {
          narrow: [/^Ð½/i, /^Ð¿/i, /^Ð²/i, /^Ñ/i, /^Ñ‡/i, /^Ð¿/i, /^Ñ/i],
          any: [
            /^Ð½/i,
            /^Ð¿[Ð¾Ð½]/i,
            /^Ð²/i,
            /^Ñ[ÐµÑ€]/i,
            /^Ñ‡/i,
            /^Ð¿\W*?[ÑÑ‚]/i,
            /^Ñ[ÑƒÐ±]/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow:
            /^([Ð´Ð¿]Ð¿|Ð¿Ñ–Ð²Ð½\.?|Ð¿Ð¾Ð»\.?|Ñ€Ð°Ð½Ð¾Ðº|Ñ€Ð°Ð½ÐºÑƒ|Ð´ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡\.?|Ð½Ñ–Ñ‡|Ð½Ð¾Ñ‡Ñ–)/i,
          abbreviated:
            /^([Ð´Ð¿]Ð¿|Ð¿Ñ–Ð²Ð½\.?|Ð¿Ð¾Ð»\.?|Ñ€Ð°Ð½Ð¾Ðº|Ñ€Ð°Ð½ÐºÑƒ|Ð´ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡\.?|Ð½Ñ–Ñ‡|Ð½Ð¾Ñ‡Ñ–)/i,
          wide: /^([Ð´Ð¿]Ð¿|Ð¿Ñ–Ð²Ð½Ñ–Ñ‡|Ð¿Ð¾Ð»ÑƒÐ´ÐµÐ½ÑŒ|Ñ€Ð°Ð½Ð¾Ðº|Ñ€Ð°Ð½ÐºÑƒ|Ð´ÐµÐ½ÑŒ|Ð´Ð½Ñ|Ð²ÐµÑ‡Ñ–Ñ€|Ð²ÐµÑ‡Ð¾Ñ€Ð°|Ð½Ñ–Ñ‡|Ð½Ð¾Ñ‡Ñ–)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^Ð´Ð¿/i,
            pm: /^Ð¿Ð¿/i,
            midnight: /^Ð¿Ñ–Ð²Ð½/i,
            noon: /^Ð¿Ð¾Ð»/i,
            morning: /^Ñ€/i,
            afternoon: /^Ð´[ÐµÐ½]/i,
            evening: /^Ð²/i,
            night: /^Ð½/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 457 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "sekunddan kam",
            other: "{{count}} sekunddan kam",
          },
          xSeconds: {
            one: "1 sekund",
            other: "{{count}} sekund",
          },
          halfAMinute: "yarim minut",
          lessThanXMinutes: {
            one: "bir minutdan kam",
            other: "{{count}} minutdan kam",
          },
          xMinutes: {
            one: "1 minut",
            other: "{{count}} minut",
          },
          aboutXHours: {
            one: "tahminan 1 soat",
            other: "tahminan {{count}} soat",
          },
          xHours: {
            one: "1 soat",
            other: "{{count}} soat",
          },
          xDays: {
            one: "1 kun",
            other: "{{count}} kun",
          },
          aboutXWeeks: {
            one: "tahminan 1 hafta",
            other: "tahminan {{count}} hafta",
          },
          xWeeks: {
            one: "1 hafta",
            other: "{{count}} hafta",
          },
          aboutXMonths: {
            one: "tahminan 1 oy",
            other: "tahminan {{count}} oy",
          },
          xMonths: {
            one: "1 oy",
            other: "{{count}} oy",
          },
          aboutXYears: {
            one: "tahminan 1 yil",
            other: "tahminan {{count}} yil",
          },
          xYears: {
            one: "1 yil",
            other: "{{count}} yil",
          },
          overXYears: {
            one: "1 yildan ko'p",
            other: "{{count}} yildan ko'p",
          },
          almostXYears: {
            one: "deyarli 1 yil",
            other: "deyarli {{count}} yil",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " dan keyin";
            } else {
              return result + " oldin";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 458 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "EEEE, do MMMM, y",
          long: "do MMMM, y",
          medium: "d MMM, y",
          short: "dd/MM/yyyy",
        };
        var timeFormats = {
          full: "h:mm:ss zzzz",
          long: "h:mm:ss z",
          medium: "h:mm:ss",
          short: "h:mm",
        };
        var dateTimeFormats = {
          any: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "any",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 459 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'oldingi' eeee p 'da'",
          yesterday: "'kecha' p 'da'",
          today: "'bugun' p 'da'",
          tomorrow: "'ertaga' p 'da'",
          nextWeek: "eeee p 'da'",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 460 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["M.A", "M."],
          abbreviated: ["M.A", "M."],
          wide: ["Miloddan Avvalgi", "Milodiy"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["CH.1", "CH.2", "CH.3", "CH.4"],
          wide: [
            "1-chi chorak",
            "2-chi chorak",
            "3-chi chorak",
            "4-chi chorak",
          ], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["Y", "F", "M", "A", "M", "I", "I", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Yan",
            "Fev",
            "Mar",
            "Apr",
            "May",
            "Iyun",
            "Iyul",
            "Avg",
            "Sen",
            "Okt",
            "Noy",
            "Dek",
          ],
          wide: [
            "Yanvar",
            "Fevral",
            "Mart",
            "Aprel",
            "May",
            "Iyun",
            "Iyul",
            "Avgust",
            "Sentabr",
            "Oktabr",
            "Noyabr",
            "Dekabr",
          ],
        };
        var dayValues = {
          narrow: ["Y", "D", "S", "CH", "P", "J", "SH"],
          short: ["Ya", "Du", "Se", "Cho", "Pa", "Ju", "Sha"],
          abbreviated: ["Yak", "Dush", "Sesh", "Chor", "Pay", "Jum", "Shan"],
          wide: [
            "Yakshanba",
            "Dushanba",
            "Seshanba",
            "Chorshanba",
            "Payshanba",
            "Juma",
            "Shanba",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "y.t",
            noon: "p.",
            morning: "ertalab",
            afternoon: "tushdan keyin",
            evening: "kechqurun",
            night: "tun",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "yarim tun",
            noon: "peshin",
            morning: "ertalab",
            afternoon: "tushdan keyin",
            evening: "kechqurun",
            night: "tun",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "yarim tun",
            noon: "peshin",
            morning: "ertalab",
            afternoon: "tushdan keyin",
            evening: "kechqurun",
            night: "tun",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "y.t",
            noon: "p.",
            morning: "ertalab",
            afternoon: "tushdan keyin",
            evening: "kechqurun",
            night: "tun",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "yarim tun",
            noon: "peshin",
            morning: "ertalab",
            afternoon: "tushdan keyin",
            evening: "kechqurun",
            night: "tun",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "yarim tun",
            noon: "peshin",
            morning: "ertalab",
            afternoon: "tushdan keyin",
            evening: "kechqurun",
            night: "tun",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          return number;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 461 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)(chi)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(m\.a|m\.)/i,
          abbreviated: /^(m\.a\.?\s?m\.?)/i,
          wide: /^(miloddan avval|miloddan keyin)/i,
        };
        var parseEraPatterns = {
          any: [/^b/i, /^(a|c)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](chi)? chorak/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[yfmasond]/i,
          abbreviated: /^(yan|fev|mar|apr|may|iyun|iyul|avg|sen|okt|noy|dek)/i,
          wide: /^(yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^y/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^i/i,
            /^i/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ya/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^may/i,
            /^iyun/i,
            /^iyul/i,
            /^av/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[ydschj]/i,
          short: /^(ya|du|se|cho|pa|ju|sha)/i,
          abbreviated: /^(yak|dush|sesh|chor|pay|jum|shan)/i,
          wide: /^(yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba)/i,
        };
        var parseDayPatterns = {
          narrow: [/^y/i, /^d/i, /^s/i, /^ch/i, /^p/i, /^j/i, /^sh/i],
          any: [/^ya/i, /^d/i, /^se/i, /^ch/i, /^p/i, /^j/i, /^sh/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|y\.t|p| (ertalab|tushdan keyin|kechqurun|tun))/i,
          any: /^([ap]\.?\s?m\.?|yarim tun|peshin| (ertalab|tushdan keyin|kechqurun|tun))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^y\.t/i,
            noon: /^pe/i,
            morning: /ertalab/i,
            afternoon: /tushdan keyin/i,
            evening: /kechqurun/i,
            night: /tun/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 462 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "dÆ°a»›i 1 giá¢y",
            other: "dÆ°a»›i {{count}} giá¢y",
          },
          xSeconds: {
            one: "1 giá¢y",
            other: "{{count}} giá¢y",
          },
          halfAMinute: "na»­a pháºt",
          lessThanXMinutes: {
            one: "dÆ°a»›i 1 pháºt",
            other: "dÆ°a»›i {{count}} pháºt",
          },
          xMinutes: {
            one: "1 pháºt",
            other: "{{count}} pháºt",
          },
          aboutXHours: {
            one: "khoaº£ng 1 gia»",
            other: "khoaº£ng {{count}} gia»",
          },
          xHours: {
            one: "1 gia»",
            other: "{{count}} gia»",
          },
          xDays: {
            one: "1 ngá y",
            other: "{{count}} ngá y",
          },
          aboutXWeeks: {
            one: "khoaº£ng 1 tuaº§n",
            other: "khoaº£ng {{count}} tuaº§n",
          },
          xWeeks: {
            one: "1 tuaº§n",
            other: "{{count}} tuaº§n",
          },
          aboutXMonths: {
            one: "khoaº£ng 1 thá¡ng",
            other: "khoaº£ng {{count}} thá¡ng",
          },
          xMonths: {
            one: "1 thá¡ng",
            other: "{{count}} thá¡ng",
          },
          aboutXYears: {
            one: "khoaº£ng 1 nÄƒm",
            other: "khoaº£ng {{count}} nÄƒm",
          },
          xYears: {
            one: "1 nÄƒm",
            other: "{{count}} nÄƒm",
          },
          overXYears: {
            one: "hÆ¡n 1 nÄƒm",
            other: "hÆ¡n {{count}} nÄƒm",
          },
          almostXYears: {
            one: "gaº§n 1 nÄƒm",
            other: "gaº§n {{count}} nÄƒm",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + " na»¯a";
            } else {
              return result + " trÆ°a»›c";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 463 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          // tha»© Sá¡u, ngá y 25 thá¡ng 08 nÄƒm 2017
          full: "EEEE, 'ngá y' d MMMM 'nÄƒm' y",
          // ngá y 25 thá¡ng 08 nÄƒm 2017
          long: "'ngá y' d MMMM 'nÄƒm' y",
          // 25 thg 08 nÄƒm 2017
          medium: "d MMM 'nÄƒm' y",
          // 25/08/2017
          short: "dd/MM/y",
        };
        var timeFormats = {
          full: "HH:mm:ss zzzz",
          long: "HH:mm:ss z",
          medium: "HH:mm:ss",
          short: "HH:mm",
        };
        var dateTimeFormats = {
          // tha»© Sá¡u, ngá y 25 thá¡ng 08 nÄƒm 2017 23:25:59
          full: "{{date}} {{time}}",
          // ngá y 25 thá¡ng 08 nÄƒm 2017 23:25
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 464 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "eeee 'tuaº§n trÆ°a»›c vá o láºc' p",
          yesterday: "'há´m qua vá o láºc' p",
          today: "'há´m nay vá o láºc' p",
          tomorrow: "'ngá y mai vá o láºc' p",
          nextWeek: "eeee 'ta»›i vá o láºc' p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 465 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Vietnamese locale reference: http://www.localeplanet.com/icu/vi-VN/index.html
        // Capitalization reference: http://hcmup.edu.vn/index.php?option=com_content&view=article&id=4106%3Avit-hoa-trong-vn-bn-hanh-chinh&catid=2345%3Atham-kho&Itemid=4103&lang=vi&site=134
        var eraValues = {
          narrow: ["TCN", "SCN"],
          abbreviated: ["trÆ°a»›c CN", "sau CN"],
          wide: ["trÆ°a»›c Cá´ng Nguyáªn", "sau Cá´ng Nguyáªn"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["Quá½ 1", "Quá½ 2", "Quá½ 3", "Quá½ 4"],
        };
        var formattingQuarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          // I notice many news outlet use this "quá½ II/2018"
          wide: ["quá½ I", "quá½ II", "quá½ III", "quá½ IV"], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7",
            "8",
            "9",
            "10",
            "11",
            "12",
          ],
          abbreviated: [
            "Thg 1",
            "Thg 2",
            "Thg 3",
            "Thg 4",
            "Thg 5",
            "Thg 6",
            "Thg 7",
            "Thg 8",
            "Thg 9",
            "Thg 10",
            "Thg 11",
            "Thg 12",
          ],
          wide: [
            "Thá¡ng Ma»™t",
            "Thá¡ng Hai",
            "Thá¡ng Ba",
            "Thá¡ng TÆ°",
            "Thá¡ng NÄƒm",
            "Thá¡ng Sá¡u",
            "Thá¡ng Baº£y",
            "Thá¡ng Tá¡m",
            "Thá¡ng Chá­n",
            "Thá¡ng MÆ°a»i",
            "Thá¡ng MÆ°a»i Ma»™t",
            "Thá¡ng MÆ°a»i Hai",
          ], // In Vietnamese date formatting, month number less than 10 expected to have leading zero
        };
        var formattingMonthValues = {
          narrow: [
            "01",
            "02",
            "03",
            "04",
            "05",
            "06",
            "07",
            "08",
            "09",
            "10",
            "11",
            "12",
          ],
          abbreviated: [
            "thg 1",
            "thg 2",
            "thg 3",
            "thg 4",
            "thg 5",
            "thg 6",
            "thg 7",
            "thg 8",
            "thg 9",
            "thg 10",
            "thg 11",
            "thg 12",
          ],
          wide: [
            "thá¡ng 01",
            "thá¡ng 02",
            "thá¡ng 03",
            "thá¡ng 04",
            "thá¡ng 05",
            "thá¡ng 06",
            "thá¡ng 07",
            "thá¡ng 08",
            "thá¡ng 09",
            "thá¡ng 10",
            "thá¡ng 11",
            "thá¡ng 12",
          ],
        };
        var dayValues = {
          narrow: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
          short: ["CN", "Th 2", "Th 3", "Th 4", "Th 5", "Th 6", "Th 7"],
          abbreviated: [
            "CN",
            "Tha»© 2",
            "Tha»© 3",
            "Tha»© 4",
            "Tha»© 5",
            "Tha»© 6",
            "Tha»© 7",
          ],
          wide: [
            "Cha»§ Nhaº­t",
            "Tha»© Hai",
            "Tha»© Ba",
            "Tha»© TÆ°",
            "Tha»© NÄƒm",
            "Tha»© Sá¡u",
            "Tha»© Baº£y",
          ], // Vietnamese are used to AM/PM borrowing from English, hence `narrow` and
          // `abbreviated` are just like English but I'm leaving the `wide`
          // format being localized with abbreviations found in some systems (Sáng / CHia»u);
          // however, personally, I don't think `Chia»u` sounds appropriate for `PM`
        };
        var dayPeriodValues = {
          // narrow date period is extremely rare in Vietnamese
          // I used abbreviated form for noon, morning and afternoon
          // which are regconizable by Vietnamese, others cannot be any shorter
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "na»­a Ä‘áªm",
            noon: "tr",
            morning: "sg",
            afternoon: "ch",
            evening: "ta»‘i",
            night: "Ä‘áªm",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "na»­a Ä‘áªm",
            noon: "trÆ°a",
            morning: "sá¡ng",
            afternoon: "chia»u",
            evening: "ta»‘i",
            night: "Ä‘áªm",
          },
          wide: {
            am: "SA",
            pm: "CH",
            midnight: "na»­a Ä‘áªm",
            noon: "trÆ°a",
            morning: "sá¡ng",
            afternoon: "chia»u",
            evening: "ta»‘i",
            night: "Ä‘áªm",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "am",
            pm: "pm",
            midnight: "na»­a Ä‘áªm",
            noon: "tr",
            morning: "sg",
            afternoon: "ch",
            evening: "ta»‘i",
            night: "Ä‘áªm",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "na»­a Ä‘áªm",
            noon: "trÆ°a",
            morning: "sá¡ng",
            afternoon: "chia»u",
            evening: "ta»‘i",
            night: "Ä‘áªm",
          },
          wide: {
            am: "SA",
            pm: "CH",
            midnight: "na»­a Ä‘áªm",
            noon: "gia»¯a trÆ°a",
            morning: "vá o bua»•i sá¡ng",
            afternoon: "vá o bua»•i chia»u",
            evening: "vá o bua»•i ta»‘i",
            night: "vá o ban Ä‘áªm",
          }, // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'month', 'quarter', 'week', 'isoWeek', 'dayOfYear',
          // 'dayOfMonth' or 'dayOfWeek'
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var options = dirtyOptions || {};
          var unit = String(options.unit);
          var number = parseInt(dirtyNumber, 10);

          if (unit === "quarter") {
            // many news outlets use "quá½ I"...
            switch (number) {
              case 1:
                return "I";

              case 2:
                return "II";

              case 3:
                return "III";

              case 4:
                return "IV";
            }
          } else if (unit === "day") {
            // day of week in Vietnamese has ordinal number meaning,
            // so we should use them, else it'll sound weird
            switch (number) {
              case 1:
                return "tha»© 2";
              // meaning 2nd day but it's the first day of the week :D

              case 2:
                return "tha»© 3";
              // meaning 3rd day

              case 3:
                return "tha»© 4";
              // meaning 4th day and so on

              case 4:
                return "tha»© 5";

              case 5:
                return "tha»© 6";

              case 6:
                return "tha»© 7";

              case 7:
                return "cha»§ nhaº­t";
              // meaning Sunday, there's no 8th day :D
            }
          } else if (unit === "week") {
            if (number === 1) {
              return "tha»© nhaº¥t";
            } else {
              return "tha»© " + number;
            }
          } else if (unit === "dayOfYear") {
            if (number === 1) {
              return "Ä‘aº§u tiáªn";
            } else {
              return "tha»© " + number;
            }
          } // there are no different forms of ordinal numbers in Vietnamese

          return number;
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            formattingValues: formattingQuarterValues,
            defaultFormattingWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
            formattingValues: formattingMonthValues,
            defaultFormattingWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 466 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(\d+)/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(tcn|scn)/i,
          abbreviated: /^(trÆ°a»›c CN|sau CN)/i,
          wide: /^(trÆ°a»›c Cá´ng Nguyáªn|sau Cá´ng Nguyáªn)/i,
        };
        var parseEraPatterns = {
          any: [/^t/i, /^s/i],
        };
        var matchQuarterPatterns = {
          narrow: /^([1234]|i{1,3}v?)/i,
          abbreviated: /^q([1234]|i{1,3}v?)/i,
          wide: /^quá½ ([1234]|i{1,3}v?)/i,
        };
        var parseQuarterPatterns = {
          any: [/(1|i)$/i, /(2|ii)$/i, /(3|iii)$/i, /(4|iv)$/i],
        };
        var matchMonthPatterns = {
          // month number may contain leading 0, 'thg' prefix may have space, underscore or empty before number
          // note the order of '1' since it is a sub-string of '10', so must be lower priority
          narrow: /^(0?[2-9]|10|11|12|0?1)/i,
          // note the order of 'thg 1' since it is sub-string of 'thg 10', so must be lower priority
          abbreviated: /^thg[ _]?(0?[1-9](?!\d)|10|11|12)/i,
          // note the order of 'MÆ°a»i' since it is sub-string of MÆ°a»i Ma»™t, so must be lower priority
          wide: /^thá¡ng ?(Ma»™t|Hai|Ba|TÆ°|NÄƒm|Sá¡u|Baº£y|Tá¡m|Chá­n|MÆ°a»i|MÆ°a»i ?Ma»™t|MÆ°a»i ?Hai|0?[1-9](?!\d)|10|11|12)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /0?1$/i,
            /0?2/i,
            /3/,
            /4/,
            /5/,
            /6/,
            /7/,
            /8/,
            /9/,
            /10/,
            /11/,
            /12/,
          ],
          abbreviated: [
            /^thg[ _]?0?1(?!\d)/i,
            /^thg[ _]?0?2/i,
            /^thg[ _]?0?3/i,
            /^thg[ _]?0?4/i,
            /^thg[ _]?0?5/i,
            /^thg[ _]?0?6/i,
            /^thg[ _]?0?7/i,
            /^thg[ _]?0?8/i,
            /^thg[ _]?0?9/i,
            /^thg[ _]?10/i,
            /^thg[ _]?11/i,
            /^thg[ _]?12/i,
          ],
          wide: [
            /^thá¡ng ?(Ma»™t|0?1(?!\d))/i,
            /^thá¡ng ?(Hai|0?2)/i,
            /^thá¡ng ?(Ba|0?3)/i,
            /^thá¡ng ?(TÆ°|0?4)/i,
            /^thá¡ng ?(NÄƒm|0?5)/i,
            /^thá¡ng ?(Sá¡u|0?6)/i,
            /^thá¡ng ?(Baº£y|0?7)/i,
            /^thá¡ng ?(Tá¡m|0?8)/i,
            /^thá¡ng ?(Chá­n|0?9)/i,
            /^thá¡ng ?(MÆ°a»i|10)/i,
            /^thá¡ng ?(MÆ°a»i ?Ma»™t|11)/i,
            /^thá¡ng ?(MÆ°a»i ?Hai|12)/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^(CN|T2|T3|T4|T5|T6|T7)/i,
          short: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
          abbreviated: /^(CN|Th ?2|Th ?3|Th ?4|Th ?5|Th ?6|Th ?7)/i,
          wide: /^(Cha»§ ?Nhaº­t|Cháºa ?Nhaº­t|tha»© ?Hai|tha»© ?Ba|tha»© ?TÆ°|tha»© ?NÄƒm|tha»© ?Sá¡u|tha»© ?Baº£y)/i,
        };
        var parseDayPatterns = {
          narrow: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
          short: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
          abbreviated: [/CN/i, /2/i, /3/i, /4/i, /5/i, /6/i, /7/i],
          wide: [
            /(Cha»§|Cháºa) ?Nhaº­t/i,
            /Hai/i,
            /Ba/i,
            /TÆ°/i,
            /NÄƒm/i,
            /Sá¡u/i,
            /Baº£y/i,
          ],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|na»­a Ä‘áªm|trÆ°a|(gia») (sá¡ng|chia»u|ta»‘i|Ä‘áªm))/i,
          abbreviated:
            /^(am|pm|na»­a Ä‘áªm|trÆ°a|(gia») (sá¡ng|chia»u|ta»‘i|Ä‘áªm))/i,
          wide: /^(ch[^i]*|sa|na»­a Ä‘áªm|trÆ°a|(gia») (sá¡ng|chia»u|ta»‘i|Ä‘áªm))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^(a|sa)/i,
            pm: /^(p|ch[^i]*)/i,
            midnight: /na»­a Ä‘áªm/i,
            noon: /trÆ°a/i,
            morning: /sá¡ng/i,
            afternoon: /chia»u/i,
            evening: /ta»‘i/i,
            night: /^Ä‘áªm/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 467 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "ä¸åˆ° 1 c§’",
            other: "ä¸åˆ° {{count}} c§’",
          },
          xSeconds: {
            one: "1 c§’",
            other: "{{count}} c§’",
          },
          halfAMinute: "åŠåˆ†é’Ÿ",
          lessThanXMinutes: {
            one: "ä¸åˆ° 1 åˆ†é’Ÿ",
            other: "ä¸åˆ° {{count}} åˆ†é’Ÿ",
          },
          xMinutes: {
            one: "1 åˆ†é’Ÿ",
            other: "{{count}} åˆ†é’Ÿ",
          },
          xHours: {
            one: "1 å°æ—¶",
            other: "{{count}} å°æ—¶",
          },
          aboutXHours: {
            one: "å¤§cº¦ 1 å°æ—¶",
            other: "å¤§cº¦ {{count}} å°æ—¶",
          },
          xDays: {
            one: "1 å¤©",
            other: "{{count}} å¤©",
          },
          aboutXWeeks: {
            one: "å¤§cº¦ 1 ä¸ªæ˜ŸæœŸ",
            other: "å¤§cº¦ {{count}} ä¸ªæ˜ŸæœŸ",
          },
          xWeeks: {
            one: "1 ä¸ªæ˜ŸæœŸ",
            other: "{{count}} ä¸ªæ˜ŸæœŸ",
          },
          aboutXMonths: {
            one: "å¤§cº¦ 1 ä¸ªæœˆ",
            other: "å¤§cº¦ {{count}} ä¸ªæœˆ",
          },
          xMonths: {
            one: "1 ä¸ªæœˆ",
            other: "{{count}} ä¸ªæœˆ",
          },
          aboutXYears: {
            one: "å¤§cº¦ 1 å¹´",
            other: "å¤§cº¦ {{count}} å¹´",
          },
          xYears: {
            one: "1 å¹´",
            other: "{{count}} å¹´",
          },
          overXYears: {
            one: "è¶…è¿‡ 1 å¹´",
            other: "è¶…è¿‡ {{count}} å¹´",
          },
          almostXYears: {
            one: "å°†è¿‘ 1 å¹´",
            other: "å°†è¿‘ {{count}} å¹´",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + "å†…";
            } else {
              return result + "å‰";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 468 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "y'å¹´'M'æœˆ'd'æ—¥' EEEE",
          long: "y'å¹´'M'æœˆ'd'æ—¥'",
          medium: "yyyy-MM-dd",
          short: "yy-MM-dd",
        };
        var timeFormats = {
          full: "zzzz a h:mm:ss",
          long: "z a h:mm:ss",
          medium: "a h:mm:ss",
          short: "a h:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 469 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;

        var _index = _interopRequireDefault(__webpack_require__(7));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        function checkWeek(_date, _baseDate, _options, baseFormat) {
          if ((0, _index.default)(_date, _baseDate, _options)) {
            return baseFormat; // in same week
          } else if (_date.getTime() > _baseDate.getTime()) {
            return "'ä¸‹ä¸ª'" + baseFormat; // in next week
          }

          return "'ä¸Šä¸ª'" + baseFormat; // in last week
        }

        var formatRelativeLocale = {
          lastWeek: checkWeek,
          // days before yesterday, maybe in this week or last week
          yesterday: "'æ˜¨å¤©' p",
          today: "'ä»Šå¤©' p",
          tomorrow: "'æ˜Žå¤©' p",
          nextWeek: checkWeek,
          // days after tomorrow, maybe in this week or next week
          other: "PP p",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          var format = formatRelativeLocale[token];

          if (typeof format === "function") {
            return format(_date, _baseDate, _options, "eeee p");
          }

          return format;
        }

        module.exports = exports.default;

        /***/
      },
      /* 470 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["å‰", "å…¬å…ƒ"],
          abbreviated: ["å‰", "å…¬å…ƒ"],
          wide: ["å…¬å…ƒå‰", "å…¬å…ƒ"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["c¬¬ä¸€åˆ»", "c¬¬äºŒåˆ»", "c¬¬ä¸‰åˆ»", "c¬¬å››åˆ»"],
          wide: [
            "c¬¬ä¸€åˆ»é’Ÿ",
            "c¬¬äºŒåˆ»é’Ÿ",
            "c¬¬ä¸‰åˆ»é’Ÿ",
            "c¬¬å››åˆ»é’Ÿ",
          ],
        };
        var monthValues = {
          narrow: [
            "ä¸€",
            "äºŒ",
            "ä¸‰",
            "å››",
            "äº”",
            "å…­",
            "ä¸ƒ",
            "å…«",
            "ä¹",
            "å",
            "åä¸€",
            "åäºŒ",
          ],
          abbreviated: [
            "1æœˆ",
            "2æœˆ",
            "3æœˆ",
            "4æœˆ",
            "5æœˆ",
            "6æœˆ",
            "7æœˆ",
            "8æœˆ",
            "9æœˆ",
            "10æœˆ",
            "11æœˆ",
            "12æœˆ",
          ],
          wide: [
            "ä¸€æœˆ",
            "äºŒæœˆ",
            "ä¸‰æœˆ",
            "å››æœˆ",
            "äº”æœˆ",
            "å…­æœˆ",
            "ä¸ƒæœˆ",
            "å…«æœˆ",
            "ä¹æœˆ",
            "åæœˆ",
            "åä¸€æœˆ",
            "åäºŒæœˆ",
          ],
        };
        var dayValues = {
          narrow: ["æ—¥", "ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­"],
          short: ["æ—¥", "ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­"],
          abbreviated: [
            "å‘¨æ—¥",
            "å‘¨ä¸€",
            "å‘¨äºŒ",
            "å‘¨ä¸‰",
            "å‘¨å››",
            "å‘¨äº”",
            "å‘¨å…­",
          ],
          wide: [
            "æ˜ŸæœŸæ—¥",
            "æ˜ŸæœŸä¸€",
            "æ˜ŸæœŸäºŒ",
            "æ˜ŸæœŸä¸‰",
            "æ˜ŸæœŸå››",
            "æ˜ŸæœŸäº”",
            "æ˜ŸæœŸå…­",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "ä¸Š",
            pm: "ä¸‹",
            midnight: "å‡Œæ™¨",
            noon: "åˆ",
            morning: "æ—©",
            afternoon: "ä¸‹åˆ",
            evening: "æ™š",
            night: "å¤œ",
          },
          abbreviated: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé—´",
          },
          wide: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé—´",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "ä¸Š",
            pm: "ä¸‹",
            midnight: "å‡Œæ™¨",
            noon: "åˆ",
            morning: "æ—©",
            afternoon: "ä¸‹åˆ",
            evening: "æ™š",
            night: "å¤œ",
          },
          abbreviated: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé—´",
          },
          wide: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé—´",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'
          var number = Number(dirtyNumber);
          var options = dirtyOptions || {};
          var unit = String(options.unit);

          switch (unit) {
            case "date":
              return number.toString() + "æ—¥";

            case "hour":
              return number.toString() + "æ—¶";

            case "minute":
              return number.toString() + "åˆ†";

            case "second":
              return number.toString() + "c§’";

            default:
              return "c¬¬ " + number.toString();
          }
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 471 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(c¬¬\s*)?\d+(æ—¥|æ—¶|åˆ†|c§’)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(å‰)/i,
          abbreviated: /^(å‰)/i,
          wide: /^(å…¬å…ƒå‰|å…¬å…ƒ)/i,
        };
        var parseEraPatterns = {
          any: [/^(å‰)/i, /^(å…¬å…ƒ)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^c¬¬[ä¸€äºŒä¸‰å››]åˆ»/i,
          wide: /^c¬¬[ä¸€äºŒä¸‰å››]åˆ»é’Ÿ/i,
        };
        var parseQuarterPatterns = {
          any: [/(1|ä¸€)/i, /(2|äºŒ)/i, /(3|ä¸‰)/i, /(4|å››)/i],
        };
        var matchMonthPatterns = {
          narrow: /^(ä¸€|äºŒ|ä¸‰|å››|äº”|å…­|ä¸ƒ|å…«|ä¹|å[äºŒä¸€])/i,
          abbreviated:
            /^(ä¸€|äºŒ|ä¸‰|å››|äº”|å…­|ä¸ƒ|å…«|ä¹|å[äºŒä¸€]|\d|1[12])æœˆ/i,
          wide: /^(ä¸€|äºŒ|ä¸‰|å››|äº”|å…­|ä¸ƒ|å…«|ä¹|å[äºŒä¸€])æœˆ/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^ä¸€/i,
            /^äºŒ/i,
            /^ä¸‰/i,
            /^å››/i,
            /^äº”/i,
            /^å…­/i,
            /^ä¸ƒ/i,
            /^å…«/i,
            /^ä¹/i,
            /^å(?!(ä¸€|äºŒ))/i,
            /^åä¸€/i,
            /^åäºŒ/i,
          ],
          any: [
            /^ä¸€|1/i,
            /^äºŒ|2/i,
            /^ä¸‰|3/i,
            /^å››|4/i,
            /^äº”|5/i,
            /^å…­|6/i,
            /^ä¸ƒ|7/i,
            /^å…«|8/i,
            /^ä¹|9/i,
            /^å(?!(ä¸€|äºŒ))|10/i,
            /^åä¸€|11/i,
            /^åäºŒ|12/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
          short: /^[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
          abbreviated: /^å‘¨[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
          wide: /^æ˜ŸæœŸ[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
        };
        var parseDayPatterns = {
          any: [/æ—¥/i, /ä¸€/i, /äºŒ/i, /ä¸‰/i, /å››/i, /äº”/i, /å…­/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(ä¸Šåˆ?|ä¸‹åˆ?|åˆå¤œ|[ä¸­æ­£]åˆ|æ—©ä¸Š?|ä¸‹åˆ|æ™šä¸Š?|å‡Œæ™¨|)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^ä¸Šåˆ?/i,
            pm: /^ä¸‹åˆ?/i,
            midnight: /^åˆå¤œ/i,
            noon: /^[ä¸­æ­£]åˆ/i,
            morning: /^æ—©ä¸Š/i,
            afternoon: /^ä¸‹åˆ/i,
            evening: /^æ™šä¸Š?/i,
            night: /^å‡Œæ™¨/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 472 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "å°‘æ–¼ 1 c§’",
            other: "å°‘æ–¼ {{count}} c§’",
          },
          xSeconds: {
            one: "1 c§’",
            other: "{{count}} c§’",
          },
          halfAMinute: "åŠåˆ†é˜",
          lessThanXMinutes: {
            one: "å°‘æ–¼ 1 åˆ†é˜",
            other: "å°‘æ–¼ {{count}} åˆ†é˜",
          },
          xMinutes: {
            one: "1 åˆ†é˜",
            other: "{{count}} åˆ†é˜",
          },
          xHours: {
            one: "1 å°æ™‚",
            other: "{{count}} å°æ™‚",
          },
          aboutXHours: {
            one: "å¤§c´„ 1 å°æ™‚",
            other: "å¤§c´„ {{count}} å°æ™‚",
          },
          xDays: {
            one: "1 å¤©",
            other: "{{count}} å¤©",
          },
          aboutXWeeks: {
            one: "å¤§c´„ 1 ä¸ªæ˜ŸæœŸ",
            other: "å¤§c´„ {{count}} ä¸ªæ˜ŸæœŸ",
          },
          xWeeks: {
            one: "1 ä¸ªæ˜ŸæœŸ",
            other: "{{count}} ä¸ªæ˜ŸæœŸ",
          },
          aboutXMonths: {
            one: "å¤§c´„ 1 å€‹æœˆ",
            other: "å¤§c´„ {{count}} å€‹æœˆ",
          },
          xMonths: {
            one: "1 å€‹æœˆ",
            other: "{{count}} å€‹æœˆ",
          },
          aboutXYears: {
            one: "å¤§c´„ 1 å¹´",
            other: "å¤§c´„ {{count}} å¹´",
          },
          xYears: {
            one: "1 å¹´",
            other: "{{count}} å¹´",
          },
          overXYears: {
            one: "è¶…éŽ 1 å¹´",
            other: "è¶…éŽ {{count}} å¹´",
          },
          almostXYears: {
            one: "å°‡è¿‘ 1 å¹´",
            other: "å°‡è¿‘ {{count}} å¹´",
          },
        };

        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return result + "å…§";
            } else {
              return result + "å‰";
            }
          }

          return result;
        }

        module.exports = exports.default;

        /***/
      },
      /* 473 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(2));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var dateFormats = {
          full: "y'å¹´'M'æœˆ'd'æ—¥' EEEE",
          long: "y'å¹´'M'æœˆ'd'æ—¥'",
          medium: "yyyy-MM-dd",
          short: "yy-MM-dd",
        };
        var timeFormats = {
          full: "zzzz a h:mm:ss",
          long: "z a h:mm:ss",
          medium: "a h:mm:ss",
          short: "a h:mm",
        };
        var dateTimeFormats = {
          full: "{{date}} {{time}}",
          long: "{{date}} {{time}}",
          medium: "{{date}} {{time}}",
          short: "{{date}} {{time}}",
        };
        var formatLong = {
          date: (0, _index.default)({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: (0, _index.default)({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: (0, _index.default)({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        var _default = formatLong;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 474 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'ä¸Šå€‹' eeee p",
          yesterday: "'æ˜¨å¤©' p",
          today: "'ä»Šå¤©' p",
          tomorrow: "'æ˜Žå¤©' p",
          nextWeek: "'ä¸‹å€‹' eeee p",
          other: "P",
        };

        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        module.exports = exports.default;

        /***/
      },
      /* 475 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(3));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var eraValues = {
          narrow: ["å‰", "å…¬å…ƒ"],
          abbreviated: ["å‰", "å…¬å…ƒ"],
          wide: ["å…¬å…ƒå‰", "å…¬å…ƒ"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["c¬¬ä¸€åˆ»", "c¬¬äºŒåˆ»", "c¬¬ä¸‰åˆ»", "c¬¬å››åˆ»"],
          wide: ["c¬¬ä¸€åˆ»é˜", "c¬¬äºŒåˆ»é˜", "c¬¬ä¸‰åˆ»é˜", "c¬¬å››åˆ»é˜"],
        };
        var monthValues = {
          narrow: [
            "ä¸€",
            "äºŒ",
            "ä¸‰",
            "å››",
            "äº”",
            "å…­",
            "ä¸ƒ",
            "å…«",
            "ä¹",
            "å",
            "åä¸€",
            "åäºŒ",
          ],
          abbreviated: [
            "1æœˆ",
            "2æœˆ",
            "3æœˆ",
            "4æœˆ",
            "5æœˆ",
            "6æœˆ",
            "7æœˆ",
            "8æœˆ",
            "9æœˆ",
            "10æœˆ",
            "11æœˆ",
            "12æœˆ",
          ],
          wide: [
            "ä¸€æœˆ",
            "äºŒæœˆ",
            "ä¸‰æœˆ",
            "å››æœˆ",
            "äº”æœˆ",
            "å…­æœˆ",
            "ä¸ƒæœˆ",
            "å…«æœˆ",
            "ä¹æœˆ",
            "åæœˆ",
            "åä¸€æœˆ",
            "åäºŒæœˆ",
          ],
        };
        var dayValues = {
          narrow: ["æ—¥", "ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­"],
          short: ["æ—¥", "ä¸€", "äºŒ", "ä¸‰", "å››", "äº”", "å…­"],
          abbreviated: [
            "é€±æ—¥",
            "é€±ä¸€",
            "é€±äºŒ",
            "é€±ä¸‰",
            "é€±å››",
            "é€±äº”",
            "é€±å…­",
          ],
          wide: [
            "æ˜ŸæœŸæ—¥",
            "æ˜ŸæœŸä¸€",
            "æ˜ŸæœŸäºŒ",
            "æ˜ŸæœŸä¸‰",
            "æ˜ŸæœŸå››",
            "æ˜ŸæœŸäº”",
            "æ˜ŸæœŸå…­",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "ä¸Š",
            pm: "ä¸‹",
            midnight: "å‡Œæ™¨",
            noon: "åˆ",
            morning: "æ—©",
            afternoon: "ä¸‹åˆ",
            evening: "æ™š",
            night: "å¤œ",
          },
          abbreviated: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé–“",
          },
          wide: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé–“",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "ä¸Š",
            pm: "ä¸‹",
            midnight: "å‡Œæ™¨",
            noon: "åˆ",
            morning: "æ—©",
            afternoon: "ä¸‹åˆ",
            evening: "æ™š",
            night: "å¤œ",
          },
          abbreviated: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé–“",
          },
          wide: {
            am: "ä¸Šåˆ",
            pm: "ä¸‹åˆ",
            midnight: "å‡Œæ™¨",
            noon: "ä¸­åˆ",
            morning: "æ—©æ™¨",
            afternoon: "ä¸­åˆ",
            evening: "æ™šä¸Š",
            night: "å¤œé–“",
          },
        };

        function ordinalNumber(dirtyNumber, dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          var options = dirtyOptions || {};
          var unit = String(options.unit);

          switch (unit) {
            case "date":
              return number.toString() + "æ—¥";

            case "hour":
              return number.toString() + "æ™‚";

            case "minute":
              return number.toString() + "åˆ†";

            case "second":
              return number.toString() + "c§’";

            default:
              return "c¬¬ " + number.toString();
          }
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: (0, _index.default)({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: (0, _index.default)({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: (0, _index.default)({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: (0, _index.default)({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: (0, _index.default)({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        var _default = localize;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 476 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(5));

        var _index2 = _interopRequireDefault(__webpack_require__(4));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        var matchOrdinalNumberPattern = /^(c¬¬\s*)?\d+(æ—¥|æ™‚|åˆ†|c§’)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(å‰)/i,
          abbreviated: /^(å‰)/i,
          wide: /^(å…¬å…ƒå‰|å…¬å…ƒ)/i,
        };
        var parseEraPatterns = {
          any: [/^(å‰)/i, /^(å…¬å…ƒ)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^c¬¬[ä¸€äºŒä¸‰å››]åˆ»/i,
          wide: /^c¬¬[ä¸€äºŒä¸‰å››]åˆ»é˜/i,
        };
        var parseQuarterPatterns = {
          any: [/(1|ä¸€)/i, /(2|äºŒ)/i, /(3|ä¸‰)/i, /(4|å››)/i],
        };
        var matchMonthPatterns = {
          narrow: /^(ä¸€|äºŒ|ä¸‰|å››|äº”|å…­|ä¸ƒ|å…«|ä¹|å[äºŒä¸€])/i,
          abbreviated:
            /^(ä¸€|äºŒ|ä¸‰|å››|äº”|å…­|ä¸ƒ|å…«|ä¹|å[äºŒä¸€]|\d|1[12])æœˆ/i,
          wide: /^(ä¸€|äºŒ|ä¸‰|å››|äº”|å…­|ä¸ƒ|å…«|ä¹|å[äºŒä¸€])æœˆ/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^ä¸€/i,
            /^äºŒ/i,
            /^ä¸‰/i,
            /^å››/i,
            /^äº”/i,
            /^å…­/i,
            /^ä¸ƒ/i,
            /^å…«/i,
            /^ä¹/i,
            /^å(?!(ä¸€|äºŒ))/i,
            /^åä¸€/i,
            /^åäºŒ/i,
          ],
          any: [
            /^ä¸€|1/i,
            /^äºŒ|2/i,
            /^ä¸‰|3/i,
            /^å››|4/i,
            /^äº”|5/i,
            /^å…­|6/i,
            /^ä¸ƒ|7/i,
            /^å…«|8/i,
            /^ä¹|9/i,
            /^å(?!(ä¸€|äºŒ))|10/i,
            /^åä¸€|11/i,
            /^åäºŒ|12/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
          short: /^[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
          abbreviated: /^é€±[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
          wide: /^æ˜ŸæœŸ[ä¸€äºŒä¸‰å››äº”å…­æ—¥]/i,
        };
        var parseDayPatterns = {
          any: [/æ—¥/i, /ä¸€/i, /äºŒ/i, /ä¸‰/i, /å››/i, /äº”/i, /å…­/i],
        };
        var matchDayPeriodPatterns = {
          any: /^(ä¸Šåˆ?|ä¸‹åˆ?|åˆå¤œ|[ä¸­æ­£]åˆ|æ—©ä¸Š?|ä¸‹åˆ|æ™šä¸Š?|å‡Œæ™¨)/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^ä¸Šåˆ?/i,
            pm: /^ä¸‹åˆ?/i,
            midnight: /^åˆå¤œ/i,
            noon: /^[ä¸­æ­£]åˆ/i,
            morning: /^æ—©ä¸Š/i,
            afternoon: /^ä¸‹åˆ/i,
            evening: /^æ™šä¸Š?/i,
            night: /^å‡Œæ™¨/i,
          },
        };
        var match = {
          ordinalNumber: (0, _index.default)({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: (0, _index2.default)({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: (0, _index2.default)({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: (0, _index2.default)({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: (0, _index2.default)({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: (0, _index2.default)({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        var _default = match;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 477 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {
          value: true,
        });
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils_index__ =
          __webpack_require__(40);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_type__ =
          __webpack_require__(30);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_date_fns__ =
          __webpack_require__(20);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_events__ =
          __webpack_require__(59);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__datePicker__ =
          __webpack_require__(623);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__timePicker__ =
          __webpack_require__(716);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__defaultOptions__ =
          __webpack_require__(719);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__templates__ =
          __webpack_require__(720);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__templates_header__ =
          __webpack_require__(721);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__templates_footer__ =
          __webpack_require__(722);
        var _slicedToArray = (function () {
          function sliceIterator(arr, i) {
            var _arr = [];
            var _n = true;
            var _d = false;
            var _e = undefined;
            try {
              for (
                var _i = arr[Symbol.iterator](), _s;
                !(_n = (_s = _i.next()).done);
                _n = true
              ) {
                _arr.push(_s.value);
                if (i && _arr.length === i) break;
              }
            } catch (err) {
              _d = true;
              _e = err;
            } finally {
              try {
                if (!_n && _i["return"]) _i["return"]();
              } finally {
                if (_d) throw _e;
              }
            }
            return _arr;
          }
          return function (arr, i) {
            if (Array.isArray(arr)) {
              return arr;
            } else if (Symbol.iterator in Object(arr)) {
              return sliceIterator(arr, i);
            } else {
              throw new TypeError(
                "Invalid attempt to destructure non-iterable instance"
              );
            }
          };
        })();

        var _extends =
          Object.assign ||
          function (target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        function _defineProperty(obj, key, value) {
          if (key in obj) {
            Object.defineProperty(obj, key, {
              value: value,
              enumerable: true,
              configurable: true,
              writable: true,
            });
          } else {
            obj[key] = value;
          }
          return obj;
        }

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var bulmaCalendar = (function (_EventEmitter) {
          _inherits(bulmaCalendar, _EventEmitter);

          function bulmaCalendar(selector) {
            var options =
              arguments.length > 1 && arguments[1] !== undefined
                ? arguments[1]
                : {};

            _classCallCheck(this, bulmaCalendar);

            var _this = _possibleConstructorReturn(
              this,
              (
                bulmaCalendar.__proto__ || Object.getPrototypeOf(bulmaCalendar)
              ).call(this)
            );

            _this.element = __WEBPACK_IMPORTED_MODULE_1__utils_type__[
              "e" /* isString */
            ](selector)
              ? document.querySelector(selector)
              : selector;

            // An invalid selector or non-DOM node has been provided.
            if (!_this.element) {
              throw new Error(
                "An invalid selector or non-DOM node has been provided."
              );
            }

            _this._clickEvents = ["click", "touch"];
            _this._supportsPassive =
              __WEBPACK_IMPORTED_MODULE_0__utils_index__[
                "a" /* detectSupportsPassive */
              ]();

            // Use Element dataset values to override options
            var elementConfig = _this.element.dataset
              ? Object.keys(_this.element.dataset)
                  .filter(function (key) {
                    return Object.keys(
                      __WEBPACK_IMPORTED_MODULE_6__defaultOptions__[
                        "a" /* default */
                      ]
                    ).includes(key);
                  })
                  .reduce(function (obj, key) {
                    return _extends(
                      {},
                      obj,
                      _defineProperty({}, key, _this.element.dataset[key])
                    );
                  }, {})
              : {};

            // Set default options - dataset attributes are master
            _this.options = _extends(
              {},
              __WEBPACK_IMPORTED_MODULE_6__defaultOptions__["a" /* default */],
              options,
              elementConfig
            );

            if (_this.options.type === undefined) {
              switch (_this.element.getAttribute("type")) {
                case "date":
                  _this.options.type = "date";
                  break;
                case "time":
                  _this.options.type = "time";
                  break;
                default:
                  _this.options.type = "datetime";
                  break;
              }
            }
            _this._id =
              __WEBPACK_IMPORTED_MODULE_0__utils_index__["c" /* uuid */](
                "datetimePicker"
              );

            _this.onToggleDateTimePicker =
              _this.onToggleDateTimePicker.bind(_this);
            _this.onCloseDateTimePicker =
              _this.onCloseDateTimePicker.bind(_this);
            _this.onDocumentClickDateTimePicker =
              _this.onDocumentClickDateTimePicker.bind(_this);
            _this.onValidateClickDateTimePicker =
              _this.onValidateClickDateTimePicker.bind(_this);
            _this.onTodayClickDateTimePicker =
              _this.onTodayClickDateTimePicker.bind(_this);
            _this.onClearClickDateTimePicker =
              _this.onClearClickDateTimePicker.bind(_this);
            _this.onCancelClickDateTimePicker =
              _this.onCancelClickDateTimePicker.bind(_this);
            _this.onSelectDateTimePicker =
              _this.onSelectDateTimePicker.bind(_this);
            _this.onChangeStartHoursManually =
              _this.onChangeStartHoursManually.bind(_this);
            _this.onChangeStartMinutesManually =
              _this.onChangeStartMinutesManually.bind(_this);
            _this.onChangeEndHoursManually =
              _this.onChangeEndHoursManually.bind(_this);
            _this.onChangeEndMinutesManually =
              _this.onChangeEndMinutesManually.bind(_this);

            // Initiate plugin
            _this._init();

            return _this;
          }

          /**
           * Initiate all DOM element containing datePicker class
           * @method
           * @return {Array} Array of all datePicker instances
           */

          _createClass(
            bulmaCalendar,
            [
              {
                key: "onSelectDateTimePicker",

                /****************************************************
                 *                                                  *
                 * EVENTS FUNCTIONS                                 *
                 *                                                  *
                 ****************************************************/
                value: function onSelectDateTimePicker(e) {
                  this.refresh();
                  this.emit(e.type, this);

                  if (e.type === "select" && this.options.closeOnSelect) {
                    this.save();
                  }
                },
              },
              {
                key: "onDocumentClickDateTimePicker",
                value: function onDocumentClickDateTimePicker(e) {
                  var target = e.target || e.srcElement;

                  // Check is e.target not within datepicker element
                  if (
                    !this._ui.wrapper.contains(target) &&
                    this.options.displayMode !== "inline"
                  ) {
                    this.hide();
                  }
                },
              },
              {
                key: "onToggleDateTimePicker",
                value: function onToggleDateTimePicker(e) {
                  if (!this._supportsPassive) {
                    e.preventDefault();
                  }
                  e.stopPropagation();

                  this.toggle();
                },
              },
              {
                key: "onValidateClickDateTimePicker",
                value: function onValidateClickDateTimePicker(e) {
                  if (!this._supportsPassive) {
                    e.preventDefault();
                  }
                  e.stopPropagation();

                  this.emit("validate", this);

                  if (
                    !__WEBPACK_IMPORTED_MODULE_1__utils_type__[
                      "c" /* isFunction */
                    ](this.options.onValidate)
                  ) {
                    this.save();
                  }
                },
              },
              {
                key: "onTodayClickDateTimePicker",
                value: function onTodayClickDateTimePicker(e) {
                  if (!this._supportsPassive) {
                    e.preventDefault();
                  }
                  e.stopPropagation();

                  this.datePicker.value(new Date());
                  this.timePicker.value(new Date());

                  this.refresh();

                  if (this.options.closeOnSelect) {
                    this.save();
                  }
                },
              },
              {
                key: "onClearClickDateTimePicker",
                value: function onClearClickDateTimePicker(e) {
                  if (!this._supportsPassive) {
                    e.preventDefault();
                  }
                  e.stopPropagation();

                  this.clear();

                  if (!this.isOpen() || this.options.closeOnSelect) {
                    this.save();
                  }
                },
              },
              {
                key: "onCancelClickDateTimePicker",
                value: function onCancelClickDateTimePicker(e) {
                  if (!this._supportsPassive) {
                    e.preventDefault();
                  }
                  e.stopPropagation();

                  // Reset value
                  this.value(this.element.value);

                  this.refresh();
                  this.save();
                },
              },
              {
                key: "onCloseDateTimePicker",
                value: function onCloseDateTimePicker(e) {
                  if (!this._supportsPassive) {
                    e.preventDefault();
                  }
                  e.stopPropagation();

                  this.hide();
                },
              },
              {
                key: "onClickTimeManuallyInput",
                value: function onClickTimeManuallyInput(e) {
                  e.currentTarget.select();
                },
              },
              {
                key: "onChangeStartHoursManually",
                value: function onChangeStartHoursManually(e) {
                  this.timePicker.start.setHours(e.currentTarget.value);
                  this.refresh();

                  if (this.options.closeOnSelect) {
                    this.save();
                  }
                },
              },
              {
                key: "onChangeStartMinutesManually",
                value: function onChangeStartMinutesManually(e) {
                  this.timePicker.start.setMinutes(e.currentTarget.value);
                  this.refresh();

                  if (this.options.closeOnSelect) {
                    this.save();
                  }
                },
              },
              {
                key: "onChangeEndHoursManually",
                value: function onChangeEndHoursManually(e) {
                  this.timePicker.end.setHours(e.currentTarget.value);
                  this.refresh();

                  if (this.options.closeOnSelect) {
                    this.save();
                  }
                },
              },
              {
                key: "onChangeEndMinutesManually",
                value: function onChangeEndMinutesManually(e) {
                  this.timePicker.end.setMinutes(e.currentTarget.value);
                  this.refresh();

                  if (this.options.closeOnSelect) {
                    this.save();
                  }
                },

                /****************************************************
                 *                                                  *
                 * PUBLIC FUNCTIONS                                 *
                 *                                                  *
                 ****************************************************/
              },
              {
                key: "isRange",
                value: function isRange() {
                  return this.options.isRange;
                },

                /**
                 * Returns true if datetime picker is open, otherwise false.
                 * @method isOpen
                 * @return {boolean}
                 */
              },
              {
                key: "isOpen",
                value: function isOpen() {
                  return this._open;
                },

                /**
                 * Get / Set datetimePicker value
                 * @param {*} date
                 */
              },
              {
                key: "value",
                value: function value() {
                  var _value =
                    arguments.length > 0 && arguments[0] !== undefined
                      ? arguments[0]
                      : null;

                  // Set
                  if (_value) {
                    if (this.options.type == "datetime") {
                      if (this.options.isRange) {
                        if (
                          __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                            "e" /* isString */
                          ](_value)
                        ) {
                          _value = _value.split(" - ");
                        }

                        if (Array.isArray(_value)) {
                          if (_value.length)
                            _value[0] =
                              __WEBPACK_IMPORTED_MODULE_0__utils_index__[
                                "b" /* newDate */
                              ](_value[0], this.format);
                          if (_value.length === 2)
                            _value[1] =
                              __WEBPACK_IMPORTED_MODULE_0__utils_index__[
                                "b" /* newDate */
                              ](_value[1], this.format);
                        }
                      } else {
                        if (
                          __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                            "e" /* isString */
                          ](_value)
                        ) {
                          _value = __WEBPACK_IMPORTED_MODULE_0__utils_index__[
                            "b" /* newDate */
                          ](_value, this.format);
                        }
                      }
                    }

                    this.datePicker.value(_value);
                    this.timePicker.value(_value);

                    this._refreshInput();
                    this.refresh();

                    return;
                  }

                  // Get
                  var string = "";

                  switch (this.options.type) {
                    case "date":
                      string = this.datePicker.value();
                      break;

                    case "time":
                      string = this.timePicker.value();
                      break;

                    case "datetime":
                      var start = this.datePicker.start;
                      var end = this.datePicker.end;

                      if (start && this.timePicker.start) {
                        start.setHours(this.timePicker.start.getHours());
                        start.setMinutes(this.timePicker.start.getMinutes());

                        string = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](start, this.format, { locale: this.locale });
                      }

                      if (this.options.isRange) {
                        if (end && this.timePicker.end) {
                          end.setHours(this.timePicker.end.getHours());
                          end.setMinutes(this.timePicker.end.getMinutes());
                        }

                        string +=
                          " - " +
                          (end
                            ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                                "l" /* format */
                              ](end, this.format, { locale: this.locale })
                            : "");
                      }

                      break;
                  }

                  return string;
                },
              },
              {
                key: "refresh",
                value: function refresh() {
                  this._ui.header.start.day.innerHTML = this.datePicker.start
                    ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        this.datePicker.start,
                        "dd",
                        { locale: this.locale }
                      )
                    : "--";
                  this._ui.header.start.month.innerHTML = this.datePicker.start
                    ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        this.datePicker.start,
                        this.options.headerMonthYearFromat,
                        { locale: this.locale }
                      )
                    : "";

                  if (this.datePicker.start) {
                    this._ui.header.start.weekday.classList.remove("is-hidden");
                    this._ui.header.start.weekday.innerHTML = this.datePicker
                      .start
                      ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](this.datePicker.start, "EEEE", {
                          locale: this.locale,
                        })
                      : "";
                  } else {
                    this._ui.header.start.weekday.classList.add("is-hidden");
                  }

                  if (this._ui.header.start.hour) {
                    if (this.options.editTimeManually) {
                      this._ui.header.start.inputHours.value = this.timePicker
                        .start
                        ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "l" /* format */
                          ](this.timePicker.start, "HH", {
                            locale: this.locale,
                          })
                        : "--";
                      this._ui.header.start.inputMinutes.value = this.timePicker
                        .start
                        ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "l" /* format */
                          ](this.timePicker.start, "mm", {
                            locale: this.locale,
                          })
                        : "--";
                    } else {
                      this._ui.header.start.hour.innerHTML = this.timePicker
                        .start
                        ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "l" /* format */
                          ](this.timePicker.start, "HH:mm", {
                            locale: this.locale,
                          })
                        : "--:--";
                    }
                  }

                  if (this._ui.header.end) {
                    this._ui.header.end.day.innerHTML =
                      this.options.isRange && this.datePicker.end
                        ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "l" /* format */
                          ](this.datePicker.end, "dd", { locale: this.locale })
                        : "--";

                    this._ui.header.end.month.innerHTML =
                      this.options.isRange && this.datePicker.end
                        ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "l" /* format */
                          ](
                            this.datePicker.end,
                            this.options.headerMonthYearFromat,
                            { locale: this.locale }
                          )
                        : "";

                    if (this.datePicker.end) {
                      this._ui.header.end.weekday.classList.remove("is-hidden");
                      this._ui.header.end.weekday.innerHTML = this.datePicker
                        .end
                        ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "l" /* format */
                          ](this.datePicker.end, "EEEE", {
                            locale: this.locale,
                          })
                        : "";
                    } else {
                      this._ui.header.end.weekday.classList.add("is-hidden");
                    }

                    if (this._ui.header.end && this._ui.header.end.hour) {
                      if (this.options.editTimeManually) {
                        this._ui.header.end.inputHours.value = this.timePicker
                          .end
                          ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                              "l" /* format */
                            ](this.timePicker.end, "HH", {
                              locale: this.locale,
                            })
                          : "--";
                        this._ui.header.end.inputMinutes.value = this.timePicker
                          .end
                          ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                              "l" /* format */
                            ](this.timePicker.end, "mm", {
                              locale: this.locale,
                            })
                          : "--";
                      } else {
                        this._ui.header.end.hour.innerHTML = this.timePicker.end
                          ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                              "l" /* format */
                            ](this.timePicker.end, "HH:mm", {
                              locale: this.locale,
                            })
                          : "--:--";
                      }
                    }
                  }

                  this.emit("refresh", this);
                },
              },
              {
                key: "clear",
                value: function clear() {
                  this.datePicker.clear();
                  this.timePicker.clear();

                  this.refresh();

                  if (!this.isOpen()) {
                    this._refreshInput();
                  }

                  this.emit("clear", this);
                },

                /**
                 * Show datePicker HTML Component
                 * @method show
                 * @return {void}
                 */
              },
              {
                key: "show",
                value: function show() {
                  this.datePicker.show();
                  this.timePicker.show();

                  if (this._ui.modal) {
                    this._ui.modal.classList.add("is-active");
                  }

                  this._ui.wrapper.classList.add("is-active");
                  this._open = true;

                  this.emit("show", this);
                },

                /**
                 * Toggle Component
                 */
              },
              {
                key: "toggle",
                value: function toggle() {
                  if (this._open) {
                    this.hide();
                  } else {
                    this.show();
                  }
                },

                /**
                 * Hide datePicker HTML Component
                 * @method hide
                 * @return {void}
                 */
              },
              {
                key: "hide",
                value: function hide() {
                  if (!this._open) return;

                  this.datePicker.hide();
                  this.timePicker.hide();

                  this._open = false;
                  this._focus = false;
                  if (this._ui.modal) {
                    this._ui.modal.classList.remove("is-active");
                  }
                  this._ui.wrapper.classList.remove("is-active");

                  this.emit("hide", this);
                },

                // Set element value to datetime selected based on format
              },
              {
                key: "save",
                value: function save() {
                  this._refreshInput();

                  if (this.options.displayMode !== "inline") {
                    this.hide();
                  }

                  this.emit("save", this);
                },

                /**
                 * Destroy datePicker
                 * @method destroy
                 * @return {[type]} [description]
                 */
              },
              {
                key: "destroy",
                value: function destroy() {
                  this._ui.wrapper.remove();
                },

                /****************************************************
                 *                                                  *
                 * PRIVATE FUNCTIONS                                *
                 *                                                  *
                 ****************************************************/
                /**
                 * Initiate plugin instance
                 * @method _init
                 * @return {datePicker} Current plugin instance
                 */
              },
              {
                key: "_init",
                value: function _init() {
                  this._open = false;
                  this._type =
                    ["date", "time", "datetime"].indexOf(
                      this.options.type.toLowerCase()
                    ) > -1
                      ? this.options.type.toLowerCase()
                      : "date"; // Set component type (date / time / datetime)

                  // Change element type to prevent browser default type="date" behavior
                  this.element.setAttribute("type", "text");

                  // create pickers
                  this.datePicker =
                    new __WEBPACK_IMPORTED_MODULE_4__datePicker__[
                      "a" /* default */
                    ](_extends({}, this.options));
                  this.timePicker =
                    new __WEBPACK_IMPORTED_MODULE_5__timePicker__[
                      "a" /* default */
                    ](_extends({}, this.options));

                  this.lang = this.options.lang;
                  this.format =
                    this._type === "date"
                      ? this.options.dateFormat
                      : this._type === "time"
                      ? this.options.timeFormat
                      : this.options.dateFormat + " " + this.options.timeFormat; // Set export format based on component type

                  // Force dialog display mode on mobile devices
                  if (
                    this.options.displayMode === "default" &&
                    window.matchMedia("screen and (max-width: 768px)").matches
                  ) {
                    this.options.displayMode = "dialog";
                  }
                  if (
                    window.matchMedia("screen and (max-width: 768px)").matches
                  ) {
                    if (this.options.displayMode === "default") {
                      this.options.displayMode = "dialog";
                    }
                    this.options.displayDual = false;
                  }

                  this._build();
                  this._bindEvents();

                  // apply value to picker
                  if (this.element.value) {
                    this.value(this.element.value);
                  }

                  this._refreshInput();

                  // Callbacks
                  if (
                    __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                      "c" /* isFunction */
                    ](this.options.onReady)
                  ) {
                    this.on("ready", this.options.onReady);
                  }
                  if (
                    __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                      "c" /* isFunction */
                    ](this.options.onValidate)
                  ) {
                    this.on("validate", this.options.onValidate);
                  }

                  this.emit("ready", this);
                },

                /**
                 * Build datePicker HTML component and append it to the DOM
                 * @method _build
                 * @return {datePicker} Current plugin instance
                 */
              },
              {
                key: "_build",
                value: function _build() {
                  var headerNode = document
                    .createRange()
                    .createContextualFragment(
                      Object(
                        __WEBPACK_IMPORTED_MODULE_8__templates_header__[
                          "a" /* default */
                        ]
                      )(
                        _extends({}, this.options, {
                          type: this._type,
                          datePicker: this.options.type !== "time",
                          timePicker: this.options.type !== "date",
                        })
                      )
                    );
                  var footerNode = document
                    .createRange()
                    .createContextualFragment(
                      Object(
                        __WEBPACK_IMPORTED_MODULE_9__templates_footer__[
                          "a" /* default */
                        ]
                      )(this.options)
                    );
                  var datetimePickerNode = document
                    .createRange()
                    .createContextualFragment(
                      Object(
                        __WEBPACK_IMPORTED_MODULE_7__templates__[
                          "a" /* default */
                        ]
                      )(
                        _extends({}, this.options, {
                          id: this.id,
                        })
                      )
                    );

                  // Save pointer to each datePicker element for later use
                  this._ui = {
                    modal: datetimePickerNode.querySelector(
                      ".datetimepicker-wrapper.modal"
                    ),
                    wrapper:
                      datetimePickerNode.querySelector(".datetimepicker"),
                    container: datetimePickerNode.querySelector(
                      ".datetimepicker-container"
                    ),
                    dummy: {
                      container: datetimePickerNode.querySelector(
                        ".datetimepicker-dummy"
                      ),
                      wrapper: datetimePickerNode.querySelector(
                        ".datetimepicker-dummy-wrapper"
                      ),
                      dummy_1: datetimePickerNode.querySelector(
                        ".datetimepicker-dummy .datetimepicker-dummy-input:nth-child(1)"
                      ),
                      dummy_2: datetimePickerNode.querySelector(
                        ".datetimepicker-dummy .datetimepicker-dummy-input:nth-child(2)"
                      ),
                      clear: datetimePickerNode.querySelector(
                        ".datetimepicker-dummy .datetimepicker-clear-button"
                      ),
                    },
                    calendar:
                      datetimePickerNode.querySelector(".datetimepicker"),
                    overlay:
                      this.options.displayMode === "dialog"
                        ? {
                            background:
                              datetimePickerNode.querySelector(
                                ".modal-background"
                              ),
                            close:
                              datetimePickerNode.querySelector(".modal-close"),
                          }
                        : undefined,
                    header: {
                      container: headerNode.querySelector(
                        ".datetimepicker-header"
                      ),
                      start: {
                        container: headerNode.querySelector(
                          ".datetimepicker-selection-start"
                        ),
                        day: headerNode.querySelector(
                          ".datetimepicker-selection-start .datetimepicker-selection-day"
                        ),
                        month: headerNode.querySelector(
                          ".datetimepicker-selection-start .datetimepicker-selection-month"
                        ),
                        weekday: headerNode.querySelector(
                          ".datetimepicker-selection-start .datetimepicker-selection-weekday"
                        ),
                        hour: headerNode.querySelector(
                          ".datetimepicker-selection-start .datetimepicker-selection-hour"
                        ),
                        inputHours: headerNode.querySelector(
                          ".datetimepicker-selection-start .datetimepicker-selection-hour.editable .datetimepicker-selection-input-hours"
                        ),
                        inputMinutes: headerNode.querySelector(
                          ".datetimepicker-selection-start .datetimepicker-selection-hour.editable .datetimepicker-selection-input-minutes"
                        ),
                        empty: headerNode.querySelector(
                          ".datetimepicker-selection-start .empty"
                        ),
                      },
                      end: this.options.isRange
                        ? {
                            container: headerNode.querySelector(
                              ".datetimepicker-selection-end"
                            ),
                            day: headerNode.querySelector(
                              ".datetimepicker-selection-end .datetimepicker-selection-day"
                            ),
                            month: headerNode.querySelector(
                              ".datetimepicker-selection-end .datetimepicker-selection-month"
                            ),
                            weekday: headerNode.querySelector(
                              ".datetimepicker-selection-end .datetimepicker-selection-weekday"
                            ),
                            hour: headerNode.querySelector(
                              ".datetimepicker-selection-end .datetimepicker-selection-hour"
                            ),
                            inputHours: headerNode.querySelector(
                              ".datetimepicker-selection-end .datetimepicker-selection-hour.editable .datetimepicker-selection-input-hours"
                            ),
                            inputMinutes: headerNode.querySelector(
                              ".datetimepicker-selection-end .datetimepicker-selection-hour.editable .datetimepicker-selection-input-minutes"
                            ),
                            empty: headerNode.querySelector(
                              ".datetimepicker-selection-start .empty"
                            ),
                          }
                        : undefined,
                    },
                    footer: {
                      container: footerNode.querySelector(
                        ".datetimepicker-footer"
                      ),
                      validate: footerNode.querySelector(
                        ".datetimepicker-footer-validate"
                      ),
                      today: footerNode.querySelector(
                        ".datetimepicker-footer-today"
                      ),
                      clear: footerNode.querySelector(
                        ".datetimepicker-footer-clear"
                      ),
                      cancel: footerNode.querySelector(
                        ".datetimepicker-footer-cancel"
                      ),
                    },
                  };

                  if (
                    !__WEBPACK_IMPORTED_MODULE_1__utils_type__[
                      "a" /* BooleanParse */
                    ](this.options.showHeader)
                  ) {
                    this._ui.header.container.classList.add("is-hidden");
                  }
                  if (
                    !__WEBPACK_IMPORTED_MODULE_1__utils_type__[
                      "a" /* BooleanParse */
                    ](this.options.showFooter)
                  ) {
                    this._ui.footer.container.classList.add("is-hidden");
                  }
                  if (
                    !__WEBPACK_IMPORTED_MODULE_1__utils_type__[
                      "a" /* BooleanParse */
                    ](this.options.showTodayButton)
                  ) {
                    this._ui.footer.today.classList.add("is-hidden");
                  }
                  if (
                    !__WEBPACK_IMPORTED_MODULE_1__utils_type__[
                      "a" /* BooleanParse */
                    ](this.options.showClearButton)
                  ) {
                    this._ui.footer.clear.classList.add("is-hidden");
                  }

                  if (this.options.closeOnSelect && this._ui.footer.validate) {
                    this._ui.footer.validate.classList.add("is-hidden");
                  }

                  this._ui.container.appendChild(headerNode);
                  switch (this._type) {
                    case "date":
                      this._ui.container.appendChild(this.datePicker.render());
                      break;
                    case "time":
                      this.options.closeOnSelect = false;
                      this._ui.container.appendChild(this.timePicker.render());
                      if (this.options.labelFrom || this.options.labelTo) {
                        this._ui.header.container.classList.remove("is-hidden");
                      }
                      if (this._ui.footer.validate) {
                        this._ui.footer.validate.classList.remove("is-hidden");
                      }
                      if (this._ui.footer.today) {
                        this._ui.footer.today.classList.add("is-hidden");
                      }
                      break;
                    case "datetime":
                      this.options.closeOnSelect = false;
                      if (this._ui.footer.validate) {
                        this._ui.footer.validate.classList.remove("is-hidden");
                      }
                      this._ui.container.appendChild(this.datePicker.render());
                      this._ui.container.appendChild(this.timePicker.render());
                      break;
                  }

                  this._ui.wrapper.appendChild(footerNode);
                  this._ui.wrapper.classList.add("is-" + this.options.color);
                  this._ui.dummy.container.classList.add(
                    "is-" + this.options.color
                  );
                  // Add datepicker HTML element to Document Body
                  this.element.parentNode.insertBefore(
                    datetimePickerNode,
                    this.element.nextSibling
                  );
                  this._ui.dummy.wrapper.appendChild(this.element);
                  this.element.classList.add("is-hidden");

                  if (this.options.displayMode === "inline") {
                    this._ui.wrapper.classList.add("is-active");
                  } else {
                    this._ui.dummy.container.classList.remove("is-hidden");
                    this._ui.wrapper.style.position = "absolute";
                    this._ui.wrapper.classList.add("is-datetimepicker-default");
                  }
                  this.refresh();
                },

                /**
                 * Bind all events
                 * @method _bindEvents
                 * @return {void}
                 */
              },
              {
                key: "_bindEvents",
                value: function _bindEvents() {
                  var _this2 = this;

                  this._clickEvents.forEach(function (clickEvent) {
                    document.body.addEventListener(
                      clickEvent,
                      _this2.onDocumentClickDateTimePicker
                    );
                  });

                  this.datePicker.on("select", this.onSelectDateTimePicker);
                  this.datePicker.on(
                    "select:start",
                    this.onSelectDateTimePicker
                  );
                  this.timePicker.on("select", this.onSelectDateTimePicker);
                  this.timePicker.on(
                    "select:start",
                    this.onSelectDateTimePicker
                  );

                  // Bind event to element in order to display/hide datePicker on click
                  if (this.options.toggleOnInputClick === true) {
                    this._clickEvents.forEach(function (clickEvent) {
                      _this2._ui.dummy.wrapper.addEventListener(
                        clickEvent,
                        _this2.onToggleDateTimePicker
                      );
                      _this2.element.addEventListener(
                        clickEvent,
                        _this2.onToggleDateTimePicker
                      );
                    });
                  }

                  // Bind change time events for header inputs
                  if (
                    this.options.type !== "date" &&
                    this.options.editTimeManually
                  ) {
                    // Bind event for start hours change
                    this._ui.header.start.inputHours.addEventListener(
                      "change",
                      this.onChangeStartHoursManually
                    );
                    this._ui.header.start.inputHours.addEventListener(
                      "click",
                      this.onClickTimeManuallyInput
                    );
                    // Bind event for start minutes change
                    this._ui.header.start.inputMinutes.addEventListener(
                      "change",
                      this.onChangeStartMinutesManually
                    );
                    this._ui.header.start.inputMinutes.addEventListener(
                      "click",
                      this.onClickTimeManuallyInput
                    );
                    if (this.options.isRange) {
                      // Bind event for end hours change
                      this._ui.header.end.inputHours.addEventListener(
                        "change",
                        this.onChangeEndHoursManually
                      );
                      this._ui.header.end.inputHours.addEventListener(
                        "click",
                        this.onClickTimeManuallyInput
                      );
                      // Bind event for end minutes change
                      this._ui.header.end.inputMinutes.addEventListener(
                        "change",
                        this.onChangeEndMinutesManually
                      );
                      this._ui.header.end.inputMinutes.addEventListener(
                        "click",
                        this.onClickTimeManuallyInput
                      );
                    }
                  }

                  if (
                    this.options.displayMode === "dialog" &&
                    this._ui.overlay
                  ) {
                    // Bind close event on Close button
                    if (this._ui.overlay.close) {
                      this._clickEvents.forEach(function (clickEvent) {
                        _this2.this._ui.overlay.close.addEventListener(
                          clickEvent,
                          _this2.onCloseDateTimePicker
                        );
                      });
                    }
                    // Bind close event on overlay based on options
                    if (
                      this.options.closeOnOverlayClick &&
                      this._ui.overlay.background
                    ) {
                      this._clickEvents.forEach(function (clickEvent) {
                        _this2._ui.overlay.background.addEventListener(
                          clickEvent,
                          _this2.onCloseDateTimePicker
                        );
                      });
                    }
                  }

                  if (this._ui.footer.validate) {
                    this._clickEvents.forEach(function (clickEvent) {
                      _this2._ui.footer.validate.addEventListener(
                        clickEvent,
                        _this2.onValidateClickDateTimePicker
                      );
                    });
                  }
                  if (this._ui.footer.today) {
                    this._clickEvents.forEach(function (clickEvent) {
                      _this2._ui.footer.today.addEventListener(
                        clickEvent,
                        _this2.onTodayClickDateTimePicker
                      );
                    });
                  }
                  if (this._ui.footer.clear) {
                    this._clickEvents.forEach(function (clickEvent) {
                      _this2._ui.footer.clear.addEventListener(
                        clickEvent,
                        _this2.onClearClickDateTimePicker
                      );
                    });
                  }
                  this._clickEvents.forEach(function (clickEvent) {
                    _this2._ui.dummy.clear.addEventListener(
                      clickEvent,
                      _this2.onClearClickDateTimePicker
                    );
                  });
                  if (this._ui.footer.cancel) {
                    this._clickEvents.forEach(function (clickEvent) {
                      _this2._ui.footer.cancel.addEventListener(
                        clickEvent,
                        _this2.onCancelClickDateTimePicker
                      );
                    });
                  }
                },

                /**
                 * Refresh Input
                 * @private
                 */
              },
              {
                key: "_refreshInput",
                value: function _refreshInput() {
                  var _value$split = this.value().split(" - "),
                    _value$split2 = _slicedToArray(_value$split, 2),
                    start = _value$split2[0],
                    end = _value$split2[1];

                  this._ui.dummy.dummy_1.value = start ? start : "";

                  if (this._ui.dummy.dummy_2) {
                    this._ui.dummy.dummy_2.value = end ? end : "";
                  }

                  this.element.setAttribute("value", this.value());
                },
              },
              {
                key: "id",

                /****************************************************
                 *                                                  *
                 * GETTERS and SETTERS                              *
                 *                                                  *
                 ****************************************************/

                /**
                 * Get id of current instance
                 */
                get: function get() {
                  return this._id;
                },

                // Set language
              },
              {
                key: "lang",
                set: function set(lang) {
                  try {
                    this._locale = __webpack_require__(24)(
                      "./" + lang + "/index.js"
                    );
                  } catch (e) {
                    lang = "pt-BR";
                    this._locale = __webpack_require__(24)(
                      "./" + lang + "/index.js"
                    );
                  } finally {
                    this._lang = lang;
                    this.datePicker.lang = lang;
                    this.timePicker.lang = lang;
                    return this;
                  }
                },

                // Get current language
                get: function get() {
                  return this._lang;
                },
              },
              {
                key: "locale",
                get: function get() {
                  return this._locale;
                },

                // Set format (set to yyyy-mm-dd HH:mm:ss by default)
              },
              {
                key: "format",
                set: function set(format) {
                  this._format = format;
                  return this;
                },

                // Get format
                get: function get() {
                  return this._format;
                },

                /**
                 * * Date setter and getter
                 */
              },
              {
                key: "date",
                set: function set(date) {
                  this.datePicker.date = date;
                  return this;
                },

                // Get date object
                get: function get() {
                  return this.datePicker.date;
                },
              },
              {
                key: "startDate",
                set: function set(date) {
                  this.datePicker.start = date;
                  return this;
                },
                get: function get() {
                  return this.datePicker.start;
                },
              },
              {
                key: "endDate",
                set: function set(date) {
                  this.datePicker.end = date;
                  return this;
                },
                get: function get() {
                  return this.datePicker.end;
                },

                /**
                 * minDate getter and setters
                 */
              },
              {
                key: "minDate",
                set: function set(date) {
                  this.datePicker.minDate = date;
                  return this;
                },

                // Get minDate
                get: function get() {
                  return this.datePicker.minDate;
                },

                // Set maxDate
              },
              {
                key: "maxDate",
                set: function set(date) {
                  this.datePicker.maxDate = date;
                  return this;
                },

                // Get maxDate
                get: function get() {
                  return this.datePicker.maxDate;
                },

                // Set dateFormat (set to yyyy-mm-dd by default)
              },
              {
                key: "dateFormat",
                set: function set(dateFormat) {
                  this.datePicker.dateFormat = dateFormat;
                  return this;
                },

                // Get dateFormat
                get: function get() {
                  return this.datePicker.dateFormat;
                },

                /**
                 * * Time setter and getter
                 */
              },
              {
                key: "time",
                set: function set(time) {
                  this.timePicker.time = time;
                  return this;
                },

                // Get time object
                get: function get() {
                  return this.timePicker.time;
                },
              },
              {
                key: "startTime",
                set: function set(time) {
                  this.timePicker.start = time;
                  return this;
                },
                get: function get() {
                  return this.timePicker.start;
                },
              },
              {
                key: "endTime",
                set: function set(time) {
                  this.timePicker.end = time;
                  return this;
                },
                get: function get() {
                  return this.timePicker.end;
                },

                /**
                 * minTime getter and setters
                 */
              },
              {
                key: "minTime",
                set: function set(time) {
                  this.timePicker.minTime = time;
                  return this;
                },

                // Get minTime
                get: function get() {
                  return this.timePicker.minTime;
                },

                // Set maxTime
              },
              {
                key: "maxTime",
                set: function set(time) {
                  this.timePicker.maxTime = time;
                  return this;
                },

                // Get maxTime
                get: function get() {
                  return this.timePicker.maxTime;
                },

                // Set timeFormat (set to HH:MM:SS by default)
              },
              {
                key: "timeFormat",
                set: function set(timeFormat) {
                  this.timePicker.dateFormat = timeFormat;
                  return this;
                },

                // Get timeFormat
                get: function get() {
                  return this.timePicker.timeFormat;
                },
              },
            ],
            [
              {
                key: "attach",
                value: function attach() {
                  var _this3 = this;

                  var selector =
                    arguments.length > 0 && arguments[0] !== undefined
                      ? arguments[0]
                      : 'input[type="date"]';
                  var options =
                    arguments.length > 1 && arguments[1] !== undefined
                      ? arguments[1]
                      : {};

                  var instances = [];

                  var elements = __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                    "e" /* isString */
                  ](selector)
                    ? document.querySelectorAll(selector)
                    : Array.isArray(selector)
                    ? selector
                    : [selector];
                  [].forEach.call(elements, function (element) {
                    if (
                      typeof element[_this3.constructor.name] === "undefined"
                    ) {
                      var instance = new bulmaCalendar(element, options);
                      element.bulmaCalendar = instance;
                      instances.push(instance);
                    } else {
                      instances.push(element[_this3.constructor.name]);
                    }
                  });

                  return instances;
                },
              },
            ]
          );

          return bulmaCalendar;
        })(__WEBPACK_IMPORTED_MODULE_3__utils_events__["a" /* default */]);

        /* harmony default export */ __webpack_exports__["default"] =
          bulmaCalendar;

        /***/
      },
      /* 478 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__ =
          __webpack_require__(25);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__ =
          __webpack_require__(6);

        /**
         * @name add
         * @category Common Helpers
         * @summary Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
         *
         * @description
         * Add the specified years, months, weeks, days, hours, minutes and seconds to the given date.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         *
         * | Key            | Description                        |
         * |----------------|------------------------------------|
         * | years          | Amount of years to be added        |
         * | months         | Amount of months to be added       |
         * | weeks          | Amount of weeks to be added       |
         * | days           | Amount of days to be added         |
         * | hours          | Amount of hours to be added        |
         * | minutes        | Amount of minutes to be added      |
         * | seconds        | Amount of seconds to be added      |
         *
         * All values default to 0
         *
         * @returns {Date} the new date with the seconds added
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Add the following duration to 1 September 2014, 10:19:50
         * const result = add(new Date(2014, 8, 1, 10, 19, 50), {
         *   years: 2,
         *   months: 9,
         *   weeks: 1,
         *   days: 7,
         *   hours: 5,
         *   minutes: 9,
         *   seconds: 30,
         * })
         * //=> Thu Jun 15 2017 15:29:20
         */
        function add(dirtyDate, duration) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          if (!duration || typeof duration !== "object") return new Date(NaN);
          var years =
            "years" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.years)
              : 0;
          var months =
            "months" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.months)
              : 0;
          var weeks =
            "weeks" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.weeks)
              : 0;
          var days =
            "days" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.days)
              : 0;
          var hours =
            "hours" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.hours)
              : 0;
          var minutes =
            "minutes" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.minutes)
              : 0;
          var seconds =
            "seconds" in duration
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(duration.seconds)
              : 0; // Add years and months

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var dateWithMonths =
            months || years
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_1__addMonths_index_js__[
                    "a" /* default */
                  ]
                )(date, months + years * 12)
              : date; // Add weeks and days

          var dateWithDays =
            days || weeks
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_0__addDays_index_js__[
                    "a" /* default */
                  ]
                )(dateWithMonths, days + weeks * 7)
              : dateWithMonths; // Add days, hours, minutes and seconds

          var minutesToAdd = minutes + hours * 60;
          var secondsToAdd = seconds + minutesToAdd * 60;
          var msToAdd = secondsToAdd * 1000;
          var finalDate = new Date(dateWithDays.getTime() + msToAdd);
          return finalDate;
        }

        /***/
      },
      /* 479 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name areIntervalsOverlapping
         * @category Interval Helpers
         * @summary Is the given time interval overlapping with another time interval?
         *
         * @description
         * Is the given time interval overlapping with another time interval? Adjacent intervals do not count as overlapping.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `areRangesOverlapping` to `areIntervalsOverlapping`.
         *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
         *
         *   ```
         *   2.1.3
         *   time interval
         *   part of the time axis limited by two instants
         *   ```
         *
         *   Also, this function now accepts an object with `start` and `end` properties
         *   instead of two arguments as an interval.
         *   This function now throws `RangeError` if the start of the interval is after its end
         *   or if any date in the interval is `Invalid Date`.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   areRangesOverlapping(
         *     new Date(2014, 0, 10), new Date(2014, 0, 20),
         *     new Date(2014, 0, 17), new Date(2014, 0, 21)
         *   )
         *
         *   // v2.0.0 onward
         *
         *   areIntervalsOverlapping(
         *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
         *   )
         *   ```
         *
         * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @param {Object} [options] - the object with options
         * @param {Boolean} [options.inclusive=false] - whether the comparison is inclusive or not
         * @returns {Boolean} whether the time intervals are overlapping
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // For overlapping time intervals:
         * areIntervalsOverlapping(
         *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
         * )
         * //=> true
         *
         * @example
         * // For non-overlapping time intervals:
         * areIntervalsOverlapping(
         *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
         * )
         * //=> false
         *
         * @example
         * // For adjacent time intervals:
         * areIntervalsOverlapping(
         *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 30) }
         * )
         * //=> false
         *
         * @example
         * // Using the inclusive option:
         * areIntervalsOverlapping(
         *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) }
         * )
         * //=> false
         * areIntervalsOverlapping(
         *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *   { start: new Date(2014, 0, 20), end: new Date(2014, 0, 24) },
         *   { inclusive: true }
         * )
         * //=> true
         */

        function areIntervalsOverlapping(
          dirtyIntervalLeft,
          dirtyIntervalRight
        ) {
          var options =
            arguments.length > 2 && arguments[2] !== undefined
              ? arguments[2]
              : {
                  inclusive: false,
                };
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var intervalLeft = dirtyIntervalLeft || {};
          var intervalRight = dirtyIntervalRight || {};
          var leftStartTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalLeft.start).getTime();
          var leftEndTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalLeft.end).getTime();
          var rightStartTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalRight.start).getTime();
          var rightEndTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (
            !(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)
          ) {
            throw new RangeError("Invalid interval");
          }

          if (options.inclusive) {
            return (
              leftStartTime <= rightEndTime && rightStartTime <= leftEndTime
            );
          }

          return leftStartTime < rightEndTime && rightStartTime < leftEndTime;
        }

        /***/
      },
      /* 480 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name closestIndexTo
         * @category Common Helpers
         * @summary Return an index of the closest date from the array comparing to the given date.
         *
         * @description
         * Return an index of the closest date from the array comparing to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - Now, `closestIndexTo` doesn't throw an exception
         *   when the second argument is not an array, and returns Invalid Date instead.
         *
         * @param {Date|Number} dateToCompare - the date to compare with
         * @param {Date[]|Number[]} datesArray - the array to search
         * @returns {Number} an index of the date closest to the given date
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Which date is closer to 6 September 2015?
         * var dateToCompare = new Date(2015, 8, 6)
         * var datesArray = [
         *   new Date(2015, 0, 1),
         *   new Date(2016, 0, 1),
         *   new Date(2017, 0, 1)
         * ]
         * var result = closestIndexTo(dateToCompare, datesArray)
         * //=> 1
         */

        function closestIndexTo(dirtyDateToCompare, dirtyDatesArray) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateToCompare = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateToCompare);

          if (isNaN(dateToCompare)) {
            return NaN;
          }

          var timeToCompare = dateToCompare.getTime();
          var datesArray; // `dirtyDatesArray` is undefined or null

          if (dirtyDatesArray == null) {
            datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
          } else if (typeof dirtyDatesArray.forEach === "function") {
            datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
          } else {
            datesArray = Array.prototype.slice.call(dirtyDatesArray);
          }

          var result;
          var minDistance;
          datesArray.forEach(function (dirtyDate, index) {
            var currentDate = Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate);

            if (isNaN(currentDate)) {
              result = NaN;
              minDistance = NaN;
              return;
            }

            var distance = Math.abs(timeToCompare - currentDate.getTime());

            if (result == null || distance < minDistance) {
              result = index;
              minDistance = distance;
            }
          });
          return result;
        }

        /***/
      },
      /* 481 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name closestTo
         * @category Common Helpers
         * @summary Return a date from the array closest to the given date.
         *
         * @description
         * Return a date from the array closest to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - Now, `closestTo` doesn't throw an exception
         *   when the second argument is not an array, and returns Invalid Date instead.
         *
         * @param {Date|Number} dateToCompare - the date to compare with
         * @param {Date[]|Number[]} datesArray - the array to search
         * @returns {Date} the date from the array closest to the given date
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Which date is closer to 6 September 2015: 1 January 2000 or 1 January 2030?
         * var dateToCompare = new Date(2015, 8, 6)
         * var result = closestTo(dateToCompare, [
         *   new Date(2000, 0, 1),
         *   new Date(2030, 0, 1)
         * ])
         * //=> Tue Jan 01 2030 00:00:00
         */

        function closestTo(dirtyDateToCompare, dirtyDatesArray) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateToCompare = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateToCompare);

          if (isNaN(dateToCompare)) {
            return new Date(NaN);
          }

          var timeToCompare = dateToCompare.getTime();
          var datesArray; // `dirtyDatesArray` is undefined or null

          if (dirtyDatesArray == null) {
            datesArray = []; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method
          } else if (typeof dirtyDatesArray.forEach === "function") {
            datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array. Otherwise, make it empty Array
          } else {
            datesArray = Array.prototype.slice.call(dirtyDatesArray);
          }

          var result;
          var minDistance;
          datesArray.forEach(function (dirtyDate) {
            var currentDate = Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate);

            if (isNaN(currentDate)) {
              result = new Date(NaN);
              minDistance = NaN;
              return;
            }

            var distance = Math.abs(timeToCompare - currentDate.getTime());

            if (result == null || distance < minDistance) {
              result = currentDate;
              minDistance = distance;
            }
          });
          return result;
        }

        /***/
      },
      /* 482 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name compareDesc
         * @category Common Helpers
         * @summary Compare the two dates reverse chronologically and return -1, 0 or 1.
         *
         * @description
         * Compare the two dates and return -1 if the first date is after the second,
         * 1 if the first date is before the second or 0 if dates are equal.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to compare
         * @param {Date|Number} dateRight - the second date to compare
         * @returns {Number} the result of the comparison
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Compare 11 February 1987 and 10 July 1989 reverse chronologically:
         * const result = compareDesc(new Date(1987, 1, 11), new Date(1989, 6, 10))
         * //=> 1
         *
         * @example
         * // Sort the array of dates in reverse chronological order:
         * const result = [
         *   new Date(1995, 6, 2),
         *   new Date(1987, 1, 11),
         *   new Date(1989, 6, 10)
         * ].sort(compareDesc)
         * //=> [
         * //   Sun Jul 02 1995 00:00:00,
         * //   Mon Jul 10 1989 00:00:00,
         * //   Wed Feb 11 1987 00:00:00
         * // ]
         */

        function compareDesc(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var diff = dateLeft.getTime() - dateRight.getTime();

          if (diff > 0) {
            return -1;
          } else if (diff < 0) {
            return 1; // Return 0 if diff is 0; return NaN if diff is NaN
          } else {
            return diff;
          }
        }

        /***/
      },
      /* 483 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isWeekend_index_js__ =
          __webpack_require__(31);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__differenceInCalendarDays_index_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__isSameDay_index_js__ =
          __webpack_require__(28);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInBusinessDays
         * @category Day Helpers
         * @summary Get the number of business days between the given dates.
         *
         * @description
         * Get the number of business day periods between the given dates.
         * Business days being days that arent in the weekend.
         * Like `differenceInCalendarDays`, the function removes the times from
         * the dates before calculating the difference.
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of business days
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many business days are between
         * // 10 January 2014 and 20 July 2014?
         * var result = differenceInBusinessDays(
         *   new Date(2014, 6, 20),
         *   new Date(2014, 0, 10)
         * )
         * //=> 136
         */

        function differenceInBusinessDays(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_7__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_0__isValid_index_js__["a" /* default */]
            )(dateLeft) ||
            !Object(
              __WEBPACK_IMPORTED_MODULE_0__isValid_index_js__["a" /* default */]
            )(dateRight)
          )
            return NaN;
          var calendarDifference = Object(
            __WEBPACK_IMPORTED_MODULE_3__differenceInCalendarDays_index_js__[
              "a" /* default */
            ]
          )(dateLeft, dateRight);
          var sign = calendarDifference < 0 ? -1 : 1;
          var weeks = Object(
            __WEBPACK_IMPORTED_MODULE_6__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(calendarDifference / 7);
          var result = weeks * 5;
          dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_4__addDays_index_js__["a" /* default */]
          )(dateRight, weeks * 7); // the loop below will run at most 6 times to account for the remaining days that don't makeup a full week

          while (
            !Object(
              __WEBPACK_IMPORTED_MODULE_5__isSameDay_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight)
          ) {
            // sign is used to account for both negative and positive differences
            result += Object(
              __WEBPACK_IMPORTED_MODULE_1__isWeekend_index_js__[
                "a" /* default */
              ]
            )(dateRight)
              ? 0
              : sign;
            dateRight = Object(
              __WEBPACK_IMPORTED_MODULE_4__addDays_index_js__["a" /* default */]
            )(dateRight, sign);
          }

          return result === 0 ? 0 : result;
        }

        /***/
      },
      /* 484 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_WEEK = 604800000;
        /**
         * @name differenceInCalendarISOWeeks
         * @category ISO Week Helpers
         * @summary Get the number of calendar ISO weeks between the given dates.
         *
         * @description
         * Get the number of calendar ISO weeks between the given dates.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of calendar ISO weeks
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many calendar ISO weeks are between 6 July 2014 and 21 July 2014?
         * const result = differenceInCalendarISOWeeks(
         *   new Date(2014, 6, 21),
         *   new Date(2014, 6, 6)
         * )
         * //=> 3
         */

        function differenceInCalendarISOWeeks(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var startOfISOWeekLeft = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var startOfISOWeekRight = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          var timestampLeft =
            startOfISOWeekLeft.getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(startOfISOWeekLeft);
          var timestampRight =
            startOfISOWeekRight.getTime() -
            Object(
              __WEBPACK_IMPORTED_MODULE_0__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(startOfISOWeekRight); // Round the number of days to the nearest integer
          // because the number of milliseconds in a week is not constant
          // (e.g. it's different in the week of the daylight saving time clock shift)

          return Math.round(
            (timestampLeft - timestampRight) / MILLISECONDS_IN_WEEK
          );
        }

        /***/
      },
      /* 485 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getQuarter_index_js__ =
          __webpack_require__(78);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInCalendarQuarters
         * @category Quarter Helpers
         * @summary Get the number of calendar quarters between the given dates.
         *
         * @description
         * Get the number of calendar quarters between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of calendar quarters
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many calendar quarters are between 31 December 2013 and 2 July 2014?
         * var result = differenceInCalendarQuarters(
         *   new Date(2014, 6, 2),
         *   new Date(2013, 11, 31)
         * )
         * //=> 3
         */

        function differenceInCalendarQuarters(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();
          var quarterDiff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__getQuarter_index_js__[
                "a" /* default */
              ]
            )(dateLeft) -
            Object(
              __WEBPACK_IMPORTED_MODULE_0__getQuarter_index_js__[
                "a" /* default */
              ]
            )(dateRight);
          return yearDiff * 4 + quarterDiff;
        }

        /***/
      },
      /* 486 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarISOWeekYears_index_js__ =
          __webpack_require__(76);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__subISOWeekYears_index_js__ =
          __webpack_require__(82);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInISOWeekYears
         * @category ISO Week-Numbering Year Helpers
         * @summary Get the number of full ISO week-numbering years between the given dates.
         *
         * @description
         * Get the number of full ISO week-numbering years between the given dates.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `differenceInISOYears` to `differenceInISOWeekYears`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of full ISO week-numbering years
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many full ISO week-numbering years are between 1 January 2010 and 1 January 2012?
         * var result = differenceInISOWeekYears(
         *   new Date(2012, 0, 1),
         *   new Date(2010, 0, 1)
         * )
         * //=> 1
         */

        function differenceInISOWeekYears(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateLeft);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateRight);
          var sign = Object(
            __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__[
              "a" /* default */
            ]
          )(dateLeft, dateRight);
          var difference = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__differenceInCalendarISOWeekYears_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight)
          );
          dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_3__subISOWeekYears_index_js__[
              "a" /* default */
            ]
          )(dateLeft, sign * difference); // Math.abs(diff in full ISO years - diff in calendar ISO years) === 1
          // if last calendar ISO year is not full
          // If so, result must be decreased by 1 in absolute value

          var isLastISOWeekYearNotFull = Number(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__compareAsc_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight) === -sign
          );
          var result = sign * (difference - isLastISOWeekYearNotFull); // Prevent negative zero

          return result === 0 ? 0 : result;
        }

        /***/
      },
      /* 487 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInMonths_index_js__ =
          __webpack_require__(35);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInQuarters
         * @category Quarter Helpers
         * @summary Get the number of full quarters between the given dates.
         *
         * @description
         * Get the number of full quarters between the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of full quarters
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many full quarters are between 31 December 2013 and 2 July 2014?
         * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))
         * //=> 2
         */

        function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__differenceInMonths_index_js__[
                "a" /* default */
              ]
            )(dirtyDateLeft, dirtyDateRight) / 3;
          return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
        }

        /***/
      },
      /* 488 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInDays_index_js__ =
          __webpack_require__(45);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name differenceInWeeks
         * @category Week Helpers
         * @summary Get the number of full weeks between the given dates.
         *
         * @description
         * Get the number of full weeks between two dates. Fractional weeks are
         * truncated towards zero.
         *
         * One "full week" is the distance between a local time in one day to the same
         * local time 7 days earlier or later. A full week can sometimes be less than
         * or more than 7*24 hours if a daylight savings change happens between two dates.
         *
         * To ignore DST and only measure exact 7*24-hour periods, use this instead:
         * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.
         *
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the later date
         * @param {Date|Number} dateRight - the earlier date
         * @returns {Number} the number of full weeks
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // How many full weeks are between 5 July 2014 and 20 July 2014?
         * const result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))
         * //=> 2
         *
         * // How many full weeks are between
         * // 1 March 2020 0:00 and 6 June 2020 0:00 ?
         * // Note: because local time is used, the
         * // result will always be 8 weeks (54 days),
         * // even if DST starts and the period has
         * // only 54*24-1 hours.
         * const result = differenceInWeeks(
         *   new Date(2020, 5, 1),
         *   new Date(2020, 2, 6)
         * )
         * //=> 8
         */

        function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__differenceInDays_index_js__[
                "a" /* default */
              ]
            )(dirtyDateLeft, dirtyDateRight) / 7;
          return diff > 0 ? Math.floor(diff) : Math.ceil(diff);
        }

        /***/
      },
      /* 489 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addHours_index_js__ =
          __webpack_require__(42);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachHourOfInterval
         * @category Interval Helpers
         * @summary Return the array of hours within the specified time interval.
         *
         * @description
         * Return the array of hours within the specified time interval.
         *
         * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @param {Object} [options] - an object with options.
         * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
         * @returns {Date[]} the array with starts of hours from the hour of the interval start to the hour of the interval end
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.step` must be a number greater than 1
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Each hour between 6 October 2014, 12:00 and 6 October 2014, 15:00
         * var result = eachHourOfInterval({
         *   start: new Date(2014, 9, 6, 12),
         *   end: new Date(2014, 9, 6, 15)
         * })
         * //=> [
         * //   Mon Oct 06 2014 12:00:00,
         * //   Mon Oct 06 2014 13:00:00,
         * //   Mon Oct 06 2014 14:00:00,
         * //   Mon Oct 06 2014 15:00:00
         * // ]
         */
        function eachHourOfInterval(dirtyInterval, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var interval = dirtyInterval || {};
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(interval.start);
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(interval.end);
          var startTime = startDate.getTime();
          var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (!(startTime <= endTime)) {
            throw new RangeError("Invalid interval");
          }

          var dates = [];
          var currentDate = startDate;
          currentDate.setMinutes(0, 0, 0);
          var step = options && "step" in options ? Number(options.step) : 1;
          if (step < 1 || isNaN(step))
            throw new RangeError(
              "`options.step` must be a number greater than 1"
            );

          while (currentDate.getTime() <= endTime) {
            dates.push(
              Object(
                __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__[
                  "a" /* default */
                ]
              )(currentDate)
            );
            currentDate = Object(
              __WEBPACK_IMPORTED_MODULE_0__addHours_index_js__[
                "a" /* default */
              ]
            )(currentDate, step);
          }

          return dates;
        }

        /***/
      },
      /* 490 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addMinutes_index_js__ =
          __webpack_require__(43);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfMinute_index_js__ =
          __webpack_require__(49);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachMinuteOfInterval
         * @category Interval Helpers
         * @summary Return the array of minutes within the specified time interval.
         *
         * @description
         * Returns the array of minutes within the specified time interval.
         *
         * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @param {Object} [options] - an object with options.
         * @param {Number} [options.step=1] - the step to increment by. The starts of minutes from the hour of the interval start to the hour of the interval end
         * @throws {TypeError} 1 argument requie value should be more than 1.
         * @returns {Date[]} the array withred
         * @throws {RangeError} `options.step` must be a number equal or greater than 1
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Each minute between 14 October 2020, 13:00 and 14 October 2020, 13:03
         * const result = eachMinuteOfInterval({
         *   start: new Date(2014, 9, 14, 13),
         *   end: new Date(2014, 9, 14, 13, 3)
         * })
         * //=> [
         * //   Wed Oct 14 2014 13:00:00,
         * //   Wed Oct 14 2014 13:01:00,
         * //   Wed Oct 14 2014 13:02:00,
         * //   Wed Oct 14 2014 13:03:00
         * // ]
         */
        function eachMinuteOfInterval(interval, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__startOfMinute_index_js__[
              "a" /* default */
            ]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
            )(interval.start)
          );
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__startOfMinute_index_js__[
              "a" /* default */
            ]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
            )(interval.end)
          );
          var startTime = startDate.getTime();
          var endTime = endDate.getTime();

          if (startTime >= endTime) {
            throw new RangeError("Invalid interval");
          }

          var dates = [];
          var currentDate = startDate;
          var step = options && "step" in options ? Number(options.step) : 1;
          if (step < 1 || isNaN(step))
            throw new RangeError(
              "`options.step` must be a number equal or greater than 1"
            );

          while (currentDate.getTime() <= endTime) {
            dates.push(
              Object(
                __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__[
                  "a" /* default */
                ]
              )(currentDate)
            );
            currentDate = Object(
              __WEBPACK_IMPORTED_MODULE_0__addMinutes_index_js__[
                "a" /* default */
              ]
            )(currentDate, step);
          }

          return dates;
        }

        /***/
      },
      /* 491 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachMonthOfInterval
         * @category Interval Helpers
         * @summary Return the array of months within the specified time interval.
         *
         * @description
         * Return the array of months within the specified time interval.
         *
         * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Each month between 6 February 2014 and 10 August 2014:
         * var result = eachMonthOfInterval({
         *   start: new Date(2014, 1, 6),
         *   end: new Date(2014, 7, 10)
         * })
         * //=> [
         * //   Sat Feb 01 2014 00:00:00,
         * //   Sat Mar 01 2014 00:00:00,
         * //   Tue Apr 01 2014 00:00:00,
         * //   Thu May 01 2014 00:00:00,
         * //   Sun Jun 01 2014 00:00:00,
         * //   Tue Jul 01 2014 00:00:00,
         * //   Fri Aug 01 2014 00:00:00
         * // ]
         */

        function eachMonthOfInterval(dirtyInterval) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var interval = dirtyInterval || {};
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.start);
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.end);
          var endTime = endDate.getTime();
          var dates = []; // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (!(startDate.getTime() <= endTime)) {
            throw new RangeError("Invalid interval");
          }

          var currentDate = startDate;
          currentDate.setHours(0, 0, 0, 0);
          currentDate.setDate(1);

          while (currentDate.getTime() <= endTime) {
            dates.push(
              Object(
                __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__[
                  "a" /* default */
                ]
              )(currentDate)
            );
            currentDate.setMonth(currentDate.getMonth() + 1);
          }

          return dates;
        }

        /***/
      },
      /* 492 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addQuarters_index_js__ =
          __webpack_require__(44);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfQuarter_index_js__ =
          __webpack_require__(50);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachQuarterOfInterval
         * @category Interval Helpers
         * @summary Return the array of quarters within the specified time interval.
         *
         * @description
         * Return the array of quarters within the specified time interval.
         *
         * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Each quarter within interval 6 February 2014 - 10 August 2014:
         * var result = eachQuarterOfInterval({
         *   start: new Date(2014, 1, 6),
         *   end: new Date(2014, 7, 10)
         * })
         * //=> [
         * //   Wed Jan 01 2014 00:00:00,
         * //   Tue Apr 01 2014 00:00:00,
         * //   Tue Jul 01 2014 00:00:00,
         * // ]
         */

        function eachQuarterOfInterval(dirtyInterval) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var interval = dirtyInterval || {};
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(interval.start);
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(interval.end);
          var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (!(startDate.getTime() <= endTime)) {
            throw new RangeError("Invalid interval");
          }

          var startDateQuarter = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfQuarter_index_js__[
              "a" /* default */
            ]
          )(startDate);
          var endDateQuarter = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfQuarter_index_js__[
              "a" /* default */
            ]
          )(endDate);
          endTime = endDateQuarter.getTime();
          var quarters = [];
          var currentQuarter = startDateQuarter;

          while (currentQuarter.getTime() <= endTime) {
            quarters.push(
              Object(
                __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__[
                  "a" /* default */
                ]
              )(currentQuarter)
            );
            currentQuarter = Object(
              __WEBPACK_IMPORTED_MODULE_0__addQuarters_index_js__[
                "a" /* default */
              ]
            )(currentQuarter, 1);
          }

          return quarters;
        }

        /***/
      },
      /* 493 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addWeeks_index_js__ =
          __webpack_require__(33);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfWeek_index_js__ =
          __webpack_require__(11);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachWeekOfInterval
         * @category Interval Helpers
         * @summary Return the array of weeks within the specified time interval.
         *
         * @description
         * Return the array of weeks within the specified time interval.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Each week within interval 6 October 2014 - 23 November 2014:
         * var result = eachWeekOfInterval({
         *   start: new Date(2014, 9, 6),
         *   end: new Date(2014, 10, 23)
         * })
         * //=> [
         * //   Sun Oct 05 2014 00:00:00,
         * //   Sun Oct 12 2014 00:00:00,
         * //   Sun Oct 19 2014 00:00:00,
         * //   Sun Oct 26 2014 00:00:00,
         * //   Sun Nov 02 2014 00:00:00,
         * //   Sun Nov 09 2014 00:00:00,
         * //   Sun Nov 16 2014 00:00:00,
         * //   Sun Nov 23 2014 00:00:00
         * // ]
         */

        function eachWeekOfInterval(dirtyInterval, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var interval = dirtyInterval || {};
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(interval.start);
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(interval.end);
          var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (!(startDate.getTime() <= endTime)) {
            throw new RangeError("Invalid interval");
          }

          var startDateWeek = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(startDate, options);
          var endDateWeek = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfWeek_index_js__[
              "a" /* default */
            ]
          )(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet

          startDateWeek.setHours(15);
          endDateWeek.setHours(15);
          endTime = endDateWeek.getTime();
          var weeks = [];
          var currentWeek = startDateWeek;

          while (currentWeek.getTime() <= endTime) {
            currentWeek.setHours(0);
            weeks.push(
              Object(
                __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__[
                  "a" /* default */
                ]
              )(currentWeek)
            );
            currentWeek = Object(
              __WEBPACK_IMPORTED_MODULE_0__addWeeks_index_js__[
                "a" /* default */
              ]
            )(currentWeek, 1);
            currentWeek.setHours(15);
          }

          return weeks;
        }

        /***/
      },
      /* 494 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__eachWeekendOfInterval_index_js__ =
          __webpack_require__(51);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfMonth_index_js__ =
          __webpack_require__(36);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__endOfMonth_index_js__ =
          __webpack_require__(47);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachWeekendOfMonth
         * @category Month Helpers
         * @summary List all the Saturdays and Sundays in the given month.
         *
         * @description
         * Get all the Saturdays and Sundays in the given month.
         *
         * @param {Date|Number} date - the given month
         * @returns {Date[]} an array containing all the Saturdays and Sundays
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} The passed date is invalid
         *
         * @example
         * // Lists all Saturdays and Sundays in the given month
         * const result = eachWeekendOfMonth(new Date(2022, 1, 1))
         * //=> [
         * //   Sat Feb 05 2022 00:00:00,
         * //   Sun Feb 06 2022 00:00:00,
         * //   Sat Feb 12 2022 00:00:00,
         * //   Sun Feb 13 2022 00:00:00,
         * //   Sat Feb 19 2022 00:00:00,
         * //   Sun Feb 20 2022 00:00:00,
         * //   Sat Feb 26 2022 00:00:00,
         * //   Sun Feb 27 2022 00:00:00
         * // ]
         */

        function eachWeekendOfMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfMonth_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          if (isNaN(startDate.getTime()))
            throw new RangeError("The passed date is invalid");
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__endOfMonth_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__eachWeekendOfInterval_index_js__[
              "a" /* default */
            ]
          )({
            start: startDate,
            end: endDate,
          });
        }

        /***/
      },
      /* 495 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__eachWeekendOfInterval_index_js__ =
          __webpack_require__(51);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfYear_index_js__ =
          __webpack_require__(52);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__endOfYear_index_js__ =
          __webpack_require__(87);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachWeekendOfYear
         * @category Year Helpers
         * @summary List all the Saturdays and Sundays in the year.
         *
         * @description
         * Get all the Saturdays and Sundays in the year.
         *
         * @param {Date|Number} date - the given year
         * @returns {Date[]} an array containing all the Saturdays and Sundays
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} The passed date is invalid
         *
         * @example
         * // Lists all Saturdays and Sundays in the year
         * var result = eachWeekendOfYear(new Date(2020, 1, 1))
         * //=> [
         * //   Sat Jan 03 2020 00:00:00,
         * //   Sun Jan 04 2020 00:00:00,
         * //   ...
         * //   Sun Dec 27 2020 00:00:00
         * // ]
         * ]
         */

        function eachWeekendOfYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          if (isNaN(startDate))
            throw new RangeError("The passed date is invalid");
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_2__endOfYear_index_js__["a" /* default */]
          )(dirtyDate);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__eachWeekendOfInterval_index_js__[
              "a" /* default */
            ]
          )({
            start: startDate,
            end: endDate,
          });
        }

        /***/
      },
      /* 496 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name eachYearOfInterval
         * @category Interval Helpers
         * @summary Return the array of yearly timestamps within the specified time interval.
         *
         * @description
         * Return the array of yearly timestamps within the specified time interval.
         *
         * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
         * @returns {Date[]} the array with starts of yearly timestamps from the month of the interval start to the month of the interval end
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // Each year between 6 February 2014 and 10 August 2017:
         * var result = eachYearOfInterval({
         *   start: new Date(2014, 1, 6),
         *   end: new Date(2017, 7, 10)
         * })
         * //=> [
         * //   Wed Jan 01 2014 00:00:00,
         * //   Thu Jan 01 2015 00:00:00,
         * //   Fri Jan 01 2016 00:00:00,
         * //   Sun Jan 01 2017 00:00:00
         * // ]
         */

        function eachYearOfInterval(dirtyInterval) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var interval = dirtyInterval || {};
          var startDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.start);
          var endDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.end);
          var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (!(startDate.getTime() <= endTime)) {
            throw new RangeError("Invalid interval");
          }

          var dates = [];
          var currentDate = startDate;
          currentDate.setHours(0, 0, 0, 0);
          currentDate.setMonth(0, 1);

          while (currentDate.getTime() <= endTime) {
            dates.push(
              Object(
                __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__[
                  "a" /* default */
                ]
              )(currentDate)
            );
            currentDate.setFullYear(currentDate.getFullYear() + 1);
          }

          return dates;
        }

        /***/
      },
      /* 497 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfDecade
         * @category Decade Helpers
         * @summary Return the end of a decade for the given date.
         *
         * @description
         * Return the end of a decade for the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of a decade
         * @param {Object} [options] - an object with options.
         * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
         *
         * @example
         * // The end of a decade for 12 May 1984 00:00:00:
         * const result = endOfDecade(new Date(1984, 4, 12, 00, 00, 00))
         * //=> Dec 31 1989 23:59:59.999
         */

        function endOfDecade(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          var decade = 9 + Math.floor(year / 10) * 10;
          date.setFullYear(decade, 11, 31);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 498 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfHour
         * @category Hour Helpers
         * @summary Return the end of an hour for the given date.
         *
         * @description
         * Return the end of an hour for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of an hour
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of an hour for 2 September 2014 11:55:00:
         * const result = endOfHour(new Date(2014, 8, 2, 11, 55))
         * //=> Tue Sep 02 2014 11:59:59.999
         */

        function endOfHour(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setMinutes(59, 59, 999);
          return date;
        }

        /***/
      },
      /* 499 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__endOfWeek_index_js__ =
          __webpack_require__(88);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfISOWeek
         * @category ISO Week Helpers
         * @summary Return the end of an ISO week for the given date.
         *
         * @description
         * Return the end of an ISO week for the given date.
         * The result will be in the local timezone.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of an ISO week
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of an ISO week for 2 September 2014 11:55:00:
         * var result = endOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Sun Sep 07 2014 23:59:59.999
         */

        function endOfISOWeek(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__endOfWeek_index_js__["a" /* default */]
          )(dirtyDate, {
            weekStartsOn: 1,
          });
        }

        /***/
      },
      /* 500 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__ =
          __webpack_require__(21);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfISOWeekYear
         * @category ISO Week-Numbering Year Helpers
         * @summary Return the end of an ISO week-numbering year for the given date.
         *
         * @description
         * Return the end of an ISO week-numbering year,
         * which always starts 3 days before the year's first Thursday.
         * The result will be in the local timezone.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `endOfISOYear` to `endOfISOWeekYear`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `addWeekYears`.
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of an ISO week-numbering year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of an ISO week-numbering year for 2 July 2005:
         * const result = endOfISOWeekYear(new Date(2005, 6, 2))
         * //=> Sun Jan 01 2006 23:59:59.999
         */

        function endOfISOWeekYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var year = Object(
            __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          var fourthOfJanuaryOfNextYear = new Date(0);
          fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);
          fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuaryOfNextYear);
          date.setMilliseconds(date.getMilliseconds() - 1);
          return date;
        }

        /***/
      },
      /* 501 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfMinute
         * @category Minute Helpers
         * @summary Return the end of a minute for the given date.
         *
         * @description
         * Return the end of a minute for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of a minute
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of a minute for 1 December 2014 22:15:45.400:
         * const result = endOfMinute(new Date(2014, 11, 1, 22, 15, 45, 400))
         * //=> Mon Dec 01 2014 22:15:59.999
         */

        function endOfMinute(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setSeconds(59, 999);
          return date;
        }

        /***/
      },
      /* 502 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfQuarter
         * @category Quarter Helpers
         * @summary Return the end of a year quarter for the given date.
         *
         * @description
         * Return the end of a year quarter for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of a quarter
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of a quarter for 2 September 2014 11:55:00:
         * const result = endOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Tue Sep 30 2014 23:59:59.999
         */

        function endOfQuarter(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var currentMonth = date.getMonth();
          var month = currentMonth - (currentMonth % 3) + 3;
          date.setMonth(month, 0);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 503 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name endOfSecond
         * @category Second Helpers
         * @summary Return the end of a second for the given date.
         *
         * @description
         * Return the end of a second for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of a second
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The end of a second for 1 December 2014 22:15:45.400:
         * const result = endOfSecond(new Date(2014, 11, 1, 22, 15, 45, 400))
         * //=> Mon Dec 01 2014 22:15:45.999
         */

        function endOfSecond(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          date.setMilliseconds(999);
          return date;
        }

        /***/
      },
      /* 504 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = endOfToday;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__endOfDay_index_js__ =
          __webpack_require__(46);

        /**
         * @name endOfToday
         * @category Day Helpers
         * @summary Return the end of today.
         * @pure false
         *
         * @description
         * Return the end of today.
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @returns {Date} the end of today
         *
         * @example
         * // If today is 6 October 2014:
         * var result = endOfToday()
         * //=> Mon Oct 6 2014 23:59:59.999
         */

        function endOfToday() {
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__endOfDay_index_js__["a" /* default */]
          )(Date.now());
        }

        /***/
      },
      /* 505 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /**
         * @name endOfTomorrow
         * @category Day Helpers
         * @summary Return the end of tomorrow.
         * @pure false
         *
         * @description
         * Return the end of tomorrow.
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `new Date()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @returns {Date} the end of tomorrow
         *
         * @example
         * // If today is 6 October 2014:
         * const result = endOfTomorrow()
         * //=> Tue Oct 7 2014 23:59:59.999
         */
        function endOfTomorrow() {
          var now = new Date();
          var year = now.getFullYear();
          var month = now.getMonth();
          var day = now.getDate();
          var date = new Date(0);
          date.setFullYear(year, month, day + 1);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 506 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /**
         * @name endOfYesterday
         * @category Day Helpers
         * @summary Return the end of yesterday.
         * @pure false
         *
         * @description
         * Return the end of yesterday.
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `new Date()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @returns {Date} the end of yesterday
         *
         * @example
         * // If today is 6 October 2014:
         * const result = endOfYesterday()
         * //=> Sun Oct 5 2014 23:59:59.999
         */
        function endOfYesterday() {
          var now = new Date();
          var year = now.getFullYear();
          var month = now.getMonth();
          var day = now.getDate();
          var date = new Date(0);
          date.setFullYear(year, month, day - 1);
          date.setHours(23, 59, 59, 999);
          return date;
        }

        /***/
      },
      /* 507 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          formatDistance;
        var formatDistanceLocale = {
          lessThanXSeconds: {
            one: "less than a second",
            other: "less than {{count}} seconds",
          },
          xSeconds: {
            one: "1 second",
            other: "{{count}} seconds",
          },
          halfAMinute: "half a minute",
          lessThanXMinutes: {
            one: "less than a minute",
            other: "less than {{count}} minutes",
          },
          xMinutes: {
            one: "1 minute",
            other: "{{count}} minutes",
          },
          aboutXHours: {
            one: "about 1 hour",
            other: "about {{count}} hours",
          },
          xHours: {
            one: "1 hour",
            other: "{{count}} hours",
          },
          xDays: {
            one: "1 day",
            other: "{{count}} days",
          },
          aboutXWeeks: {
            one: "about 1 week",
            other: "about {{count}} weeks",
          },
          xWeeks: {
            one: "1 week",
            other: "{{count}} weeks",
          },
          aboutXMonths: {
            one: "about 1 month",
            other: "about {{count}} months",
          },
          xMonths: {
            one: "1 month",
            other: "{{count}} months",
          },
          aboutXYears: {
            one: "about 1 year",
            other: "about {{count}} years",
          },
          xYears: {
            one: "1 year",
            other: "{{count}} years",
          },
          overXYears: {
            one: "over 1 year",
            other: "over {{count}} years",
          },
          almostXYears: {
            one: "almost 1 year",
            other: "almost {{count}} years",
          },
        };
        function formatDistance(token, count, options) {
          options = options || {};
          var result;

          if (typeof formatDistanceLocale[token] === "string") {
            result = formatDistanceLocale[token];
          } else if (count === 1) {
            result = formatDistanceLocale[token].one;
          } else {
            result = formatDistanceLocale[token].other.replace(
              "{{count}}",
              count
            );
          }

          if (options.addSuffix) {
            if (options.comparison > 0) {
              return "in " + result;
            } else {
              return result + " ago";
            }
          }

          return result;
        }

        /***/
      },
      /* 508 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__ =
          __webpack_require__(509);

        var dateFormats = {
          full: "EEEE, MMMM do, y",
          long: "MMMM do, y",
          medium: "MMM d, y",
          short: "d/M/yy",
        };
        var timeFormats = {
          full: "h:mm:ss a zzzz",
          long: "h:mm:ss a z",
          medium: "h:mm:ss a",
          short: "h:mm a",
        };
        var dateTimeFormats = {
          full: "{{date}} 'at' {{time}}",
          long: "{{date}} 'at' {{time}}",
          medium: "{{date}}, {{time}}",
          short: "{{date}}, {{time}}",
        };
        var formatLong = {
          date: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__[
              "a" /* default */
            ]
          )({
            formats: dateFormats,
            defaultWidth: "full",
          }),
          time: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__[
              "a" /* default */
            ]
          )({
            formats: timeFormats,
            defaultWidth: "full",
          }),
          dateTime: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildFormatLongFn_index_js__[
              "a" /* default */
            ]
          )({
            formats: dateTimeFormats,
            defaultWidth: "full",
          }),
        };
        /* harmony default export */ __webpack_exports__["a"] = formatLong;

        /***/
      },
      /* 509 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          buildFormatLongFn;
        function buildFormatLongFn(args) {
          return function (dirtyOptions) {
            var options = dirtyOptions || {};
            var width = options.width
              ? String(options.width)
              : args.defaultWidth;
            var format = args.formats[width] || args.formats[args.defaultWidth];
            return format;
          };
        }

        /***/
      },
      /* 510 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          formatRelative;
        var formatRelativeLocale = {
          lastWeek: "'last' eeee 'at' p",
          yesterday: "'yesterday at' p",
          today: "'today at' p",
          tomorrow: "'tomorrow at' p",
          nextWeek: "eeee 'at' p",
          other: "P",
        };
        function formatRelative(token, _date, _baseDate, _options) {
          return formatRelativeLocale[token];
        }

        /***/
      },
      /* 511 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__ =
          __webpack_require__(512);

        var eraValues = {
          narrow: ["B", "A"],
          abbreviated: ["BC", "AD"],
          wide: ["Before Christ", "Anno Domini"],
        };
        var quarterValues = {
          narrow: ["1", "2", "3", "4"],
          abbreviated: ["Q1", "Q2", "Q3", "Q4"],
          wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"], // Note: in English, the names of days of the week and months are capitalized.
          // If you are making a new locale based on this one, check if the same is true for the language you're working on.
          // Generally, formatted dates should look like they are in the middle of a sentence,
          // e.g. in Spanish language the weekdays and months should be in the lowercase.
        };
        var monthValues = {
          narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
          abbreviated: [
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "Jul",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
          ],
          wide: [
            "January",
            "February",
            "March",
            "April",
            "May",
            "June",
            "July",
            "August",
            "September",
            "October",
            "November",
            "December",
          ],
        };
        var dayValues = {
          narrow: ["S", "M", "T", "W", "T", "F", "S"],
          short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
          abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
          wide: [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
          ],
        };
        var dayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mi",
            noon: "n",
            morning: "morning",
            afternoon: "afternoon",
            evening: "evening",
            night: "night",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "midnight",
            noon: "noon",
            morning: "morning",
            afternoon: "afternoon",
            evening: "evening",
            night: "night",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnight",
            noon: "noon",
            morning: "morning",
            afternoon: "afternoon",
            evening: "evening",
            night: "night",
          },
        };
        var formattingDayPeriodValues = {
          narrow: {
            am: "a",
            pm: "p",
            midnight: "mi",
            noon: "n",
            morning: "in the morning",
            afternoon: "in the afternoon",
            evening: "in the evening",
            night: "at night",
          },
          abbreviated: {
            am: "AM",
            pm: "PM",
            midnight: "midnight",
            noon: "noon",
            morning: "in the morning",
            afternoon: "in the afternoon",
            evening: "in the evening",
            night: "at night",
          },
          wide: {
            am: "a.m.",
            pm: "p.m.",
            midnight: "midnight",
            noon: "noon",
            morning: "in the morning",
            afternoon: "in the afternoon",
            evening: "in the evening",
            night: "at night",
          },
        };

        function ordinalNumber(dirtyNumber, _dirtyOptions) {
          var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
          // if they are different for different grammatical genders,
          // use `options.unit`:
          //
          //   var options = dirtyOptions || {}
          //   var unit = String(options.unit)
          //
          // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
          // 'day', 'hour', 'minute', 'second'

          var rem100 = number % 100;

          if (rem100 > 20 || rem100 < 10) {
            switch (rem100 % 10) {
              case 1:
                return number + "st";

              case 2:
                return number + "nd";

              case 3:
                return number + "rd";
            }
          }

          return number + "th";
        }

        var localize = {
          ordinalNumber: ordinalNumber,
          era: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__[
              "a" /* default */
            ]
          )({
            values: eraValues,
            defaultWidth: "wide",
          }),
          quarter: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__[
              "a" /* default */
            ]
          )({
            values: quarterValues,
            defaultWidth: "wide",
            argumentCallback: function (quarter) {
              return Number(quarter) - 1;
            },
          }),
          month: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__[
              "a" /* default */
            ]
          )({
            values: monthValues,
            defaultWidth: "wide",
          }),
          day: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__[
              "a" /* default */
            ]
          )({
            values: dayValues,
            defaultWidth: "wide",
          }),
          dayPeriod: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildLocalizeFn_index_js__[
              "a" /* default */
            ]
          )({
            values: dayPeriodValues,
            defaultWidth: "wide",
            formattingValues: formattingDayPeriodValues,
            defaultFormattingWidth: "wide",
          }),
        };
        /* harmony default export */ __webpack_exports__["a"] = localize;

        /***/
      },
      /* 512 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          buildLocalizeFn;
        function buildLocalizeFn(args) {
          return function (dirtyIndex, dirtyOptions) {
            var options = dirtyOptions || {};
            var context = options.context
              ? String(options.context)
              : "standalone";
            var valuesArray;

            if (context === "formatting" && args.formattingValues) {
              var defaultWidth =
                args.defaultFormattingWidth || args.defaultWidth;
              var width = options.width ? String(options.width) : defaultWidth;
              valuesArray =
                args.formattingValues[width] ||
                args.formattingValues[defaultWidth];
            } else {
              var _defaultWidth = args.defaultWidth;

              var _width = options.width
                ? String(options.width)
                : args.defaultWidth;

              valuesArray = args.values[_width] || args.values[_defaultWidth];
            }

            var index = args.argumentCallback
              ? args.argumentCallback(dirtyIndex)
              : dirtyIndex;
            return valuesArray[index];
          };
        }

        /***/
      },
      /* 513 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_buildMatchPatternFn_index_js__ =
          __webpack_require__(514);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__ =
          __webpack_require__(515);

        var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
        var parseOrdinalNumberPattern = /\d+/i;
        var matchEraPatterns = {
          narrow: /^(b|a)/i,
          abbreviated:
            /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
          wide: /^(before christ|before common era|anno domini|common era)/i,
        };
        var parseEraPatterns = {
          any: [/^b/i, /^(a|c)/i],
        };
        var matchQuarterPatterns = {
          narrow: /^[1234]/i,
          abbreviated: /^q[1234]/i,
          wide: /^[1234](th|st|nd|rd)? quarter/i,
        };
        var parseQuarterPatterns = {
          any: [/1/i, /2/i, /3/i, /4/i],
        };
        var matchMonthPatterns = {
          narrow: /^[jfmasond]/i,
          abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
          wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,
        };
        var parseMonthPatterns = {
          narrow: [
            /^j/i,
            /^f/i,
            /^m/i,
            /^a/i,
            /^m/i,
            /^j/i,
            /^j/i,
            /^a/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
          any: [
            /^ja/i,
            /^f/i,
            /^mar/i,
            /^ap/i,
            /^may/i,
            /^jun/i,
            /^jul/i,
            /^au/i,
            /^s/i,
            /^o/i,
            /^n/i,
            /^d/i,
          ],
        };
        var matchDayPatterns = {
          narrow: /^[smtwf]/i,
          short: /^(su|mo|tu|we|th|fr|sa)/i,
          abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
          wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,
        };
        var parseDayPatterns = {
          narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
          any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],
        };
        var matchDayPeriodPatterns = {
          narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
          any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,
        };
        var parseDayPeriodPatterns = {
          any: {
            am: /^a/i,
            pm: /^p/i,
            midnight: /^mi/i,
            noon: /^no/i,
            morning: /morning/i,
            afternoon: /afternoon/i,
            evening: /evening/i,
            night: /night/i,
          },
        };
        var match = {
          ordinalNumber: Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_buildMatchPatternFn_index_js__[
              "a" /* default */
            ]
          )({
            matchPattern: matchOrdinalNumberPattern,
            parsePattern: parseOrdinalNumberPattern,
            valueCallback: function (value) {
              return parseInt(value, 10);
            },
          }),
          era: Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__[
              "a" /* default */
            ]
          )({
            matchPatterns: matchEraPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseEraPatterns,
            defaultParseWidth: "any",
          }),
          quarter: Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__[
              "a" /* default */
            ]
          )({
            matchPatterns: matchQuarterPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseQuarterPatterns,
            defaultParseWidth: "any",
            valueCallback: function (index) {
              return index + 1;
            },
          }),
          month: Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__[
              "a" /* default */
            ]
          )({
            matchPatterns: matchMonthPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseMonthPatterns,
            defaultParseWidth: "any",
          }),
          day: Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__[
              "a" /* default */
            ]
          )({
            matchPatterns: matchDayPatterns,
            defaultMatchWidth: "wide",
            parsePatterns: parseDayPatterns,
            defaultParseWidth: "any",
          }),
          dayPeriod: Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_buildMatchFn_index_js__[
              "a" /* default */
            ]
          )({
            matchPatterns: matchDayPeriodPatterns,
            defaultMatchWidth: "any",
            parsePatterns: parseDayPeriodPatterns,
            defaultParseWidth: "any",
          }),
        };
        /* harmony default export */ __webpack_exports__["a"] = match;

        /***/
      },
      /* 514 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          buildMatchPatternFn;
        function buildMatchPatternFn(args) {
          return function (dirtyString, dirtyOptions) {
            var string = String(dirtyString);
            var options = dirtyOptions || {};
            var matchResult = string.match(args.matchPattern);

            if (!matchResult) {
              return null;
            }

            var matchedString = matchResult[0];
            var parseResult = string.match(args.parsePattern);

            if (!parseResult) {
              return null;
            }

            var value = args.valueCallback
              ? args.valueCallback(parseResult[0])
              : parseResult[0];
            value = options.valueCallback
              ? options.valueCallback(value)
              : value;
            return {
              value: value,
              rest: string.slice(matchedString.length),
            };
          };
        }

        /***/
      },
      /* 515 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          buildMatchFn;
        function buildMatchFn(args) {
          return function (dirtyString, dirtyOptions) {
            var string = String(dirtyString);
            var options = dirtyOptions || {};
            var width = options.width;
            var matchPattern =
              (width && args.matchPatterns[width]) ||
              args.matchPatterns[args.defaultMatchWidth];
            var matchResult = string.match(matchPattern);

            if (!matchResult) {
              return null;
            }

            var matchedString = matchResult[0];
            var parsePatterns =
              (width && args.parsePatterns[width]) ||
              args.parsePatterns[args.defaultParseWidth];
            var value;

            if (
              Object.prototype.toString.call(parsePatterns) === "[object Array]"
            ) {
              value = findIndex(parsePatterns, function (pattern) {
                return pattern.test(matchedString);
              });
            } else {
              value = findKey(parsePatterns, function (pattern) {
                return pattern.test(matchedString);
              });
            }

            value = args.valueCallback ? args.valueCallback(value) : value;
            value = options.valueCallback
              ? options.valueCallback(value)
              : value;
            return {
              value: value,
              rest: string.slice(matchedString.length),
            };
          };
        }

        function findKey(object, predicate) {
          for (var key in object) {
            if (object.hasOwnProperty(key) && predicate(object[key])) {
              return key;
            }
          }
        }

        function findIndex(array, predicate) {
          for (var key = 0; key < array.length; key++) {
            if (predicate(array[key])) {
              return key;
            }
          }
        }

        /***/
      },
      /* 516 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__ =
          __webpack_require__(90);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_getUTCDayOfYear_index_js__ =
          __webpack_require__(517);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_getUTCISOWeek_index_js__ =
          __webpack_require__(91);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_getUTCISOWeekYear_index_js__ =
          __webpack_require__(92);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_getUTCWeek_index_js__ =
          __webpack_require__(93);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_getUTCWeekYear_index_js__ =
          __webpack_require__(53);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__ =
          __webpack_require__(23);

        var dayPeriodEnum = {
          am: "am",
          pm: "pm",
          midnight: "midnight",
          noon: "noon",
          morning: "morning",
          afternoon: "afternoon",
          evening: "evening",
          night: "night",
          /*
           * |     | Unit                           |     | Unit                           |
           * |-----|--------------------------------|-----|--------------------------------|
           * |  a  | AM, PM                         |  A* | Milliseconds in day            |
           * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
           * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
           * |  d  | Day of month                   |  D  | Day of year                    |
           * |  e  | Local day of week              |  E  | Day of week                    |
           * |  f  |                                |  F* | Day of week in month           |
           * |  g* | Modified Julian day            |  G  | Era                            |
           * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
           * |  i! | ISO day of week                |  I! | ISO week of year               |
           * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
           * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
           * |  l* | (deprecated)                   |  L  | Stand-alone month              |
           * |  m  | Minute                         |  M  | Month                          |
           * |  n  |                                |  N  |                                |
           * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
           * |  p! | Long localized time            |  P! | Long localized date            |
           * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
           * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
           * |  s  | Second                         |  S  | Fraction of second             |
           * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
           * |  u  | Extended year                  |  U* | Cyclic year                    |
           * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
           * |  w  | Local week of year             |  W* | Week of month                  |
           * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
           * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
           * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
           *
           * Letters marked by * are not implemented but reserved by Unicode standard.
           *
           * Letters marked by ! are non-standard, but implemented by date-fns:
           * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
           * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
           *   i.e. 7 for Sunday, 1 for Monday, etc.
           * - `I` is ISO week of year, as opposed to `w` which is local week of year.
           * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
           *   `R` is supposed to be used in conjunction with `I` and `i`
           *   for universal ISO week-numbering date, whereas
           *   `Y` is supposed to be used in conjunction with `w` and `e`
           *   for week-numbering date specific to the locale.
           * - `P` is long localized date format
           * - `p` is long localized time format
           */
        };
        var formatters = {
          // Era
          G: function (date, token, localize) {
            var era = date.getUTCFullYear() > 0 ? 1 : 0;

            switch (token) {
              // AD, BC
              case "G":
              case "GG":
              case "GGG":
                return localize.era(era, {
                  width: "abbreviated",
                });
              // A, B

              case "GGGGG":
                return localize.era(era, {
                  width: "narrow",
                });
              // Anno Domini, Before Christ

              case "GGGG":
              default:
                return localize.era(era, {
                  width: "wide",
                });
            }
          },
          // Year
          y: function (date, token, localize) {
            // Ordinal number
            if (token === "yo") {
              var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

              var year = signedYear > 0 ? signedYear : 1 - signedYear;
              return localize.ordinalNumber(year, {
                unit: "year",
              });
            }

            return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
              "a" /* default */
            ].y(date, token);
          },
          // Local week-numbering year
          Y: function (date, token, localize, options) {
            var signedWeekYear = Object(
              __WEBPACK_IMPORTED_MODULE_5__lib_getUTCWeekYear_index_js__[
                "a" /* default */
              ]
            )(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

            var weekYear =
              signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

            if (token === "YY") {
              var twoDigitYear = weekYear % 100;
              return Object(
                __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                  "a" /* default */
                ]
              )(twoDigitYear, 2);
            } // Ordinal number

            if (token === "Yo") {
              return localize.ordinalNumber(weekYear, {
                unit: "year",
              });
            } // Padding

            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(weekYear, token.length);
          },
          // ISO week-numbering year
          R: function (date, token) {
            var isoWeekYear = Object(
              __WEBPACK_IMPORTED_MODULE_3__lib_getUTCISOWeekYear_index_js__[
                "a" /* default */
              ]
            )(date); // Padding

            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(isoWeekYear, token.length);
          },
          // Extended year. This is a single number designating the year of this calendar system.
          // The main difference between `y` and `u` localizers are B.C. years:
          // | Year | `y` | `u` |
          // |------|-----|-----|
          // | AC 1 |   1 |   1 |
          // | BC 1 |   1 |   0 |
          // | BC 2 |   2 |  -1 |
          // Also `yy` always returns the last two digits of a year,
          // while `uu` pads single digit years to 2 characters and returns other years unchanged.
          u: function (date, token) {
            var year = date.getUTCFullYear();
            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(year, token.length);
          },
          // Quarter
          Q: function (date, token, localize) {
            var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

            switch (token) {
              // 1, 2, 3, 4
              case "Q":
                return String(quarter);
              // 01, 02, 03, 04

              case "QQ":
                return Object(
                  __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                    "a" /* default */
                  ]
                )(quarter, 2);
              // 1st, 2nd, 3rd, 4th

              case "Qo":
                return localize.ordinalNumber(quarter, {
                  unit: "quarter",
                });
              // Q1, Q2, Q3, Q4

              case "QQQ":
                return localize.quarter(quarter, {
                  width: "abbreviated",
                  context: "formatting",
                });
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)

              case "QQQQQ":
                return localize.quarter(quarter, {
                  width: "narrow",
                  context: "formatting",
                });
              // 1st quarter, 2nd quarter, ...

              case "QQQQ":
              default:
                return localize.quarter(quarter, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // Stand-alone quarter
          q: function (date, token, localize) {
            var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

            switch (token) {
              // 1, 2, 3, 4
              case "q":
                return String(quarter);
              // 01, 02, 03, 04

              case "qq":
                return Object(
                  __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                    "a" /* default */
                  ]
                )(quarter, 2);
              // 1st, 2nd, 3rd, 4th

              case "qo":
                return localize.ordinalNumber(quarter, {
                  unit: "quarter",
                });
              // Q1, Q2, Q3, Q4

              case "qqq":
                return localize.quarter(quarter, {
                  width: "abbreviated",
                  context: "standalone",
                });
              // 1, 2, 3, 4 (narrow quarter; could be not numerical)

              case "qqqqq":
                return localize.quarter(quarter, {
                  width: "narrow",
                  context: "standalone",
                });
              // 1st quarter, 2nd quarter, ...

              case "qqqq":
              default:
                return localize.quarter(quarter, {
                  width: "wide",
                  context: "standalone",
                });
            }
          },
          // Month
          M: function (date, token, localize) {
            var month = date.getUTCMonth();

            switch (token) {
              case "M":
              case "MM":
                return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
                  "a" /* default */
                ].M(date, token);
              // 1st, 2nd, ..., 12th

              case "Mo":
                return localize.ordinalNumber(month + 1, {
                  unit: "month",
                });
              // Jan, Feb, ..., Dec

              case "MMM":
                return localize.month(month, {
                  width: "abbreviated",
                  context: "formatting",
                });
              // J, F, ..., D

              case "MMMMM":
                return localize.month(month, {
                  width: "narrow",
                  context: "formatting",
                });
              // January, February, ..., December

              case "MMMM":
              default:
                return localize.month(month, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // Stand-alone month
          L: function (date, token, localize) {
            var month = date.getUTCMonth();

            switch (token) {
              // 1, 2, ..., 12
              case "L":
                return String(month + 1);
              // 01, 02, ..., 12

              case "LL":
                return Object(
                  __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                    "a" /* default */
                  ]
                )(month + 1, 2);
              // 1st, 2nd, ..., 12th

              case "Lo":
                return localize.ordinalNumber(month + 1, {
                  unit: "month",
                });
              // Jan, Feb, ..., Dec

              case "LLL":
                return localize.month(month, {
                  width: "abbreviated",
                  context: "standalone",
                });
              // J, F, ..., D

              case "LLLLL":
                return localize.month(month, {
                  width: "narrow",
                  context: "standalone",
                });
              // January, February, ..., December

              case "LLLL":
              default:
                return localize.month(month, {
                  width: "wide",
                  context: "standalone",
                });
            }
          },
          // Local week of year
          w: function (date, token, localize, options) {
            var week = Object(
              __WEBPACK_IMPORTED_MODULE_4__lib_getUTCWeek_index_js__[
                "a" /* default */
              ]
            )(date, options);

            if (token === "wo") {
              return localize.ordinalNumber(week, {
                unit: "week",
              });
            }

            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(week, token.length);
          },
          // ISO week of year
          I: function (date, token, localize) {
            var isoWeek = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_getUTCISOWeek_index_js__[
                "a" /* default */
              ]
            )(date);

            if (token === "Io") {
              return localize.ordinalNumber(isoWeek, {
                unit: "week",
              });
            }

            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(isoWeek, token.length);
          },
          // Day of the month
          d: function (date, token, localize) {
            if (token === "do") {
              return localize.ordinalNumber(date.getUTCDate(), {
                unit: "date",
              });
            }

            return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
              "a" /* default */
            ].d(date, token);
          },
          // Day of year
          D: function (date, token, localize) {
            var dayOfYear = Object(
              __WEBPACK_IMPORTED_MODULE_1__lib_getUTCDayOfYear_index_js__[
                "a" /* default */
              ]
            )(date);

            if (token === "Do") {
              return localize.ordinalNumber(dayOfYear, {
                unit: "dayOfYear",
              });
            }

            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(dayOfYear, token.length);
          },
          // Day of week
          E: function (date, token, localize) {
            var dayOfWeek = date.getUTCDay();

            switch (token) {
              // Tue
              case "E":
              case "EE":
              case "EEE":
                return localize.day(dayOfWeek, {
                  width: "abbreviated",
                  context: "formatting",
                });
              // T

              case "EEEEE":
                return localize.day(dayOfWeek, {
                  width: "narrow",
                  context: "formatting",
                });
              // Tu

              case "EEEEEE":
                return localize.day(dayOfWeek, {
                  width: "short",
                  context: "formatting",
                });
              // Tuesday

              case "EEEE":
              default:
                return localize.day(dayOfWeek, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // Local day of week
          e: function (date, token, localize, options) {
            var dayOfWeek = date.getUTCDay();
            var localDayOfWeek =
              (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

            switch (token) {
              // Numerical value (Nth day of week with current locale or weekStartsOn)
              case "e":
                return String(localDayOfWeek);
              // Padded numerical value

              case "ee":
                return Object(
                  __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                    "a" /* default */
                  ]
                )(localDayOfWeek, 2);
              // 1st, 2nd, ..., 7th

              case "eo":
                return localize.ordinalNumber(localDayOfWeek, {
                  unit: "day",
                });

              case "eee":
                return localize.day(dayOfWeek, {
                  width: "abbreviated",
                  context: "formatting",
                });
              // T

              case "eeeee":
                return localize.day(dayOfWeek, {
                  width: "narrow",
                  context: "formatting",
                });
              // Tu

              case "eeeeee":
                return localize.day(dayOfWeek, {
                  width: "short",
                  context: "formatting",
                });
              // Tuesday

              case "eeee":
              default:
                return localize.day(dayOfWeek, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // Stand-alone local day of week
          c: function (date, token, localize, options) {
            var dayOfWeek = date.getUTCDay();
            var localDayOfWeek =
              (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

            switch (token) {
              // Numerical value (same as in `e`)
              case "c":
                return String(localDayOfWeek);
              // Padded numerical value

              case "cc":
                return Object(
                  __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                    "a" /* default */
                  ]
                )(localDayOfWeek, token.length);
              // 1st, 2nd, ..., 7th

              case "co":
                return localize.ordinalNumber(localDayOfWeek, {
                  unit: "day",
                });

              case "ccc":
                return localize.day(dayOfWeek, {
                  width: "abbreviated",
                  context: "standalone",
                });
              // T

              case "ccccc":
                return localize.day(dayOfWeek, {
                  width: "narrow",
                  context: "standalone",
                });
              // Tu

              case "cccccc":
                return localize.day(dayOfWeek, {
                  width: "short",
                  context: "standalone",
                });
              // Tuesday

              case "cccc":
              default:
                return localize.day(dayOfWeek, {
                  width: "wide",
                  context: "standalone",
                });
            }
          },
          // ISO day of week
          i: function (date, token, localize) {
            var dayOfWeek = date.getUTCDay();
            var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

            switch (token) {
              // 2
              case "i":
                return String(isoDayOfWeek);
              // 02

              case "ii":
                return Object(
                  __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                    "a" /* default */
                  ]
                )(isoDayOfWeek, token.length);
              // 2nd

              case "io":
                return localize.ordinalNumber(isoDayOfWeek, {
                  unit: "day",
                });
              // Tue

              case "iii":
                return localize.day(dayOfWeek, {
                  width: "abbreviated",
                  context: "formatting",
                });
              // T

              case "iiiii":
                return localize.day(dayOfWeek, {
                  width: "narrow",
                  context: "formatting",
                });
              // Tu

              case "iiiiii":
                return localize.day(dayOfWeek, {
                  width: "short",
                  context: "formatting",
                });
              // Tuesday

              case "iiii":
              default:
                return localize.day(dayOfWeek, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // AM or PM
          a: function (date, token, localize) {
            var hours = date.getUTCHours();
            var dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";

            switch (token) {
              case "a":
              case "aa":
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "abbreviated",
                  context: "formatting",
                });

              case "aaa":
                return localize
                  .dayPeriod(dayPeriodEnumValue, {
                    width: "abbreviated",
                    context: "formatting",
                  })
                  .toLowerCase();

              case "aaaaa":
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "narrow",
                  context: "formatting",
                });

              case "aaaa":
              default:
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // AM, PM, midnight, noon
          b: function (date, token, localize) {
            var hours = date.getUTCHours();
            var dayPeriodEnumValue;

            if (hours === 12) {
              dayPeriodEnumValue = dayPeriodEnum.noon;
            } else if (hours === 0) {
              dayPeriodEnumValue = dayPeriodEnum.midnight;
            } else {
              dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
            }

            switch (token) {
              case "b":
              case "bb":
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "abbreviated",
                  context: "formatting",
                });

              case "bbb":
                return localize
                  .dayPeriod(dayPeriodEnumValue, {
                    width: "abbreviated",
                    context: "formatting",
                  })
                  .toLowerCase();

              case "bbbbb":
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "narrow",
                  context: "formatting",
                });

              case "bbbb":
              default:
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // in the morning, in the afternoon, in the evening, at night
          B: function (date, token, localize) {
            var hours = date.getUTCHours();
            var dayPeriodEnumValue;

            if (hours >= 17) {
              dayPeriodEnumValue = dayPeriodEnum.evening;
            } else if (hours >= 12) {
              dayPeriodEnumValue = dayPeriodEnum.afternoon;
            } else if (hours >= 4) {
              dayPeriodEnumValue = dayPeriodEnum.morning;
            } else {
              dayPeriodEnumValue = dayPeriodEnum.night;
            }

            switch (token) {
              case "B":
              case "BB":
              case "BBB":
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "abbreviated",
                  context: "formatting",
                });

              case "BBBBB":
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "narrow",
                  context: "formatting",
                });

              case "BBBB":
              default:
                return localize.dayPeriod(dayPeriodEnumValue, {
                  width: "wide",
                  context: "formatting",
                });
            }
          },
          // Hour [1-12]
          h: function (date, token, localize) {
            if (token === "ho") {
              var hours = date.getUTCHours() % 12;
              if (hours === 0) hours = 12;
              return localize.ordinalNumber(hours, {
                unit: "hour",
              });
            }

            return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
              "a" /* default */
            ].h(date, token);
          },
          // Hour [0-23]
          H: function (date, token, localize) {
            if (token === "Ho") {
              return localize.ordinalNumber(date.getUTCHours(), {
                unit: "hour",
              });
            }

            return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
              "a" /* default */
            ].H(date, token);
          },
          // Hour [0-11]
          K: function (date, token, localize) {
            var hours = date.getUTCHours() % 12;

            if (token === "Ko") {
              return localize.ordinalNumber(hours, {
                unit: "hour",
              });
            }

            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(hours, token.length);
          },
          // Hour [1-24]
          k: function (date, token, localize) {
            var hours = date.getUTCHours();
            if (hours === 0) hours = 24;

            if (token === "ko") {
              return localize.ordinalNumber(hours, {
                unit: "hour",
              });
            }

            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(hours, token.length);
          },
          // Minute
          m: function (date, token, localize) {
            if (token === "mo") {
              return localize.ordinalNumber(date.getUTCMinutes(), {
                unit: "minute",
              });
            }

            return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
              "a" /* default */
            ].m(date, token);
          },
          // Second
          s: function (date, token, localize) {
            if (token === "so") {
              return localize.ordinalNumber(date.getUTCSeconds(), {
                unit: "second",
              });
            }

            return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
              "a" /* default */
            ].s(date, token);
          },
          // Fraction of second
          S: function (date, token) {
            return __WEBPACK_IMPORTED_MODULE_0__lightFormatters_index_js__[
              "a" /* default */
            ].S(date, token);
          },
          // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
          X: function (date, token, _localize, options) {
            var originalDate = options._originalDate || date;
            var timezoneOffset = originalDate.getTimezoneOffset();

            if (timezoneOffset === 0) {
              return "Z";
            }

            switch (token) {
              // Hours and optional minutes
              case "X":
                return formatTimezoneWithOptionalMinutes(timezoneOffset);
              // Hours, minutes and optional seconds without `:` delimiter
              // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
              // so this token always has the same output as `XX`

              case "XXXX":
              case "XX":
                // Hours and minutes without `:` delimiter
                return formatTimezone(timezoneOffset);
              // Hours, minutes and optional seconds with `:` delimiter
              // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
              // so this token always has the same output as `XXX`

              case "XXXXX":
              case "XXX": // Hours and minutes with `:` delimiter

              default:
                return formatTimezone(timezoneOffset, ":");
            }
          },
          // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
          x: function (date, token, _localize, options) {
            var originalDate = options._originalDate || date;
            var timezoneOffset = originalDate.getTimezoneOffset();

            switch (token) {
              // Hours and optional minutes
              case "x":
                return formatTimezoneWithOptionalMinutes(timezoneOffset);
              // Hours, minutes and optional seconds without `:` delimiter
              // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
              // so this token always has the same output as `xx`

              case "xxxx":
              case "xx":
                // Hours and minutes without `:` delimiter
                return formatTimezone(timezoneOffset);
              // Hours, minutes and optional seconds with `:` delimiter
              // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
              // so this token always has the same output as `xxx`

              case "xxxxx":
              case "xxx": // Hours and minutes with `:` delimiter

              default:
                return formatTimezone(timezoneOffset, ":");
            }
          },
          // Timezone (GMT)
          O: function (date, token, _localize, options) {
            var originalDate = options._originalDate || date;
            var timezoneOffset = originalDate.getTimezoneOffset();

            switch (token) {
              // Short
              case "O":
              case "OO":
              case "OOO":
                return "GMT" + formatTimezoneShort(timezoneOffset, ":");
              // Long

              case "OOOO":
              default:
                return "GMT" + formatTimezone(timezoneOffset, ":");
            }
          },
          // Timezone (specific non-location)
          z: function (date, token, _localize, options) {
            var originalDate = options._originalDate || date;
            var timezoneOffset = originalDate.getTimezoneOffset();

            switch (token) {
              // Short
              case "z":
              case "zz":
              case "zzz":
                return "GMT" + formatTimezoneShort(timezoneOffset, ":");
              // Long

              case "zzzz":
              default:
                return "GMT" + formatTimezone(timezoneOffset, ":");
            }
          },
          // Seconds timestamp
          t: function (date, token, _localize, options) {
            var originalDate = options._originalDate || date;
            var timestamp = Math.floor(originalDate.getTime() / 1000);
            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(timestamp, token.length);
          },
          // Milliseconds timestamp
          T: function (date, token, _localize, options) {
            var originalDate = options._originalDate || date;
            var timestamp = originalDate.getTime();
            return Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(timestamp, token.length);
          },
        };

        function formatTimezoneShort(offset, dirtyDelimiter) {
          var sign = offset > 0 ? "-" : "+";
          var absOffset = Math.abs(offset);
          var hours = Math.floor(absOffset / 60);
          var minutes = absOffset % 60;

          if (minutes === 0) {
            return sign + String(hours);
          }

          var delimiter = dirtyDelimiter || "";
          return (
            sign +
            String(hours) +
            delimiter +
            Object(
              __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(minutes, 2)
          );
        }

        function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
          if (offset % 60 === 0) {
            var sign = offset > 0 ? "-" : "+";
            return (
              sign +
              Object(
                __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
                  "a" /* default */
                ]
              )(Math.abs(offset) / 60, 2)
            );
          }

          return formatTimezone(offset, dirtyDelimiter);
        }

        function formatTimezone(offset, dirtyDelimiter) {
          var delimiter = dirtyDelimiter || "";
          var sign = offset > 0 ? "-" : "+";
          var absOffset = Math.abs(offset);
          var hours = Object(
            __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(Math.floor(absOffset / 60), 2);
          var minutes = Object(
            __WEBPACK_IMPORTED_MODULE_6__addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(absOffset % 60, 2);
          return sign + hours + delimiter + minutes;
        }

        /* harmony default export */ __webpack_exports__["a"] = formatters;

        /***/
      },
      /* 517 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          getUTCDayOfYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function getUTCDayOfYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var timestamp = date.getTime();
          date.setUTCMonth(0, 1);
          date.setUTCHours(0, 0, 0, 0);
          var startOfYearTimestamp = date.getTime();
          var difference = timestamp - startOfYearTimestamp;
          return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
        }

        /***/
      },
      /* 518 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfUTCISOWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getUTCISOWeekYear_index_js__ =
          __webpack_require__(92);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__ =
          __webpack_require__(37);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function startOfUTCISOWeekYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var year = Object(
            __WEBPACK_IMPORTED_MODULE_0__getUTCISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          var fourthOfJanuary = new Date(0);
          fourthOfJanuary.setUTCFullYear(year, 0, 4);
          fourthOfJanuary.setUTCHours(0, 0, 0, 0);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfUTCISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuary);
          return date;
        }

        /***/
      },
      /* 519 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfUTCWeekYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getUTCWeekYear_index_js__ =
          __webpack_require__(53);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__ =
          __webpack_require__(38);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeFirstWeekContainsDate =
            locale && locale.options && locale.options.firstWeekContainsDate;
          var defaultFirstWeekContainsDate =
            localeFirstWeekContainsDate == null
              ? 1
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeFirstWeekContainsDate);
          var firstWeekContainsDate =
            options.firstWeekContainsDate == null
              ? defaultFirstWeekContainsDate
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.firstWeekContainsDate);
          var year = Object(
            __WEBPACK_IMPORTED_MODULE_1__getUTCWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, dirtyOptions);
          var firstWeek = new Date(0);
          firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
          firstWeek.setUTCHours(0, 0, 0, 0);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_2__startOfUTCWeek_index_js__[
              "a" /* default */
            ]
          )(firstWeek, dirtyOptions);
          return date;
        }

        /***/
      },
      /* 520 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__formatDistance_index_js__ =
          __webpack_require__(96);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name formatDistanceToNow
         * @category Common Helpers
         * @summary Return the distance between the given date and now in words.
         * @pure false
         *
         * @description
         * Return the distance between the given date and now in words.
         *
         * | Distance to now                                                   | Result              |
         * |-------------------------------------------------------------------|---------------------|
         * | 0 ... 30 secs                                                     | less than a minute  |
         * | 30 secs ... 1 min 30 secs                                         | 1 minute            |
         * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |
         * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |
         * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |
         * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |
         * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |
         * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |
         * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |
         * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |
         * | 1 yr ... 1 yr 3 months                                            | about 1 year        |
         * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |
         * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |
         * | N yrs ... N yrs 3 months                                          | about N years       |
         * | N yrs 3 months ... N yrs 9 months                                 | over N years        |
         * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |
         *
         * With `options.includeSeconds == true`:
         * | Distance to now     | Result               |
         * |---------------------|----------------------|
         * | 0 secs ... 5 secs   | less than 5 seconds  |
         * | 5 secs ... 10 secs  | less than 10 seconds |
         * | 10 secs ... 20 secs | less than 20 seconds |
         * | 20 secs ... 40 secs | half a minute        |
         * | 40 secs ... 60 secs | less than a minute   |
         * | 60 secs ... 90 secs | 1 minute             |
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `distanceInWordsToNow ` to `formatDistanceToNow`
         *   to make its name consistent with `format` and `formatRelative`.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   distanceInWordsToNow(new Date(2014, 6, 2), { addSuffix: true })
         *   //=> 'in 6 months'
         *
         *   // v2.0.0 onward
         *
         *   formatDistanceToNow(new Date(2014, 6, 2), { addSuffix: true })
         *   //=> 'in 6 months'
         *   ```
         *
         * @param {Date|Number} date - the given date
         * @param {Object} [options] - the object with options
         * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed
         * @param {Boolean} [options.addSuffix=false] - result specifies if now is earlier or later than the passed date
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @returns {String} the distance in words
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `options.locale` must contain `formatDistance` property
         *
         * @example
         * // If today is 1 January 2015, what is the distance to 2 July 2014?
         * var result = formatDistanceToNow(
         *   new Date(2014, 6, 2)
         * )
         * //=> '6 months'
         *
         * @example
         * // If now is 1 January 2015 00:00:00,
         * // what is the distance to 1 January 2015 00:00:15, including seconds?
         * var result = formatDistanceToNow(
         *   new Date(2015, 0, 1, 0, 0, 15),
         *   {includeSeconds: true}
         * )
         * //=> 'less than 20 seconds'
         *
         * @example
         * // If today is 1 January 2015,
         * // what is the distance to 1 January 2016, with a suffix?
         * var result = formatDistanceToNow(
         *   new Date(2016, 0, 1),
         *   {addSuffix: true}
         * )
         * //=> 'in about 1 year'
         *
         * @example
         * // If today is 1 January 2015,
         * // what is the distance to 1 August 2016 in Esperanto?
         * var eoLocale = require('date-fns/locale/eo')
         * var result = formatDistanceToNow(
         *   new Date(2016, 7, 1),
         *   {locale: eoLocale}
         * )
         * //=> 'pli ol 1 jaro'
         */

        function formatDistanceToNow(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__formatDistance_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, Date.now(), dirtyOptions);
        }

        /***/
      },
      /* 521 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__formatDistanceStrict_index_js__ =
          __webpack_require__(99);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name formatDistanceToNowStrict
         * @category Common Helpers
         * @summary Return the distance between the given date and now in words.
         * @pure false
         *
         * @description
         * Return the distance between the given dates in words, using strict units.
         * This is like `formatDistance`, but does not use helpers like 'almost', 'over',
         * 'less than' and the like.
         *
         * | Distance between dates | Result              |
         * |------------------------|---------------------|
         * | 0 ... 59 secs          | [0..59] seconds     |
         * | 1 ... 59 mins          | [1..59] minutes     |
         * | 1 ... 23 hrs           | [1..23] hours       |
         * | 1 ... 29 days          | [1..29] days        |
         * | 1 ... 11 months        | [1..11] months      |
         * | 1 ... N years          | [1..N]  years       |
         *
         * @param {Date|Number} date - the given date
         * @param {Object} [options] - an object with options.
         * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first
         * @param {'second'|'minute'|'hour'|'day'|'month'|'year'} [options.unit] - if specified, will force a unit
         * @param {'floor'|'ceil'|'round'} [options.roundingMethod='round'] - which way to round partial units
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @returns {String} the distance in words
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `options.locale` must contain `formatDistance` property
         *
         * @example
         * // If today is 1 January 2015, what is the distance to 2 July 2014?
         * var result = formatDistanceToNowStrict(
         *   new Date(2014, 6, 2)
         * )
         * //=> '6 months'
         *
         * @example
         * // If now is 1 January 2015 00:00:00,
         * // what is the distance to 1 January 2015 00:00:15, including seconds?
         * var result = formatDistanceToNowStrict(
         *   new Date(2015, 0, 1, 0, 0, 15)
         * )
         * //=> '20 seconds'
         *
         * @example
         * // If today is 1 January 2015,
         * // what is the distance to 1 January 2016, with a suffix?
         * var result = formatDistanceToNowStrict(
         *   new Date(2016, 0, 1),
         *   {addSuffix: true}
         * )
         * //=> 'in 1 year'
         *
         * @example
         * // If today is 28 January 2015,
         * // what is the distance to 1 January 2015, in months, rounded up??
         * var result = formatDistanceToNowStrict(new Date(2015, 0, 1), {
         *   unit: 'month',
         *   roundingMethod: 'ceil'
         * })
         * //=> '1 month'
         *
         * @example
         * // If today is 1 January 2015,
         * // what is the distance to 1 August 2016 in Esperanto?
         * var eoLocale = require('date-fns/locale/eo')
         * var result = formatDistanceToNowStrict(
         *   new Date(2016, 7, 1),
         *   {locale: eoLocale}
         * )
         * //=> '1 jaro'
         */

        function formatDistanceToNowStrict(dirtyDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__formatDistanceStrict_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, Date.now(), dirtyOptions);
        }

        /***/
      },
      /* 522 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__locale_en_US_index_js__ =
          __webpack_require__(22);

        var defaultFormat = [
          "years",
          "months",
          "weeks",
          "days",
          "hours",
          "minutes",
          "seconds",
        ];
        /**
 * @name formatDuration
 * @category Common Helpers
 * @summary Formats a duration in human-readable format
 *
 * @description
 * Return human-readable duration string i.e. "9 months 2 days"
 *
 * @param {Duration} duration - the duration to format
 * @param {Object} [options] - an object with options.

 * @param {string[]} [options.format=['years', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds']] - the array of units to format
 * @param {boolean} [options.zero=false] - should be zeros be included in the output?
 * @param {string} [options.delimiter=' '] - delimiter string
 * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
 * @returns {string} the formatted date string
 * @throws {TypeError} 1 argument required
 *
 * @example
 * // Format full duration
 * formatDuration({
 *   years: 2,
 *   months: 9,
 *   weeks: 1,
 *   days: 7,
 *   hours: 5,
 *   minutes: 9,
 *   seconds: 30
 * })
 * //=> '2 years 9 months 1 week 7 days 5 hours 9 minutes 30 seconds
 *
 * @example
 * // Format partial duration
 * formatDuration({ months: 9, days: 2 })
 * //=> '9 months 2 days'
 *
 * @example
 * // Customize the format
 * formatDuration(
 *   {
 *     years: 2,
 *     months: 9,
 *     weeks: 1,
 *     days: 7,
 *     hours: 5,
 *     minutes: 9,
 *     seconds: 30
 *   },
 *   { format: ['months', 'weeks'] }
 * ) === '9 months 1 week'
 *
 * @example
 * // Customize the zeros presence
 * formatDuration({ years: 0, months: 9 })
 * //=> '9 months'
 * formatDuration({ years: 0, months: 9 }, { zero: true })
 * //=> '0 years 9 months'
 *
 * @example
 * // Customize the delimiter
 * formatDuration({ years: 2, months: 9, weeks: 3 }, { delimiter: ', ' })
 * //=> '2 years, 9 months, 3 weeks'
 */

        function formatDuration(duration, options) {
          if (arguments.length < 1) {
            throw new TypeError(
              "1 argument required, but only ".concat(
                arguments.length,
                " present"
              )
            );
          }

          var format =
            (options === null || options === void 0
              ? void 0
              : options.format) || defaultFormat;
          var locale =
            (options === null || options === void 0
              ? void 0
              : options.locale) ||
            __WEBPACK_IMPORTED_MODULE_0__locale_en_US_index_js__[
              "a" /* default */
            ];
          var zero =
            (options === null || options === void 0 ? void 0 : options.zero) ||
            false;
          var delimiter =
            (options === null || options === void 0
              ? void 0
              : options.delimiter) || " ";
          var result = format
            .reduce(function (acc, unit) {
              var token = "x".concat(
                unit.replace(/(^.)/, function (m) {
                  return m.toUpperCase();
                })
              );
              var addChunk =
                typeof duration[unit] === "number" && (zero || duration[unit]);
              return addChunk
                ? acc.concat(locale.formatDistance(token, duration[unit]))
                : acc;
            }, [])
            .join(delimiter);
          return result;
        }

        /***/
      },
      /* 523 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__ =
          __webpack_require__(23);

        /**
         * @name formatISO
         * @category Common Helpers
         * @summary Format the date according to the ISO 8601 standard (http://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).
         *
         * @description
         * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
         * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with time zone, or both.
         * @returns {String} the formatted date string
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `options.format` must be 'extended' or 'basic'
         * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
         *
         * @example
         * // Represent 18 September 2019 in ISO 8601 format (UTC):
         * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))
         * //=> '2019-09-18T19:00:52Z'
         *
         * @example
         * // Represent 18 September 2019 in ISO 8601, short format (UTC):
         * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
         * //=> '20190918T190052'
         *
         * @example
         * // Represent 18 September 2019 in ISO 8601 format, date only:
         * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
         * //=> '2019-09-18'
         *
         * @example
         * // Represent 18 September 2019 in ISO 8601 format, time only (UTC):
         * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
         * //=> '19:00:52Z'
         */

        function formatISO(dirtyDate, dirtyOptions) {
          if (arguments.length < 1) {
            throw new TypeError(
              "1 argument required, but only ".concat(
                arguments.length,
                " present"
              )
            );
          }

          var originalDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__["a" /* default */]
            )(originalDate)
          ) {
            throw new RangeError("Invalid time value");
          }

          var options = dirtyOptions || {};
          var format =
            options.format == null ? "extended" : String(options.format);
          var representation =
            options.representation == null
              ? "complete"
              : String(options.representation);

          if (format !== "extended" && format !== "basic") {
            throw new RangeError("format must be 'extended' or 'basic'");
          }

          if (
            representation !== "date" &&
            representation !== "time" &&
            representation !== "complete"
          ) {
            throw new RangeError(
              "representation must be 'date', 'time', or 'complete'"
            );
          }

          var result = "";
          var tzOffset = "";
          var dateDelimiter = format === "extended" ? "-" : "";
          var timeDelimiter = format === "extended" ? ":" : ""; // Representation is either 'date' or 'complete'

          if (representation !== "time") {
            var day = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getDate(), 2);
            var month = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getMonth() + 1, 2);
            var year = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

            result = ""
              .concat(year)
              .concat(dateDelimiter)
              .concat(month)
              .concat(dateDelimiter)
              .concat(day);
          } // Representation is either 'time' or 'complete'

          if (representation !== "date") {
            // Add the timezone.
            var offset = originalDate.getTimezoneOffset();

            if (offset !== 0) {
              var absoluteOffset = Math.abs(offset);
              var hourOffset = Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                  "a" /* default */
                ]
              )(Math.floor(absoluteOffset / 60), 2);
              var minuteOffset = Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                  "a" /* default */
                ]
              )(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

              var sign = offset < 0 ? "+" : "-";
              tzOffset = ""
                .concat(sign)
                .concat(hourOffset, ":")
                .concat(minuteOffset);
            } else {
              tzOffset = "Z";
            }

            var hour = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getHours(), 2);
            var minute = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getMinutes(), 2);
            var second = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'

            var separator = result === "" ? "" : "T"; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.

            var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.

            result = ""
              .concat(result)
              .concat(separator)
              .concat(time)
              .concat(tzOffset);
          }

          return result;
        }

        /***/
      },
      /* 524 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__ =
          __webpack_require__(23);

        /**
         * @name formatISO9075
         * @category Common Helpers
         * @summary Format the date according to the ISO 9075 standard (https://dev.mysql.com/doc/refman/5.7/en/date-and-time-functions.html#function_get-format).
         *
         * @description
         * Return the formatted date string in ISO 9075 format. Options may be passed to control the parts and notations of the date.
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.
         * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time, or both.
         * @returns {String} the formatted date string
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `options.format` must be 'extended' or 'basic'
         * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'
         *
         * @example
         * // Represent 18 September 2019 in ISO 9075 format:
         * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52))
         * //=> '2019-09-18 19:00:52'
         *
         * @example
         * // Represent 18 September 2019 in ISO 9075, short format:
         * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })
         * //=> '20190918 190052'
         *
         * @example
         * // Represent 18 September 2019 in ISO 9075 format, date only:
         * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })
         * //=> '2019-09-18'
         *
         * @example
         * // Represent 18 September 2019 in ISO 9075 format, time only:
         * const result = formatISO9075(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })
         * //=> '19:00:52'
         */

        function formatISO9075(dirtyDate, dirtyOptions) {
          if (arguments.length < 1) {
            throw new TypeError(
              "1 argument required, but only ".concat(
                arguments.length,
                " present"
              )
            );
          }

          var originalDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__["a" /* default */]
            )(originalDate)
          ) {
            throw new RangeError("Invalid time value");
          }

          var options = dirtyOptions || {};
          var format =
            options.format == null ? "extended" : String(options.format);
          var representation =
            options.representation == null
              ? "complete"
              : String(options.representation);

          if (format !== "extended" && format !== "basic") {
            throw new RangeError("format must be 'extended' or 'basic'");
          }

          if (
            representation !== "date" &&
            representation !== "time" &&
            representation !== "complete"
          ) {
            throw new RangeError(
              "representation must be 'date', 'time', or 'complete'"
            );
          }

          var result = "";
          var dateDelimiter = format === "extended" ? "-" : "";
          var timeDelimiter = format === "extended" ? ":" : ""; // Representation is either 'date' or 'complete'

          if (representation !== "time") {
            var day = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getDate(), 2);
            var month = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getMonth() + 1, 2);
            var year = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.

            result = ""
              .concat(year)
              .concat(dateDelimiter)
              .concat(month)
              .concat(dateDelimiter)
              .concat(day);
          } // Representation is either 'time' or 'complete'

          if (representation !== "date") {
            var hour = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getHours(), 2);
            var minute = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getMinutes(), 2);
            var second = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(originalDate.getSeconds(), 2); // If there's also date, separate it with time with a space

            var separator = result === "" ? "" : " "; // HHmmss or HH:mm:ss.

            result = ""
              .concat(result)
              .concat(separator)
              .concat(hour)
              .concat(timeDelimiter)
              .concat(minute)
              .concat(timeDelimiter)
              .concat(second);
          }

          return result;
        }

        /***/
      },
      /* 525 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name formatISODuration
         * @category Common Helpers
         * @summary Format a duration object according as ISO 8601 duration string
         *
         * @description
         * Format a duration object according to the ISO 8601 duration standard (https://www.digi.com/resources/documentation/digidocs/90001437-13/reference/r_iso_8601_duration_format.htm)
         *
         * @param {Duration} duration - the duration to format
         *
         * @returns {String} The ISO 8601 duration string
         * @throws {TypeError} Requires 1 argument
         * @throws {Error} Argument must be an object
         *
         * @example
         * // Format the given duration as ISO 8601 string
         * formatISODuration({
         *   years: 39,
         *   months: 2,
         *   days: 20,
         *   hours: 7,
         *   minutes: 5,
         *   seconds: 0
         * })
         * //=> 'P39Y2M20DT0H0M0S'
         */

        function formatISODuration(duration) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          if (typeof duration !== "object")
            throw new Error("Duration must be an object");
          var _duration$years = duration.years,
            years = _duration$years === void 0 ? 0 : _duration$years,
            _duration$months = duration.months,
            months = _duration$months === void 0 ? 0 : _duration$months,
            _duration$days = duration.days,
            days = _duration$days === void 0 ? 0 : _duration$days,
            _duration$hours = duration.hours,
            hours = _duration$hours === void 0 ? 0 : _duration$hours,
            _duration$minutes = duration.minutes,
            minutes = _duration$minutes === void 0 ? 0 : _duration$minutes,
            _duration$seconds = duration.seconds,
            seconds = _duration$seconds === void 0 ? 0 : _duration$seconds;
          return "P"
            .concat(years, "Y")
            .concat(months, "M")
            .concat(days, "DT")
            .concat(hours, "H")
            .concat(minutes, "M")
            .concat(seconds, "S");
        }

        /***/
      },
      /* 526 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__ =
          __webpack_require__(23);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__ =
          __webpack_require__(6);

        /**
         * @name formatRFC3339
         * @category Common Helpers
         * @summary Format the date according to the RFC 3339 standard (https://tools.ietf.org/html/rfc3339#section-5.6).
         *
         * @description
         * Return the formatted date string in RFC 3339 format. Options may be passed to control the parts and notations of the date.
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {0|1|2|3} [options.fractionDigits=0] - number of digits after the decimal point after seconds
         * @returns {String} the formatted date string
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `options.fractionDigits` must be between 0 and 3
         *
         * @example
         * // Represent 18 September 2019 in RFC 3339 format:
         * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52))
         * //=> '2019-09-18T19:00:52Z'
         *
         * @example
         * // Represent 18 September 2019 in RFC 3339 format, 2 digits of second fraction:
         * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 2 })
         * //=> '2019-09-18T19:00:52.23Z'
         *
         * @example
         * // Represent 18 September 2019 in RFC 3339 format, 3 digits of second fraction
         * const result = formatRFC3339(new Date(2019, 8, 18, 19, 0, 52, 234), { fractionDigits: 3 })
         * //=> '2019-09-18T19:00:52.234Z'
         */

        function formatRFC3339(dirtyDate, dirtyOptions) {
          if (arguments.length < 1) {
            throw new TypeError(
              "1 arguments required, but only ".concat(
                arguments.length,
                " present"
              )
            );
          }

          var originalDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__["a" /* default */]
            )(originalDate)
          ) {
            throw new RangeError("Invalid time value");
          }

          var options = dirtyOptions || {};
          var fractionDigits =
            options.fractionDigits == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.fractionDigits); // Test if fractionDigits is between 0 and 3 _and_ is not NaN

          if (!(fractionDigits >= 0 && fractionDigits <= 3)) {
            throw new RangeError(
              "fractionDigits must be between 0 and 3 inclusively"
            );
          }

          var day = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getDate(), 2);
          var month = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getMonth() + 1, 2);
          var year = originalDate.getFullYear();
          var hour = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getHours(), 2);
          var minute = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getMinutes(), 2);
          var second = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getSeconds(), 2);
          var fractionalSecond = "";

          if (fractionDigits > 0) {
            var milliseconds = originalDate.getMilliseconds();
            var fractionalSeconds = Math.floor(
              milliseconds * Math.pow(10, fractionDigits - 3)
            );
            fractionalSecond =
              "." +
              Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                  "a" /* default */
                ]
              )(fractionalSeconds, fractionDigits);
          }

          var offset = "";
          var tzOffset = originalDate.getTimezoneOffset();

          if (tzOffset !== 0) {
            var absoluteOffset = Math.abs(tzOffset);
            var hourOffset = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(
              Object(
                __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__[
                  "a" /* default */
                ]
              )(absoluteOffset / 60),
              2
            );
            var minuteOffset = Object(
              __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
                "a" /* default */
              ]
            )(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.

            var sign = tzOffset < 0 ? "+" : "-";
            offset = ""
              .concat(sign)
              .concat(hourOffset, ":")
              .concat(minuteOffset);
          } else {
            offset = "Z";
          }

          return ""
            .concat(year, "-")
            .concat(month, "-")
            .concat(day, "T")
            .concat(hour, ":")
            .concat(minute, ":")
            .concat(second)
            .concat(fractionalSecond)
            .concat(offset);
        }

        /***/
      },
      /* 527 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__ =
          __webpack_require__(23);

        var days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
        var months = [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ];
        /**
         * @name formatRFC7231
         * @category Common Helpers
         * @summary Format the date according to the RFC 7231 standard (https://tools.ietf.org/html/rfc7231#section-7.1.1.1).
         *
         * @description
         * Return the formatted date string in RFC 7231 format.
         * The result will always be in UTC timezone.
         *
         * @param {Date|Number} date - the original date
         * @returns {String} the formatted date string
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `date` must not be Invalid Date
         *
         * @example
         * // Represent 18 September 2019 in RFC 7231 format:
         * const result = formatRFC7231(new Date(2019, 8, 18, 19, 0, 52))
         * //=> 'Wed, 18 Sep 2019 19:00:52 GMT'
         */

        function formatRFC7231(dirtyDate) {
          if (arguments.length < 1) {
            throw new TypeError(
              "1 arguments required, but only ".concat(
                arguments.length,
                " present"
              )
            );
          }

          var originalDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__["a" /* default */]
            )(originalDate)
          ) {
            throw new RangeError("Invalid time value");
          }

          var dayName = days[originalDate.getUTCDay()];
          var dayOfMonth = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getUTCDate(), 2);
          var monthName = months[originalDate.getUTCMonth()];
          var year = originalDate.getUTCFullYear();
          var hour = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getUTCHours(), 2);
          var minute = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getUTCMinutes(), 2);
          var second = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_addLeadingZeros_index_js__[
              "a" /* default */
            ]
          )(originalDate.getUTCSeconds(), 2); // Result variables.

          return ""
            .concat(dayName, ", ")
            .concat(dayOfMonth, " ")
            .concat(monthName, " ")
            .concat(year, " ")
            .concat(hour, ":")
            .concat(minute, ":")
            .concat(second, " GMT");
        }

        /***/
      },
      /* 528 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInCalendarDays_index_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__format_index_js__ =
          __webpack_require__(89);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__locale_en_US_index_js__ =
          __webpack_require__(22);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__subMilliseconds_index_js__ =
          __webpack_require__(29);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name formatRelative
         * @category Common Helpers
         * @summary Represent the date in words relative to the given base date.
         *
         * @description
         * Represent the date in words relative to the given base date.
         *
         * | Distance to the base date | Result                    |
         * |---------------------------|---------------------------|
         * | Previous 6 days           | last Sunday at 04:30 AM   |
         * | Last day                  | yesterday at 04:30 AM     |
         * | Same day                  | today at 04:30 AM         |
         * | Next day                  | tomorrow at 04:30 AM      |
         * | Next 6 days               | Sunday at 04:30 AM        |
         * | Other                     | 12/31/2017                |
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to format
         * @param {Date|Number} baseDate - the date to compare with
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {String} the date in words
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `date` must not be Invalid Date
         * @throws {RangeError} `baseDate` must not be Invalid Date
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.locale` must contain `localize` property
         * @throws {RangeError} `options.locale` must contain `formatLong` property
         * @throws {RangeError} `options.locale` must contain `formatRelative` property
         */
        function formatRelative(dirtyDate, dirtyBaseDate, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_6__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var baseDate = Object(
            __WEBPACK_IMPORTED_MODULE_4__toDate_index_js__["a" /* default */]
          )(dirtyBaseDate);

          var _ref = dirtyOptions || {},
            _ref$locale = _ref.locale,
            locale =
              _ref$locale === void 0
                ? __WEBPACK_IMPORTED_MODULE_2__locale_en_US_index_js__[
                    "a" /* default */
                  ]
                : _ref$locale,
            _ref$weekStartsOn = _ref.weekStartsOn,
            weekStartsOn = _ref$weekStartsOn === void 0 ? 0 : _ref$weekStartsOn;

          if (!locale.localize) {
            throw new RangeError("locale must contain localize property");
          }

          if (!locale.formatLong) {
            throw new RangeError("locale must contain formatLong property");
          }

          if (!locale.formatRelative) {
            throw new RangeError("locale must contain formatRelative property");
          }

          var diff = Object(
            __WEBPACK_IMPORTED_MODULE_0__differenceInCalendarDays_index_js__[
              "a" /* default */
            ]
          )(date, baseDate);

          if (isNaN(diff)) {
            throw new RangeError("Invalid time value");
          }

          var token;

          if (diff < -6) {
            token = "other";
          } else if (diff < -1) {
            token = "lastWeek";
          } else if (diff < 0) {
            token = "yesterday";
          } else if (diff < 1) {
            token = "today";
          } else if (diff < 2) {
            token = "tomorrow";
          } else if (diff < 7) {
            token = "nextWeek";
          } else {
            token = "other";
          }

          var utcDate = Object(
            __WEBPACK_IMPORTED_MODULE_3__subMilliseconds_index_js__[
              "a" /* default */
            ]
          )(
            date,
            Object(
              __WEBPACK_IMPORTED_MODULE_5__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(date)
          );
          var utcBaseDate = Object(
            __WEBPACK_IMPORTED_MODULE_3__subMilliseconds_index_js__[
              "a" /* default */
            ]
          )(
            baseDate,
            Object(
              __WEBPACK_IMPORTED_MODULE_5__lib_getTimezoneOffsetInMilliseconds_index_js__[
                "a" /* default */
              ]
            )(baseDate)
          );
          var formatStr = locale.formatRelative(token, utcDate, utcBaseDate, {
            locale: locale,
            weekStartsOn: weekStartsOn,
          });
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__format_index_js__["a" /* default */]
          )(date, formatStr, {
            locale: locale,
            weekStartsOn: weekStartsOn,
          });
        }

        /***/
      },
      /* 529 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name fromUnixTime
         * @category Timestamp Helpers
         * @summary Create a date from a Unix timestamp.
         *
         * @description
         * Create a date from a Unix timestamp.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Number} unixTime - the given Unix timestamp
         * @returns {Date} the date
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Create the date 29 February 2012 11:45:05:
         * var result = fromUnixTime(1330515905)
         * //=> Wed Feb 29 2012 11:45:05
         */

        function fromUnixTime(dirtyUnixTime) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var unixTime = Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyUnixTime);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(unixTime * 1000);
        }

        /***/
      },
      /* 530 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfYear_index_js__ =
          __webpack_require__(52);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__differenceInCalendarDays_index_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getDayOfYear
         * @category Day Helpers
         * @summary Get the day of the year of the given date.
         *
         * @description
         * Get the day of the year of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the day of year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which day of the year is 2 July 2014?
         * const result = getDayOfYear(new Date(2014, 6, 2))
         * //=> 183
         */

        function getDayOfYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var diff = Object(
            __WEBPACK_IMPORTED_MODULE_2__differenceInCalendarDays_index_js__[
              "a" /* default */
            ]
          )(
            date,
            Object(
              __WEBPACK_IMPORTED_MODULE_1__startOfYear_index_js__[
                "a" /* default */
              ]
            )(date)
          );
          var dayOfYear = diff + 1;
          return dayOfYear;
        }

        /***/
      },
      /* 531 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isLeapYear_index_js__ =
          __webpack_require__(102);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getDaysInYear
         * @category Year Helpers
         * @summary Get the number of days in a year of the given date.
         *
         * @description
         * Get the number of days in a year of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the number of days in a year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // How many days are in 2012?
         * const result = getDaysInYear(new Date(2012, 0, 1))
         * //=> 366
         */

        function getDaysInYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);

          if (String(new Date(date)) === "Invalid Date") {
            return NaN;
          }

          return Object(
            __WEBPACK_IMPORTED_MODULE_1__isLeapYear_index_js__[
              "a" /* default */
            ]
          )(date)
            ? 366
            : 365;
        }

        /***/
      },
      /* 532 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getDecade
         * @category Decade Helpers
         * @summary Get the decade of the given date.
         *
         * @description
         * Get the decade of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the year of decade
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which decade belongs 27 November 1942?
         * const result = getDecade(new Date(1942, 10, 27))
         * //=> 1940
         */

        function getDecade(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          var decade = Math.floor(year / 10) * 10;
          return decade;
        }

        /***/
      },
      /* 533 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getHours
         * @category Hour Helpers
         * @summary Get the hours of the given date.
         *
         * @description
         * Get the hours of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the hours
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Get the hours of 29 February 2012 11:45:00:
         * const result = getHours(new Date(2012, 1, 29, 11, 45))
         * //=> 11
         */

        function getHours(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var hours = date.getHours();
          return hours;
        }

        /***/
      },
      /* 534 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfISOWeekYear_index_js__ =
          __webpack_require__(27);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addWeeks_index_js__ =
          __webpack_require__(33);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_WEEK = 604800000;
        /**
         * @name getISOWeeksInYear
         * @category ISO Week-Numbering Year Helpers
         * @summary Get the number of weeks in an ISO week-numbering year of the given date.
         *
         * @description
         * Get the number of weeks in an ISO week-numbering year of the given date.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the number of ISO weeks in a year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // How many weeks are in ISO week-numbering year 2015?
         * const result = getISOWeeksInYear(new Date(2015, 1, 11))
         * //=> 53
         */

        function getISOWeeksInYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var thisYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          var nextYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__addWeeks_index_js__[
                "a" /* default */
              ]
            )(thisYear, 60)
          );
          var diff = nextYear.valueOf() - thisYear.valueOf(); // Round the number of weeks to the nearest integer
          // because the number of milliseconds in a week is not constant
          // (e.g. it's different in the week of the daylight saving time clock shift)

          return Math.round(diff / MILLISECONDS_IN_WEEK);
        }

        /***/
      },
      /* 535 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getMilliseconds
         * @category Millisecond Helpers
         * @summary Get the milliseconds of the given date.
         *
         * @description
         * Get the milliseconds of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the milliseconds
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Get the milliseconds of 29 February 2012 11:45:05.123:
         * const result = getMilliseconds(new Date(2012, 1, 29, 11, 45, 5, 123))
         * //=> 123
         */

        function getMilliseconds(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var milliseconds = date.getMilliseconds();
          return milliseconds;
        }

        /***/
      },
      /* 536 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getMinutes
         * @category Minute Helpers
         * @summary Get the minutes of the given date.
         *
         * @description
         * Get the minutes of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the minutes
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Get the minutes of 29 February 2012 11:45:05:
         * const result = getMinutes(new Date(2012, 1, 29, 11, 45, 5))
         * //=> 45
         */

        function getMinutes(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var minutes = date.getMinutes();
          return minutes;
        }

        /***/
      },
      /* 537 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getMonth;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getMonth
         * @category Month Helpers
         * @summary Get the month of the given date.
         *
         * @description
         * Get the month of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which month is 29 February 2012?
         * const result = getMonth(new Date(2012, 1, 29))
         * //=> 1
         */

        function getMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var month = date.getMonth();
          return month;
        }

        /***/
      },
      /* 538 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_DAY = 24 * 60 * 60 * 1000;
        /**
         * @name getOverlappingDaysInIntervals
         * @category Interval Helpers
         * @summary Get the number of days that overlap in two time intervals
         *
         * @description
         * Get the number of days that overlap in two time intervals
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `getOverlappingDaysInRanges` to `getOverlappingDaysInIntervals`.
         *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
         *
         *   ```
         *   2.1.3
         *   time interval
         *   part of the time axis limited by two instants
         *   ```
         *
         *   Also, this function now accepts an object with `start` and `end` properties
         *   instead of two arguments as an interval.
         *   This function now throws `RangeError` if the start of the interval is after its end
         *   or if any date in the interval is `Invalid Date`.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   getOverlappingDaysInRanges(
         *     new Date(2014, 0, 10), new Date(2014, 0, 20),
         *     new Date(2014, 0, 17), new Date(2014, 0, 21)
         *   )
         *
         *   // v2.0.0 onward
         *
         *   getOverlappingDaysInIntervals(
         *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *     { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
         *   )
         *   ```
         *
         * @param {Interval} intervalLeft - the first interval to compare. See [Interval]{@link docs/Interval}
         * @param {Interval} intervalRight - the second interval to compare. See [Interval]{@link docs/Interval}
         * @returns {Number} the number of days that overlap in two time intervals
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // For overlapping time intervals adds 1 for each started overlapping day:
         * getOverlappingDaysInIntervals(
         *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *   { start: new Date(2014, 0, 17), end: new Date(2014, 0, 21) }
         * )
         * //=> 3
         *
         * @example
         * // For non-overlapping time intervals returns 0:
         * getOverlappingDaysInIntervals(
         *   { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) },
         *   { start: new Date(2014, 0, 21), end: new Date(2014, 0, 22) }
         * )
         * //=> 0
         */

        function getOverlappingDaysInIntervals(
          dirtyIntervalLeft,
          dirtyIntervalRight
        ) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var intervalLeft = dirtyIntervalLeft || {};
          var intervalRight = dirtyIntervalRight || {};
          var leftStartTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalLeft.start).getTime();
          var leftEndTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalLeft.end).getTime();
          var rightStartTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalRight.start).getTime();
          var rightEndTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(intervalRight.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (
            !(leftStartTime <= leftEndTime && rightStartTime <= rightEndTime)
          ) {
            throw new RangeError("Invalid interval");
          }

          var isOverlapping =
            leftStartTime < rightEndTime && rightStartTime < leftEndTime;

          if (!isOverlapping) {
            return 0;
          }

          var overlapStartDate =
            rightStartTime < leftStartTime ? leftStartTime : rightStartTime;
          var overlapEndDate =
            rightEndTime > leftEndTime ? leftEndTime : rightEndTime;
          var differenceInMs = overlapEndDate - overlapStartDate;
          return Math.ceil(differenceInMs / MILLISECONDS_IN_DAY);
        }

        /***/
      },
      /* 539 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getSeconds
         * @category Second Helpers
         * @summary Get the seconds of the given date.
         *
         * @description
         * Get the seconds of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the seconds
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Get the seconds of 29 February 2012 11:45:05.123:
         * const result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))
         * //=> 5
         */

        function getSeconds(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var seconds = date.getSeconds();
          return seconds;
        }

        /***/
      },
      /* 540 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getTime_index_js__ =
          __webpack_require__(105);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getUnixTime
         * @category Timestamp Helpers
         * @summary Get the seconds timestamp of the given date.
         *
         * @description
         * Get the seconds timestamp of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the timestamp
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Get the timestamp of 29 February 2012 11:45:05 CET:
         * const result = getUnixTime(new Date(2012, 1, 29, 11, 45, 5))
         * //=> 1330512305
         */

        function getUnixTime(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Math.floor(
            Object(
              __WEBPACK_IMPORTED_MODULE_0__getTime_index_js__["a" /* default */]
            )(dirtyDate) / 1000
          );
        }

        /***/
      },
      /* 541 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getDate_index_js__ =
          __webpack_require__(100);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__getDay_index_js__ =
          __webpack_require__(54);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfMonth_index_js__ =
          __webpack_require__(36);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getWeekOfMonth
         * @category Week Helpers
         * @summary Get the week of the month of the given date.
         *
         * @description
         * Get the week of the month of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Number} the week of month
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // Which week of the month is 9 November 2017?
         * var result = getWeekOfMonth(new Date(2017, 10, 9))
         * //=> 2
         */

        function getWeekOfMonth(date, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          var currentDayOfMonth = Object(
            __WEBPACK_IMPORTED_MODULE_0__getDate_index_js__["a" /* default */]
          )(date);

          if (isNaN(currentDayOfMonth)) {
            return currentDayOfMonth;
          }

          var startWeekDay = Object(
            __WEBPACK_IMPORTED_MODULE_1__getDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__startOfMonth_index_js__[
                "a" /* default */
              ]
            )(date)
          );
          var lastDayOfFirstWeek = 0;

          if (startWeekDay >= weekStartsOn) {
            lastDayOfFirstWeek = weekStartsOn + 7 - startWeekDay;
          } else {
            lastDayOfFirstWeek = weekStartsOn - startWeekDay;
          }

          var weekNumber = 1;

          if (currentDayOfMonth > lastDayOfFirstWeek) {
            var remainingDaysAfterFirstWeek =
              currentDayOfMonth - lastDayOfFirstWeek;
            weekNumber =
              weekNumber + Math.ceil(remainingDaysAfterFirstWeek / 7);
          }

          return weekNumber;
        }

        /***/
      },
      /* 542 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInCalendarWeeks_index_js__ =
          __webpack_require__(79);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lastDayOfMonth_index_js__ =
          __webpack_require__(108);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__startOfMonth_index_js__ =
          __webpack_require__(36);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getWeeksInMonth
         * @category Week Helpers
         * @summary Get the number of calendar weeks a month spans.
         *
         * @description
         * Get the number of calendar weeks the month in the given date spans.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Number} the number of calendar weeks
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // How many calendar weeks does February 2015 span?
         * const result = getWeeksInMonth(new Date(2015, 1, 8))
         * //=> 4
         *
         * @example
         * // If the week starts on Monday,
         * // how many calendar weeks does July 2017 span?
         * const result = getWeeksInMonth(new Date(2017, 6, 5), { weekStartsOn: 1 })
         * //=> 6
         */
        function getWeeksInMonth(date, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__differenceInCalendarWeeks_index_js__[
                "a" /* default */
              ]
            )(
              Object(
                __WEBPACK_IMPORTED_MODULE_1__lastDayOfMonth_index_js__[
                  "a" /* default */
                ]
              )(date),
              Object(
                __WEBPACK_IMPORTED_MODULE_2__startOfMonth_index_js__[
                  "a" /* default */
                ]
              )(date),
              options
            ) + 1
          );
        }

        /***/
      },
      /* 543 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = getYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name getYear
         * @category Year Helpers
         * @summary Get the year of the given date.
         *
         * @description
         * Get the year of the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the given date
         * @returns {Number} the year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which year is 2 July 2014?
         * const result = getYear(new Date(2014, 6, 2))
         * //=> 2014
         */

        function getYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          return year;
        }

        /***/
      },
      /* 544 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__compareAsc_index_js__ =
          __webpack_require__(18);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__differenceInYears_index_js__ =
          __webpack_require__(85);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__differenceInMonths_index_js__ =
          __webpack_require__(35);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__differenceInDays_index_js__ =
          __webpack_require__(45);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__differenceInHours_index_js__ =
          __webpack_require__(81);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__differenceInMinutes_index_js__ =
          __webpack_require__(83);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__differenceInSeconds_index_js__ =
          __webpack_require__(48);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__sub_index_js__ =
          __webpack_require__(109);

        /**
         * @name intervalToDuration
         * @category Common Helpers
         * @summary Convert interval to duration
         *
         * @description
         * Convert a interval object to a duration object.
         *
         * @param {Interval} interval - the interval to convert to duration
         *
         * @returns {Duration} The duration Object
         * @throws {TypeError} Requires 2 arguments
         * @throws {RangeError} `start` must not be Invalid Date
         * @throws {RangeError} `end` must not be Invalid Date
         *
         * @example
         * // Get the duration between January 15, 1929 and April 4, 1968.
         * intervalToDuration({
         *   start: new Date(1929, 0, 15, 12, 0, 0),
         *   end: new Date(1968, 3, 4, 19, 5, 0)
         * })
         * // => { years: 39, months: 2, days: 20, hours: 7, minutes: 5, seconds: 0 }
         */

        function intervalToDuration(_ref) {
          var start = _ref.start,
            end = _ref.end;
          Object(
            __WEBPACK_IMPORTED_MODULE_8__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_9__toDate_index_js__["a" /* default */]
          )(start);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_9__toDate_index_js__["a" /* default */]
          )(end);

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_7__isValid_index_js__["a" /* default */]
            )(dateLeft)
          ) {
            throw new RangeError("Start Date is invalid");
          }

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_7__isValid_index_js__["a" /* default */]
            )(dateRight)
          ) {
            throw new RangeError("End Date is invalid");
          }

          var duration = {
            years: 0,
            months: 0,
            days: 0,
            hours: 0,
            minutes: 0,
            seconds: 0,
          };
          var sign = Object(
            __WEBPACK_IMPORTED_MODULE_0__compareAsc_index_js__[
              "a" /* default */
            ]
          )(dateLeft, dateRight);
          duration.years = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_1__differenceInYears_index_js__[
                "a" /* default */
              ]
            )(dateLeft, dateRight)
          );
          var remainingMonths = Object(
            __WEBPACK_IMPORTED_MODULE_10__sub_index_js__["a" /* default */]
          )(dateLeft, {
            years: sign * duration.years,
          });
          duration.months = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__differenceInMonths_index_js__[
                "a" /* default */
              ]
            )(remainingMonths, dateRight)
          );
          var remainingDays = Object(
            __WEBPACK_IMPORTED_MODULE_10__sub_index_js__["a" /* default */]
          )(remainingMonths, {
            months: sign * duration.months,
          });
          duration.days = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_3__differenceInDays_index_js__[
                "a" /* default */
              ]
            )(remainingDays, dateRight)
          );
          var remainingHours = Object(
            __WEBPACK_IMPORTED_MODULE_10__sub_index_js__["a" /* default */]
          )(remainingDays, {
            days: sign * duration.days,
          });
          duration.hours = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_4__differenceInHours_index_js__[
                "a" /* default */
              ]
            )(remainingHours, dateRight)
          );
          var remainingMinutes = Object(
            __WEBPACK_IMPORTED_MODULE_10__sub_index_js__["a" /* default */]
          )(remainingHours, {
            hours: sign * duration.hours,
          });
          duration.minutes = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_5__differenceInMinutes_index_js__[
                "a" /* default */
              ]
            )(remainingMinutes, dateRight)
          );
          var remainingSeconds = Object(
            __WEBPACK_IMPORTED_MODULE_10__sub_index_js__["a" /* default */]
          )(remainingMinutes, {
            minutes: sign * duration.minutes,
          });
          duration.seconds = Math.abs(
            Object(
              __WEBPACK_IMPORTED_MODULE_6__differenceInSeconds_index_js__[
                "a" /* default */
              ]
            )(remainingSeconds, dateRight)
          );
          return duration;
        }

        /***/
      },
      /* 545 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name intlFormat
         * @category Common Helpers
         * @summary  Format the date with Intl.DateTimeFormat (https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat).
         *
         * @description
         * Return the formatted date string in the given format.
         * The method uses [`Intl.DateTimeFormat`](https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat) inside.
         * formatOptions are the same as [`Intl.DateTimeFormat` options](https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat#using_options)
         *
         * > âš ï¸ Please note that before Node version 13.0.0, only the locale data for pt-BR is available by default.
         *
         * @param {Date|Number} argument - the original date.
         * @param {Object} [formatOptions] - an object with options.
         * @param {'lookup'|'best fit'} [formatOptions.localeMatcher='best fit'] - locale selection algorithm.
         * @param {'narrow'|'short'|'long'} [formatOptions.weekday] - representation the days of the week.
         * @param {'narrow'|'short'|'long'} [formatOptions.era] - representation of eras.
         * @param {'numeric'|'2-digit'} [formatOptions.year] - representation of years.
         * @param {'numeric'|'2-digit'|'narrow'|'short'|'long'} [formatOptions.month='numeric'] - representation of month.
         * @param {'numeric'|'2-digit'} [formatOptions.day='numeric'] - representation of day.
         * @param {'numeric'|'2-digit'} [formatOptions.hour='numeric'] - representation of hours.
         * @param {'numeric'|'2-digit'} [formatOptions.minute] - representation of minutes.
         * @param {'numeric'|'2-digit'} [formatOptions.second] - representation of seconds.
         * @param {'short'|'long'} [formatOptions.timeZoneName] - representation of names of time zones.
         * @param {'basic'|'best fit'} [formatOptions.formatMatcher='best fit'] - format selection algorithm.
         * @param {Boolean} [formatOptions.hour12] - determines whether to use 12-hour time format.
         * @param {String} [formatOptions.timeZone] - the time zone to use.
         * @param {Object} [localeOptions] - an object with locale.
         * @param {String|String[]} [localeOptions.locale] - the locale code
         * @returns {String} the formatted date string.
         * @throws {TypeError} 1 argument required.
         * @throws {RangeError} `date` must not be Invalid Date
         *
         * @example
         * // Represent 10 October 2019 in German.
         * // Convert the date with format's options and locale's options.
         * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {
         *      weekday: 'long',
         *      year: 'numeric',
         *      month: 'long',
         *      day: 'numeric',
         *    }, {
         *      locale: 'de-DE',
         *  })
         * //=> Freitag, 4. Oktober 2019
         *
         * @example
         * // Represent 10 October 2019.
         * // Convert the date with format's options.
         * const result = intlFormat.default(new Date(2019, 9, 4, 12, 30, 13, 456), {
         *      year: 'numeric',
         *      month: 'numeric',
         *      day: 'numeric',
         *      hour: 'numeric',
         *  })
         * //=> 10/4/2019, 12 PM
         *
         * @example
         * // Represent 10 October 2019 in Korean.
         * // Convert the date with locale's options.
         * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456), {
         *      locale: 'ko-KR',
         *  })
         * //=> 2019. 10. 4.
         *
         * @example
         * // Represent 10 October 2019 in middle-endian format:
         * const result = intlFormat(new Date(2019, 9, 4, 12, 30, 13, 456))
         * //=> 10/4/2019
         */
        function intlFormat(date, formatOrLocale, localeOptions) {
          var _localeOptions;

          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var formatOptions;

          if (isFormatOptions(formatOrLocale)) {
            formatOptions = formatOrLocale;
          } else {
            localeOptions = formatOrLocale;
          }

          return new Intl.DateTimeFormat(
            (_localeOptions = localeOptions) === null ||
            _localeOptions === void 0
              ? void 0
              : _localeOptions.locale,
            formatOptions
          ).format(date);
        }

        function isFormatOptions(opts) {
          return opts !== undefined && !("locale" in opts);
        }

        /***/
      },
      /* 546 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isAfter;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isAfter
         * @category Common Helpers
         * @summary Is the first date after the second one?
         *
         * @description
         * Is the first date after the second one?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date that should be after the other one to return true
         * @param {Date|Number} dateToCompare - the date to compare with
         * @returns {Boolean} the first date is after the second date
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Is 10 July 1989 after 11 February 1987?
         * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))
         * //=> true
         */

        function isAfter(dirtyDate, dirtyDateToCompare) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var dateToCompare = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateToCompare);
          return date.getTime() > dateToCompare.getTime();
        }

        /***/
      },
      /* 547 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isBefore;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isBefore
         * @category Common Helpers
         * @summary Is the first date before the second one?
         *
         * @description
         * Is the first date before the second one?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date that should be before the other one to return true
         * @param {Date|Number} dateToCompare - the date to compare with
         * @returns {Boolean} the first date is before the second date
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Is 10 July 1989 before 11 February 1987?
         * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))
         * //=> false
         */

        function isBefore(dirtyDate, dirtyDateToCompare) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var dateToCompare = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDateToCompare);
          return date.getTime() < dateToCompare.getTime();
        }

        /***/
      },
      /* 548 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isDate
         * @category Common Helpers
         * @summary Is the given value a date?
         *
         * @description
         * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {*} value - the value to check
         * @returns {boolean} true if the given value is a date
         * @throws {TypeError} 1 arguments required
         *
         * @example
         * // For a valid date:
         * const result = isDate(new Date())
         * //=> true
         *
         * @example
         * // For an invalid date:
         * const result = isDate(new Date(NaN))
         * //=> true
         *
         * @example
         * // For some value:
         * const result = isDate('2014-02-31')
         * //=> false
         *
         * @example
         * // For an object:
         * const result = isDate({})
         * //=> false
         */

        function isDate(value) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            value instanceof Date ||
            (typeof value === "object" &&
              Object.prototype.toString.call(value) === "[object Date]")
          );
        }

        /***/
      },
      /* 549 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isEqual;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isEqual
         * @category Common Helpers
         * @summary Are the given dates equal?
         *
         * @description
         * Are the given dates equal?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} dateLeft - the first date to compare
         * @param {Date|Number} dateRight - the second date to compare
         * @returns {Boolean} the dates are equal
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
         * var result = isEqual(
         *   new Date(2014, 6, 2, 6, 30, 45, 0),
         *   new Date(2014, 6, 2, 6, 30, 45, 500)
         * )
         * //=> false
         */

        function isEqual(dirtyLeftDate, dirtyRightDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeft = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyLeftDate);
          var dateRight = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyRightDate);
          return dateLeft.getTime() === dateRight.getTime();
        }

        /***/
      },
      /* 550 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /**
         * @name isExists
         * @category Common Helpers
         * @summary Is the given date exists?
         *
         * @description
         * Checks if the given arguments convert to an existing date.
         *
         * @param {Number} year of the date to check
         * @param {Number} month of the date to check
         * @param {Number} day of the date to check
         * @returns {Boolean} the date exists
         * @throws {TypeError} 3 arguments required
         *
         * @example
         * // For the valid date:
         * var result = isExists(2018, 0, 31)
         * //=> true
         *
         * @example
         * // For the invalid date:
         * var result = isExists(2018, 1, 31)
         * //=> false
         */
        function isExists(year, month, day) {
          if (arguments.length < 3) {
            throw new TypeError(
              "3 argument required, but only " + arguments.length + " present"
            );
          }

          var date = new Date(year, month, day);
          return (
            date.getFullYear() === year &&
            date.getMonth() === month &&
            date.getDate() === day
          );
        }

        /***/
      },
      /* 551 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isFirstDayOfMonth
         * @category Month Helpers
         * @summary Is the given date the first day of a month?
         *
         * @description
         * Is the given date the first day of a month?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is the first day of a month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 1 September 2014 the first day of a month?
         * var result = isFirstDayOfMonth(new Date(2014, 8, 1))
         * //=> true
         */

        function isFirstDayOfMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getDate() === 1
          );
        }

        /***/
      },
      /* 552 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isFriday
         * @category Weekday Helpers
         * @summary Is the given date Friday?
         *
         * @description
         * Is the given date Friday?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is Friday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 26 September 2014 Friday?
         * var result = isFriday(new Date(2014, 8, 26))
         * //=> true
         */

        function isFriday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getDay() === 5
          );
        }

        /***/
      },
      /* 553 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isFuture
         * @category Common Helpers
         * @summary Is the given date in the future?
         * @pure false
         *
         * @description
         * Is the given date in the future?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in the future
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 6 October 2014, is 31 December 2014 in the future?
         * var result = isFuture(new Date(2014, 11, 31))
         * //=> true
         */

        function isFuture(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getTime() > Date.now()
          );
        }

        /***/
      },
      /* 554 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__parse_index_js__ =
          __webpack_require__(111);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isMatch
         * @category Common Helpers
         * @summary validates the date string against given formats
         *
         * @description
         * Return the true if given date is string correct against the given format else
         * will return false.
         *
         * > âš ï¸ Please note that the `format` tokens differ from Moment.js and other libraries.
         * > See: https://git.io/fxCyr
         *
         * The characters in the format string wrapped between two single quotes characters (') are escaped.
         * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
         *
         * Format of the format string is based on Unicode Technical Standard #35:
         * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
         * with a few additions (see note 5 below the table).
         *
         * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited
         * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:
         *
         * ```javascript
         * isMatch('23 AM', 'HH a')
         * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time
         * ```
         *
         * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true
         *
         * Accepted format string patterns:
         * | Unit                            |Prior| Pattern | Result examples                   | Notes |
         * |---------------------------------|-----|---------|-----------------------------------|-------|
         * | Era                             | 140 | G..GGG  | AD, BC                            |       |
         * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |
         * |                                 |     | GGGGG   | A, B                              |       |
         * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |
         * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
         * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |
         * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |
         * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |
         * |                                 |     | yyyyy   | ...                               | 2,4   |
         * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |
         * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |
         * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |
         * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |
         * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |
         * |                                 |     | YYYYY   | ...                               | 2,4   |
         * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |
         * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |
         * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |
         * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |
         * |                                 |     | RRRRR   | ...                               | 2,4,5 |
         * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |
         * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |
         * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |
         * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |
         * |                                 |     | uuuuu   | ...                               | 2,4   |
         * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |
         * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |
         * |                                 |     | QQ      | 01, 02, 03, 04                    |       |
         * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |
         * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
         * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |
         * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |
         * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |
         * |                                 |     | qq      | 01, 02, 03, 04                    |       |
         * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |
         * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
         * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |
         * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |
         * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |
         * |                                 |     | MM      | 01, 02, ..., 12                   |       |
         * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |
         * |                                 |     | MMMM    | January, February, ..., December  | 2     |
         * |                                 |     | MMMMM   | J, F, ..., D                      |       |
         * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |
         * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |
         * |                                 |     | LL      | 01, 02, ..., 12                   |       |
         * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |
         * |                                 |     | LLLL    | January, February, ..., December  | 2     |
         * |                                 |     | LLLLL   | J, F, ..., D                      |       |
         * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |
         * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |
         * |                                 |     | ww      | 01, 02, ..., 53                   |       |
         * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |
         * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |
         * |                                 |     | II      | 01, 02, ..., 53                   | 5     |
         * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |
         * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |
         * |                                 |     | dd      | 01, 02, ..., 31                   |       |
         * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |
         * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |
         * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |
         * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |
         * |                                 |     | DDDD    | ...                               | 2     |
         * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |
         * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |
         * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |
         * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |
         * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |
         * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |
         * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |
         * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |
         * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |
         * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |
         * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |
         * |                                 |     | ee      | 02, 03, ..., 01                   |       |
         * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |
         * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |
         * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |
         * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |
         * |                                 |     | cc      | 02, 03, ..., 01                   |       |
         * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |
         * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
         * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |
         * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |
         * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |
         * |                                 |     | aaaa    | a.m., p.m.                        | 2     |
         * |                                 |     | aaaaa   | a, p                              |       |
         * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |
         * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |
         * |                                 |     | bbbbb   | a, p, n, mi                       |       |
         * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |
         * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |
         * |                                 |     | BBBBB   | at night, in the morning, ...     |       |
         * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |
         * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |
         * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |
         * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |
         * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |
         * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |
         * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |
         * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |
         * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |
         * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |
         * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |
         * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |
         * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |
         * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |
         * |                                 |     | mm      | 00, 01, ..., 59                   |       |
         * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |
         * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |
         * |                                 |     | ss      | 00, 01, ..., 59                   |       |
         * | Seconds timestamp               |  40 | t       | 512969520                         |       |
         * |                                 |     | tt      | ...                               | 2     |
         * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |
         * |                                 |     | SS      | 00, 01, ..., 99                   |       |
         * |                                 |     | SSS     | 000, 0001, ..., 999               |       |
         * |                                 |     | SSSS    | ...                               | 2     |
         * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |
         * |                                 |     | TT      | ...                               | 2     |
         * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |
         * |                                 |     | XX      | -0800, +0530, Z                   |       |
         * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |
         * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |
         * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
         * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |
         * |                                 |     | xx      | -0800, +0530, +0000               |       |
         * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |
         * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |
         * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
         * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |
         * |                                 |     | PP      | May 29, 1453                      |       |
         * |                                 |     | PPP     | May 29th, 1453                    |       |
         * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |
         * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |
         * |                                 |     | pp      | 12:00:00 AM                       |       |
         * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |
         * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |
         * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |
         * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |
         * Notes:
         * 1. "Formatting" units (e.g. formatting quarter) in the default pt-BR locale
         *    are the same as "stand-alone" units, but are different in some languages.
         *    "Formatting" units are declined according to the rules of the language
         *    in the context of a date. "Stand-alone" units are always nominative singular.
         *    In `format` function, they will produce different result:
         *
         *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
         *
         *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
         *
         *    `isMatch` will try to match both formatting and stand-alone units interchangably.
         *
         * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
         *    the single quote characters (see below).
         *    If the sequence is longer than listed in table:
         *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number
         *      as wide as the sequence
         *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.
         *      These variations are marked with "2" in the last column of the table.
         *
         * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
         *    These tokens represent the shortest form of the quarter.
         *
         * 4. The main difference between `y` and `u` patterns are B.C. years:
         *
         *    | Year | `y` | `u` |
         *    |------|-----|-----|
         *    | AC 1 |   1 |   1 |
         *    | BC 1 |   1 |   0 |
         *    | BC 2 |   2 |  -1 |
         *
         *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:
         *
         *    `isMatch('50', 'yy') //=> true`
         *
         *    `isMatch('75', 'yy') //=> true`
         *
         *    while `uu` will use the year as is:
         *
         *    `isMatch('50', 'uu') //=> true`
         *
         *    `isMatch('75', 'uu') //=> true`
         *
         *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
         *    except local week-numbering years are dependent on `options.weekStartsOn`
         *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}
         *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).
         *
         * 5. These patterns are not in the Unicode Technical Standard #35:
         *    - `i`: ISO day of week
         *    - `I`: ISO week of year
         *    - `R`: ISO week-numbering year
         *    - `o`: ordinal number modifier
         *    - `P`: long localized date
         *    - `p`: long localized time
         *
         * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
         *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
         *
         * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
         *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
         *
         * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based
         *    on the given locale.
         *
         *    using `pt-BR` locale: `P` => `d/M/yy`
         *    using `pt-BR` locale: `p` => `hh:mm a`
         *    using `pt-BR` locale: `P` => `dd/MM/yyyy`
         *    using `pt-BR` locale: `p` => `HH:mm`
         *
         * Values will be checked in the descending order of its unit's priority.
         * Units of an equal priority overwrite each other in the order of appearance.
         *
         * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),
         * the values will be taken from today's using `new Date()` date which works as a context of parsing.
         *
         * The result may vary by locale.
         *
         * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.
         *
         *
         *
         * @param {String} dateString - the date string to verify
         * @param {String} formatString - the string of tokens
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
         * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
         *   see: https://git.io/fxCyr
         * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
         *   see: https://git.io/fxCyr
         * @returns {Boolean}
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         * @throws {RangeError} `options.locale` must contain `match` property
         * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr
         * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr
         * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr
         * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr
         * @throws {RangeError} format string contains an unescaped latin alphabet character
         *
         * @example
         * // Match 11 February 2014 from middle-endian format:
         * var result = isMatch('02/11/2014', 'd/M/yy')
         * //=> true
         *
         * @example
         * // Match 28th of February in Esperanto locale in the context of 2010 year:
         * import eo from 'date-fns/locale/eo'
         * var result = isMatch('28-a de februaro', "do 'de' MMMM", {
         *   locale: eo
         * })
         * //=> true
         */

        function isMatch(dateString, formatString, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__isValid_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_0__parse_index_js__["a" /* default */]
            )(dateString, formatString, new Date(), dirtyOptions)
          );
        }

        /***/
      },
      /* 555 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_getUTCWeekYear_index_js__ =
          __webpack_require__(53);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_setUTCDay_index_js__ =
          __webpack_require__(556);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_setUTCISODay_index_js__ =
          __webpack_require__(557);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_setUTCISOWeek_index_js__ =
          __webpack_require__(558);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_setUTCWeek_index_js__ =
          __webpack_require__(559);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_startOfUTCISOWeek_index_js__ =
          __webpack_require__(37);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__lib_startOfUTCWeek_index_js__ =
          __webpack_require__(38);

        var MILLISECONDS_IN_HOUR = 3600000;
        var MILLISECONDS_IN_MINUTE = 60000;
        var MILLISECONDS_IN_SECOND = 1000;
        var numericPatterns = {
          month: /^(1[0-2]|0?\d)/,
          // 0 to 12
          date: /^(3[0-1]|[0-2]?\d)/,
          // 0 to 31
          dayOfYear: /^(36[0-6]|3[0-5]\d|[0-2]?\d?\d)/,
          // 0 to 366
          week: /^(5[0-3]|[0-4]?\d)/,
          // 0 to 53
          hour23h: /^(2[0-3]|[0-1]?\d)/,
          // 0 to 23
          hour24h: /^(2[0-4]|[0-1]?\d)/,
          // 0 to 24
          hour11h: /^(1[0-1]|0?\d)/,
          // 0 to 11
          hour12h: /^(1[0-2]|0?\d)/,
          // 0 to 12
          minute: /^[0-5]?\d/,
          // 0 to 59
          second: /^[0-5]?\d/,
          // 0 to 59
          singleDigit: /^\d/,
          // 0 to 9
          twoDigits: /^\d{1,2}/,
          // 0 to 99
          threeDigits: /^\d{1,3}/,
          // 0 to 999
          fourDigits: /^\d{1,4}/,
          // 0 to 9999
          anyDigitsSigned: /^-?\d+/,
          singleDigitSigned: /^-?\d/,
          // 0 to 9, -0 to -9
          twoDigitsSigned: /^-?\d{1,2}/,
          // 0 to 99, -0 to -99
          threeDigitsSigned: /^-?\d{1,3}/,
          // 0 to 999, -0 to -999
          fourDigitsSigned: /^-?\d{1,4}/, // 0 to 9999, -0 to -9999
        };
        var timezonePatterns = {
          basicOptionalMinutes: /^([+-])(\d{2})(\d{2})?|Z/,
          basic: /^([+-])(\d{2})(\d{2})|Z/,
          basicOptionalSeconds: /^([+-])(\d{2})(\d{2})((\d{2}))?|Z/,
          extended: /^([+-])(\d{2}):(\d{2})|Z/,
          extendedOptionalSeconds: /^([+-])(\d{2}):(\d{2})(:(\d{2}))?|Z/,
        };

        function parseNumericPattern(pattern, string, valueCallback) {
          var matchResult = string.match(pattern);

          if (!matchResult) {
            return null;
          }

          var value = parseInt(matchResult[0], 10);
          return {
            value: valueCallback ? valueCallback(value) : value,
            rest: string.slice(matchResult[0].length),
          };
        }

        function parseTimezonePattern(pattern, string) {
          var matchResult = string.match(pattern);

          if (!matchResult) {
            return null;
          } // Input is 'Z'

          if (matchResult[0] === "Z") {
            return {
              value: 0,
              rest: string.slice(1),
            };
          }

          var sign = matchResult[1] === "+" ? 1 : -1;
          var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;
          var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;
          var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;
          return {
            value:
              sign *
              (hours * MILLISECONDS_IN_HOUR +
                minutes * MILLISECONDS_IN_MINUTE +
                seconds * MILLISECONDS_IN_SECOND),
            rest: string.slice(matchResult[0].length),
          };
        }

        function parseAnyDigitsSigned(string, valueCallback) {
          return parseNumericPattern(
            numericPatterns.anyDigitsSigned,
            string,
            valueCallback
          );
        }

        function parseNDigits(n, string, valueCallback) {
          switch (n) {
            case 1:
              return parseNumericPattern(
                numericPatterns.singleDigit,
                string,
                valueCallback
              );

            case 2:
              return parseNumericPattern(
                numericPatterns.twoDigits,
                string,
                valueCallback
              );

            case 3:
              return parseNumericPattern(
                numericPatterns.threeDigits,
                string,
                valueCallback
              );

            case 4:
              return parseNumericPattern(
                numericPatterns.fourDigits,
                string,
                valueCallback
              );

            default:
              return parseNumericPattern(
                new RegExp("^\\d{1," + n + "}"),
                string,
                valueCallback
              );
          }
        }

        function parseNDigitsSigned(n, string, valueCallback) {
          switch (n) {
            case 1:
              return parseNumericPattern(
                numericPatterns.singleDigitSigned,
                string,
                valueCallback
              );

            case 2:
              return parseNumericPattern(
                numericPatterns.twoDigitsSigned,
                string,
                valueCallback
              );

            case 3:
              return parseNumericPattern(
                numericPatterns.threeDigitsSigned,
                string,
                valueCallback
              );

            case 4:
              return parseNumericPattern(
                numericPatterns.fourDigitsSigned,
                string,
                valueCallback
              );

            default:
              return parseNumericPattern(
                new RegExp("^-?\\d{1," + n + "}"),
                string,
                valueCallback
              );
          }
        }

        function dayPeriodEnumToHours(enumValue) {
          switch (enumValue) {
            case "morning":
              return 4;

            case "evening":
              return 17;

            case "pm":
            case "noon":
            case "afternoon":
              return 12;

            case "am":
            case "midnight":
            case "night":
            default:
              return 0;
          }
        }

        function normalizeTwoDigitYear(twoDigitYear, currentYear) {
          var isCommonEra = currentYear > 0; // Absolute number of the current year:
          // 1 -> 1 AC
          // 0 -> 1 BC
          // -1 -> 2 BC

          var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;
          var result;

          if (absCurrentYear <= 50) {
            result = twoDigitYear || 100;
          } else {
            var rangeEnd = absCurrentYear + 50;
            var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;
            var isPreviousCentury = twoDigitYear >= rangeEnd % 100;
            result =
              twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);
          }

          return isCommonEra ? result : 1 - result;
        }

        var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        var DAYS_IN_MONTH_LEAP_YEAR = [
          31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,
        ]; // User for validation

        function isLeapYearIndex(year) {
          return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);
        }
        /*
         * |     | Unit                           |     | Unit                           |
         * |-----|--------------------------------|-----|--------------------------------|
         * |  a  | AM, PM                         |  A* | Milliseconds in day            |
         * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
         * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
         * |  d  | Day of month                   |  D  | Day of year                    |
         * |  e  | Local day of week              |  E  | Day of week                    |
         * |  f  |                                |  F* | Day of week in month           |
         * |  g* | Modified Julian day            |  G  | Era                            |
         * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
         * |  i! | ISO day of week                |  I! | ISO week of year               |
         * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
         * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
         * |  l* | (deprecated)                   |  L  | Stand-alone month              |
         * |  m  | Minute                         |  M  | Month                          |
         * |  n  |                                |  N  |                                |
         * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |
         * |  p  |                                |  P  |                                |
         * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
         * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
         * |  s  | Second                         |  S  | Fraction of second             |
         * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
         * |  u  | Extended year                  |  U* | Cyclic year                    |
         * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
         * |  w  | Local week of year             |  W* | Week of month                  |
         * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
         * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
         * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
         *
         * Letters marked by * are not implemented but reserved by Unicode standard.
         *
         * Letters marked by ! are non-standard, but implemented by date-fns:
         * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)
         * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
         *   i.e. 7 for Sunday, 1 for Monday, etc.
         * - `I` is ISO week of year, as opposed to `w` which is local week of year.
         * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
         *   `R` is supposed to be used in conjunction with `I` and `i`
         *   for universal ISO week-numbering date, whereas
         *   `Y` is supposed to be used in conjunction with `w` and `e`
         *   for week-numbering date specific to the locale.
         */

        var parsers = {
          // Era
          G: {
            priority: 140,
            parse: function (string, token, match, _options) {
              switch (token) {
                // AD, BC
                case "G":
                case "GG":
                case "GGG":
                  return (
                    match.era(string, {
                      width: "abbreviated",
                    }) ||
                    match.era(string, {
                      width: "narrow",
                    })
                  );
                // A, B

                case "GGGGG":
                  return match.era(string, {
                    width: "narrow",
                  });
                // Anno Domini, Before Christ

                case "GGGG":
                default:
                  return (
                    match.era(string, {
                      width: "wide",
                    }) ||
                    match.era(string, {
                      width: "abbreviated",
                    }) ||
                    match.era(string, {
                      width: "narrow",
                    })
                  );
              }
            },
            set: function (date, flags, value, _options) {
              flags.era = value;
              date.setUTCFullYear(value, 0, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: ["R", "u", "t", "T"],
          },
          // Year
          y: {
            // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns
            // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
            // |----------|-------|----|-------|-------|-------|
            // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
            // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
            // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
            // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
            // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
            priority: 130,
            parse: function (string, token, match, _options) {
              var valueCallback = function (year) {
                return {
                  year: year,
                  isTwoDigitYear: token === "yy",
                };
              };

              switch (token) {
                case "y":
                  return parseNDigits(4, string, valueCallback);

                case "yo":
                  return match.ordinalNumber(string, {
                    unit: "year",
                    valueCallback: valueCallback,
                  });

                default:
                  return parseNDigits(token.length, string, valueCallback);
              }
            },
            validate: function (_date, value, _options) {
              return value.isTwoDigitYear || value.year > 0;
            },
            set: function (date, flags, value, _options) {
              var currentYear = date.getUTCFullYear();

              if (value.isTwoDigitYear) {
                var normalizedTwoDigitYear = normalizeTwoDigitYear(
                  value.year,
                  currentYear
                );
                date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);
                date.setUTCHours(0, 0, 0, 0);
                return date;
              }

              var year =
                !("era" in flags) || flags.era === 1
                  ? value.year
                  : 1 - value.year;
              date.setUTCFullYear(year, 0, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "Y",
              "R",
              "u",
              "w",
              "I",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Local week-numbering year
          Y: {
            priority: 130,
            parse: function (string, token, match, _options) {
              var valueCallback = function (year) {
                return {
                  year: year,
                  isTwoDigitYear: token === "YY",
                };
              };

              switch (token) {
                case "Y":
                  return parseNDigits(4, string, valueCallback);

                case "Yo":
                  return match.ordinalNumber(string, {
                    unit: "year",
                    valueCallback: valueCallback,
                  });

                default:
                  return parseNDigits(token.length, string, valueCallback);
              }
            },
            validate: function (_date, value, _options) {
              return value.isTwoDigitYear || value.year > 0;
            },
            set: function (date, flags, value, options) {
              var currentYear = Object(
                __WEBPACK_IMPORTED_MODULE_0__lib_getUTCWeekYear_index_js__[
                  "a" /* default */
                ]
              )(date, options);

              if (value.isTwoDigitYear) {
                var normalizedTwoDigitYear = normalizeTwoDigitYear(
                  value.year,
                  currentYear
                );
                date.setUTCFullYear(
                  normalizedTwoDigitYear,
                  0,
                  options.firstWeekContainsDate
                );
                date.setUTCHours(0, 0, 0, 0);
                return Object(
                  __WEBPACK_IMPORTED_MODULE_6__lib_startOfUTCWeek_index_js__[
                    "a" /* default */
                  ]
                )(date, options);
              }

              var year =
                !("era" in flags) || flags.era === 1
                  ? value.year
                  : 1 - value.year;
              date.setUTCFullYear(year, 0, options.firstWeekContainsDate);
              date.setUTCHours(0, 0, 0, 0);
              return Object(
                __WEBPACK_IMPORTED_MODULE_6__lib_startOfUTCWeek_index_js__[
                  "a" /* default */
                ]
              )(date, options);
            },
            incompatibleTokens: [
              "y",
              "R",
              "u",
              "Q",
              "q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "i",
              "t",
              "T",
            ],
          },
          // ISO week-numbering year
          R: {
            priority: 130,
            parse: function (string, token, _match, _options) {
              if (token === "R") {
                return parseNDigitsSigned(4, string);
              }

              return parseNDigitsSigned(token.length, string);
            },
            set: function (_date, _flags, value, _options) {
              var firstWeekOfYear = new Date(0);
              firstWeekOfYear.setUTCFullYear(value, 0, 4);
              firstWeekOfYear.setUTCHours(0, 0, 0, 0);
              return Object(
                __WEBPACK_IMPORTED_MODULE_5__lib_startOfUTCISOWeek_index_js__[
                  "a" /* default */
                ]
              )(firstWeekOfYear);
            },
            incompatibleTokens: [
              "G",
              "y",
              "Y",
              "u",
              "Q",
              "q",
              "M",
              "L",
              "w",
              "d",
              "D",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Extended year
          u: {
            priority: 130,
            parse: function (string, token, _match, _options) {
              if (token === "u") {
                return parseNDigitsSigned(4, string);
              }

              return parseNDigitsSigned(token.length, string);
            },
            set: function (date, _flags, value, _options) {
              date.setUTCFullYear(value, 0, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "G",
              "y",
              "Y",
              "R",
              "w",
              "I",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Quarter
          Q: {
            priority: 120,
            parse: function (string, token, match, _options) {
              switch (token) {
                // 1, 2, 3, 4
                case "Q":
                case "QQ":
                  // 01, 02, 03, 04
                  return parseNDigits(token.length, string);
                // 1st, 2nd, 3rd, 4th

                case "Qo":
                  return match.ordinalNumber(string, {
                    unit: "quarter",
                  });
                // Q1, Q2, Q3, Q4

                case "QQQ":
                  return (
                    match.quarter(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.quarter(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
                // 1, 2, 3, 4 (narrow quarter; could be not numerical)

                case "QQQQQ":
                  return match.quarter(string, {
                    width: "narrow",
                    context: "formatting",
                  });
                // 1st quarter, 2nd quarter, ...

                case "QQQQ":
                default:
                  return (
                    match.quarter(string, {
                      width: "wide",
                      context: "formatting",
                    }) ||
                    match.quarter(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.quarter(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 1 && value <= 4;
            },
            set: function (date, _flags, value, _options) {
              date.setUTCMonth((value - 1) * 3, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "Y",
              "R",
              "q",
              "M",
              "L",
              "w",
              "I",
              "d",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Stand-alone quarter
          q: {
            priority: 120,
            parse: function (string, token, match, _options) {
              switch (token) {
                // 1, 2, 3, 4
                case "q":
                case "qq":
                  // 01, 02, 03, 04
                  return parseNDigits(token.length, string);
                // 1st, 2nd, 3rd, 4th

                case "qo":
                  return match.ordinalNumber(string, {
                    unit: "quarter",
                  });
                // Q1, Q2, Q3, Q4

                case "qqq":
                  return (
                    match.quarter(string, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    match.quarter(string, {
                      width: "narrow",
                      context: "standalone",
                    })
                  );
                // 1, 2, 3, 4 (narrow quarter; could be not numerical)

                case "qqqqq":
                  return match.quarter(string, {
                    width: "narrow",
                    context: "standalone",
                  });
                // 1st quarter, 2nd quarter, ...

                case "qqqq":
                default:
                  return (
                    match.quarter(string, {
                      width: "wide",
                      context: "standalone",
                    }) ||
                    match.quarter(string, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    match.quarter(string, {
                      width: "narrow",
                      context: "standalone",
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 1 && value <= 4;
            },
            set: function (date, _flags, value, _options) {
              date.setUTCMonth((value - 1) * 3, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "Y",
              "R",
              "Q",
              "M",
              "L",
              "w",
              "I",
              "d",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Month
          M: {
            priority: 110,
            parse: function (string, token, match, _options) {
              var valueCallback = function (value) {
                return value - 1;
              };

              switch (token) {
                // 1, 2, ..., 12
                case "M":
                  return parseNumericPattern(
                    numericPatterns.month,
                    string,
                    valueCallback
                  );
                // 01, 02, ..., 12

                case "MM":
                  return parseNDigits(2, string, valueCallback);
                // 1st, 2nd, ..., 12th

                case "Mo":
                  return match.ordinalNumber(string, {
                    unit: "month",
                    valueCallback: valueCallback,
                  });
                // Jan, Feb, ..., Dec

                case "MMM":
                  return (
                    match.month(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.month(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
                // J, F, ..., D

                case "MMMMM":
                  return match.month(string, {
                    width: "narrow",
                    context: "formatting",
                  });
                // January, February, ..., December

                case "MMMM":
                default:
                  return (
                    match.month(string, {
                      width: "wide",
                      context: "formatting",
                    }) ||
                    match.month(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.month(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 11;
            },
            set: function (date, _flags, value, _options) {
              date.setUTCMonth(value, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "Y",
              "R",
              "q",
              "Q",
              "L",
              "w",
              "I",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Stand-alone month
          L: {
            priority: 110,
            parse: function (string, token, match, _options) {
              var valueCallback = function (value) {
                return value - 1;
              };

              switch (token) {
                // 1, 2, ..., 12
                case "L":
                  return parseNumericPattern(
                    numericPatterns.month,
                    string,
                    valueCallback
                  );
                // 01, 02, ..., 12

                case "LL":
                  return parseNDigits(2, string, valueCallback);
                // 1st, 2nd, ..., 12th

                case "Lo":
                  return match.ordinalNumber(string, {
                    unit: "month",
                    valueCallback: valueCallback,
                  });
                // Jan, Feb, ..., Dec

                case "LLL":
                  return (
                    match.month(string, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    match.month(string, {
                      width: "narrow",
                      context: "standalone",
                    })
                  );
                // J, F, ..., D

                case "LLLLL":
                  return match.month(string, {
                    width: "narrow",
                    context: "standalone",
                  });
                // January, February, ..., December

                case "LLLL":
                default:
                  return (
                    match.month(string, {
                      width: "wide",
                      context: "standalone",
                    }) ||
                    match.month(string, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    match.month(string, {
                      width: "narrow",
                      context: "standalone",
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 11;
            },
            set: function (date, _flags, value, _options) {
              date.setUTCMonth(value, 1);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "Y",
              "R",
              "q",
              "Q",
              "M",
              "w",
              "I",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Local week of year
          w: {
            priority: 100,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "w":
                  return parseNumericPattern(numericPatterns.week, string);

                case "wo":
                  return match.ordinalNumber(string, {
                    unit: "week",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 1 && value <= 53;
            },
            set: function (date, _flags, value, options) {
              return Object(
                __WEBPACK_IMPORTED_MODULE_6__lib_startOfUTCWeek_index_js__[
                  "a" /* default */
                ]
              )(
                Object(
                  __WEBPACK_IMPORTED_MODULE_4__lib_setUTCWeek_index_js__[
                    "a" /* default */
                  ]
                )(date, value, options),
                options
              );
            },
            incompatibleTokens: [
              "y",
              "R",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "i",
              "t",
              "T",
            ],
          },
          // ISO week of year
          I: {
            priority: 100,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "I":
                  return parseNumericPattern(numericPatterns.week, string);

                case "Io":
                  return match.ordinalNumber(string, {
                    unit: "week",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 1 && value <= 53;
            },
            set: function (date, _flags, value, options) {
              return Object(
                __WEBPACK_IMPORTED_MODULE_5__lib_startOfUTCISOWeek_index_js__[
                  "a" /* default */
                ]
              )(
                Object(
                  __WEBPACK_IMPORTED_MODULE_3__lib_setUTCISOWeek_index_js__[
                    "a" /* default */
                  ]
                )(date, value, options),
                options
              );
            },
            incompatibleTokens: [
              "y",
              "Y",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "w",
              "d",
              "D",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Day of the month
          d: {
            priority: 90,
            subPriority: 1,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "d":
                  return parseNumericPattern(numericPatterns.date, string);

                case "do":
                  return match.ordinalNumber(string, {
                    unit: "date",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (date, value, _options) {
              var year = date.getUTCFullYear();
              var isLeapYear = isLeapYearIndex(year);
              var month = date.getUTCMonth();

              if (isLeapYear) {
                return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];
              } else {
                return value >= 1 && value <= DAYS_IN_MONTH[month];
              }
            },
            set: function (date, _flags, value, _options) {
              date.setUTCDate(value);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "Y",
              "R",
              "q",
              "Q",
              "w",
              "I",
              "D",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Day of year
          D: {
            priority: 90,
            subPriority: 1,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "D":
                case "DD":
                  return parseNumericPattern(numericPatterns.dayOfYear, string);

                case "Do":
                  return match.ordinalNumber(string, {
                    unit: "date",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (date, value, _options) {
              var year = date.getUTCFullYear();
              var isLeapYear = isLeapYearIndex(year);

              if (isLeapYear) {
                return value >= 1 && value <= 366;
              } else {
                return value >= 1 && value <= 365;
              }
            },
            set: function (date, _flags, value, _options) {
              date.setUTCMonth(0, value);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "Y",
              "R",
              "q",
              "Q",
              "M",
              "L",
              "w",
              "I",
              "d",
              "E",
              "i",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // Day of week
          E: {
            priority: 90,
            parse: function (string, token, match, _options) {
              switch (token) {
                // Tue
                case "E":
                case "EE":
                case "EEE":
                  return (
                    match.day(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
                // T

                case "EEEEE":
                  return match.day(string, {
                    width: "narrow",
                    context: "formatting",
                  });
                // Tu

                case "EEEEEE":
                  return (
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
                // Tuesday

                case "EEEE":
                default:
                  return (
                    match.day(string, {
                      width: "wide",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 6;
            },
            set: function (date, _flags, value, options) {
              date = Object(
                __WEBPACK_IMPORTED_MODULE_1__lib_setUTCDay_index_js__[
                  "a" /* default */
                ]
              )(date, value, options);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: ["D", "i", "e", "c", "t", "T"],
          },
          // Local day of week
          e: {
            priority: 90,
            parse: function (string, token, match, options) {
              var valueCallback = function (value) {
                var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
                return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;
              };

              switch (token) {
                // 3
                case "e":
                case "ee":
                  // 03
                  return parseNDigits(token.length, string, valueCallback);
                // 3rd

                case "eo":
                  return match.ordinalNumber(string, {
                    unit: "day",
                    valueCallback: valueCallback,
                  });
                // Tue

                case "eee":
                  return (
                    match.day(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
                // T

                case "eeeee":
                  return match.day(string, {
                    width: "narrow",
                    context: "formatting",
                  });
                // Tu

                case "eeeeee":
                  return (
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
                // Tuesday

                case "eeee":
                default:
                  return (
                    match.day(string, {
                      width: "wide",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 6;
            },
            set: function (date, _flags, value, options) {
              date = Object(
                __WEBPACK_IMPORTED_MODULE_1__lib_setUTCDay_index_js__[
                  "a" /* default */
                ]
              )(date, value, options);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "y",
              "R",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "E",
              "i",
              "c",
              "t",
              "T",
            ],
          },
          // Stand-alone local day of week
          c: {
            priority: 90,
            parse: function (string, token, match, options) {
              var valueCallback = function (value) {
                var wholeWeekDays = Math.floor((value - 1) / 7) * 7;
                return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;
              };

              switch (token) {
                // 3
                case "c":
                case "cc":
                  // 03
                  return parseNDigits(token.length, string, valueCallback);
                // 3rd

                case "co":
                  return match.ordinalNumber(string, {
                    unit: "day",
                    valueCallback: valueCallback,
                  });
                // Tue

                case "ccc":
                  return (
                    match.day(string, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "standalone",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "standalone",
                    })
                  );
                // T

                case "ccccc":
                  return match.day(string, {
                    width: "narrow",
                    context: "standalone",
                  });
                // Tu

                case "cccccc":
                  return (
                    match.day(string, {
                      width: "short",
                      context: "standalone",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "standalone",
                    })
                  );
                // Tuesday

                case "cccc":
                default:
                  return (
                    match.day(string, {
                      width: "wide",
                      context: "standalone",
                    }) ||
                    match.day(string, {
                      width: "abbreviated",
                      context: "standalone",
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "standalone",
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "standalone",
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 6;
            },
            set: function (date, _flags, value, options) {
              date = Object(
                __WEBPACK_IMPORTED_MODULE_1__lib_setUTCDay_index_js__[
                  "a" /* default */
                ]
              )(date, value, options);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "y",
              "R",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "I",
              "d",
              "D",
              "E",
              "i",
              "e",
              "t",
              "T",
            ],
          },
          // ISO day of week
          i: {
            priority: 90,
            parse: function (string, token, match, _options) {
              var valueCallback = function (value) {
                if (value === 0) {
                  return 7;
                }

                return value;
              };

              switch (token) {
                // 2
                case "i":
                case "ii":
                  // 02
                  return parseNDigits(token.length, string);
                // 2nd

                case "io":
                  return match.ordinalNumber(string, {
                    unit: "day",
                  });
                // Tue

                case "iii":
                  return (
                    match.day(string, {
                      width: "abbreviated",
                      context: "formatting",
                      valueCallback: valueCallback,
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                      valueCallback: valueCallback,
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                      valueCallback: valueCallback,
                    })
                  );
                // T

                case "iiiii":
                  return match.day(string, {
                    width: "narrow",
                    context: "formatting",
                    valueCallback: valueCallback,
                  });
                // Tu

                case "iiiiii":
                  return (
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                      valueCallback: valueCallback,
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                      valueCallback: valueCallback,
                    })
                  );
                // Tuesday

                case "iiii":
                default:
                  return (
                    match.day(string, {
                      width: "wide",
                      context: "formatting",
                      valueCallback: valueCallback,
                    }) ||
                    match.day(string, {
                      width: "abbreviated",
                      context: "formatting",
                      valueCallback: valueCallback,
                    }) ||
                    match.day(string, {
                      width: "short",
                      context: "formatting",
                      valueCallback: valueCallback,
                    }) ||
                    match.day(string, {
                      width: "narrow",
                      context: "formatting",
                      valueCallback: valueCallback,
                    })
                  );
              }
            },
            validate: function (_date, value, _options) {
              return value >= 1 && value <= 7;
            },
            set: function (date, _flags, value, options) {
              date = Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_setUTCISODay_index_js__[
                  "a" /* default */
                ]
              )(date, value, options);
              date.setUTCHours(0, 0, 0, 0);
              return date;
            },
            incompatibleTokens: [
              "y",
              "Y",
              "u",
              "q",
              "Q",
              "M",
              "L",
              "w",
              "d",
              "D",
              "E",
              "e",
              "c",
              "t",
              "T",
            ],
          },
          // AM or PM
          a: {
            priority: 80,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "a":
                case "aa":
                case "aaa":
                  return (
                    match.dayPeriod(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );

                case "aaaaa":
                  return match.dayPeriod(string, {
                    width: "narrow",
                    context: "formatting",
                  });

                case "aaaa":
                default:
                  return (
                    match.dayPeriod(string, {
                      width: "wide",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
              }
            },
            set: function (date, _flags, value, _options) {
              date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
              return date;
            },
            incompatibleTokens: ["b", "B", "H", "K", "k", "t", "T"],
          },
          // AM, PM, midnight
          b: {
            priority: 80,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "b":
                case "bb":
                case "bbb":
                  return (
                    match.dayPeriod(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );

                case "bbbbb":
                  return match.dayPeriod(string, {
                    width: "narrow",
                    context: "formatting",
                  });

                case "bbbb":
                default:
                  return (
                    match.dayPeriod(string, {
                      width: "wide",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
              }
            },
            set: function (date, _flags, value, _options) {
              date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
              return date;
            },
            incompatibleTokens: ["a", "B", "H", "K", "k", "t", "T"],
          },
          // in the morning, in the afternoon, in the evening, at night
          B: {
            priority: 80,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "B":
                case "BB":
                case "BBB":
                  return (
                    match.dayPeriod(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );

                case "BBBBB":
                  return match.dayPeriod(string, {
                    width: "narrow",
                    context: "formatting",
                  });

                case "BBBB":
                default:
                  return (
                    match.dayPeriod(string, {
                      width: "wide",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "abbreviated",
                      context: "formatting",
                    }) ||
                    match.dayPeriod(string, {
                      width: "narrow",
                      context: "formatting",
                    })
                  );
              }
            },
            set: function (date, _flags, value, _options) {
              date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);
              return date;
            },
            incompatibleTokens: ["a", "b", "t", "T"],
          },
          // Hour [1-12]
          h: {
            priority: 70,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "h":
                  return parseNumericPattern(numericPatterns.hour12h, string);

                case "ho":
                  return match.ordinalNumber(string, {
                    unit: "hour",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 1 && value <= 12;
            },
            set: function (date, _flags, value, _options) {
              var isPM = date.getUTCHours() >= 12;

              if (isPM && value < 12) {
                date.setUTCHours(value + 12, 0, 0, 0);
              } else if (!isPM && value === 12) {
                date.setUTCHours(0, 0, 0, 0);
              } else {
                date.setUTCHours(value, 0, 0, 0);
              }

              return date;
            },
            incompatibleTokens: ["H", "K", "k", "t", "T"],
          },
          // Hour [0-23]
          H: {
            priority: 70,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "H":
                  return parseNumericPattern(numericPatterns.hour23h, string);

                case "Ho":
                  return match.ordinalNumber(string, {
                    unit: "hour",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 23;
            },
            set: function (date, _flags, value, _options) {
              date.setUTCHours(value, 0, 0, 0);
              return date;
            },
            incompatibleTokens: ["a", "b", "h", "K", "k", "t", "T"],
          },
          // Hour [0-11]
          K: {
            priority: 70,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "K":
                  return parseNumericPattern(numericPatterns.hour11h, string);

                case "Ko":
                  return match.ordinalNumber(string, {
                    unit: "hour",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 11;
            },
            set: function (date, _flags, value, _options) {
              var isPM = date.getUTCHours() >= 12;

              if (isPM && value < 12) {
                date.setUTCHours(value + 12, 0, 0, 0);
              } else {
                date.setUTCHours(value, 0, 0, 0);
              }

              return date;
            },
            incompatibleTokens: ["a", "b", "h", "H", "k", "t", "T"],
          },
          // Hour [1-24]
          k: {
            priority: 70,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "k":
                  return parseNumericPattern(numericPatterns.hour24h, string);

                case "ko":
                  return match.ordinalNumber(string, {
                    unit: "hour",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 1 && value <= 24;
            },
            set: function (date, _flags, value, _options) {
              var hours = value <= 24 ? value % 24 : value;
              date.setUTCHours(hours, 0, 0, 0);
              return date;
            },
            incompatibleTokens: ["a", "b", "h", "H", "K", "t", "T"],
          },
          // Minute
          m: {
            priority: 60,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "m":
                  return parseNumericPattern(numericPatterns.minute, string);

                case "mo":
                  return match.ordinalNumber(string, {
                    unit: "minute",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 59;
            },
            set: function (date, _flags, value, _options) {
              date.setUTCMinutes(value, 0, 0);
              return date;
            },
            incompatibleTokens: ["t", "T"],
          },
          // Second
          s: {
            priority: 50,
            parse: function (string, token, match, _options) {
              switch (token) {
                case "s":
                  return parseNumericPattern(numericPatterns.second, string);

                case "so":
                  return match.ordinalNumber(string, {
                    unit: "second",
                  });

                default:
                  return parseNDigits(token.length, string);
              }
            },
            validate: function (_date, value, _options) {
              return value >= 0 && value <= 59;
            },
            set: function (date, _flags, value, _options) {
              date.setUTCSeconds(value, 0);
              return date;
            },
            incompatibleTokens: ["t", "T"],
          },
          // Fraction of second
          S: {
            priority: 30,
            parse: function (string, token, _match, _options) {
              var valueCallback = function (value) {
                return Math.floor(value * Math.pow(10, -token.length + 3));
              };

              return parseNDigits(token.length, string, valueCallback);
            },
            set: function (date, _flags, value, _options) {
              date.setUTCMilliseconds(value);
              return date;
            },
            incompatibleTokens: ["t", "T"],
          },
          // Timezone (ISO-8601. +00:00 is `'Z'`)
          X: {
            priority: 10,
            parse: function (string, token, _match, _options) {
              switch (token) {
                case "X":
                  return parseTimezonePattern(
                    timezonePatterns.basicOptionalMinutes,
                    string
                  );

                case "XX":
                  return parseTimezonePattern(timezonePatterns.basic, string);

                case "XXXX":
                  return parseTimezonePattern(
                    timezonePatterns.basicOptionalSeconds,
                    string
                  );

                case "XXXXX":
                  return parseTimezonePattern(
                    timezonePatterns.extendedOptionalSeconds,
                    string
                  );

                case "XXX":
                default:
                  return parseTimezonePattern(
                    timezonePatterns.extended,
                    string
                  );
              }
            },
            set: function (date, flags, value, _options) {
              if (flags.timestampIsSet) {
                return date;
              }

              return new Date(date.getTime() - value);
            },
            incompatibleTokens: ["t", "T", "x"],
          },
          // Timezone (ISO-8601)
          x: {
            priority: 10,
            parse: function (string, token, _match, _options) {
              switch (token) {
                case "x":
                  return parseTimezonePattern(
                    timezonePatterns.basicOptionalMinutes,
                    string
                  );

                case "xx":
                  return parseTimezonePattern(timezonePatterns.basic, string);

                case "xxxx":
                  return parseTimezonePattern(
                    timezonePatterns.basicOptionalSeconds,
                    string
                  );

                case "xxxxx":
                  return parseTimezonePattern(
                    timezonePatterns.extendedOptionalSeconds,
                    string
                  );

                case "xxx":
                default:
                  return parseTimezonePattern(
                    timezonePatterns.extended,
                    string
                  );
              }
            },
            set: function (date, flags, value, _options) {
              if (flags.timestampIsSet) {
                return date;
              }

              return new Date(date.getTime() - value);
            },
            incompatibleTokens: ["t", "T", "X"],
          },
          // Seconds timestamp
          t: {
            priority: 40,
            parse: function (string, _token, _match, _options) {
              return parseAnyDigitsSigned(string);
            },
            set: function (_date, _flags, value, _options) {
              return [
                new Date(value * 1000),
                {
                  timestampIsSet: true,
                },
              ];
            },
            incompatibleTokens: "*",
          },
          // Milliseconds timestamp
          T: {
            priority: 20,
            parse: function (string, _token, _match, _options) {
              return parseAnyDigitsSigned(string);
            },
            set: function (_date, _flags, value, _options) {
              return [
                new Date(value),
                {
                  timestampIsSet: true,
                },
              ];
            },
            incompatibleTokens: "*",
          },
        };
        /* harmony default export */ __webpack_exports__["a"] = parsers;

        /***/
      },
      /* 556 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = setUTCDay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = Object(
            __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */]
          )(dirtyDay);
          var currentDay = date.getUTCDay();
          var remainder = day % 7;
          var dayIndex = (remainder + 7) % 7;
          var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
          date.setUTCDate(date.getUTCDate() + diff);
          return date;
        }

        /***/
      },
      /* 557 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          setUTCISODay;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function setUTCISODay(dirtyDate, dirtyDay) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var day = Object(
            __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */]
          )(dirtyDay);

          if (day % 7 === 0) {
            day = day - 7;
          }

          var weekStartsOn = 1;
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var currentDay = date.getUTCDay();
          var remainder = day % 7;
          var dayIndex = (remainder + 7) % 7;
          var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;
          date.setUTCDate(date.getUTCDate() + diff);
          return date;
        }

        /***/
      },
      /* 558 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          setUTCISOWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getUTCISOWeek_index_js__ =
          __webpack_require__(91);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function setUTCISOWeek(dirtyDate, dirtyISOWeek) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var isoWeek = Object(
            __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */]
          )(dirtyISOWeek);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_2__getUTCISOWeek_index_js__[
                "a" /* default */
              ]
            )(date) - isoWeek;
          date.setUTCDate(date.getUTCDate() - diff * 7);
          return date;
        }

        /***/
      },
      /* 559 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = setUTCWeek;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getUTCWeek_index_js__ =
          __webpack_require__(93);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__ =
          __webpack_require__(0);

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376

        function setUTCWeek(dirtyDate, dirtyWeek, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var week = Object(
            __WEBPACK_IMPORTED_MODULE_0__toInteger_index_js__["a" /* default */]
          )(dirtyWeek);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_2__getUTCWeek_index_js__[
                "a" /* default */
              ]
            )(date, options) - week;
          date.setUTCDate(date.getUTCDate() - diff * 7);
          return date;
        }

        /***/
      },
      /* 560 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isMonday
         * @category Weekday Helpers
         * @summary Is the given date Monday?
         *
         * @description
         * Is the given date Monday?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is Monday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 22 September 2014 Monday?
         * var result = isMonday(new Date(2014, 8, 22))
         * //=> true
         */

        function isMonday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(date).getDay() === 1
          );
        }

        /***/
      },
      /* 561 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isPast
         * @category Common Helpers
         * @summary Is the given date in the past?
         * @pure false
         *
         * @description
         * Is the given date in the past?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in the past
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 6 October 2014, is 2 July 2014 in the past?
         * var result = isPast(new Date(2014, 6, 2))
         * //=> true
         */

        function isPast(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getTime() < Date.now()
          );
        }

        /***/
      },
      /* 562 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfISOWeekYear_index_js__ =
          __webpack_require__(27);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isSameISOWeekYear
         * @category ISO Week-Numbering Year Helpers
         * @summary Are the given dates in the same ISO week-numbering year?
         *
         * @description
         * Are the given dates in the same ISO week-numbering year?
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `isSameISOYear` to `isSameISOWeekYear`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
         *
         * @param {Date|Number} dateLeft - the first date to check
         * @param {Date|Number} dateRight - the second date to check
         * @returns {Boolean} the dates are in the same ISO week-numbering year
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Are 29 December 2003 and 2 January 2005 in the same ISO week-numbering year?
         * var result = isSameISOWeekYear(new Date(2003, 11, 29), new Date(2005, 0, 2))
         * //=> true
         */

        function isSameISOWeekYear(dirtyDateLeft, dirtyDateRight) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var dateLeftStartOfYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDateLeft);
          var dateRightStartOfYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDateRight);
          return (
            dateLeftStartOfYear.getTime() === dateRightStartOfYear.getTime()
          );
        }

        /***/
      },
      /* 563 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameHour_index_js__ =
          __webpack_require__(112);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisHour
         * @category Hour Helpers
         * @summary Is the given date in the same hour as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same hour as the current date?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in this hour
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If now is 25 September 2014 18:30:15.500,
         * // is 25 September 2014 18:00:00 in this hour?
         * var result = isThisHour(new Date(2014, 8, 25, 18))
         * //=> true
         */

        function isThisHour(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameHour_index_js__[
              "a" /* default */
            ]
          )(Date.now(), dirtyDate);
        }

        /***/
      },
      /* 564 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameISOWeek_index_js__ =
          __webpack_require__(114);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisISOWeek
         * @category ISO Week Helpers
         * @summary Is the given date in the same ISO week as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same ISO week as the current date?
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in this ISO week
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 25 September 2014, is 22 September 2014 in this ISO week?
         * var result = isThisISOWeek(new Date(2014, 8, 22))
         * //=> true
         */

        function isThisISOWeek(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameISOWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, Date.now());
        }

        /***/
      },
      /* 565 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameMinute_index_js__ =
          __webpack_require__(115);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisMinute
         * @category Minute Helpers
         * @summary Is the given date in the same minute as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same minute as the current date?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in this minute
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If now is 25 September 2014 18:30:15.500,
         * // is 25 September 2014 18:30:00 in this minute?
         * var result = isThisMinute(new Date(2014, 8, 25, 18, 30))
         * //=> true
         */

        function isThisMinute(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameMinute_index_js__[
              "a" /* default */
            ]
          )(Date.now(), dirtyDate);
        }

        /***/
      },
      /* 566 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameMonth_index_js__ =
          __webpack_require__(116);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisMonth
         * @category Month Helpers
         * @summary Is the given date in the same month as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same month as the current date?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in this month
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 25 September 2014, is 15 September 2014 in this month?
         * var result = isThisMonth(new Date(2014, 8, 15))
         * //=> true
         */

        function isThisMonth(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameMonth_index_js__[
              "a" /* default */
            ]
          )(Date.now(), dirtyDate);
        }

        /***/
      },
      /* 567 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameQuarter_index_js__ =
          __webpack_require__(117);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisQuarter
         * @category Quarter Helpers
         * @summary Is the given date in the same quarter as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same quarter as the current date?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in this quarter
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 25 September 2014, is 2 July 2014 in this quarter?
         * var result = isThisQuarter(new Date(2014, 6, 2))
         * //=> true
         */

        function isThisQuarter(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameQuarter_index_js__[
              "a" /* default */
            ]
          )(Date.now(), dirtyDate);
        }

        /***/
      },
      /* 568 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameSecond_index_js__ =
          __webpack_require__(118);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisSecond
         * @category Second Helpers
         * @summary Is the given date in the same second as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same second as the current date?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in this second
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If now is 25 September 2014 18:30:15.500,
         * // is 25 September 2014 18:30:15.000 in this second?
         * var result = isThisSecond(new Date(2014, 8, 25, 18, 30, 15))
         * //=> true
         */

        function isThisSecond(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameSecond_index_js__[
              "a" /* default */
            ]
          )(Date.now(), dirtyDate);
        }

        /***/
      },
      /* 569 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameWeek_index_js__ =
          __webpack_require__(57);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisWeek
         * @category Week Helpers
         * @summary Is the given date in the same week as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same week as the current date?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @param {Object} [options] - the object with options
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Boolean} the date is in this week
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // If today is 25 September 2014, is 21 September 2014 in this week?
         * var result = isThisWeek(new Date(2014, 8, 21))
         * //=> true
         *
         * @example
         * // If today is 25 September 2014 and week starts with Monday
         * // is 21 September 2014 in this week?
         * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })
         * //=> false
         */
        function isThisWeek(dirtyDate, options) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, Date.now(), options);
        }

        /***/
      },
      /* 570 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameYear_index_js__ =
          __webpack_require__(120);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThisYear
         * @category Year Helpers
         * @summary Is the given date in the same year as the current date?
         * @pure false
         *
         * @description
         * Is the given date in the same year as the current date?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is in this year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 25 September 2014, is 2 July 2014 in this year?
         * var result = isThisYear(new Date(2014, 6, 2))
         * //=> true
         */

        function isThisYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, Date.now());
        }

        /***/
      },
      /* 571 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isThursday
         * @category Weekday Helpers
         * @summary Is the given date Thursday?
         *
         * @description
         * Is the given date Thursday?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is Thursday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 25 September 2014 Thursday?
         * var result = isThursday(new Date(2014, 8, 25))
         * //=> true
         */

        function isThursday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getDay() === 4
          );
        }

        /***/
      },
      /* 572 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = isToday;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameDay_index_js__ =
          __webpack_require__(28);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isToday
         * @category Day Helpers
         * @summary Is the given date today?
         * @pure false
         *
         * @description
         * Is the given date today?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is today
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 6 October 2014, is 6 October 14:00:00 today?
         * var result = isToday(new Date(2014, 9, 6, 14, 0))
         * //=> true
         */

        function isToday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameDay_index_js__["a" /* default */]
          )(dirtyDate, Date.now());
        }

        /***/
      },
      /* 573 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__isSameDay_index_js__ =
          __webpack_require__(28);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isTomorrow
         * @category Day Helpers
         * @summary Is the given date tomorrow?
         * @pure false
         *
         * @description
         * Is the given date tomorrow?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is tomorrow
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 6 October 2014, is 7 October 14:00:00 tomorrow?
         * var result = isTomorrow(new Date(2014, 9, 7, 14, 0))
         * //=> true
         */

        function isTomorrow(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__isSameDay_index_js__["a" /* default */]
          )(
            dirtyDate,
            Object(
              __WEBPACK_IMPORTED_MODULE_0__addDays_index_js__["a" /* default */]
            )(Date.now(), 1)
          );
        }

        /***/
      },
      /* 574 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isTuesday
         * @category Weekday Helpers
         * @summary Is the given date Tuesday?
         *
         * @description
         * Is the given date Tuesday?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is Tuesday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 23 September 2014 Tuesday?
         * var result = isTuesday(new Date(2014, 8, 23))
         * //=> true
         */

        function isTuesday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getDay() === 2
          );
        }

        /***/
      },
      /* 575 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isWednesday
         * @category Weekday Helpers
         * @summary Is the given date Wednesday?
         *
         * @description
         * Is the given date Wednesday?
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is Wednesday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Is 24 September 2014 Wednesday?
         * const result = isWednesday(new Date(2014, 8, 24))
         * //=> true
         */

        function isWednesday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return (
            Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate).getDay() === 3
          );
        }

        /***/
      },
      /* 576 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          isWithinInterval;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isWithinInterval
         * @category Interval Helpers
         * @summary Is the given date within the interval?
         *
         * @description
         * Is the given date within the interval? (Including start and end.)
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `isWithinRange` to `isWithinInterval`.
         *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
         *
         *   ```
         *   2.1.3
         *   time interval
         *   part of the time axis limited by two instants
         *   ```
         *
         *   Also, this function now accepts an object with `start` and `end` properties
         *   instead of two arguments as an interval.
         *   This function now throws `RangeError` if the start of the interval is after its end
         *   or if any date in the interval is `Invalid Date`.
         *
         *   ```javascript
         *   // Before v2.0.0
         *
         *   isWithinRange(
         *     new Date(2014, 0, 3),
         *     new Date(2014, 0, 1), new Date(2014, 0, 7)
         *   )
         *
         *   // v2.0.0 onward
         *
         *   isWithinInterval(
         *     new Date(2014, 0, 3),
         *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }
         *   )
         *   ```
         *
         * @param {Date|Number} date - the date to check
         * @param {Interval} interval - the interval to check
         * @returns {Boolean} the date is within the interval
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} The start of an interval cannot be after its end
         * @throws {RangeError} Date in interval cannot be `Invalid Date`
         *
         * @example
         * // For the date within the interval:
         * isWithinInterval(new Date(2014, 0, 3), {
         *   start: new Date(2014, 0, 1),
         *   end: new Date(2014, 0, 7)
         * })
         * //=> true
         *
         * @example
         * // For the date outside of the interval:
         * isWithinInterval(new Date(2014, 0, 10), {
         *   start: new Date(2014, 0, 1),
         *   end: new Date(2014, 0, 7)
         * })
         * //=> false
         *
         * @example
         * // For date equal to interval start:
         * isWithinInterval(date, { start, end: date }) // => true
         *
         * @example
         * // For date equal to interval end:
         * isWithinInterval(date, { start: date, end }) // => true
         */
        function isWithinInterval(dirtyDate, interval) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var time = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate).getTime();
          var startTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.start).getTime();
          var endTime = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

          if (!(startTime <= endTime)) {
            throw new RangeError("Invalid interval");
          }

          return time >= startTime && time <= endTime;
        }

        /***/
      },
      /* 577 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__isSameDay_index_js__ =
          __webpack_require__(28);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__subDays_index_js__ =
          __webpack_require__(56);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name isYesterday
         * @category Day Helpers
         * @summary Is the given date yesterday?
         * @pure false
         *
         * @description
         * Is the given date yesterday?
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to check
         * @returns {Boolean} the date is yesterday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // If today is 6 October 2014, is 5 October 14:00:00 yesterday?
         * var result = isYesterday(new Date(2014, 9, 5, 14, 0))
         * //=> true
         */

        function isYesterday(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__isSameDay_index_js__["a" /* default */]
          )(
            dirtyDate,
            Object(
              __WEBPACK_IMPORTED_MODULE_1__subDays_index_js__["a" /* default */]
            )(Date.now(), 1)
          );
        }

        /***/
      },
      /* 578 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name lastDayOfDecade
         * @category Decade Helpers
         * @summary Return the last day of a decade for the given date.
         *
         * @description
         * Return the last day of a decade for the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the last day of a decade
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The last day of a decade for 21 December 2012 21:12:00:
         * var result = lastDayOfDecade(new Date(2012, 11, 21, 21, 12, 00))
         * //=> Wed Dec 31 2019 00:00:00
         */

        function lastDayOfDecade(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          var decade = 9 + Math.floor(year / 10) * 10;
          date.setFullYear(decade + 1, 0, 0);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 579 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lastDayOfWeek_index_js__ =
          __webpack_require__(121);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name lastDayOfISOWeek
         * @category ISO Week Helpers
         * @summary Return the last day of an ISO week for the given date.
         *
         * @description
         * Return the last day of an ISO week for the given date.
         * The result will be in the local timezone.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the last day of an ISO week
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The last day of an ISO week for 2 September 2014 11:55:00:
         * var result = lastDayOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Sun Sep 07 2014 00:00:00
         */

        function lastDayOfISOWeek(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__lastDayOfWeek_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, {
            weekStartsOn: 1,
          });
        }

        /***/
      },
      /* 580 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__ =
          __webpack_require__(21);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__ =
          __webpack_require__(16);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name lastDayOfISOWeekYear
         * @category ISO Week-Numbering Year Helpers
         * @summary Return the last day of an ISO week-numbering year for the given date.
         *
         * @description
         * Return the last day of an ISO week-numbering year,
         * which always starts 3 days before the year's first Thursday.
         * The result will be in the local timezone.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The function was renamed from `lastDayOfISOYear` to `lastDayOfISOWeekYear`.
         *   "ISO week year" is short for [ISO week-numbering year](https://en.wikipedia.org/wiki/ISO_week_date).
         *   This change makes the name consistent with
         *   locale-dependent week-numbering year helpers, e.g., `getWeekYear`.
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the end of an ISO week-numbering year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The last day of an ISO week-numbering year for 2 July 2005:
         * var result = lastDayOfISOWeekYear(new Date(2005, 6, 2))
         * //=> Sun Jan 01 2006 00:00:00
         */

        function lastDayOfISOWeekYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var year = Object(
            __WEBPACK_IMPORTED_MODULE_0__getISOWeekYear_index_js__[
              "a" /* default */
            ]
          )(dirtyDate);
          var fourthOfJanuary = new Date(0);
          fourthOfJanuary.setFullYear(year + 1, 0, 4);
          fourthOfJanuary.setHours(0, 0, 0, 0);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfISOWeek_index_js__[
              "a" /* default */
            ]
          )(fourthOfJanuary);
          date.setDate(date.getDate() - 1);
          return date;
        }

        /***/
      },
      /* 581 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name lastDayOfQuarter
         * @category Quarter Helpers
         * @summary Return the last day of a year quarter for the given date.
         *
         * @description
         * Return the last day of a year quarter for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @param {Object} [options] - an object with options.
         * @param {0|1|2} [options.additionalDigits=2] - passed to `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
         * @returns {Date} the last day of a quarter
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
         *
         * @example
         * // The last day of a quarter for 2 September 2014 11:55:00:
         * var result = lastDayOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
         * //=> Tue Sep 30 2014 00:00:00
         */

        function lastDayOfQuarter(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var currentMonth = date.getMonth();
          var month = currentMonth - (currentMonth % 3) + 3;
          date.setMonth(month, 0);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 582 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name lastDayOfYear
         * @category Year Helpers
         * @summary Return the last day of a year for the given date.
         *
         * @description
         * Return the last day of a year for the given date.
         * The result will be in the local timezone.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the last day of a year
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The last day of a year for 2 September 2014 11:55:00:
         * var result = lastDayOfYear(new Date(2014, 8, 2, 11, 55, 00))
         * //=> Wed Dec 31 2014 00:00:00
         */

        function lastDayOfYear(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          date.setFullYear(year + 1, 0, 0);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 583 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_format_lightFormatters_index_js__ =
          __webpack_require__(90);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_getTimezoneOffsetInMilliseconds_index_js__ =
          __webpack_require__(10);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__isValid_index_js__ =
          __webpack_require__(8);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__subMilliseconds_index_js__ =
          __webpack_require__(29);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        // This RegExp consists of three parts separated by `|`:
        // - (\w)\1* matches any sequences of the same letter
        // - '' matches two quote characters in a row
        // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
        //   except a single quote symbol, which ends the sequence.
        //   Two quote characters do not end the sequence.
        //   If there is no matching single quote
        //   then the sequence will continue until the end of the string.
        // - . matches any single character unmatched by previous parts of the RegExps

        var formattingTokensRegExp = /(\w)\1*|''|'(''|[^'])+('|$)|./g;
        var escapedStringRegExp = /^'([^]*?)'?$/;
        var doubleQuoteRegExp = /''/g;
        var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
        /**
         * @name lightFormat
         * @category Common Helpers
         * @summary Format the date.
         *
         * @description
         * Return the formatted date string in the given format. Unlike `format`,
         * `lightFormat` doesn't use locales and outputs date using the most popular tokens.
         *
         * > âš ï¸ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.
         * > See: https://git.io/fxCyr
         *
         * The characters wrapped between two single quotes characters (') are escaped.
         * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
         *
         * Format of the string is based on Unicode Technical Standard #35:
         * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
         *
         * Accepted patterns:
         * | Unit                            | Pattern | Result examples                   |
         * |---------------------------------|---------|-----------------------------------|
         * | AM, PM                          | a..aaa  | AM, PM                            |
         * |                                 | aaaa    | a.m., p.m.                        |
         * |                                 | aaaaa   | a, p                              |
         * | Calendar year                   | y       | 44, 1, 1900, 2017                 |
         * |                                 | yy      | 44, 01, 00, 17                    |
         * |                                 | yyy     | 044, 001, 000, 017                |
         * |                                 | yyyy    | 0044, 0001, 1900, 2017            |
         * | Month (formatting)              | M       | 1, 2, ..., 12                     |
         * |                                 | MM      | 01, 02, ..., 12                   |
         * | Day of month                    | d       | 1, 2, ..., 31                     |
         * |                                 | dd      | 01, 02, ..., 31                   |
         * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |
         * |                                 | hh      | 01, 02, ..., 11, 12               |
         * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |
         * |                                 | HH      | 00, 01, 02, ..., 23               |
         * | Minute                          | m       | 0, 1, ..., 59                     |
         * |                                 | mm      | 00, 01, ..., 59                   |
         * | Second                          | s       | 0, 1, ..., 59                     |
         * |                                 | ss      | 00, 01, ..., 59                   |
         * | Fraction of second              | S       | 0, 1, ..., 9                      |
         * |                                 | SS      | 00, 01, ..., 99                   |
         * |                                 | SSS     | 000, 0001, ..., 999               |
         * |                                 | SSSS    | ...                               |
         *
         * @param {Date|Number} date - the original date
         * @param {String} format - the string of tokens
         * @returns {String} the formatted date string
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} format string contains an unescaped latin alphabet character
         *
         * @example
         * const result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')
         * //=> '2014-02-11'
         */

        function lightFormat(dirtyDate, formatStr) {
          Object(
            __WEBPACK_IMPORTED_MODULE_5__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var originalDate = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);

          if (
            !Object(
              __WEBPACK_IMPORTED_MODULE_3__isValid_index_js__["a" /* default */]
            )(originalDate)
          ) {
            throw new RangeError("Invalid time value");
          } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
          // This ensures that when UTC functions will be implemented, locales will be compatible with them.
          // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376

          var timezoneOffset = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_getTimezoneOffsetInMilliseconds_index_js__[
              "a" /* default */
            ]
          )(originalDate);
          var utcDate = Object(
            __WEBPACK_IMPORTED_MODULE_4__subMilliseconds_index_js__[
              "a" /* default */
            ]
          )(originalDate, timezoneOffset);
          var tokens = formatStr.match(formattingTokensRegExp); // The only case when formattingTokensRegExp doesn't match the string is when it's empty

          if (!tokens) return "";
          var result = tokens
            .map(function (substring) {
              // Replace two single quote characters with one single quote character
              if (substring === "''") {
                return "'";
              }

              var firstCharacter = substring[0];

              if (firstCharacter === "'") {
                return cleanEscapedString(substring);
              }

              var formatter =
                __WEBPACK_IMPORTED_MODULE_1__lib_format_lightFormatters_index_js__[
                  "a" /* default */
                ][firstCharacter];

              if (formatter) {
                return formatter(utcDate, substring);
              }

              if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
                throw new RangeError(
                  "Format string contains an unescaped latin alphabet character `" +
                    firstCharacter +
                    "`"
                );
              }

              return substring;
            })
            .join("");
          return result;
        }

        function cleanEscapedString(input) {
          var matches = input.match(escapedStringRegExp);

          if (!matches) {
            return input;
          }

          return matches[1].replace(doubleQuoteRegExp, "'");
        }

        /***/
      },
      /* 584 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = max;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name max
         * @category Common Helpers
         * @summary Return the latest of the given dates.
         *
         * @description
         * Return the latest of the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - `max` function now accepts an array of dates rather than spread arguments.
         *
         *   ```javascript
         *   // Before v2.0.0
         *   var date1 = new Date(1989, 6, 10)
         *   var date2 = new Date(1987, 1, 11)
         *   var maxDate = max(date1, date2)
         *
         *   // v2.0.0 onward:
         *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
         *   var maxDate = max(dates)
         *   ```
         *
         * @param {Date[]|Number[]} datesArray - the dates to compare
         * @returns {Date} the latest of the dates
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which of these dates is the latest?
         * var result = max([
         *   new Date(1989, 6, 10),
         *   new Date(1987, 1, 11),
         *   new Date(1995, 6, 2),
         *   new Date(1990, 0, 1)
         * ])
         * //=> Sun Jul 02 1995 00:00:00
         */

        function max(dirtyDatesArray) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

          if (
            dirtyDatesArray &&
            typeof dirtyDatesArray.forEach === "function"
          ) {
            datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
          } else if (
            typeof dirtyDatesArray === "object" &&
            dirtyDatesArray !== null
          ) {
            datesArray = Array.prototype.slice.call(dirtyDatesArray);
          } else {
            // `dirtyDatesArray` is non-iterable, return Invalid Date
            return new Date(NaN);
          }

          var result;
          datesArray.forEach(function (dirtyDate) {
            var currentDate = Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate);

            if (
              result === undefined ||
              result < currentDate ||
              isNaN(Number(currentDate))
            ) {
              result = currentDate;
            }
          });
          return result || new Date(NaN);
        }

        /***/
      },
      /* 585 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        // Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
        // 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
        var yearInDays = 365.2425;
        /**
         * @name milliseconds
         * @category Millisecond Helpers
         * @summary
         * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.
         *
         * @description
         * Returns the number of milliseconds in the specified, years, months, weeks, days, hours, minutes and seconds.
         *
         * One years equals 365.2425 days according to the formula:
         *
         * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.
         * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days
         *
         * One month is a year divided by 12.
         *
         * @param {Duration} duration - the object with years, months, weeks, days, hours, minutes and seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {number} the milliseconds
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // 1 year in milliseconds
         * milliseconds({ years: 1 })
         * //=> 31556952000
         *
         * // 3 months in milliseconds
         * milliseconds({ months: 3 })
         * //=> 7889238000
         */

        function milliseconds(_ref) {
          var years = _ref.years,
            months = _ref.months,
            weeks = _ref.weeks,
            days = _ref.days,
            hours = _ref.hours,
            minutes = _ref.minutes,
            seconds = _ref.seconds;
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var totalDays = 0;
          if (years) totalDays += years * yearInDays;
          if (months) totalDays += months * (yearInDays / 12);
          if (weeks) totalDays += weeks * 7;
          if (days) totalDays += days;
          var totalSeconds = totalDays * 24 * 60 * 60;
          if (hours) totalSeconds += hours * 60 * 60;
          if (minutes) totalSeconds += minutes * 60;
          if (seconds) totalSeconds += seconds;
          return Math.round(totalSeconds * 1000);
        }

        /***/
      },
      /* 586 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = min;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name min
         * @category Common Helpers
         * @summary Returns the earliest of the given dates.
         *
         * @description
         * Returns the earliest of the given dates.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - `min` function now accepts an array of dates rather than spread arguments.
         *
         *   ```javascript
         *   // Before v2.0.0
         *   const date1 = new Date(1989, 6, 10)
         *   const date2 = new Date(1987, 1, 11)
         *   const minDate = min(date1, date2)
         *
         *   // v2.0.0 onward:
         *   const dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
         *   const minDate = min(dates)
         *   ```
         *
         * @param {Date[]|Number[]} datesArray - the dates to compare
         * @returns {Date} - the earliest of the dates
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Which of these dates is the earliest?
         * const result = min([
         *   new Date(1989, 6, 10),
         *   new Date(1987, 1, 11),
         *   new Date(1995, 6, 2),
         *   new Date(1990, 0, 1)
         * ])
         * //=> Wed Feb 11 1987 00:00:00
         */

        function min(dirtyDatesArray) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

          if (
            dirtyDatesArray &&
            typeof dirtyDatesArray.forEach === "function"
          ) {
            datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
          } else if (
            typeof dirtyDatesArray === "object" &&
            dirtyDatesArray !== null
          ) {
            datesArray = Array.prototype.slice.call(dirtyDatesArray);
          } else {
            // `dirtyDatesArray` is non-iterable, return Invalid Date
            return new Date(NaN);
          }

          var result;
          datesArray.forEach(function (dirtyDate) {
            var currentDate = Object(
              __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
            )(dirtyDate);

            if (
              result === undefined ||
              result > currentDate ||
              isNaN(currentDate.getDate())
            ) {
              result = currentDate;
            }
          });
          return result || new Date(NaN);
        }

        /***/
      },
      /* 587 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);

        /**
         * @name nextFriday
         * @category Weekday Helpers
         * @summary When is the next Friday?
         *
         * @description
         * When is the next Friday?
         *
         * @param {Date | number} date - the date to start counting from
         * @returns {Date} the next Friday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // When is the next Friday after Mar, 22, 2020?
         * const result = nextFriday(new Date(2020, 2, 22))
         * //=> Fri Mar 27 2020 00:00:00
         */

        function nextFriday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(date),
            5
          );
        }

        /***/
      },
      /* 588 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);

        /**
         * @name nextMonday
         * @category Weekday Helpers
         * @summary When is the next Monday?
         *
         * @description
         * When is the next Monday?
         *
         * @param {Date | number} date - the date to start counting from
         * @returns {Date} the next Monday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // When is the next Monday after Mar, 22, 2020?
         * const result = nextMonday(new Date(2020, 2, 22))
         * //=> Mon Mar 23 2020 00:00:00
         */

        function nextMonday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(date),
            1
          );
        }

        /***/
      },
      /* 589 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);

        /**
         * @name nextSaturday
         * @category Weekday Helpers
         * @summary When is the next Saturday?
         *
         * @description
         * When is the next Saturday?
         *
         * @param {Date | number} date - the date to start counting from
         * @returns {Date} the next Saturday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // When is the next Saturday after Mar, 22, 2020?
         * const result = nextSaturday(new Date(2020, 2, 22))
         * //=> Sat Mar 28 2020 00:00:00
         */

        function nextSaturday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(date),
            6
          );
        }

        /***/
      },
      /* 590 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);

        /**
         * @name nextSunday
         * @category Weekday Helpers
         * @summary When is the next Sunday?
         *
         * @description
         * When is the next Sunday?
         *
         * @param {Date | number} date - the date to start counting from
         * @returns {Date} the next Sunday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // When is the next Sunday after Mar, 22, 2020?
         * const result = nextSunday(new Date(2020, 2, 22))
         * //=> Sun Mar 29 2020 00:00:00
         */

        function nextSunday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(date),
            0
          );
        }

        /***/
      },
      /* 591 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);

        /**
         * @name nextThursday
         * @category Weekday Helpers
         * @summary When is the next Thursday?
         *
         * @description
         * When is the next Thursday?
         *
         * @param {Date | number} date - the date to start counting from
         * @returns {Date} the next Thursday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // When is the next Thursday after Mar, 22, 2020?
         * const result = nextThursday(new Date(2020, 2, 22))
         * //=> Thur Mar 26 2020 00:00:00
         */

        function nextThursday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(date),
            4
          );
        }

        /***/
      },
      /* 592 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);

        /**
         * @name nextTuesday
         * @category Weekday Helpers
         * @summary When is the next Tuesday?
         *
         * @description
         * When is the next Tuesday?
         *
         * @param {Date | number} date - the date to start counting from
         * @returns {Date} the next Tuesday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // When is the next Tuesday after Mar, 22, 2020?
         * const result = nextTuesday(new Date(2020, 2, 22))
         * //=> Tue Mar 24 2020 00:00:00
         */

        function nextTuesday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(date),
            2
          );
        }

        /***/
      },
      /* 593 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__ =
          __webpack_require__(0);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__ =
          __webpack_require__(12);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);

        /**
         * @name nextWednesday
         * @category Weekday Helpers
         * @summary When is the next Wednesday?
         *
         * @description
         * When is the next Wednesday?
         *
         * @param {Date | number} date - the date to start counting from
         * @returns {Date} the next Wednesday
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // When is the next Wednesday after Mar, 22, 2020?
         * const result = nextWednesday(new Date(2020, 2, 22))
         * //=> Wed Mar 25 2020 00:00:00
         */

        function nextWednesday(date) {
          Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__nextDay_index_js__["a" /* default */]
          )(
            Object(
              __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
            )(date),
            3
          );
        }

        /***/
      },
      /* 594 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        var MILLISECONDS_IN_HOUR = 3600000;
        var MILLISECONDS_IN_MINUTE = 60000;
        var DEFAULT_ADDITIONAL_DIGITS = 2;
        var patterns = {
          dateTimeDelimiter: /[T ]/,
          timeZoneDelimiter: /[Z ]/i,
          timezone: /([Z+-].*)$/,
        };
        var dateRegex =
          /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/;
        var timeRegex =
          /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/;
        var timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
        /**
         * @name parseISO
         * @category Common Helpers
         * @summary Parse ISO string
         *
         * @description
         * Parse the given string in ISO 8601 format and return an instance of Date.
         *
         * Function accepts complete ISO 8601 formats as well as partial implementations.
         * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601
         *
         * If the argument isn't a string, the function cannot parse the string or
         * the values are invalid, it returns Invalid Date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * - The previous `parse` implementation was renamed to `parseISO`.
         *
         *   ```javascript
         *   // Before v2.0.0
         *   parse('2016-01-01')
         *
         *   // v2.0.0 onward
         *   parseISO('2016-01-01')
         *   ```
         *
         * - `parseISO` now validates separate date and time values in ISO-8601 strings
         *   and returns `Invalid Date` if the date is invalid.
         *
         *   ```javascript
         *   parseISO('2018-13-32')
         *   //=> Invalid Date
         *   ```
         *
         * - `parseISO` now doesn't fall back to `new Date` constructor
         *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.
         *
         * @param {String} argument - the value to convert
         * @param {Object} [options] - an object with options.
         * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format
         * @returns {Date} the parsed date in the local time zone
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2
         *
         * @example
         * // Convert string '2014-02-11T11:30:30' to date:
         * var result = parseISO('2014-02-11T11:30:30')
         * //=> Tue Feb 11 2014 11:30:30
         *
         * @example
         * // Convert string '+02014101' to date,
         * // if the additional number of digits in the extended year format is 1:
         * var result = parseISO('+02014101', { additionalDigits: 1 })
         * //=> Fri Apr 11 2014 00:00:00
         */

        function parseISO(argument, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var options = dirtyOptions || {};
          var additionalDigits =
            options.additionalDigits == null
              ? DEFAULT_ADDITIONAL_DIGITS
              : Object(
                  __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.additionalDigits);

          if (
            additionalDigits !== 2 &&
            additionalDigits !== 1 &&
            additionalDigits !== 0
          ) {
            throw new RangeError("additionalDigits must be 0, 1 or 2");
          }

          if (
            !(
              typeof argument === "string" ||
              Object.prototype.toString.call(argument) === "[object String]"
            )
          ) {
            return new Date(NaN);
          }

          var dateStrings = splitDateString(argument);
          var date;

          if (dateStrings.date) {
            var parseYearResult = parseYear(dateStrings.date, additionalDigits);
            date = parseDate(
              parseYearResult.restDateString,
              parseYearResult.year
            );
          }

          if (isNaN(date) || !date) {
            return new Date(NaN);
          }

          var timestamp = date.getTime();
          var time = 0;
          var offset;

          if (dateStrings.time) {
            time = parseTime(dateStrings.time);

            if (isNaN(time) || time === null) {
              return new Date(NaN);
            }
          }

          if (dateStrings.timezone) {
            offset = parseTimezone(dateStrings.timezone);

            if (isNaN(offset)) {
              return new Date(NaN);
            }
          } else {
            var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone
            // but we need it to be parsed in our timezone
            // so we use utc values to build date in our timezone.
            // Year values from 0 to 99 map to the years 1900 to 1999
            // so set year explicitly with setFullYear.

            var result = new Date(0);
            result.setFullYear(
              dirtyDate.getUTCFullYear(),
              dirtyDate.getUTCMonth(),
              dirtyDate.getUTCDate()
            );
            result.setHours(
              dirtyDate.getUTCHours(),
              dirtyDate.getUTCMinutes(),
              dirtyDate.getUTCSeconds(),
              dirtyDate.getUTCMilliseconds()
            );
            return result;
          }

          return new Date(timestamp + time + offset);
        }

        function splitDateString(dateString) {
          var dateStrings = {};
          var array = dateString.split(patterns.dateTimeDelimiter);
          var timeString; // The regex match should only return at maximum two array elements.
          // [date], [time], or [date, time].

          if (array.length > 2) {
            return dateStrings;
          }

          if (/:/.test(array[0])) {
            dateStrings.date = null;
            timeString = array[0];
          } else {
            dateStrings.date = array[0];
            timeString = array[1];

            if (patterns.timeZoneDelimiter.test(dateStrings.date)) {
              dateStrings.date = dateString.split(
                patterns.timeZoneDelimiter
              )[0];
              timeString = dateString.substr(
                dateStrings.date.length,
                dateString.length
              );
            }
          }

          if (timeString) {
            var token = patterns.timezone.exec(timeString);

            if (token) {
              dateStrings.time = timeString.replace(token[1], "");
              dateStrings.timezone = token[1];
            } else {
              dateStrings.time = timeString;
            }
          }

          return dateStrings;
        }

        function parseYear(dateString, additionalDigits) {
          var regex = new RegExp(
            "^(?:(\\d{4}|[+-]\\d{" +
              (4 + additionalDigits) +
              "})|(\\d{2}|[+-]\\d{" +
              (2 + additionalDigits) +
              "})$)"
          );
          var captures = dateString.match(regex); // Invalid ISO-formatted year

          if (!captures)
            return {
              year: null,
            };
          var year = captures[1] && parseInt(captures[1]);
          var century = captures[2] && parseInt(captures[2]);
          return {
            year: century == null ? year : century * 100,
            restDateString: dateString.slice(
              (captures[1] || captures[2]).length
            ),
          };
        }

        function parseDate(dateString, year) {
          // Invalid ISO-formatted year
          if (year === null) return null;
          var captures = dateString.match(dateRegex); // Invalid ISO-formatted string

          if (!captures) return null;
          var isWeekDate = !!captures[4];
          var dayOfYear = parseDateUnit(captures[1]);
          var month = parseDateUnit(captures[2]) - 1;
          var day = parseDateUnit(captures[3]);
          var week = parseDateUnit(captures[4]);
          var dayOfWeek = parseDateUnit(captures[5]) - 1;

          if (isWeekDate) {
            if (!validateWeekDate(year, week, dayOfWeek)) {
              return new Date(NaN);
            }

            return dayOfISOWeekYear(year, week, dayOfWeek);
          } else {
            var date = new Date(0);

            if (
              !validateDate(year, month, day) ||
              !validateDayOfYearDate(year, dayOfYear)
            ) {
              return new Date(NaN);
            }

            date.setUTCFullYear(year, month, Math.max(dayOfYear, day));
            return date;
          }
        }

        function parseDateUnit(value) {
          return value ? parseInt(value) : 1;
        }

        function parseTime(timeString) {
          var captures = timeString.match(timeRegex);
          if (!captures) return null; // Invalid ISO-formatted time

          var hours = parseTimeUnit(captures[1]);
          var minutes = parseTimeUnit(captures[2]);
          var seconds = parseTimeUnit(captures[3]);

          if (!validateTime(hours, minutes, seconds)) {
            return NaN;
          }

          return (
            hours * MILLISECONDS_IN_HOUR +
            minutes * MILLISECONDS_IN_MINUTE +
            seconds * 1000
          );
        }

        function parseTimeUnit(value) {
          return (value && parseFloat(value.replace(",", "."))) || 0;
        }

        function parseTimezone(timezoneString) {
          if (timezoneString === "Z") return 0;
          var captures = timezoneString.match(timezoneRegex);
          if (!captures) return 0;
          var sign = captures[1] === "+" ? -1 : 1;
          var hours = parseInt(captures[2]);
          var minutes = (captures[3] && parseInt(captures[3])) || 0;

          if (!validateTimezone(hours, minutes)) {
            return NaN;
          }

          return (
            sign *
            (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE)
          );
        }

        function dayOfISOWeekYear(isoWeekYear, week, day) {
          var date = new Date(0);
          date.setUTCFullYear(isoWeekYear, 0, 4);
          var fourthOfJanuaryDay = date.getUTCDay() || 7;
          var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
          date.setUTCDate(date.getUTCDate() + diff);
          return date;
        } // Validation functions
        // February is null to handle the leap year (using ||)

        var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

        function isLeapYearIndex(year) {
          return year % 400 === 0 || (year % 4 === 0 && year % 100);
        }

        function validateDate(year, month, date) {
          return (
            month >= 0 &&
            month <= 11 &&
            date >= 1 &&
            date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))
          );
        }

        function validateDayOfYearDate(year, dayOfYear) {
          return (
            dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365)
          );
        }

        function validateWeekDate(_year, week, day) {
          return week >= 1 && week <= 53 && day >= 0 && day <= 6;
        }

        function validateTime(hours, minutes, seconds) {
          if (hours === 24) {
            return minutes === 0 && seconds === 0;
          }

          return (
            seconds >= 0 &&
            seconds < 60 &&
            minutes >= 0 &&
            minutes < 60 &&
            hours >= 0 &&
            hours < 25
          );
        }

        function validateTimezone(_hours, minutes) {
          return minutes >= 0 && minutes <= 59;
        }

        /***/
      },
      /* 595 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name parseJSON
         * @category Common Helpers
         * @summary Parse a JSON date string
         *
         * @description
         * Converts a complete ISO date string in UTC time, the typical format for transmitting
         * a date in JSON, to a JavaScript `Date` instance.
         *
         * This is a minimal implementation for converting dates retrieved from a JSON API to
         * a `Date` instance which can be used with other functions in the `date-fns` library.
         * The following formats are supported:
         *
         * - `2000-03-15T05:20:10.123Z`: The output of `.toISOString()` and `JSON.stringify(new Date())`
         * - `2000-03-15T05:20:10Z`: Without milliseconds
         * - `2000-03-15T05:20:10+00:00`: With a zero offset, the default JSON encoded format in some other languages
         * - `2000-03-15T05:20:10+05:45`: With a positive or negative offset, the default JSON encoded format in some other languages
         * - `2000-03-15T05:20:10+0000`: With a zero offset without a colon
         * - `2000-03-15T05:20:10`: Without a trailing 'Z' symbol
         * - `2000-03-15T05:20:10.1234567`: Up to 7 digits in milliseconds field. Only first 3 are taken into account since JS does not allow fractional milliseconds
         * - `2000-03-15 05:20:10`: With a space instead of a 'T' separator for APIs returning a SQL date without reformatting
         *
         * For convenience and ease of use these other input types are also supported
         * via [toDate]{@link https://date-fns.org/docs/toDate}:
         *
         * - A `Date` instance will be cloned
         * - A `number` will be treated as a timestamp
         *
         * Any other input type or invalid date strings will return an `Invalid Date`.
         *
         * @param {String|Number|Date} argument A fully formed ISO8601 date string to convert
         * @returns {Date} the parsed date in the local time zone
         * @throws {TypeError} 1 argument required
         */

        function parseJSON(argument) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);

          if (typeof argument === "string") {
            var parts = argument.match(
              /(\d{4})-(\d{2})-(\d{2})[T ](\d{2}):(\d{2}):(\d{2})(?:\.(\d{0,7}))?(?:Z|(.)(\d{2}):?(\d{2})?)?/
            );

            if (parts) {
              // Group 8 matches the sign
              return new Date(
                Date.UTC(
                  +parts[1],
                  parts[2] - 1,
                  +parts[3],
                  +parts[4] - (parts[9] || 0) * (parts[8] == "-" ? -1 : 1),
                  +parts[5] - (parts[10] || 0) * (parts[8] == "-" ? -1 : 1),
                  +parts[6],
                  +((parts[7] || "0") + "00").substring(0, 3)
                )
              );
            }

            return new Date(NaN);
          }

          return Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(argument);
        }

        /***/
      },
      /* 596 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__ =
          __webpack_require__(6);

        /**
         * @name roundToNearestMinutes
         * @category Minute Helpers
         * @summary Rounds the given date to the nearest minute
         *
         * @description
         * Rounds the given date to the nearest minute (or number of minutes).
         * Rounds up when the given date is exactly between the nearest round minutes.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to round
         * @param {Object} [options] - an object with options.
         * @param {Number} [options.nearestTo=1] - nearest number of minutes to round to. E.g. `15` to round to quarter hours.
         * @returns {Date} the new date rounded to the closest minute
         * @throws {TypeError} 1 argument required
         * @throws {RangeError} `options.nearestTo` must be between 1 and 30
         *
         * @example
         * // Round 10 July 2014 12:12:34 to nearest minute:
         * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34))
         * //=> Thu Jul 10 2014 12:13:00
         *
         * @example
         * // Round 10 July 2014 12:07:30 to nearest quarter hour:
         * var result = roundToNearestMinutes(new Date(2014, 6, 10, 12, 12, 34), { nearestTo: 15 })
         * // rounds up because given date is exactly between 12:00:00 and 12:15:00
         * //=> Thu Jul 10 2014 12:15:00
         */

        function roundToNearestMinutes(dirtyDate, options) {
          if (arguments.length < 1) {
            throw new TypeError(
              "1 argument required, but only none provided present"
            );
          }

          var nearestTo =
            options && "nearestTo" in options
              ? Object(
                  __WEBPACK_IMPORTED_MODULE_1__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.nearestTo)
              : 1;

          if (nearestTo < 1 || nearestTo > 30) {
            throw new RangeError(
              "`options.nearestTo` must be between 1 and 30"
            );
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var seconds = date.getSeconds(); // relevant if nearestTo is 1, which is the default case

          var minutes = date.getMinutes() + seconds / 60;
          var roundedMinutes = Math.floor(minutes / nearestTo) * nearestTo;
          var remainderMinutes = minutes % nearestTo;
          var addedMinutes =
            Math.round(remainderMinutes / nearestTo) * nearestTo;
          return new Date(
            date.getFullYear(),
            date.getMonth(),
            date.getDate(),
            date.getHours(),
            roundedMinutes + addedMinutes
          );
        }

        /***/
      },
      /* 597 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__setMonth_index_js__ =
          __webpack_require__(58);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name set
         * @category Common Helpers
         * @summary Set date values to a given date.
         *
         * @description
         * Set date values to a given date.
         *
         * Sets time values to date from object `values`.
         * A value is not set if it is undefined or null or doesn't exist in `values`.
         *
         * Note about bundle size: `set` does not internally use `setX` functions from date-fns but instead opts
         * to use native `Date#setX` methods. If you use this function, you may not want to include the
         * other `setX` functions that date-fns provides if you are concerned about the bundle size.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Object} values - an object with options
         * @param {Number} [values.year] - the number of years to be set
         * @param {Number} [values.month] - the number of months to be set
         * @param {Number} [values.date] - the number of days to be set
         * @param {Number} [values.hours] - the number of hours to be set
         * @param {Number} [values.minutes] - the number of minutes to be set
         * @param {Number} [values.seconds] - the number of seconds to be set
         * @param {Number} [values.milliseconds] - the number of milliseconds to be set
         * @returns {Date} the new date with options set
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `values` must be an object
         *
         * @example
         * // Transform 1 September 2014 into 20 October 2015 in a single line:
         * var result = set(new Date(2014, 8, 20), { year: 2015, month: 9, date: 20 })
         * //=> Tue Oct 20 2015 00:00:00
         *
         * @example
         * // Set 12 PM to 1 September 2014 01:23:45 to 1 September 2014 12:00:00:
         * var result = set(new Date(2014, 8, 1, 1, 23, 45), { hours: 12 })
         * //=> Mon Sep 01 2014 12:23:45
         */
        function set(dirtyDate, values) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);

          if (typeof values !== "object" || values === null) {
            throw new RangeError("values parameter must be an object");
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

          if (isNaN(date.getTime())) {
            return new Date(NaN);
          }

          if (values.year != null) {
            date.setFullYear(values.year);
          }

          if (values.month != null) {
            date = Object(
              __WEBPACK_IMPORTED_MODULE_1__setMonth_index_js__[
                "a" /* default */
              ]
            )(date, values.month);
          }

          if (values.date != null) {
            date.setDate(
              Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                  "a" /* default */
                ]
              )(values.date)
            );
          }

          if (values.hours != null) {
            date.setHours(
              Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                  "a" /* default */
                ]
              )(values.hours)
            );
          }

          if (values.minutes != null) {
            date.setMinutes(
              Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                  "a" /* default */
                ]
              )(values.minutes)
            );
          }

          if (values.seconds != null) {
            date.setSeconds(
              Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                  "a" /* default */
                ]
              )(values.seconds)
            );
          }

          if (values.milliseconds != null) {
            date.setMilliseconds(
              Object(
                __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                  "a" /* default */
                ]
              )(values.milliseconds)
            );
          }

          return date;
        }

        /***/
      },
      /* 598 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = setDate;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setDate
         * @category Day Helpers
         * @summary Set the day of the month to the given date.
         *
         * @description
         * Set the day of the month to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} dayOfMonth - the day of the month of the new date
         * @returns {Date} the new date with the day of the month set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set the 30th day of the month to 1 September 2014:
         * var result = setDate(new Date(2014, 8, 1), 30)
         * //=> Tue Sep 30 2014 00:00:00
         */

        function setDate(dirtyDate, dirtyDayOfMonth) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var dayOfMonth = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyDayOfMonth);
          date.setDate(dayOfMonth);
          return date;
        }

        /***/
      },
      /* 599 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setDay
         * @category Weekday Helpers
         * @summary Set the day of the week to the given date.
         *
         * @description
         * Set the day of the week to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} day - the day of the week of the new date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @returns {Date} the new date with the day of the week set
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         *
         * @example
         * // Set week day to Sunday, with the default weekStartsOn of Sunday:
         * var result = setDay(new Date(2014, 8, 1), 0)
         * //=> Sun Aug 31 2014 00:00:00
         *
         * @example
         * // Set week day to Sunday, with a weekStartsOn of Monday:
         * var result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })
         * //=> Sun Sep 07 2014 00:00:00
         */

        function setDay(dirtyDate, dirtyDay, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : Object(
                  __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : Object(
                  __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate, options);
          var day = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyDay);
          var currentDay = date.getDay();
          var remainder = day % 7;
          var dayIndex = (remainder + 7) % 7;
          var delta = 7 - weekStartsOn;
          var diff =
            day < 0 || day > 6
              ? day - ((currentDay + delta) % 7)
              : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__addDays_index_js__["a" /* default */]
          )(date, diff, options);
        }

        /***/
      },
      /* 600 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setDayOfYear
         * @category Day Helpers
         * @summary Set the day of the year to the given date.
         *
         * @description
         * Set the day of the year to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} dayOfYear - the day of the year of the new date
         * @returns {Date} the new date with the day of the year set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set the 2nd day of the year to 2 July 2014:
         * var result = setDayOfYear(new Date(2014, 6, 2), 2)
         * //=> Thu Jan 02 2014 00:00:00
         */

        function setDayOfYear(dirtyDate, dirtyDayOfYear) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var dayOfYear = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyDayOfYear);
          date.setMonth(0);
          date.setDate(dayOfYear);
          return date;
        }

        /***/
      },
      /* 601 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setHours
         * @category Hour Helpers
         * @summary Set the hours to the given date.
         *
         * @description
         * Set the hours to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} hours - the hours of the new date
         * @returns {Date} the new date with the hours set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set 4 hours to 1 September 2014 11:30:00:
         * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)
         * //=> Mon Sep 01 2014 04:30:00
         */

        function setHours(dirtyDate, dirtyHours) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var hours = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyHours);
          date.setHours(hours);
          return date;
        }

        /***/
      },
      /* 602 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__addDays_index_js__ =
          __webpack_require__(9);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__getISODay_index_js__ =
          __webpack_require__(103);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setISODay
         * @category Weekday Helpers
         * @summary Set the day of the ISO week to the given date.
         *
         * @description
         * Set the day of the ISO week to the given date.
         * ISO week starts with Monday.
         * 7 is the index of Sunday, 1 is the index of Monday etc.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} day - the day of the ISO week of the new date
         * @returns {Date} the new date with the day of the ISO week set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set Sunday to 1 September 2014:
         * const result = setISODay(new Date(2014, 8, 1), 7)
         * //=> Sun Sep 07 2014 00:00:00
         */

        function setISODay(dirtyDate, dirtyDay) {
          Object(
            __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var day = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyDay);
          var currentDay = Object(
            __WEBPACK_IMPORTED_MODULE_3__getISODay_index_js__["a" /* default */]
          )(date);
          var diff = day - currentDay;
          return Object(
            __WEBPACK_IMPORTED_MODULE_2__addDays_index_js__["a" /* default */]
          )(date, diff);
        }

        /***/
      },
      /* 603 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getISOWeek_index_js__ =
          __webpack_require__(104);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setISOWeek
         * @category ISO Week Helpers
         * @summary Set the ISO week to the given date.
         *
         * @description
         * Set the ISO week to the given date, saving the weekday number.
         *
         * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} isoWeek - the ISO week of the new date
         * @returns {Date} the new date with the ISO week set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set the 53rd ISO week to 7 August 2004:
         * const result = setISOWeek(new Date(2004, 7, 7), 53)
         * //=> Sat Jan 01 2005 00:00:00
         */

        function setISOWeek(dirtyDate, dirtyISOWeek) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var isoWeek = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyISOWeek);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_2__getISOWeek_index_js__[
                "a" /* default */
              ]
            )(date) - isoWeek;
          date.setDate(date.getDate() - diff * 7);
          return date;
        }

        /***/
      },
      /* 604 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setMilliseconds
         * @category Millisecond Helpers
         * @summary Set the milliseconds to the given date.
         *
         * @description
         * Set the milliseconds to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} milliseconds - the milliseconds of the new date
         * @returns {Date} the new date with the milliseconds set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set 300 milliseconds to 1 September 2014 11:30:40.500:
         * const result = setMilliseconds(new Date(2014, 8, 1, 11, 30, 40, 500), 300)
         * //=> Mon Sep 01 2014 11:30:40.300
         */

        function setMilliseconds(dirtyDate, dirtyMilliseconds) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var milliseconds = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyMilliseconds);
          date.setMilliseconds(milliseconds);
          return date;
        }

        /***/
      },
      /* 605 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setMinutes
         * @category Minute Helpers
         * @summary Set the minutes to the given date.
         *
         * @description
         * Set the minutes to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} minutes - the minutes of the new date
         * @returns {Date} the new date with the minutes set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set 45 minutes to 1 September 2014 11:30:40:
         * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)
         * //=> Mon Sep 01 2014 11:45:40
         */

        function setMinutes(dirtyDate, dirtyMinutes) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var minutes = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyMinutes);
          date.setMinutes(minutes);
          return date;
        }

        /***/
      },
      /* 606 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__setMonth_index_js__ =
          __webpack_require__(58);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setQuarter
         * @category Quarter Helpers
         * @summary Set the year quarter to the given date.
         *
         * @description
         * Set the year quarter to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} quarter - the quarter of the new date
         * @returns {Date} the new date with the quarter set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set the 2nd quarter to 2 July 2014:
         * const result = setQuarter(new Date(2014, 6, 2), 2)
         * //=> Wed Apr 02 2014 00:00:00
         */

        function setQuarter(dirtyDate, dirtyQuarter) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var quarter = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyQuarter);
          var oldQuarter = Math.floor(date.getMonth() / 3) + 1;
          var diff = quarter - oldQuarter;
          return Object(
            __WEBPACK_IMPORTED_MODULE_2__setMonth_index_js__["a" /* default */]
          )(date, date.getMonth() + diff * 3);
        }

        /***/
      },
      /* 607 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setSeconds
         * @category Second Helpers
         * @summary Set the seconds to the given date.
         *
         * @description
         * Set the seconds to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} seconds - the seconds of the new date
         * @returns {Date} the new date with the seconds set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set 45 seconds to 1 September 2014 11:30:40:
         * const result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)
         * //=> Mon Sep 01 2014 11:30:45
         */

        function setSeconds(dirtyDate, dirtySeconds) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var seconds = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtySeconds);
          date.setSeconds(seconds);
          return date;
        }

        /***/
      },
      /* 608 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getWeek_index_js__ =
          __webpack_require__(106);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setWeek
         * @category Week Helpers
         * @summary Set the local week to the given date.
         *
         * @description
         * Set the local week to the given date, saving the weekday number.
         * The exact calculation depends on the values of
         * `options.weekStartsOn` (which is the index of the first day of the week)
         * and `options.firstWeekContainsDate` (which is the day of January, which is always in
         * the first week of the week-numbering year)
         *
         * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} week - the week of the new date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
         * @returns {Date} the new date with the local week set
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         *
         * @example
         * // Set the 1st week to 2 January 2005 with default options:
         * var result = setWeek(new Date(2005, 0, 2), 1)
         * //=> Sun Dec 26 2004 00:00:00
         *
         * @example
         * // Set the 1st week to 2 January 2005,
         * // if Monday is the first day of the week,
         * // and the first week of the year always contains 4 January:
         * var result = setWeek(new Date(2005, 0, 2), 1, {
         *   weekStartsOn: 1,
         *   firstWeekContainsDate: 4
         * })
         * //=> Sun Jan 4 2004 00:00:00
         */

        function setWeek(dirtyDate, dirtyWeek, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var week = Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyWeek);
          var diff =
            Object(
              __WEBPACK_IMPORTED_MODULE_0__getWeek_index_js__["a" /* default */]
            )(date, dirtyOptions) - week;
          date.setDate(date.getDate() - diff * 7);
          return date;
        }

        /***/
      },
      /* 609 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__differenceInCalendarDays_index_js__ =
          __webpack_require__(17);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__startOfWeekYear_index_js__ =
          __webpack_require__(55);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setWeekYear
         * @category Week-Numbering Year Helpers
         * @summary Set the local week-numbering year to the given date.
         *
         * @description
         * Set the local week-numbering year to the given date,
         * saving the week number and the weekday number.
         * The exact calculation depends on the values of
         * `options.weekStartsOn` (which is the index of the first day of the week)
         * and `options.firstWeekContainsDate` (which is the day of January, which is always in
         * the first week of the week-numbering year)
         *
         * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} weekYear - the local week-numbering year of the new date
         * @param {Object} [options] - an object with options.
         * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
         * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
         * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
         * @returns {Date} the new date with the local week-numbering year set
         * @throws {TypeError} 2 arguments required
         * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
         * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
         *
         * @example
         * // Set the local week-numbering year 2004 to 2 January 2010 with default options:
         * var result = setWeekYear(new Date(2010, 0, 2), 2004)
         * //=> Sat Jan 03 2004 00:00:00
         *
         * @example
         * // Set the local week-numbering year 2004 to 2 January 2010,
         * // if Monday is the first day of week
         * // and 4 January is always in the first week of the year:
         * var result = setWeekYear(new Date(2010, 0, 2), 2004, {
         *   weekStartsOn: 1,
         *   firstWeekContainsDate: 4
         * })
         * //=> Sat Jan 01 2005 00:00:00
         */

        function setWeekYear(dirtyDate, dirtyWeekYear, dirtyOptions) {
          Object(
            __WEBPACK_IMPORTED_MODULE_4__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeFirstWeekContainsDate =
            locale && locale.options && locale.options.firstWeekContainsDate;
          var defaultFirstWeekContainsDate =
            localeFirstWeekContainsDate == null
              ? 1
              : Object(
                  __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(localeFirstWeekContainsDate);
          var firstWeekContainsDate =
            options.firstWeekContainsDate == null
              ? defaultFirstWeekContainsDate
              : Object(
                  __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__[
                    "a" /* default */
                  ]
                )(options.firstWeekContainsDate);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_2__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var weekYear = Object(
            __WEBPACK_IMPORTED_MODULE_3__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyWeekYear);
          var diff = Object(
            __WEBPACK_IMPORTED_MODULE_0__differenceInCalendarDays_index_js__[
              "a" /* default */
            ]
          )(
            date,
            Object(
              __WEBPACK_IMPORTED_MODULE_1__startOfWeekYear_index_js__[
                "a" /* default */
              ]
            )(date, dirtyOptions)
          );
          var firstWeek = new Date(0);
          firstWeek.setFullYear(weekYear, 0, firstWeekContainsDate);
          firstWeek.setHours(0, 0, 0, 0);
          date = Object(
            __WEBPACK_IMPORTED_MODULE_1__startOfWeekYear_index_js__[
              "a" /* default */
            ]
          )(firstWeek, dirtyOptions);
          date.setDate(date.getDate() + diff);
          return date;
        }

        /***/
      },
      /* 610 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = setYear;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name setYear
         * @category Year Helpers
         * @summary Set the year to the given date.
         *
         * @description
         * Set the year to the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} year - the year of the new date
         * @returns {Date} the new date with the year set
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Set year 2013 to 1 September 2014:
         * const result = setYear(new Date(2014, 8, 1), 2013)
         * //=> Sun Sep 01 2013 00:00:00
         */

        function setYear(dirtyDate, dirtyYear) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_1__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date

          if (isNaN(date.getTime())) {
            return new Date(NaN);
          }

          date.setFullYear(year);
          return date;
        }

        /***/
      },
      /* 611 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__ =
          __webpack_require__(1);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name startOfDecade
         * @category Decade Helpers
         * @summary Return the start of a decade for the given date.
         *
         * @description
         * Return the start of a decade for the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the original date
         * @returns {Date} the start of a decade
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // The start of a decade for 21 October 2015 00:00:00:
         * const result = startOfDecade(new Date(2015, 9, 21, 00, 00, 00))
         * //=> Jan 01 2010 00:00:00
         */

        function startOfDecade(dirtyDate) {
          Object(
            __WEBPACK_IMPORTED_MODULE_1__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(1, arguments);
          var date = Object(
            __WEBPACK_IMPORTED_MODULE_0__toDate_index_js__["a" /* default */]
          )(dirtyDate);
          var year = date.getFullYear();
          var decade = Math.floor(year / 10) * 10;
          date.setFullYear(decade, 0, 1);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 612 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] =
          startOfToday;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__startOfDay_index_js__ =
          __webpack_require__(32);

        /**
         * @name startOfToday
         * @category Day Helpers
         * @summary Return the start of today.
         * @pure false
         *
         * @description
         * Return the start of today.
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `Date.now()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @returns {Date} the start of today
         *
         * @example
         * // If today is 6 October 2014:
         * var result = startOfToday()
         * //=> Mon Oct 6 2014 00:00:00
         */

        function startOfToday() {
          return Object(
            __WEBPACK_IMPORTED_MODULE_0__startOfDay_index_js__[
              "a" /* default */
            ]
          )(Date.now());
        }

        /***/
      },
      /* 613 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /**
         * @name startOfTomorrow
         * @category Day Helpers
         * @summary Return the start of tomorrow.
         * @pure false
         *
         * @description
         * Return the start of tomorrow.
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `new Date()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @returns {Date} the start of tomorrow
         *
         * @example
         * // If today is 6 October 2014:
         * const result = startOfTomorrow()
         * //=> Tue Oct 7 2014 00:00:00
         */
        function startOfTomorrow() {
          var now = new Date();
          var year = now.getFullYear();
          var month = now.getMonth();
          var day = now.getDate();
          var date = new Date(0);
          date.setFullYear(year, month, day + 1);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 614 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /**
         * @name startOfYesterday
         * @category Day Helpers
         * @summary Return the start of yesterday.
         * @pure false
         *
         * @description
         * Return the start of yesterday.
         *
         * > âš ï¸ Please note that this function is not present in the FP submodule as
         * > it uses `new Date()` internally hence impure and can't be safely curried.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @returns {Date} the start of yesterday
         *
         * @example
         * // If today is 6 October 2014:
         * const result = startOfYesterday()
         * //=> Sun Oct 5 2014 00:00:00
         */
        function startOfYesterday() {
          var now = new Date();
          var year = now.getFullYear();
          var month = now.getMonth();
          var day = now.getDate();
          var date = new Date(0);
          date.setFullYear(year, month, day - 1);
          date.setHours(0, 0, 0, 0);
          return date;
        }

        /***/
      },
      /* 615 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addBusinessDays_index_js__ =
          __webpack_require__(70);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subBusinessDays
         * @category Day Helpers
         * @summary Substract the specified number of business days (mon - fri) to the given date.
         *
         * @description
         * Substract the specified number of business days (mon - fri) to the given date, ignoring weekends.
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of business days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the business days subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Substract 10 business days from 1 September 2014:
         * var result = subBusinessDays(new Date(2014, 8, 1), 10)
         * //=> Mon Aug 18 2014 00:00:00 (skipped weekend days)
         */

        function subBusinessDays(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addBusinessDays_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 616 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = subHours;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addHours_index_js__ =
          __webpack_require__(42);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subHours
         * @category Hour Helpers
         * @summary Subtract the specified number of hours from the given date.
         *
         * @description
         * Subtract the specified number of hours from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of hours to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the hours subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 2 hours from 11 July 2014 01:00:00:
         * const result = subHours(new Date(2014, 6, 11, 1, 0), 2)
         * //=> Thu Jul 10 2014 23:00:00
         */

        function subHours(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addHours_index_js__["a" /* default */]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 617 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = subMinutes;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addMinutes_index_js__ =
          __webpack_require__(43);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subMinutes
         * @category Minute Helpers
         * @summary Subtract the specified number of minutes from the given date.
         *
         * @description
         * Subtract the specified number of minutes from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of minutes to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the minutes subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 30 minutes from 10 July 2014 12:00:00:
         * const result = subMinutes(new Date(2014, 6, 10, 12, 0), 30)
         * //=> Thu Jul 10 2014 11:30:00
         */

        function subMinutes(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addMinutes_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 618 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addQuarters_index_js__ =
          __webpack_require__(44);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subQuarters
         * @category Quarter Helpers
         * @summary Subtract the specified number of year quarters from the given date.
         *
         * @description
         * Subtract the specified number of year quarters from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of quarters to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the quarters subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 3 quarters from 1 September 2014:
         * const result = subQuarters(new Date(2014, 8, 1), 3)
         * //=> Sun Dec 01 2013 00:00:00
         */

        function subQuarters(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addQuarters_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 619 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addSeconds_index_js__ =
          __webpack_require__(74);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subSeconds
         * @category Second Helpers
         * @summary Subtract the specified number of seconds from the given date.
         *
         * @description
         * Subtract the specified number of seconds from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of seconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the seconds subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 30 seconds from 10 July 2014 12:45:00:
         * const result = subSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)
         * //=> Thu Jul 10 2014 12:44:30
         */

        function subSeconds(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addSeconds_index_js__[
              "a" /* default */
            ]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 620 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export default */
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addWeeks_index_js__ =
          __webpack_require__(33);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subWeeks
         * @category Week Helpers
         * @summary Subtract the specified number of weeks from the given date.
         *
         * @description
         * Subtract the specified number of weeks from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the weeks subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 4 weeks from 1 September 2014:
         * const result = subWeeks(new Date(2014, 8, 1), 4)
         * //=> Mon Aug 04 2014 00:00:00
         */

        function subWeeks(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addWeeks_index_js__["a" /* default */]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 621 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony export (immutable) */ __webpack_exports__["a"] = subYears;
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__ =
          __webpack_require__(6);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__addYears_index_js__ =
          __webpack_require__(75);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__ =
          __webpack_require__(0);

        /**
         * @name subYears
         * @category Year Helpers
         * @summary Subtract the specified number of years from the given date.
         *
         * @description
         * Subtract the specified number of years from the given date.
         *
         * ### v2.0.0 breaking changes:
         *
         * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
         *
         * @param {Date|Number} date - the date to be changed
         * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
         * @returns {Date} the new date with the years subtracted
         * @throws {TypeError} 2 arguments required
         *
         * @example
         * // Subtract 5 years from 1 September 2014:
         * const result = subYears(new Date(2014, 8, 1), 5)
         * //=> Tue Sep 01 2009 00:00:00
         */

        function subYears(dirtyDate, dirtyAmount) {
          Object(
            __WEBPACK_IMPORTED_MODULE_2__lib_requiredArgs_index_js__[
              "a" /* default */
            ]
          )(2, arguments);
          var amount = Object(
            __WEBPACK_IMPORTED_MODULE_0__lib_toInteger_index_js__[
              "a" /* default */
            ]
          )(dirtyAmount);
          return Object(
            __WEBPACK_IMPORTED_MODULE_1__addYears_index_js__["a" /* default */]
          )(dirtyDate, -amount);
        }

        /***/
      },
      /* 622 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* unused harmony export maxTime */
        /* unused harmony export minTime */
        /**
         *  Maximum allowed time.
         *  @constant
         *  @type {number}
         *  @default
         */
        var maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;
        /**
         *  Minimum allowed time.
         *  @constant
         *  @type {number}
         *  @default
         */

        var minTime = -maxTime;

        /***/
      },
      /* 623 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ =
          __webpack_require__(40);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_type__ =
          __webpack_require__(30);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_date_fns__ =
          __webpack_require__(20);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_events__ =
          __webpack_require__(59);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__templates_datepicker__ =
          __webpack_require__(624);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__templates_days__ =
          __webpack_require__(625);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__templates_weekdays__ =
          __webpack_require__(626);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__templates_months__ =
          __webpack_require__(627);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__templates_years__ =
          __webpack_require__(628);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__defaultOptions__ =
          __webpack_require__(629);
        var _extends =
          Object.assign ||
          function (target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var datePicker = (function (_EventEmitter) {
          _inherits(datePicker, _EventEmitter);

          function datePicker() {
            var options =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {};

            _classCallCheck(this, datePicker);

            var _this = _possibleConstructorReturn(
              this,
              (datePicker.__proto__ || Object.getPrototypeOf(datePicker)).call(
                this
              )
            );

            _this.options = _extends(
              {},
              __WEBPACK_IMPORTED_MODULE_9__defaultOptions__["a" /* default */],
              options
            );

            _this._clickEvents = ["click", "touch"];
            _this._supportsPassive =
              __WEBPACK_IMPORTED_MODULE_0__utils__[
                "a" /* detectSupportsPassive */
              ]();
            _this._id =
              __WEBPACK_IMPORTED_MODULE_0__utils__["c" /* uuid */](
                "datePicker"
              );
            _this.node = null;

            _this.onPreviousDatePicker = _this.onPreviousDatePicker.bind(_this);
            _this.onNextDatePicker = _this.onNextDatePicker.bind(_this);
            _this.onSelectMonthDatePicker =
              _this.onSelectMonthDatePicker.bind(_this);
            _this.onMonthClickDatePicker =
              _this.onMonthClickDatePicker.bind(_this);
            _this.onSelectYearDatePicker =
              _this.onSelectYearDatePicker.bind(_this);
            _this.onYearClickDatePicker =
              _this.onYearClickDatePicker.bind(_this);
            _this.onDateClickDatePicker =
              _this.onDateClickDatePicker.bind(_this);

            _this._init();
            return _this;
          }

          /****************************************************
           *                                                  *
           * GETTERS and SETTERS                              *
           *                                                  *
           ****************************************************/
          /**
           * Get id of current datePicker
           */

          _createClass(datePicker, [
            {
              key: "onPreviousDatePicker",

              /****************************************************
               *                                                  *
               * EVENTS FUNCTIONS                                 *
               *                                                  *
               ****************************************************/
              value: function onPreviousDatePicker(e) {
                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                var prevMonth = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "y" /* lastDayOfMonth */
                ](
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["M" /* subMonths */](
                    new Date(
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["q" /* getYear */](
                        this._visibleDate
                      ),
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "p" /* getMonth */
                      ](this._visibleDate)
                    ),
                    1
                  )
                );
                var day = Math.min(
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "o" /* getDaysInMonth */
                  ](prevMonth),
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["m" /* getDate */](
                    this._visibleDate
                  )
                );

                this._setVisibleDate(
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["C" /* setDate */](
                    prevMonth,
                    day
                  )
                );
                this.refresh();
              },
            },
            {
              key: "onNextDatePicker",
              value: function onNextDatePicker(e) {
                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                var nextMonth = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "d" /* addMonths */
                ](this._visibleDate, 1);
                var day = Math.min(
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "o" /* getDaysInMonth */
                  ](nextMonth),
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["m" /* getDate */](
                    this._visibleDate
                  )
                );

                this._setVisibleDate(
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["C" /* setDate */](
                    nextMonth,
                    day
                  )
                );
                this.refresh();
              },
            },
            {
              key: "onSelectMonthDatePicker",
              value: function onSelectMonthDatePicker(e) {
                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                if (this.options.enableMonthSwitch) {
                  this._ui.body.dates.classList.remove("is-active");
                  this._ui.body.years.classList.remove("is-active");
                  this._ui.body.months.classList.add("is-active");
                  this._ui.navigation.previous.setAttribute(
                    "disabled",
                    "disabled"
                  );
                  this._ui.navigation.next.setAttribute("disabled", "disabled");
                }
              },
            },
            {
              key: "onSelectYearDatePicker",
              value: function onSelectYearDatePicker(e) {
                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                if (this.options.enableYearSwitch) {
                  this._ui.body.dates.classList.remove("is-active");
                  this._ui.body.months.classList.remove("is-active");
                  this._ui.body.years.classList.add("is-active");
                  this._ui.navigation.previous.setAttribute(
                    "disabled",
                    "disabled"
                  );
                  this._ui.navigation.next.setAttribute("disabled", "disabled");

                  var currentYear = this._ui.body.years.querySelector(
                    ".calendar-year.is-active"
                  );
                  if (currentYear) {
                    this._ui.body.years.scrollTop =
                      currentYear.offsetTop -
                      this._ui.body.years.offsetTop -
                      this._ui.body.years.clientHeight / 2;
                  }
                }
              },
            },
            {
              key: "onMonthClickDatePicker",
              value: function onMonthClickDatePicker(e) {
                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                var newDate = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "D" /* setMonth */
                ](
                  this._visibleDate,
                  parseInt(e.currentTarget.dataset.month) - 1
                );
                this._visibleDate = this.min
                  ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["z" /* max */](
                      newDate,
                      this.min
                    )
                  : newDate;
                this._visibleDate = this.max
                  ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["A" /* min */](
                      this._visibleDate,
                      this.max
                    )
                  : this._visibleDate;

                this.refresh();
              },
            },
            {
              key: "onYearClickDatePicker",
              value: function onYearClickDatePicker(e) {
                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                var newDate = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "E" /* setYear */
                ](this._visibleDate, parseInt(e.currentTarget.dataset.year));
                this._visibleDate = this.min
                  ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["z" /* max */](
                      newDate,
                      this.min
                    )
                  : newDate;
                this._visibleDate = this.max
                  ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["A" /* min */](
                      this._visibleDate,
                      this.max
                    )
                  : this._visibleDate;

                this.refresh();
              },
            },
            {
              key: "onDateClickDatePicker",
              value: function onDateClickDatePicker(e) {
                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                if (!e.currentTarget.classList.contains("is-disabled")) {
                  this._select(new Date(e.currentTarget.dataset.date));
                  this.refresh();
                }
              },

              /****************************************************
               *                                                  *
               * PUBLIC FUNCTIONS                                 *
               *                                                  *
               ****************************************************/
            },
            {
              key: "isRange",
              value: function isRange() {
                return this.options.isRange;
              },
            },
            {
              key: "enableDate",
              value: function enableDate() {
                var date =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : undefined;

                if (!Array.isArray(this.disabledDates)) return;
                var index = this.disabledDates.findIndex(function (
                  disableDate
                ) {
                  return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "t" /* isEqual */
                  ](disableDate, date);
                });
                if (index > -1) {
                  unset(this.disabledDates[index]);
                }
              },
            },
            {
              key: "disableDate",
              value: function disableDate() {
                var date =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : undefined;

                if (!Array.isArray(this.disabledDates)) return;
                var index = this.disabledDates.findIndex(function (
                  disableDate
                ) {
                  return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "t" /* isEqual */
                  ](disableDate, date);
                });
                if (index > -1) {
                  this.disabledDates.push(date);
                }
              },
            },
            {
              key: "highlightDate",
              value: function highlightDate() {
                var date =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : undefined;

                if (!Array.isArray(this.highlightedDates)) return;
                var index = this.highlightedDates.findIndex(function (
                  highlightDate
                ) {
                  return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "t" /* isEqual */
                  ](highlightDate, date);
                });
                if (index > -1) {
                  unset(this.highlightedDates[index]);
                }
              },
            },
            {
              key: "unhighlightDate",
              value: function unhighlightDate() {
                var date =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : undefined;

                if (!Array.isArray(this.highlightedDates)) return;
                var index = this.highlightedDates.findIndex(function (
                  highlightDate
                ) {
                  return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "t" /* isEqual */
                  ](highlightDate, date);
                });
                if (index > -1) {
                  this.highlightedDates.push(date);
                }
              },
            },
            {
              key: "enableWeekDay",
              value: function enableWeekDay(day) {
                var index = this.disabledWeekDays.findIndex(function (
                  disabledWeekDay
                ) {
                  return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "t" /* isEqual */
                  ](disabledWeekDay, day);
                });
                if (index > -1) {
                  unset(this.disabledWeekDays[index]);
                }
              },
            },
            {
              key: "disableWeekDay",
              value: function disableWeekDay(day) {
                var index = this.disabledWeekDays.findIndex(function (
                  disabledWeekDay
                ) {
                  return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "t" /* isEqual */
                  ](disabledWeekDay, date);
                });
                if (index > -1) {
                  this.disabledWeekDays.push(day);
                }
              },
            },
            {
              key: "show",
              value: function show() {
                if (this._open) return;

                this._ui.body.dates.classList.add("is-active");
                this._ui.body.months.classList.remove("is-active");
                this._ui.body.years.classList.remove("is-active");
                this._ui.navigation.previous.removeAttribute("disabled");
                this._ui.navigation.next.removeAttribute("disabled");
                this._ui.container.classList.add("is-active");

                this._open = true;
                this._focus = true;

                this.emit("show", this);
              },
            },
            {
              key: "hide",
              value: function hide() {
                if (!this._open) return;

                this._open = false;
                this._focus = false;

                this._ui.container.classList.remove("is-active");

                this.emit("hide", this);
              },
            },
            {
              key: "toggle",
              value: function toggle() {
                if (!this._open) {
                  this.show();
                } else {
                  this.hide();
                }
              },

              /**
               * Get / Set datePicker value
               * @param {null|Date|Object|String} date optional if null then return the current date as String
               */
            },
            {
              key: "value",
              value: function value() {
                var _value =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : null;

                // Set
                if (_value) {
                  if (this.options.isRange) {
                    if (
                      __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                        "e" /* isString */
                      ](_value)
                    ) {
                      _value = _value.split(" - ");
                    }

                    if (Array.isArray(_value)) {
                      if (_value.length)
                        this.start = __WEBPACK_IMPORTED_MODULE_0__utils__[
                          "b" /* newDate */
                        ](_value[0], this.format, "yyyy-MM-dd");
                      if (_value.length === 2)
                        this.end = __WEBPACK_IMPORTED_MODULE_0__utils__[
                          "b" /* newDate */
                        ](_value[1], this.format, "yyyy-MM-dd");
                    }
                  } else {
                    this._select(_value, false);
                  }

                  this.refresh();

                  return;
                }

                // Get
                var string = this._isValidDate(this.start)
                  ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.start,
                      this.format,
                      { locale: this.locale }
                    )
                  : "";

                if (this.options.isRange && this._isValidDate(this.end)) {
                  string +=
                    " - " +
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.end,
                      this.format,
                      { locale: this.locale }
                    );
                }

                return string;
              },

              /**
               * Refresh datepicker with new year/month days
               * @method _refreshdatepicker
               * @return {[type]}        [description]
               */
            },
            {
              key: "refresh",
              value: function refresh() {
                var _this2 = this;

                this._ui.body.dates.innerHTML = "";

                // the 12 months of the year
                var monthLabels = new Array(12)
                  .fill(
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "J" /* startOfYear */
                    ](this._visibleDate)
                  )
                  .map(function (d, i) {
                    return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "d" /* addMonths */
                    ](d, i);
                  });

                this._ui.body.months.innerHTML = "";
                this._ui.body.months.appendChild(
                  document.createRange().createContextualFragment(
                    Object(
                      __WEBPACK_IMPORTED_MODULE_7__templates_months__[
                        "a" /* default */
                      ]
                    )({
                      months: monthLabels,
                      locale: this.locale,
                    })
                  )
                );

                var months =
                  this._ui.body.months.querySelectorAll(".datepicker-month") ||
                  [];
                months.forEach(function (month) {
                  _this2._clickEvents.forEach(function (clickEvent) {
                    month.addEventListener(
                      clickEvent,
                      _this2.onMonthClickDatePicker
                    );
                  });
                  month.classList.remove("is-active");
                  if (
                    month.dataset.month ===
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      _this2._visibleDate,
                      "MM",
                      { locale: _this2.locale }
                    )
                  ) {
                    month.classList.add("is-active");
                  }
                });

                // years
                var yearLabels = new Array(this.options.displayYearsCount * 2)
                  .fill(
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["N" /* subYears */](
                      this._visibleDate,
                      this.options.displayYearsCount
                    )
                  )
                  .map(function (d, i) {
                    return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "e" /* addYears */
                    ](d, i);
                  });
                this._ui.body.years.innerHTML = "";
                this._ui.body.years.appendChild(
                  document.createRange().createContextualFragment(
                    Object(
                      __WEBPACK_IMPORTED_MODULE_8__templates_years__[
                        "a" /* default */
                      ]
                    )({
                      visibleDate: this._visibleDate,
                      years: yearLabels,
                    })
                  )
                );
                var years =
                  this._ui.body.years.querySelectorAll(".datepicker-year") ||
                  [];
                years.forEach(function (year) {
                  _this2._clickEvents.forEach(function (clickEvent) {
                    year.addEventListener(
                      clickEvent,
                      _this2.onYearClickDatePicker
                    );
                  });
                  year.classList.remove("is-active");
                  if (
                    year.dataset.year ===
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      _this2._visibleDate,
                      "yyyy",
                      { locale: _this2.locale }
                    )
                  ) {
                    year.classList.add("is-active");
                  }
                });

                // the 7 days of the week (Sun-Sat)
                var weekdayLabels = new Array(7)
                  .fill(
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "I" /* startOfWeek */
                    ](this._visibleDate, {
                      weekStartsOn: this.options.weekStart,
                    })
                  )
                  .map(function (d, i) {
                    return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "l" /* format */
                    ](
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["a" /* addDays */](
                        d,
                        i
                      ),
                      "EEE",
                      {
                        locale: _this2.locale,
                      }
                    );
                  });
                this._ui.body.dates.appendChild(
                  document.createRange().createContextualFragment(
                    Object(
                      __WEBPACK_IMPORTED_MODULE_6__templates_weekdays__[
                        "a" /* default */
                      ]
                    )({
                      weekdays: weekdayLabels,
                    })
                  )
                );

                if (
                  this.min &&
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "g" /* differenceInMonths */
                  ](this._visibleDate, this.min) === 0
                ) {
                  this._togglePreviousButton(false);
                } else {
                  this._togglePreviousButton();
                }

                if (
                  this.max &&
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "g" /* differenceInMonths */
                  ](this._visibleDate, this.max) === 0
                ) {
                  this._toggleNextButton(false);
                } else {
                  this._toggleNextButton();
                }

                this._ui.navigation.month.innerHTML =
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                    this._visibleDate,
                    this.options.navigationMonthFormat,
                    {
                      locale: this.locale,
                    }
                  );
                this._ui.navigation.year.innerHTML =
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                    this._visibleDate,
                    this.options.navigationYearFormat,
                    {
                      locale: this.locale,
                    }
                  );

                this._renderDays();

                this._ui.body.dates.classList.add("is-active");
                this._ui.body.months.classList.remove("is-active");
                this._ui.body.years.classList.remove("is-active");

                return this;
              },
            },
            {
              key: "clear",
              value: function clear() {
                var today = new Date();

                this._date = {
                  start: undefined,
                  end: undefined,
                };

                this._setVisibleDate(today);
                this.refresh();
              },
            },
            {
              key: "render",
              value: function render() {
                this.refresh();
                return this.node;
              },

              /****************************************************
               *                                                  *
               * PRIVATE FUNCTIONS                                *
               *                                                  *
               ****************************************************/
            },
            {
              key: "_init",
              value: function _init() {
                var today = new Date();

                this._open = false;
                this.lang = this.options.lang;
                this.format = this.options.dateFormat || "d/M/yy";

                this.disabledDates = __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                  "c" /* isFunction */
                ](this.options.disabledDates)
                  ? this.options.disabledDates
                  : [];
                this.disabledWeekDays =
                  __WEBPACK_IMPORTED_MODULE_1__utils_type__["e" /* isString */](
                    this.options.disabledWeekDays
                  )
                    ? this.options.disabledWeekDays.split(",")
                    : Array.isArray(this.options.disabledWeekDays)
                    ? this.options.disabledWeekDays
                    : [];
                this.highlightedDates =
                  __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                    "c" /* isFunction */
                  ](this.options.highlightedDates)
                    ? this.options.highlightedDates
                    : [];

                if (Array.isArray(this.options.disabledDates)) {
                  for (var i = 0; i < this.options.disabledDates.length; i++) {
                    this.disabledDates.push(
                      __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                        this.options.disabledDates[i],
                        this.format,
                        "yyyy-MM-dd"
                      )
                    );
                  }
                }

                if (Array.isArray(this.options.highlightedDates)) {
                  for (
                    var _i = 0;
                    _i < this.options.highlightedDates.length;
                    _i++
                  ) {
                    this.highlightedDates.push(
                      __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                        this.options.highlightedDates[_i],
                        this.format,
                        "yyyy-MM-dd"
                      )
                    );
                  }
                }

                this.min = this.options.minDate;
                this.max = this.options.maxDate;
                this._date = {
                  start: __WEBPACK_IMPORTED_MODULE_0__utils__[
                    "b" /* newDate */
                  ](this.options.startDate, this.format, "yyyy-MM-dd"),
                  end: this.options.isRange
                    ? __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                        this.options.endDate,
                        this.format,
                        "yyyy-MM-dd"
                      )
                    : undefined,
                };

                this._visibleDate = this._isValidDate(this.start)
                  ? this.start
                  : this._isValidDate(today, this.min, this.max)
                  ? today
                  : this.min;

                this._build();
                this._bindEvents();

                this.emit("ready", this);
              },
            },
            {
              key: "_build",
              value: function _build() {
                this.node = document.createRange().createContextualFragment(
                  Object(
                    __WEBPACK_IMPORTED_MODULE_4__templates_datepicker__[
                      "a" /* default */
                    ]
                  )({
                    locale: this.locale,
                    visibleDate: this._visibleDate,
                    icons: this.options.icons,
                  })
                );

                this._ui = {
                  container: this.node.firstChild,
                  navigation: {
                    container: this.node.querySelector(".datepicker-nav"),
                    previous: this.node.querySelector(
                      ".datepicker-nav-previous"
                    ),
                    next: this.node.querySelector(".datepicker-nav-next"),
                    month: this.node.querySelector(".datepicker-nav-month"),
                    year: this.node.querySelector(".datepicker-nav-year"),
                  },
                  body: {
                    dates: this.node.querySelector(".datepicker-dates"),
                    days: this.node.querySelector(".datepicker-days"),
                    weekdays: this.node.querySelector(".datepicker-weekdays"),
                    months: this.node.querySelector(".datepicker-months"),
                    years: this.node.querySelector(".datepicker-years"),
                  },
                };
              },
            },
            {
              key: "_bindEvents",
              value: function _bindEvents() {
                var _this3 = this;

                document.addEventListener("keydown", function (e) {
                  if (_this3._focus) {
                    switch (e.keyCode || e.which) {
                      case 37:
                        _this3.onPreviousDatePicker(e);
                        break;
                      case 39:
                        _this3.onNextDatePicker(e);
                        break;
                    }
                  }
                });

                // Bind year navigation events
                if (this._ui.navigation.previous) {
                  this._clickEvents.forEach(function (clickEvent) {
                    _this3._ui.navigation.previous.addEventListener(
                      clickEvent,
                      _this3.onPreviousDatePicker
                    );
                  });
                }
                if (this._ui.navigation.next) {
                  this._clickEvents.forEach(function (clickEvent) {
                    _this3._ui.navigation.next.addEventListener(
                      clickEvent,
                      _this3.onNextDatePicker
                    );
                  });
                }

                if (this._ui.navigation.month) {
                  this._clickEvents.forEach(function (clickEvent) {
                    _this3._ui.navigation.month.addEventListener(
                      clickEvent,
                      _this3.onSelectMonthDatePicker
                    );
                  });
                }
                if (this._ui.navigation.year) {
                  this._clickEvents.forEach(function (clickEvent) {
                    _this3._ui.navigation.year.addEventListener(
                      clickEvent,
                      _this3.onSelectYearDatePicker
                    );
                  });
                }

                var months =
                  this._ui.body.months.querySelectorAll(".calendar-month") ||
                  [];
                months.forEach(function (month) {
                  _this3._clickEvents.forEach(function (clickEvent) {
                    month.addEventListener(
                      clickEvent,
                      _this3.onMonthClickDatePicker
                    );
                  });
                });

                var years =
                  this._ui.body.years.querySelectorAll(".calendar-year") || [];
                years.forEach(function (year) {
                  _this3._clickEvents.forEach(function (clickEvent) {
                    year.addEventListener(
                      clickEvent,
                      _this3.onYearClickDatePicker
                    );
                  });
                });
              },

              /**
               * Bind events on each Day item
               * @method _bindDaysEvents
               * @return {void}
               */
            },
            {
              key: "_bindDaysEvents",
              value: function _bindDaysEvents() {
                var _this4 = this;

                [].forEach.call(this._ui.days, function (day) {
                  _this4._clickEvents.forEach(function (clickEvent) {
                    // if not in range, no click action
                    // if in this month, select the date
                    // if out of this month, jump to the date
                    var onClick = !_this4._isValidDate(
                      new Date(day.dataset.date),
                      _this4.min,
                      _this4.max
                    )
                      ? null
                      : _this4.onDateClickDatePicker;
                    day.addEventListener(clickEvent, onClick);
                  });

                  day.addEventListener("hover", function (e) {
                    e.preventDEfault();
                  });
                });
              },
            },
            {
              key: "_renderDays",
              value: function _renderDays() {
                var _this5 = this;

                var start = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "I" /* startOfWeek */
                ](
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "G" /* startOfMonth */
                  ](this._visibleDate),
                  { weekStartsOn: this.options.weekStart }
                ); // first day of current month view
                var end = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "k" /* endOfWeek */
                ](
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["i" /* endOfMonth */](
                    this._visibleDate
                  ),
                  { weekStartsOn: this.options.weekStart }
                ); // last day of current month view

                // get all days and whether they are within the current month and range
                var days = new Array(
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "f" /* differenceInDays */
                  ](end, start) + 1
                )
                  .fill(start)
                  .map(function (s, i) {
                    var theDate = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "F" /* startOfDay */
                    ](
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["a" /* addDays */](
                        s,
                        i
                      )
                    );
                    var isThisMonth = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "u" /* isSameMonth */
                    ](_this5._visibleDate, theDate);
                    var isInRange =
                      _this5.options.isRange &&
                      _this5.end &&
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "x" /* isWithinInterval */
                      ](theDate, {
                        start: __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "F" /* startOfDay */
                        ](_this5.start),
                        end: __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "h" /* endOfDay */
                        ](_this5.end),
                      });
                    var isDisabled = _this5.max
                      ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "r" /* isAfter */
                        ](
                          __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "F" /* startOfDay */
                          ](theDate),
                          __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "h" /* endOfDay */
                          ](_this5.max)
                        )
                      : false;
                    isDisabled =
                      !isDisabled && _this5.min
                        ? __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "s" /* isBefore */
                          ](
                            __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                              "F" /* startOfDay */
                            ](theDate),
                            __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                              "F" /* startOfDay */
                            ](_this5.min)
                          )
                        : isDisabled;
                    var isHighlighted = false;

                    // Disabled Dates
                    if (Array.isArray(_this5.disabledDates)) {
                      for (var j = 0; j < _this5.disabledDates.length; j++) {
                        if (
                          theDate.toDateString() ===
                          _this5.disabledDates[j].toDateString()
                        ) {
                          isDisabled = true;
                        }
                      }
                    } else {
                      if (
                        __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                          "c" /* isFunction */
                        ](_this5.disabledDates)
                      ) {
                        if (_this5.disabledDates(_this5, theDate)) {
                          isDisabled = true;
                        }
                      }
                    }

                    // Highlighted Dates
                    if (Array.isArray(_this5.highlightedDates)) {
                      for (
                        var _j = 0;
                        _j < _this5.highlightedDates.length;
                        _j++
                      ) {
                        if (
                          theDate.toDateString() ===
                          _this5.highlightedDates[_j].toDateString()
                        ) {
                          isHighlighted = true;
                        }
                      }
                    } else {
                      if (
                        __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                          "c" /* isFunction */
                        ](_this5.highlightedDates)
                      ) {
                        if (_this5.highlightedDates(_this5, theDate)) {
                          isHighlighted = true;
                        }
                      }
                    }

                    // Disabled Weekdays
                    if (_this5.disabledWeekDays) {
                      _this5.disabledWeekDays.forEach(function (day) {
                        if (
                          __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "n" /* getDay */
                          ](theDate) == day
                        ) {
                          isDisabled = true;
                        }
                      });
                    }

                    return {
                      date: theDate,
                      isRange: _this5.options.isRange,
                      isToday:
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "v" /* isToday */
                        ](theDate),
                      isStartDate: __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "t" /* isEqual */
                      ](
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "F" /* startOfDay */
                        ](_this5.start),
                        theDate
                      ),
                      isEndDate: __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "t" /* isEqual */
                      ](
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "F" /* startOfDay */
                        ](_this5.end),
                        theDate
                      ),
                      isDisabled: isDisabled,
                      isThisMonth: isThisMonth,
                      isHighlighted: isHighlighted,
                      isInRange: isInRange,
                    };
                  });

                this._ui.body.dates.appendChild(
                  document
                    .createRange()
                    .createContextualFragment(
                      Object(
                        __WEBPACK_IMPORTED_MODULE_5__templates_days__[
                          "a" /* default */
                        ]
                      )(days)
                    )
                );
                this._ui.days =
                  this._ui.body.dates.querySelectorAll(".datepicker-date");
                this._bindDaysEvents();
              },
            },
            {
              key: "_select",
              value: function _select() {
                var _this6 = this;

                var date =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : undefined;
                var emit =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : true;

                if (
                  !__WEBPACK_IMPORTED_MODULE_1__utils_type__["b" /* isDate */](
                    date
                  )
                ) {
                  date = __WEBPACK_IMPORTED_MODULE_0__utils__[
                    "b" /* newDate */
                  ](date, this.format, "yyyy-MM-dd");
                }

                if (
                  this.options.isRange &&
                  (!this._isValidDate(this.start) ||
                    (this._isValidDate(this.start) &&
                      this._isValidDate(this.end)))
                ) {
                  this.start = date;
                  this.end = undefined;
                  if (emit) this.emit("select:start", this);
                } else if (
                  this.options.isRange &&
                  !this._isValidDate(this.end)
                ) {
                  if (
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["s" /* isBefore */](
                      date,
                      this.start
                    )
                  ) {
                    this.end = this.start;
                    this.start = date;
                    if (emit) this.emit("select", this);
                  } else if (
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["r" /* isAfter */](
                      date,
                      this.start
                    )
                  ) {
                    this.end = date;
                    if (emit) this.emit("select", this);
                  } else if (this.options.allowSameDayRange) {
                    this.end = date;
                    if (emit) this.emit("select", this);
                  } else {
                    this.start = date;
                    this.end = undefined;
                    if (emit) this.emit("select:start", this);
                  }
                } else {
                  this.start = date;
                  this.end = undefined;
                  if (emit) this.emit("select", this);
                }

                this._setVisibleDate(this.start);

                if (
                  this.options.isRange &&
                  this._isValidDate(this.start) &&
                  this._isValidDate(this.end)
                ) {
                  new Array(
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "f" /* differenceInDays */
                    ](this.end, this.start) + 1
                  )
                    .fill(this.start)
                    .map(function (s, i) {
                      var theDate = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "a" /* addDays */
                      ](s, i);
                      var dateElement = _this6._ui.body.dates.querySelector(
                        '.datepicker-date[data-date="' +
                          theDate.toString() +
                          '"]'
                      );
                      if (dateElement) {
                        if (
                          __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "t" /* isEqual */
                          ](_this6.start, theDate)
                        ) {
                          dateElement.classList.add("datepicker-range-start");
                        }
                        if (
                          __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                            "t" /* isEqual */
                          ](_this6.end, theDate)
                        ) {
                          dateElement.classList.add("datepicker-range-end");
                        }
                        dateElement.classList.add("datepicker-range");
                      }
                    });
                }
              },
            },
            {
              key: "_isValidDate",
              value: function _isValidDate(date, min, max) {
                try {
                  if (!date) {
                    return false;
                  }
                  if (
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["w" /* isValid */](
                      date
                    )
                  ) {
                    if (!min && !max) {
                      return true;
                    }
                    if (min && max) {
                      return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "x" /* isWithinInterval */
                      ](date, { start: min, end: max });
                    }
                    if (max) {
                      return (
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "s" /* isBefore */
                        ](date, max) ||
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "t" /* isEqual */
                        ](date, max)
                      );
                    }
                    return (
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["r" /* isAfter */](
                        date,
                        min
                      ) ||
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["t" /* isEqual */](
                        date,
                        min
                      )
                    );
                  } else {
                    return false;
                  }
                } catch (e) {
                  return false;
                }
              },
            },
            {
              key: "_setVisibleDate",
              value: function _setVisibleDate(date) {
                if (!date) return;

                if (this.min)
                  date = __WEBPACK_IMPORTED_MODULE_2_date_fns__["z" /* max */]([
                    date,
                    this.min,
                  ]);
                if (this.max)
                  date = __WEBPACK_IMPORTED_MODULE_2_date_fns__["A" /* min */]([
                    date,
                    this.max,
                  ]);

                this._visibleDate = date;
              },
            },
            {
              key: "_togglePreviousButton",
              value: function _togglePreviousButton() {
                var active =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : true;

                if (!active) {
                  this._ui.navigation.previous.setAttribute(
                    "disabled",
                    "disabled"
                  );
                } else {
                  this._ui.navigation.previous.removeAttribute("disabled");
                }
              },
            },
            {
              key: "_toggleNextButton",
              value: function _toggleNextButton() {
                var active =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : true;

                if (!active) {
                  this._ui.navigation.next.setAttribute("disabled", "disabled");
                } else {
                  this._ui.navigation.next.removeAttribute("disabled");
                }
              },
            },
            {
              key: "id",
              get: function get() {
                return this._id;
              },
            },
            {
              key: "date",
              set: function set(date) {
                if (
                  __WEBPACK_IMPORTED_MODULE_1__utils_type__["d" /* isObject */](
                    date
                  ) &&
                  date.start &&
                  date.end
                ) {
                  this._date = date;
                }
                return this;
              },
              get: function get() {
                return (
                  this._date || {
                    start: undefined,
                    end: undefined,
                  }
                );
              },

              // Set datePicker language
            },
            {
              key: "lang",
              set: function set(lang) {
                try {
                  this._locale = __webpack_require__(24)(
                    "./" + lang + "/index.js"
                  );
                } catch (e) {
                  lang = "pt-BR";
                  this._locale = __webpack_require__(24)(
                    "./" + lang + "/index.js"
                  );
                } finally {
                  this._lang = lang;
                  return this;
                }
              },

              // Get current datePicker language
              get: function get() {
                return this._lang;
              },
            },
            {
              key: "locale",
              get: function get() {
                return this._locale;
              },
            },
            {
              key: "start",
              set: function set(date) {
                if (!date) {
                  this._date.start = undefined;
                  return this;
                }

                date = __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                  date,
                  this.format,
                  "yyyy-MM-dd"
                );

                if (this._isValidDate(date, this.min, this.max)) {
                  this._date.start =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "F" /* startOfDay */
                    ](date);
                }

                return this;
              },
              get: function get() {
                return this._date.start;
              },
            },
            {
              key: "end",
              set: function set(date) {
                if (!date) {
                  this._date.end = undefined;
                  return this;
                }

                date = __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                  date,
                  this.format,
                  "yyyy-MM-dd"
                );

                if (this._isValidDate(date, this.min, this.max)) {
                  this._date.end =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["h" /* endOfDay */](
                      date
                    );
                }

                return this;
              },
              get: function get() {
                return this._date.end;
              },

              // Set min
            },
            {
              key: "min",
              set: function set(date) {
                this._min = __WEBPACK_IMPORTED_MODULE_0__utils__[
                  "b" /* newDate */
                ](date, this.format, "yyyy-MM-dd");
                return this;
              },

              // Get min
              get: function get() {
                return this._min;
              },

              // Set max
            },
            {
              key: "max",
              set: function set(date) {
                this._max = __WEBPACK_IMPORTED_MODULE_0__utils__[
                  "b" /* newDate */
                ](date, this.format, "yyyy-MM-dd");
                return this;
              },

              // Get max
              get: function get() {
                return this._max;
              },

              // Set date format (set to d/M/yy by default)
            },
            {
              key: "format",
              set: function set(format) {
                this._format = format;
                return this;
              },

              // Get date format
              get: function get() {
                return this._format;
              },
            },
          ]);

          return datePicker;
        })(__WEBPACK_IMPORTED_MODULE_3__utils_events__["a" /* default */]);

        /* harmony default export */ __webpack_exports__["a"] = datePicker;

        /***/
      },
      /* 624 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            '<div class="datepicker">\n    <div class="datepicker-nav">\n        <button type="button" class="datepicker-nav-previous  buttonCalendar is-small is-text">' +
            data.icons.previous +
            '</button>\n        <div class="datepicker-nav-month-year">\n          <div class="datepicker-nav-month"></div>\n          &nbsp;\n          <div class="datepicker-nav-year"></div>\n        </div>\n        <button type="button" class="datepicker-nav-next  buttonCalendar is-small is-text">' +
            data.icons.next +
            '</button>\n      </div>\n      <div class="datepicker-body">\n        <div class="datepicker-dates is-active"></div>\n        <div class="datepicker-months"></div>\n        <div class="datepicker-years"></div>\n      </div>\n    </div>'
          );
        };

        /***/
      },
      /* 625 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            '<div class="datepicker-days">' +
            data
              .map(function (theDate) {
                return (
                  '<div data-date="' +
                  theDate.date.toString() +
                  '" class="datepicker-date' +
                  (theDate.isThisMonth ? " is-current-month" : "") +
                  (theDate.isDisabled ? " is-disabled" : "") +
                  (theDate.isRange && theDate.isInRange
                    ? " datepicker-range"
                    : "") +
                  (theDate.isStartDate ? " datepicker-range-start" : "") +
                  (theDate.isEndDate ? " datepicker-range-end" : "") +
                  '">\n      <button class="date-item' +
                  (theDate.isToday ? " is-today" : "") +
                  (theDate.isHighlighted ? " is-highlighted" : "") +
                  (theDate.isStartDate ? " is-active" : "") +
                  '" type="button">' +
                  theDate.date.getDate() +
                  "</button>\n  </div>"
                );
              })
              .join("") +
            "</div>"
          );
        };

        /***/
      },
      /* 626 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            '<div class="datepicker-weekdays">\n\t\t' +
            data.weekdays
              .map(function (day) {
                return '<div class="datepicker-date">' + day + "</div>";
              })
              .join("") +
            "\n\t</div>"
          );
        };

        /***/
      },
      /* 627 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_date_fns__ =
          __webpack_require__(20);

        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            "" +
            data.months
              .map(function (month) {
                return (
                  '\n        <div class="datepicker-month" data-month="' +
                  Object(
                    __WEBPACK_IMPORTED_MODULE_0_date_fns__["l" /* format */]
                  )(month, "MM", { locale: data.locale }) +
                  '">\n            ' +
                  Object(
                    __WEBPACK_IMPORTED_MODULE_0_date_fns__["l" /* format */]
                  )(month, "MMM", { locale: data.locale }) +
                  "\n        </div>\n    "
                );
              })
              .join("")
          );
        };

        /***/
      },
      /* 628 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_date_fns__ =
          __webpack_require__(20);

        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            "" +
            data.years
              .map(function (year) {
                return (
                  '\n        <div class="datepicker-year" data-year="' +
                  Object(
                    __WEBPACK_IMPORTED_MODULE_0_date_fns__["l" /* format */]
                  )(year, "yyyy", { locale: data.locale }) +
                  '">\n            <span class="item">' +
                  Object(
                    __WEBPACK_IMPORTED_MODULE_0_date_fns__["l" /* format */]
                  )(year, "yyyy", { locale: data.locale }) +
                  "</span>\n        </div>\n    "
                );
              })
              .join("")
          );
        };

        /***/
      },
      /* 629 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var defaultOptions = {
          color: "primary",
          isRange: false,
          allowSameDayRange: true,
          lang: "pt-BR", // internationalization
          startDate: undefined,
          endDate: undefined,
          minDate: null,
          maxDate: null,
          disabledDates: [],
          disabledWeekDays: undefined,
          highlightedDates: [],
          weekStart: 0,
          dateFormat: "d/M/yy",
          navigationMonthFormat: "MMMM",
          navigationYearFormat: "yyyy",
          enableMonthSwitch: true,
          enableYearSwitch: true,
          displayYearsCount: 50,
        };

        /* harmony default export */ __webpack_exports__["a"] = defaultOptions;

        /***/
      },
      /* 630 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(122));

        var _index2 = _interopRequireDefault(__webpack_require__(123));

        var _index3 = _interopRequireDefault(__webpack_require__(124));

        var _index4 = _interopRequireDefault(__webpack_require__(125));

        var _index5 = _interopRequireDefault(__webpack_require__(126));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Afrikaans locale.
         * @language Afrikaans
         * @iso-639-2 afr
         * @author Marnus Weststrate [@marnusw]{@link https://github.com/marnusw}
         */
        var locale = {
          code: "af",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 631 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(127));

        var _index2 = _interopRequireDefault(__webpack_require__(128));

        var _index3 = _interopRequireDefault(__webpack_require__(129));

        var _index4 = _interopRequireDefault(__webpack_require__(130));

        var _index5 = _interopRequireDefault(__webpack_require__(131));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Arabic locale (Algerian Arabic).
         * @language Algerian Arabic
         * @iso-639-2 ara
         * @author Badreddine Boumaza [@badre429]{@link https://github.com/badre429}
         * @author Ahmed ElShahat [@elshahat]{@link https://github.com/elshahat}
         */
        var locale = {
          code: "ar-DZ",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 632 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(132));

        var _index2 = _interopRequireDefault(__webpack_require__(133));

        var _index3 = _interopRequireDefault(__webpack_require__(134));

        var _index4 = _interopRequireDefault(__webpack_require__(135));

        var _index5 = _interopRequireDefault(__webpack_require__(136));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Arabic locale (Moroccan Arabic).
         * @language Moroccan Arabic
         * @iso-639-2 ara
         * @author Achraf Rrami [@rramiachraf]{@link https://github.com/rramiachraf}
         */
        var locale = {
          code: "ar-MA",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            // Monday is 1
            weekStartsOn: 1,
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 633 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(137));

        var _index2 = _interopRequireDefault(__webpack_require__(138));

        var _index3 = _interopRequireDefault(__webpack_require__(139));

        var _index4 = _interopRequireDefault(__webpack_require__(140));

        var _index5 = _interopRequireDefault(__webpack_require__(141));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Arabic locale (Sauid Arabic).
         * @language Arabic
         * @iso-639-2 ara
         * @author Dhaifallah Alwadani [@dalwadani]{@link https://github.com/dalwadani}
         */
        var locale = {
          code: "ar-SA",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 634 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(142));

        var _index2 = _interopRequireDefault(__webpack_require__(143));

        var _index3 = _interopRequireDefault(__webpack_require__(144));

        var _index4 = _interopRequireDefault(__webpack_require__(145));

        var _index5 = _interopRequireDefault(__webpack_require__(146));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Azerbaijani locale.
         * @language Azerbaijani
         * @iso-639-2 aze
         */
        var locale = {
          code: "az",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 635 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = startOfUTCWeek;

        var _index = _interopRequireDefault(__webpack_require__(636));

        var _index2 = _interopRequireDefault(__webpack_require__(637));

        var _index3 = _interopRequireDefault(__webpack_require__(60));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // This function will be a part of public API when UTC function will be implemented.
        // See issue: https://github.com/date-fns/date-fns/issues/376
        function startOfUTCWeek(dirtyDate, dirtyOptions) {
          (0, _index3.default)(1, arguments);
          var options = dirtyOptions || {};
          var locale = options.locale;
          var localeWeekStartsOn =
            locale && locale.options && locale.options.weekStartsOn;
          var defaultWeekStartsOn =
            localeWeekStartsOn == null
              ? 0
              : (0, _index.default)(localeWeekStartsOn);
          var weekStartsOn =
            options.weekStartsOn == null
              ? defaultWeekStartsOn
              : (0, _index.default)(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

          if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
            throw new RangeError(
              "weekStartsOn must be between 0 and 6 inclusively"
            );
          }

          var date = (0, _index2.default)(dirtyDate);
          var day = date.getUTCDay();
          var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
          date.setUTCDate(date.getUTCDate() - diff);
          date.setUTCHours(0, 0, 0, 0);
          return date;
        }

        module.exports = exports.default;

        /***/
      },
      /* 636 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = toInteger;

        function toInteger(dirtyNumber) {
          if (
            dirtyNumber === null ||
            dirtyNumber === true ||
            dirtyNumber === false
          ) {
            return NaN;
          }

          var number = Number(dirtyNumber);

          if (isNaN(number)) {
            return number;
          }

          return number < 0 ? Math.ceil(number) : Math.floor(number);
        }

        module.exports = exports.default;

        /***/
      },
      /* 637 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = toDate;

        var _index = _interopRequireDefault(__webpack_require__(60));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @name toDate
         * @category Common Helpers
         * @summary Convert the given argument to an instance of Date.
         *
         * @description
         * Convert the given argument to an instance of Date.
         *
         * If the argument is an instance of Date, the function returns its clone.
         *
         * If the argument is a number, it is treated as a timestamp.
         *
         * If the argument is none of the above, the function returns Invalid Date.
         *
         * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
         *
         * @param {Date|Number} argument - the value to convert
         * @returns {Date} the parsed date in the local time zone
         * @throws {TypeError} 1 argument required
         *
         * @example
         * // Clone the date:
         * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
         * //=> Tue Feb 11 2014 11:30:30
         *
         * @example
         * // Convert the timestamp to date:
         * const result = toDate(1392098430000)
         * //=> Tue Feb 11 2014 11:30:30
         */
        function toDate(argument) {
          (0, _index.default)(1, arguments);
          var argStr = Object.prototype.toString.call(argument); // Clone the date

          if (
            argument instanceof Date ||
            (typeof argument === "object" && argStr === "[object Date]")
          ) {
            // Prevent the date to lose the milliseconds when passed to new Date() in IE10
            return new Date(argument.getTime());
          } else if (
            typeof argument === "number" ||
            argStr === "[object Number]"
          ) {
            return new Date(argument);
          } else {
            if (
              (typeof argument === "string" || argStr === "[object String]") &&
              typeof console !== "undefined"
            ) {
              // eslint-disable-next-line no-console
              console.warn(
                "Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"
              ); // eslint-disable-next-line no-console

              console.warn(new Error().stack);
            }

            return new Date(NaN);
          }
        }

        module.exports = exports.default;

        /***/
      },
      /* 638 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(147));

        var _index2 = _interopRequireDefault(__webpack_require__(148));

        var _index3 = _interopRequireDefault(__webpack_require__(149));

        var _index4 = _interopRequireDefault(__webpack_require__(150));

        var _index5 = _interopRequireDefault(__webpack_require__(151));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Belarusian locale.
         * @language Belarusian
         * @iso-639-2 bel
         * @author Kiryl Anokhin [@alyrik]{@link https://github.com/alyrik}
         * @author Martin Wind [@arvigeus]{@link https://github.com/mawi12345}
         */
        var locale = {
          code: "be",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 639 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(152));

        var _index2 = _interopRequireDefault(__webpack_require__(153));

        var _index3 = _interopRequireDefault(__webpack_require__(154));

        var _index4 = _interopRequireDefault(__webpack_require__(155));

        var _index5 = _interopRequireDefault(__webpack_require__(156));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Bulgarian locale.
         * @language Bulgarian
         * @iso-639-2 bul
         * @author Nikolay Stoynov [@arvigeus]{@link https://github.com/arvigeus}
         * @author Tsvetan Ovedenski [@fintara]{@link https://github.com/fintara}
         */
        var locale = {
          code: "bg",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 640 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(157));

        var _index2 = _interopRequireDefault(__webpack_require__(158));

        var _index3 = _interopRequireDefault(__webpack_require__(159));

        var _index4 = _interopRequireDefault(__webpack_require__(61));

        var _index5 = _interopRequireDefault(__webpack_require__(160));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Bengali locale.
         * @language Bengali
         * @iso-639-2 ben
         * @author Touhidur Rahman [@touhidrahman]{@link https://github.com/touhidrahman}
         * @author Farhad Yasir [@nutboltu]{@link https://github.com/nutboltu}
         */
        var locale = {
          code: "bn",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 641 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(161));

        var _index2 = _interopRequireDefault(__webpack_require__(162));

        var _index3 = _interopRequireDefault(__webpack_require__(163));

        var _index4 = _interopRequireDefault(__webpack_require__(164));

        var _index5 = _interopRequireDefault(__webpack_require__(165));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Catalan locale.
         * @language Catalan
         * @iso-639-2 cat
         * @author Guillermo Grau [@guigrpa]{@link https://github.com/guigrpa}
         * @author Alex Vizcaino [@avizcaino]{@link https://github.com/avizcaino}
         */
        var locale = {
          code: "ca",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale; // throw new Error('ca locale is currently unavailable. Please check the progress of converting this locale to v2.0.0 in this issue on Github: TBA')

        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 642 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(166));

        var _index2 = _interopRequireDefault(__webpack_require__(167));

        var _index3 = _interopRequireDefault(__webpack_require__(168));

        var _index4 = _interopRequireDefault(__webpack_require__(169));

        var _index5 = _interopRequireDefault(__webpack_require__(170));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Czech locale.
         * @language Czech
         * @iso-639-2 ces
         * @author David Rus [@davidrus]{@link https://github.com/davidrus}
         * @author Pavel Hrá¡ch [@SilenY]{@link https://github.com/SilenY}
         * @author Jozef Bá­roÅ¡ [@JozefBiros]{@link https://github.com/JozefBiros}
         */
        var locale = {
          code: "cs",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 643 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(171));

        var _index2 = _interopRequireDefault(__webpack_require__(172));

        var _index3 = _interopRequireDefault(__webpack_require__(173));

        var _index4 = _interopRequireDefault(__webpack_require__(174));

        var _index5 = _interopRequireDefault(__webpack_require__(175));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Welsh locale.
         * @language Welsh
         * @iso-639-2 cym
         * @author Elwyn Malethan [@elmomalmo]{@link https://github.com/elmomalmo}
         */
        var locale = {
          code: "cy",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 644 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(176));

        var _index2 = _interopRequireDefault(__webpack_require__(177));

        var _index3 = _interopRequireDefault(__webpack_require__(178));

        var _index4 = _interopRequireDefault(__webpack_require__(179));

        var _index5 = _interopRequireDefault(__webpack_require__(180));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Danish locale.
         * @language Danish
         * @iso-639-2 dan
         * @author Mathias Wá¸bbe [@MathiasKandelborg]{@link https://github.com/MathiasKandelborg}
         * @author Anders B. Hansen [@Andersbiha]{@link https://github.com/Andersbiha}
         * @author [@kgram]{@link https://github.com/kgram}
         * @author [@stefanbugge]{@link https://github.com/stefanbugge}
         */
        var locale = {
          code: "da",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 645 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(62));

        var _index2 = _interopRequireDefault(__webpack_require__(63));

        var _index3 = _interopRequireDefault(__webpack_require__(64));

        var _index4 = _interopRequireDefault(__webpack_require__(65));

        var _index5 = _interopRequireDefault(__webpack_require__(181));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // difference to 'de' locale

        /**
         * @type {Locale}
         * @category Locales
         * @summary German locale (Austria).
         * @language German
         * @iso-639-2 deu
         * @author Christoph Tobias Stenglein [@cstenglein]{@link https://github.com/cstenglein}
         */
        var locale = {
          code: "de-AT",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index5.default,
          match: _index4.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 646 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(62));

        var _index2 = _interopRequireDefault(__webpack_require__(63));

        var _index3 = _interopRequireDefault(__webpack_require__(64));

        var _index4 = _interopRequireDefault(__webpack_require__(182));

        var _index5 = _interopRequireDefault(__webpack_require__(65));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary German locale.
         * @language German
         * @iso-639-2 deu
         * @author Thomas Eilmsteiner [@DeMuu]{@link https://github.com/DeMuu}
         * @author Asia [@asia-t]{@link https://github.com/asia-t}
         * @author Van Vuong Ngo [@vanvuongngo]{@link https://github.com/vanvuongngo}
         * @author RomanErnst [@pex]{@link https://github.com/pex}
         * @author Philipp Keck [@Philipp91]{@link https://github.com/Philipp91}
         */
        var locale = {
          code: "de",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 647 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(183));

        var _index2 = _interopRequireDefault(__webpack_require__(184));

        var _index3 = _interopRequireDefault(__webpack_require__(185));

        var _index4 = _interopRequireDefault(__webpack_require__(186));

        var _index5 = _interopRequireDefault(__webpack_require__(187));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Greek locale.
         * @language Greek
         * @iso-639-2 ell
         * @author Fanis Katsimpas [@fanixk]{@link https://github.com/fanixk}
         * @author Theodoros Orfanidis [@teoulas]{@link https://github.com/teoulas}
         */
        var locale = {
          code: "el",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 648 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(19));

        var _index2 = _interopRequireDefault(__webpack_require__(188));

        var _index3 = _interopRequireDefault(__webpack_require__(13));

        var _index4 = _interopRequireDefault(__webpack_require__(14));

        var _index5 = _interopRequireDefault(__webpack_require__(15));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (Australia).
         * @language English
         * @iso-639-2 eng
         * @author Julien Malige [@JulienMalige]{@link https://github.com/JulienMalige}
         */
        var locale = {
          code: "en-AU",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 649 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(189));

        var _index2 = _interopRequireDefault(__webpack_require__(190));

        var _index3 = _interopRequireDefault(__webpack_require__(13));

        var _index4 = _interopRequireDefault(__webpack_require__(14));

        var _index5 = _interopRequireDefault(__webpack_require__(15));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (Canada).
         * @language English
         * @iso-639-2 eng
         * @author Mark Owsiak [@markowsiak]{@link https://github.com/markowsiak}
         * @author Marco Imperatore [@mimperatore]{@link https://github.com/mimperatore}
         */
        var locale = {
          code: "en-CA",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 650 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(19));

        var _index2 = _interopRequireDefault(__webpack_require__(191));

        var _index3 = _interopRequireDefault(__webpack_require__(13));

        var _index4 = _interopRequireDefault(__webpack_require__(14));

        var _index5 = _interopRequireDefault(__webpack_require__(15));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (United Kingdom).
         * @language English
         * @iso-639-2 eng
         * @author Alex [@glintik]{@link https://github.com/glintik}
         */
        var locale = {
          code: "en-GB",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 651 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(19));

        var _index2 = _interopRequireDefault(__webpack_require__(192));

        var _index3 = _interopRequireDefault(__webpack_require__(13));

        var _index4 = _interopRequireDefault(__webpack_require__(14));

        var _index5 = _interopRequireDefault(__webpack_require__(15));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (India).
         * @language English
         * @iso-639-2 eng
         * @author Galeel Bhasha Satthar [@gbhasha]{@link https://github.com/gbhasha}
         */
        var locale = {
          code: "en-IN",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            // Monday is the first day of the week.
            firstWeekContainsDate: 4, // The week that contains Jan 4th is the first week of the year.
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 652 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(19));

        var _index2 = _interopRequireDefault(__webpack_require__(193));

        var _index3 = _interopRequireDefault(__webpack_require__(13));

        var _index4 = _interopRequireDefault(__webpack_require__(14));

        var _index5 = _interopRequireDefault(__webpack_require__(15));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (New Zealand).
         * @language English
         * @iso-639-2 eng
         * @author Murray Lucas [@muntact]{@link https://github.com/muntact}
         */
        var locale = {
          code: "en-NZ",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 653 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(19));

        var _index2 = _interopRequireDefault(__webpack_require__(194));

        var _index3 = _interopRequireDefault(__webpack_require__(13));

        var _index4 = _interopRequireDefault(__webpack_require__(14));

        var _index5 = _interopRequireDefault(__webpack_require__(15));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (United States).
         * @language English
         * @iso-639-2 eng
         * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
         * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
         */
        var locale = {
          code: "pt-BR",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 654 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(19));

        var _index2 = _interopRequireDefault(__webpack_require__(195));

        var _index3 = _interopRequireDefault(__webpack_require__(13));

        var _index4 = _interopRequireDefault(__webpack_require__(14));

        var _index5 = _interopRequireDefault(__webpack_require__(15));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary English locale (South Africa).
         * @language English
         * @iso-639-2 eng
         * @author Shaila Kavrakova [@shaykav]{@link https://github.com/shaykav}
         */
        var locale = {
          code: "en-ZA",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            // Sunday is the first day of the week.
            firstWeekContainsDate: 1, // The week that contains Jan 1st is the first week of the year.
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 655 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(196));

        var _index2 = _interopRequireDefault(__webpack_require__(197));

        var _index3 = _interopRequireDefault(__webpack_require__(198));

        var _index4 = _interopRequireDefault(__webpack_require__(199));

        var _index5 = _interopRequireDefault(__webpack_require__(200));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Esperanto locale.
         * @language Esperanto
         * @iso-639-2 epo
         * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
         */
        var locale = {
          code: "eo",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 656 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(201));

        var _index2 = _interopRequireDefault(__webpack_require__(202));

        var _index3 = _interopRequireDefault(__webpack_require__(203));

        var _index4 = _interopRequireDefault(__webpack_require__(204));

        var _index5 = _interopRequireDefault(__webpack_require__(205));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Spanish locale.
         * @language Spanish
         * @iso-639-2 spa
         * @author Juan Angosto [@juanangosto]{@link https://github.com/juanangosto}
         * @author Guillermo Grau [@guigrpa]{@link https://github.com/guigrpa}
         * @author Fernando Agá¼ero [@fjaguero]{@link https://github.com/fjaguero}
         * @author Gastá³n Haro [@harogaston]{@link https://github.com/harogaston}
         * @author Yago Carballo [@YagoCarballo]{@link https://github.com/YagoCarballo}
         */
        var locale = {
          code: "es",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 657 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(206));

        var _index2 = _interopRequireDefault(__webpack_require__(207));

        var _index3 = _interopRequireDefault(__webpack_require__(208));

        var _index4 = _interopRequireDefault(__webpack_require__(209));

        var _index5 = _interopRequireDefault(__webpack_require__(210));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Estonian locale.
         * @language Estonian
         * @iso-639-2 est
         * @author Priit Hansen [@HansenPriit]{@link https://github.com/priithansen}
         */
        var locale = {
          code: "et",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 658 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(211));

        var _index2 = _interopRequireDefault(__webpack_require__(212));

        var _index3 = _interopRequireDefault(__webpack_require__(213));

        var _index4 = _interopRequireDefault(__webpack_require__(214));

        var _index5 = _interopRequireDefault(__webpack_require__(215));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Basque locale.
         * @language Basque
         * @iso-639-2 eus
         * @author Jacob Sá¶derblom [@JacobSoderblom]{@link https://github.com/JacobSoderblom}
         */
        var locale = {
          code: "eu",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 659 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(216));

        var _index2 = _interopRequireDefault(__webpack_require__(217));

        var _index3 = _interopRequireDefault(__webpack_require__(218));

        var _index4 = _interopRequireDefault(__webpack_require__(219));

        var _index5 = _interopRequireDefault(__webpack_require__(220));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Persian/Farsi locale (Iran).
         * @language Persian
         * @iso-639-2 ira
         * @author Morteza Ziyae [@mort3za]{@link https://github.com/mort3za}
         */
        var locale = {
          code: "fa-IR",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 6,
            /* Saturday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 660 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(221));

        var _index2 = _interopRequireDefault(__webpack_require__(222));

        var _index3 = _interopRequireDefault(__webpack_require__(223));

        var _index4 = _interopRequireDefault(__webpack_require__(224));

        var _index5 = _interopRequireDefault(__webpack_require__(225));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Finnish locale.
         * @language Finnish
         * @iso-639-2 fin
         * @author Pyry-Samuli Lahti [@Pyppe]{@link https://github.com/Pyppe}
         * @author Edo Rivai [@mikolajgrzyb]{@link https://github.com/mikolajgrzyb}
         * @author Samu Juvonen [@sjuvonen]{@link https://github.com/sjuvonen}
         */
        var locale = {
          code: "fi",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 661 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(66));

        var _index2 = _interopRequireDefault(__webpack_require__(67));

        var _index3 = _interopRequireDefault(__webpack_require__(68));

        var _index4 = _interopRequireDefault(__webpack_require__(69));

        var _index5 = _interopRequireDefault(__webpack_require__(226));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        // Same as fr
        // Unique for fr-CA

        /**
         * @type {Locale}
         * @category Locales
         * @summary French locale (Canada).
         * @language French
         * @iso-639-2 fra
         * @author Jean Dupouy [@izeau]{@link https://github.com/izeau}
         * @author Franá§ois B [@fbonzon]{@link https://github.com/fbonzon}
         * @author Gabriele Petrioli [@gpetrioli]{@link https://github.com/gpetrioli}
         */
        var locale = {
          code: "fr-CA",
          formatDistance: _index.default,
          formatLong: _index5.default,
          formatRelative: _index2.default,
          localize: _index3.default,
          match: _index4.default,
          // Unique for fr-CA
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 662 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;
        var formatters = {}; // Special case for day of month ordinals in long date format context:
        // 1er mars, 2 mars, 3 mars, â€¦
        // See https://github.com/date-fns/date-fns/issues/437

        var monthsTokens = ["MMM", "MMMM"];
        monthsTokens.forEach(function (monthToken) {
          formatters["Do " + monthToken] = function (date, options) {
            var commonFormatters = options.formatters;
            var dayOfMonthToken = date.getUTCDate() === 1 ? "Do" : "D";
            var dayOfMonthFormatter = commonFormatters[dayOfMonthToken];
            var monthFormatter = commonFormatters[monthToken];
            return (
              dayOfMonthFormatter(date, options) +
              " " +
              monthFormatter(date, options)
            );
          };
        });
        var _default = formatters;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 663 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(227));

        var _index2 = _interopRequireDefault(__webpack_require__(228));

        var _index3 = _interopRequireDefault(__webpack_require__(229));

        var _index4 = _interopRequireDefault(__webpack_require__(230));

        var _index5 = _interopRequireDefault(__webpack_require__(231));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary French locale.
         * @language French
         * @iso-639-2 fra
         * @author Jean Dupouy [@izeau]{@link https://github.com/izeau}
         * @author Franá§ois B [@fbonzon]{@link https://github.com/fbonzon}
         * @author Van Vuong Ngo [@vanvuongngo]{@link https://github.com/vanvuongngo}
         * @author Alex Hoeing [@dcbn]{@link https://github.com/dcbn}
         */
        var locale = {
          code: "fr-CH",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 664 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;
        var formatters = {}; // Special case for day of month ordinals in long date format context:
        // 1er mars, 2 mars, 3 mars, â€¦
        // See https://github.com/date-fns/date-fns/issues/437

        var monthsTokens = ["MMM", "MMMM"];
        monthsTokens.forEach(function (monthToken) {
          formatters["Do " + monthToken] = function (date, options) {
            var commonFormatters = options.formatters;
            var dayOfMonthToken = date.getUTCDate() === 1 ? "Do" : "D";
            var dayOfMonthFormatter = commonFormatters[dayOfMonthToken];
            var monthFormatter = commonFormatters[monthToken];
            return (
              dayOfMonthFormatter(date, options) +
              " " +
              monthFormatter(date, options)
            );
          };
        });
        var _default = formatters;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 665 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(66));

        var _index2 = _interopRequireDefault(__webpack_require__(232));

        var _index3 = _interopRequireDefault(__webpack_require__(67));

        var _index4 = _interopRequireDefault(__webpack_require__(68));

        var _index5 = _interopRequireDefault(__webpack_require__(69));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary French locale.
         * @language French
         * @iso-639-2 fra
         * @author Jean Dupouy [@izeau]{@link https://github.com/izeau}
         * @author Franá§ois B [@fbonzon]{@link https://github.com/fbonzon}
         */
        var locale = {
          code: "fr",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 666 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(233));

        var _index2 = _interopRequireDefault(__webpack_require__(234));

        var _index3 = _interopRequireDefault(__webpack_require__(235));

        var _index4 = _interopRequireDefault(__webpack_require__(236));

        var _index5 = _interopRequireDefault(__webpack_require__(237));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Scottish Gaelic.
         * @language Scottish Gaelic
         * @iso-639-2 gla
         * @author Lee Driscoll [@leedriscoll]{@link https://github.com/leedriscoll}
         */
        var locale = {
          code: "gd",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 667 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(238));

        var _index2 = _interopRequireDefault(__webpack_require__(239));

        var _index3 = _interopRequireDefault(__webpack_require__(240));

        var _index4 = _interopRequireDefault(__webpack_require__(241));

        var _index5 = _interopRequireDefault(__webpack_require__(242));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Galician locale.
         * @language Galician
         * @iso-639-2 glg
         * @author Alberto Doval - Cocodin Technology[@cocodinTech]{@link https://github.com/cocodinTech}
         * @author Fidel Pita [@fidelpita]{@link https://github.com/fidelpita}
         */
        var locale = {
          code: "gl",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 668 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(243));

        var _index2 = _interopRequireDefault(__webpack_require__(244));

        var _index3 = _interopRequireDefault(__webpack_require__(245));

        var _index4 = _interopRequireDefault(__webpack_require__(246));

        var _index5 = _interopRequireDefault(__webpack_require__(247));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Gujarati locale (India).
         * @language Gujarati
         * @iso-639-2 guj
         * @author Manaday Mavani [@ManadayM]{@link https://github.com/manadaym}
         */
        var locale = {
          code: "gu",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 669 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(248));

        var _index2 = _interopRequireDefault(__webpack_require__(249));

        var _index3 = _interopRequireDefault(__webpack_require__(250));

        var _index4 = _interopRequireDefault(__webpack_require__(251));

        var _index5 = _interopRequireDefault(__webpack_require__(252));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Hebrew locale.
         * @language Hebrew
         * @iso-639-2 heb
         * @author Nir Lahad [@nirlah]{@link https://github.com/nirlah}
         */
        var locale = {
          code: "he",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 670 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(253));

        var _index2 = _interopRequireDefault(__webpack_require__(254));

        var _index3 = _interopRequireDefault(__webpack_require__(255));

        var _index4 = _interopRequireDefault(__webpack_require__(39));

        var _index5 = _interopRequireDefault(__webpack_require__(256));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Hindi locale (India).
         * @language Hindi
         * @iso-639-2 hin
         * @author Mukesh Mandiwal [@mukeshmandiwal]{@link https://github.com/mukeshmandiwal}
         */
        var locale = {
          code: "hi",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 671 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(257));

        var _index2 = _interopRequireDefault(__webpack_require__(258));

        var _index3 = _interopRequireDefault(__webpack_require__(259));

        var _index4 = _interopRequireDefault(__webpack_require__(260));

        var _index5 = _interopRequireDefault(__webpack_require__(261));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Croatian locale.
         * @language Croatian
         * @iso-639-2 hrv
         * @author Matija MarohniÄ‡ [@silvenon]{@link https://github.com/silvenon}
         * @author Manico [@manico]{@link https://github.com/manico}
         * @author Ivan JerÅ¾abek [@jerzabek]{@link https://github.com/jerzabek}
         */
        var locale = {
          code: "hr",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 672 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;
        var formatters = {}; // Special case for day of month ordinals in long date format context:
        // 1er mars, 2 mars, 3 mars, â€¦
        // See https://github.com/date-fns/date-fns/issues/437

        var monthsTokens = ["MMM", "MMMM"];
        monthsTokens.forEach(function (monthToken) {
          formatters["Do " + monthToken] = function (date, options) {
            var commonFormatters = options.formatters;
            var dayOfMonthToken = date.getUTCDate() === 1 ? "Do" : "D";
            var dayOfMonthFormatter = commonFormatters[dayOfMonthToken];
            var monthFormatter = commonFormatters[monthToken];
            return (
              dayOfMonthFormatter(date, options) +
              " " +
              monthFormatter(date, options)
            );
          };
        });
        var _default = formatters;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 673 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(262));

        var _index2 = _interopRequireDefault(__webpack_require__(263));

        var _index3 = _interopRequireDefault(__webpack_require__(264));

        var _index4 = _interopRequireDefault(__webpack_require__(265));

        var _index5 = _interopRequireDefault(__webpack_require__(266));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Haitian Creole locale.
         * @language Haitian Creole
         * @iso-639-2 hat
         * @author Rubens Mariuzzo [@rmariuzzo]{@link https://github.com/rmariuzzo}
         * @author Watson Marcelain [@watsongm24]{@link https://github.com/watsongm24}
         */
        var locale = {
          code: "ht",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 674 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(267));

        var _index2 = _interopRequireDefault(__webpack_require__(268));

        var _index3 = _interopRequireDefault(__webpack_require__(269));

        var _index4 = _interopRequireDefault(__webpack_require__(270));

        var _index5 = _interopRequireDefault(__webpack_require__(271));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         *
         * @summary Hungarian locale.
         * @language Hungarian
         *
         * @iso-639-2 hun
         *
         * @author Pavlo Shpak [@pshpak]{@link https://github.com/pshpak}
         * @author Eduardo Pardo [@eduardopsll]{@link https://github.com/eduardopsll}
         * @author Zoltan Szepesi [@twodcube]{@link https://github.com/twodcube}
         */
        var locale = {
          code: "hu",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 675 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(272));

        var _index2 = _interopRequireDefault(__webpack_require__(273));

        var _index3 = _interopRequireDefault(__webpack_require__(274));

        var _index4 = _interopRequireDefault(__webpack_require__(275));

        var _index5 = _interopRequireDefault(__webpack_require__(276));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Armenian locale
         * @language Armenian
         * @iso-639-2 arm
         * @author Alex Igityan [@alexigityan]{@link https://github.com/alexigityan}
         */
        var locale = {
          code: "hy",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 676 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(277));

        var _index2 = _interopRequireDefault(__webpack_require__(278));

        var _index3 = _interopRequireDefault(__webpack_require__(279));

        var _index4 = _interopRequireDefault(__webpack_require__(280));

        var _index5 = _interopRequireDefault(__webpack_require__(281));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Indonesian locale.
         * @language Indonesian
         * @iso-639-2 ind
         * @author Rahmat Budiharso [@rbudiharso]{@link https://github.com/rbudiharso}
         * @author Benget Nata [@bentinata]{@link https://github.com/bentinata}
         * @author Budi Irawan [@deerawan]{@link https://github.com/deerawan}
         * @author Try Ajitiono [@imballinst]{@link https://github.com/imballinst}
         */
        var locale = {
          code: "id",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 677 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(282));

        var _index2 = _interopRequireDefault(__webpack_require__(283));

        var _index3 = _interopRequireDefault(__webpack_require__(284));

        var _index4 = _interopRequireDefault(__webpack_require__(285));

        var _index5 = _interopRequireDefault(__webpack_require__(286));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Icelandic locale.
         * @language Icelandic
         * @iso-639-2 isl
         * @author Derek Blank [@derekblank]{@link https://github.com/derekblank}
         * @author Arná³r ámir [@lamayg]{@link https://github.com/lamayg}
         */
        var locale = {
          code: "is",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 678 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(287));

        var _index2 = _interopRequireDefault(__webpack_require__(288));

        var _index3 = _interopRequireDefault(__webpack_require__(289));

        var _index4 = _interopRequireDefault(__webpack_require__(290));

        var _index5 = _interopRequireDefault(__webpack_require__(291));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Italian locale.
         * @language Italian
         * @iso-639-2 ita
         * @author Alberto Restifo [@albertorestifo]{@link https://github.com/albertorestifo}
         * @author Giovanni Polimeni [@giofilo]{@link https://github.com/giofilo}
         * @author Vincenzo Carrese [@vin-car]{@link https://github.com/vin-car}
         */
        var locale = {
          code: "it",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 679 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(292));

        var _index2 = _interopRequireDefault(__webpack_require__(293));

        var _index3 = _interopRequireDefault(__webpack_require__(294));

        var _index4 = _interopRequireDefault(__webpack_require__(295));

        var _index5 = _interopRequireDefault(__webpack_require__(296));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Japanese locale.
         * @language Japanese
         * @iso-639-2 jpn
         * @author Thomas Eilmsteiner [@DeMuu]{@link https://github.com/DeMuu}
         * @author Yamagishi Kazutoshi [@ykzts]{@link https://github.com/ykzts}
         * @author Luca Ban [@mesqueeb]{@link https://github.com/mesqueeb}
         * @author Terrence Lam [@skyuplam]{@link https://github.com/skyuplam}
         * @author Taiki IKeda [@so99ynoodles]{@link https://github.com/so99ynoodles}
         */
        var locale = {
          code: "ja",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 680 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(297));

        var _index2 = _interopRequireDefault(__webpack_require__(298));

        var _index3 = _interopRequireDefault(__webpack_require__(299));

        var _index4 = _interopRequireDefault(__webpack_require__(300));

        var _index5 = _interopRequireDefault(__webpack_require__(301));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Georgian locale.
         * @language Georgian
         * @iso-639-2 geo
         * @author Lado Lomidze [@Landish]{@link https://github.com/Landish}
         * @author Nick Shvelidze [@shvelo]{@link https://github.com/shvelo}
         */
        var locale = {
          code: "ka",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 681 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(302));

        var _index2 = _interopRequireDefault(__webpack_require__(303));

        var _index3 = _interopRequireDefault(__webpack_require__(304));

        var _index4 = _interopRequireDefault(__webpack_require__(305));

        var _index5 = _interopRequireDefault(__webpack_require__(306));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Kazakh locale.
         * @language Kazakh
         * @iso-639-2 kaz
         * @author Nikita Bayev [@drugoi]{@link https://github.com/drugoi}
         */
        var locale = {
          code: "kk",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 682 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(307));

        var _index2 = _interopRequireDefault(__webpack_require__(308));

        var _index3 = _interopRequireDefault(__webpack_require__(309));

        var _index4 = _interopRequireDefault(__webpack_require__(310));

        var _index5 = _interopRequireDefault(__webpack_require__(311));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Kannada locale (India).
         * @language Kannada
         * @iso-639-2 kan
         * @author Manjunatha Gouli [@developergouli]{@link https://github.com/developergouli}
         */
        var locale = {
          code: "kn",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 683 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(312));

        var _index2 = _interopRequireDefault(__webpack_require__(313));

        var _index3 = _interopRequireDefault(__webpack_require__(314));

        var _index4 = _interopRequireDefault(__webpack_require__(315));

        var _index5 = _interopRequireDefault(__webpack_require__(316));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Korean locale.
         * @language Korean
         * @iso-639-2 kor
         * @author Hong Chulju [@angdev]{@link https://github.com/angdev}
         * @author Lee Seoyoen [@iamssen]{@link https://github.com/iamssen}
         * @author Taiki IKeda [@so99ynoodles]{@link https://github.com/so99ynoodles}
         */
        var locale = {
          code: "ko",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 684 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(317));

        var _index2 = _interopRequireDefault(__webpack_require__(318));

        var _index3 = _interopRequireDefault(__webpack_require__(319));

        var _index4 = _interopRequireDefault(__webpack_require__(320));

        var _index5 = _interopRequireDefault(__webpack_require__(321));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Luxembourgish locale.
         * @language Luxembourgish
         * @iso-639-2 ltz
         * @author Daniel Waxweiler [@dwaxweiler]{@link https://github.com/dwaxweiler}
         */
        var locale = {
          code: "lb",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 685 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(322));

        var _index2 = _interopRequireDefault(__webpack_require__(323));

        var _index3 = _interopRequireDefault(__webpack_require__(324));

        var _index4 = _interopRequireDefault(__webpack_require__(325));

        var _index5 = _interopRequireDefault(__webpack_require__(326));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         *
         * @summary Lithuanian locale.
         * @language Lithuanian
         *
         * @iso-639-2 lit
         *
         * @author Pavlo Shpak [@pshpak]{@link https://github.com/pshpak}
         * @author Eduardo Pardo [@eduardopsll]{@link https://github.com/eduardopsll}
         */
        var locale = {
          code: "lt",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 686 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(327));

        var _index2 = _interopRequireDefault(__webpack_require__(328));

        var _index3 = _interopRequireDefault(__webpack_require__(329));

        var _index4 = _interopRequireDefault(__webpack_require__(330));

        var _index5 = _interopRequireDefault(__webpack_require__(331));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Latvian locale (Latvia).
         * @language Latvian
         * @iso-639-2 lav
         * @author RÅ«dolfs PuÄ·Ä«tis [@prudolfs]{@link https://github.com/prudolfs}
         */
        var locale = {
          code: "lv",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 687 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(332));

        var _index2 = _interopRequireDefault(__webpack_require__(333));

        var _index3 = _interopRequireDefault(__webpack_require__(334));

        var _index4 = _interopRequireDefault(__webpack_require__(335));

        var _index5 = _interopRequireDefault(__webpack_require__(336));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Macedonian locale.
         * @language Macedonian
         * @iso-639-2 mkd
         * @author Petar Vlahu [@vlahupetar]{@link https://github.com/vlahupetar}
         * @author Altrim Beqiri [@altrim]{@link https://github.com/altrim}
         */
        var locale = {
          code: "mk",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 688 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(337));

        var _index2 = _interopRequireDefault(__webpack_require__(338));

        var _index3 = _interopRequireDefault(__webpack_require__(339));

        var _index4 = _interopRequireDefault(__webpack_require__(340));

        var _index5 = _interopRequireDefault(__webpack_require__(341));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Mongolian locale.
         * @language Mongolian
         * @iso-639-2 mon
         * @author Bilguun Ochirbat [@bilguun0203]{@link https://github.com/bilguun0203}
         */
        var locale = {
          code: "mn",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 689 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(342));

        var _index2 = _interopRequireDefault(__webpack_require__(343));

        var _index3 = _interopRequireDefault(__webpack_require__(344));

        var _index4 = _interopRequireDefault(__webpack_require__(345));

        var _index5 = _interopRequireDefault(__webpack_require__(346));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Malay locale.
         * @language Malay
         * @iso-639-2 msa
         * @author Ruban Selvarajah [@Zyten]{@link https://github.com/Zyten}
         */
        var locale = {
          code: "ms",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 690 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(347));

        var _index2 = _interopRequireDefault(__webpack_require__(348));

        var _index3 = _interopRequireDefault(__webpack_require__(349));

        var _index4 = _interopRequireDefault(__webpack_require__(350));

        var _index5 = _interopRequireDefault(__webpack_require__(351));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Maltese locale.
         * @language Maltese
         * @iso-639-2 mlt
         * @author Andras Matzon [@amatzon](@link https://github.com/amatzon)
         * @author Bryan Borg [@bryanMt](@link https://github.com/bryanMt)
         */
        var locale = {
          code: "mt",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 691 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(352));

        var _index2 = _interopRequireDefault(__webpack_require__(353));

        var _index3 = _interopRequireDefault(__webpack_require__(354));

        var _index4 = _interopRequireDefault(__webpack_require__(355));

        var _index5 = _interopRequireDefault(__webpack_require__(356));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Norwegian Bokmá¥l locale.
         * @language Norwegian Bokmá¥l
         * @iso-639-2 nob
         * @author Hans-Kristian Koren [@Hanse]{@link https://github.com/Hanse}
         * @author Mikolaj Grzyb [@mikolajgrzyb]{@link https://github.com/mikolajgrzyb}
         * @author Dag Stuan [@dagstuan]{@link https://github.com/dagstuan}
         */
        var locale = {
          code: "nb",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 692 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(357));

        var _index2 = _interopRequireDefault(__webpack_require__(358));

        var _index3 = _interopRequireDefault(__webpack_require__(359));

        var _index4 = _interopRequireDefault(__webpack_require__(360));

        var _index5 = _interopRequireDefault(__webpack_require__(361));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Dutch locale.
         * @language Dutch
         * @iso-639-2 nld
         * @author Jorik Tangelder [@jtangelder]{@link https://github.com/jtangelder}
         * @author Ruben Stolk [@rubenstolk]{@link https://github.com/rubenstolk}
         * @author Lode Vanhove [@bitcrumb]{@link https://github.com/bitcrumb}
         * @author Alex Hoeing [@dcbn]{@link https://github.com/dcbn}
         */
        var locale = {
          code: "nl-BE",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 693 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(362));

        var _index2 = _interopRequireDefault(__webpack_require__(363));

        var _index3 = _interopRequireDefault(__webpack_require__(364));

        var _index4 = _interopRequireDefault(__webpack_require__(365));

        var _index5 = _interopRequireDefault(__webpack_require__(366));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Dutch locale.
         * @language Dutch
         * @iso-639-2 nld
         * @author Jorik Tangelder [@jtangelder]{@link https://github.com/jtangelder}
         * @author Ruben Stolk [@rubenstolk]{@link https://github.com/rubenstolk}
         * @author Lode Vanhove [@bitcrumb]{@link https://github.com/bitcrumb}
         * @author Edo Rivai [@edorivai]{@link https://github.com/edorivai}
         * @author Niels Keurentjes [@curry684]{@link https://github.com/curry684}
         * @author Stefan Vermaas [@stefanvermaas]{@link https://github.com/stefanvermaas}
         */
        var locale = {
          code: "nl",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 694 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(367));

        var _index2 = _interopRequireDefault(__webpack_require__(368));

        var _index3 = _interopRequireDefault(__webpack_require__(369));

        var _index4 = _interopRequireDefault(__webpack_require__(370));

        var _index5 = _interopRequireDefault(__webpack_require__(371));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Norwegian Nynorsk locale.
         * @language Norwegian Nynorsk
         * @iso-639-2 nno
         * @author Mats Byrkjeland [@draperunner]{@link https://github.com/draperunner}
         */
        var locale = {
          code: "nn",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 695 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(372));

        var _index2 = _interopRequireDefault(__webpack_require__(373));

        var _index3 = _interopRequireDefault(__webpack_require__(374));

        var _index4 = _interopRequireDefault(__webpack_require__(375));

        var _index5 = _interopRequireDefault(__webpack_require__(376));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Polish locale.
         * @language Polish
         * @iso-639-2 pol
         * @author Mateusz Derks [@ertrzyiks]{@link https://github.com/ertrzyiks}
         * @author Just RAG [@justrag]{@link https://github.com/justrag}
         * @author Mikolaj Grzyb [@mikolajgrzyb]{@link https://github.com/mikolajgrzyb}
         * @author Mateusz Tokarski [@mutisz]{@link https://github.com/mutisz}
         */
        var locale = {
          code: "pl",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 696 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(377));

        var _index2 = _interopRequireDefault(__webpack_require__(378));

        var _index3 = _interopRequireDefault(__webpack_require__(379));

        var _index4 = _interopRequireDefault(__webpack_require__(380));

        var _index5 = _interopRequireDefault(__webpack_require__(381));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Portuguese locale (Brazil).
         * @language Portuguese
         * @iso-639-2 por
         * @author Lucas Duailibe [@duailibe]{@link https://github.com/duailibe}
         * @author Yago Carballo [@yagocarballo]{@link https://github.com/YagoCarballo}
         */
        var locale = {
          code: "pt-BR",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 697 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(382));

        var _index2 = _interopRequireDefault(__webpack_require__(383));

        var _index3 = _interopRequireDefault(__webpack_require__(384));

        var _index4 = _interopRequireDefault(__webpack_require__(385));

        var _index5 = _interopRequireDefault(__webpack_require__(386));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Portuguese locale.
         * @language Portuguese
         * @iso-639-2 por
         * @author Dá¡rio Freire [@dfreire]{@link https://github.com/dfreire}
         * @author Adriá¡n de la Rosa [@adrm]{@link https://github.com/adrm}
         */
        var locale = {
          code: "pt",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 698 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(387));

        var _index2 = _interopRequireDefault(__webpack_require__(388));

        var _index3 = _interopRequireDefault(__webpack_require__(389));

        var _index4 = _interopRequireDefault(__webpack_require__(390));

        var _index5 = _interopRequireDefault(__webpack_require__(391));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Romanian locale.
         * @language Romanian
         * @iso-639-2 ron
         * @author Sergiu Munteanu [@jsergiu]{@link https://github.com/jsergiu}
         * @author Adrian Ocneanu [@aocneanu]{@link https://github.com/aocneanu}
         * @author Mihai Ocneanu [@gandesc]{@link https://github.com/gandesc}
         */
        var locale = {
          code: "ro",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 699 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(392));

        var _index2 = _interopRequireDefault(__webpack_require__(393));

        var _index3 = _interopRequireDefault(__webpack_require__(394));

        var _index4 = _interopRequireDefault(__webpack_require__(395));

        var _index5 = _interopRequireDefault(__webpack_require__(396));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Russian locale.
         * @language Russian
         * @iso-639-2 rus
         * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
         * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
         */
        var locale = {
          code: "ru",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 700 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(397));

        var _index2 = _interopRequireDefault(__webpack_require__(398));

        var _index3 = _interopRequireDefault(__webpack_require__(399));

        var _index4 = _interopRequireDefault(__webpack_require__(400));

        var _index5 = _interopRequireDefault(__webpack_require__(401));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Slovak locale.
         * @language Slovak
         * @iso-639-2 slk
         * @author Marek Suscak [@mareksuscak]{@link https://github.com/mareksuscak}
         */
        var locale = {
          code: "sk",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 701 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(402));

        var _index2 = _interopRequireDefault(__webpack_require__(403));

        var _index3 = _interopRequireDefault(__webpack_require__(404));

        var _index4 = _interopRequireDefault(__webpack_require__(405));

        var _index5 = _interopRequireDefault(__webpack_require__(406));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Slovenian locale.
         * @language Slovenian
         * @iso-639-2 slv
         * @author Adam Stradovnik [@Neoglyph]{@link https://github.com/Neoglyph}
         * @author Mato Å½gajner [@mzgajner]{@link https://github.com/mzgajner}
         */
        var locale = {
          code: "sl",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 702 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(407));

        var _index2 = _interopRequireDefault(__webpack_require__(408));

        var _index3 = _interopRequireDefault(__webpack_require__(409));

        var _index4 = _interopRequireDefault(__webpack_require__(410));

        var _index5 = _interopRequireDefault(__webpack_require__(411));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Albanian locale.
         * @language Shqip
         * @iso-639-2 sqi
         * @author Ardit Dine [@arditdine]{@link https://github.com/arditdine}
         */
        var locale = {
          code: "sq",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 703 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(412));

        var _index2 = _interopRequireDefault(__webpack_require__(413));

        var _index3 = _interopRequireDefault(__webpack_require__(414));

        var _index4 = _interopRequireDefault(__webpack_require__(415));

        var _index5 = _interopRequireDefault(__webpack_require__(416));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Serbian latin locale.
         * @language Serbian
         * @iso-639-2 srp
         * @author Igor RadivojeviÄ‡ [@rogyvoje]{@link https://github.com/rogyvoje}
         */
        var locale = {
          code: "sr-Latn",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 704 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(417));

        var _index2 = _interopRequireDefault(__webpack_require__(418));

        var _index3 = _interopRequireDefault(__webpack_require__(419));

        var _index4 = _interopRequireDefault(__webpack_require__(420));

        var _index5 = _interopRequireDefault(__webpack_require__(421));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Serbian cyrillic locale.
         * @language Serbian
         * @iso-639-2 srp
         * @author Igor RadivojeviÄ‡ [@rogyvoje]{@link https://github.com/rogyvoje}
         */
        var locale = {
          code: "sr",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 705 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(422));

        var _index2 = _interopRequireDefault(__webpack_require__(423));

        var _index3 = _interopRequireDefault(__webpack_require__(424));

        var _index4 = _interopRequireDefault(__webpack_require__(425));

        var _index5 = _interopRequireDefault(__webpack_require__(426));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Swedish locale.
         * @language Swedish
         * @iso-639-2 swe
         * @author Johannes Ulá©n [@ejulen]{@link https://github.com/ejulen}
         * @author Alexander Nanberg [@alexandernanberg]{@link https://github.com/alexandernanberg}
         * @author Henrik Andersson [@limelights]{@link https://github.com/limelights}
         */
        var locale = {
          code: "sv",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 706 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(427));

        var _index2 = _interopRequireDefault(__webpack_require__(428));

        var _index3 = _interopRequireDefault(__webpack_require__(429));

        var _index4 = _interopRequireDefault(__webpack_require__(430));

        var _index5 = _interopRequireDefault(__webpack_require__(431));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Tamil locale (India).
         * @language Tamil
         * @iso-639-2 tam
         * @author Sibiraj [@sibiraj-s]{@link https://github.com/sibiraj-s}
         */
        var locale = {
          code: "ta",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 707 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(432));

        var _index2 = _interopRequireDefault(__webpack_require__(433));

        var _index3 = _interopRequireDefault(__webpack_require__(434));

        var _index4 = _interopRequireDefault(__webpack_require__(435));

        var _index5 = _interopRequireDefault(__webpack_require__(436));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Telugu locale
         * @language Telugu
         * @iso-639-2 tel
         * @author Kranthi Lakum [@kranthilakum]{@link https://github.com/kranthilakum}
         */
        var locale = {
          code: "te",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 708 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(437));

        var _index2 = _interopRequireDefault(__webpack_require__(438));

        var _index3 = _interopRequireDefault(__webpack_require__(439));

        var _index4 = _interopRequireDefault(__webpack_require__(440));

        var _index5 = _interopRequireDefault(__webpack_require__(441));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Thai locale.
         * @language Thai
         * @iso-639-2 tha
         * @author Athiwat Hirunworawongkun [@athivvat]{@link https://github.com/athivvat}
         * @author [@hawkup]{@link https://github.com/hawkup}
         * @author  Jirawat I. [@nodtem66]{@link https://github.com/nodtem66}
         */
        var locale = {
          code: "th",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 709 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(442));

        var _index2 = _interopRequireDefault(__webpack_require__(443));

        var _index3 = _interopRequireDefault(__webpack_require__(444));

        var _index4 = _interopRequireDefault(__webpack_require__(445));

        var _index5 = _interopRequireDefault(__webpack_require__(446));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Turkish locale.
         * @language Turkish
         * @iso-639-2 tur
         * @author Alpcan AydÄ±n [@alpcanaydin]{@link https://github.com/alpcanaydin}
         * @author Berkay SargÄ±n [@berkaey]{@link https://github.com/berkaey}
         * @author Ismail Demirbilek [@dbtek]{@link https://github.com/dbtek}
         * @author Ä°smail Kayar [@ikayar]{@link https://github.com/ikayar}
         *
         *
         */
        var locale = {
          code: "tr",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 710 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(447));

        var _index2 = _interopRequireDefault(__webpack_require__(448));

        var _index3 = _interopRequireDefault(__webpack_require__(449));

        var _index4 = _interopRequireDefault(__webpack_require__(450));

        var _index5 = _interopRequireDefault(__webpack_require__(451));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Uighur locale
         * @language Uighur
         * @iso-639-2 uig
         * @author Abduwaly M. [@abduwaly]{@link https://github.com/abduwaly}
         */
        var locale = {
          code: "ug",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 0,
            /* Sunday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 711 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(452));

        var _index2 = _interopRequireDefault(__webpack_require__(453));

        var _index3 = _interopRequireDefault(__webpack_require__(454));

        var _index4 = _interopRequireDefault(__webpack_require__(455));

        var _index5 = _interopRequireDefault(__webpack_require__(456));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Ukrainian locale.
         * @language Ukrainian
         * @iso-639-2 ukr
         * @author Andrii Korzh [@korzhyk]{@link https://github.com/korzhyk}
         * @author Andriy Shcherbyak [@shcherbyakdev]{@link https://github.com/shcherbyakdev}
         */
        var locale = {
          code: "uk",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 712 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(457));

        var _index2 = _interopRequireDefault(__webpack_require__(458));

        var _index3 = _interopRequireDefault(__webpack_require__(459));

        var _index4 = _interopRequireDefault(__webpack_require__(460));

        var _index5 = _interopRequireDefault(__webpack_require__(461));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Uzbek locale.
         * @language Uzbek
         * @iso-639-2 uzb
         * @author Mukhammadali [@mukhammadali]{@link https://github.com/Mukhammadali}
         */
        var locale = {
          code: "uz",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 713 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(462));

        var _index2 = _interopRequireDefault(__webpack_require__(463));

        var _index3 = _interopRequireDefault(__webpack_require__(464));

        var _index4 = _interopRequireDefault(__webpack_require__(465));

        var _index5 = _interopRequireDefault(__webpack_require__(466));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Vietnamese locale (Vietnam).
         * @language Vietnamese
         * @iso-639-2 vie
         * @author Thanh Tran [@trongthanh]{@link https://github.com/trongthanh}
         * @author Leroy Hopson [@lihop]{@link https://github.com/lihop}
         */
        var locale = {
          code: "vi",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 1,
            /* First week of new year contains Jan 1st  */
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 714 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(467));

        var _index2 = _interopRequireDefault(__webpack_require__(468));

        var _index3 = _interopRequireDefault(__webpack_require__(469));

        var _index4 = _interopRequireDefault(__webpack_require__(470));

        var _index5 = _interopRequireDefault(__webpack_require__(471));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Chinese Simplified locale.
         * @language Chinese Simplified
         * @iso-639-2 zho
         * @author Changyu Geng [@KingMario]{@link https://github.com/KingMario}
         * @author Song Shuoyun [@fnlctrl]{@link https://github.com/fnlctrl}
         * @author sabrinaM [@sabrinamiao]{@link https://github.com/sabrinamiao}
         * @author Carney Wu [@cubicwork]{@link https://github.com/cubicwork}
         * @author Terrence Lam [@skyuplam]{@link https://github.com/skyuplam}
         */
        var locale = {
          code: "zh-CN",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 715 */
      /***/ function (module, exports, __webpack_require__) {
        "use strict";

        Object.defineProperty(exports, "__esModule", {
          value: true,
        });
        exports.default = void 0;

        var _index = _interopRequireDefault(__webpack_require__(472));

        var _index2 = _interopRequireDefault(__webpack_require__(473));

        var _index3 = _interopRequireDefault(__webpack_require__(474));

        var _index4 = _interopRequireDefault(__webpack_require__(475));

        var _index5 = _interopRequireDefault(__webpack_require__(476));

        function _interopRequireDefault(obj) {
          return obj && obj.__esModule ? obj : { default: obj };
        }

        /**
         * @type {Locale}
         * @category Locales
         * @summary Chinese Traditional locale.
         * @language Chinese Traditional
         * @iso-639-2 zho
         * @author tonypai [@tpai]{@link https://github.com/tpai}
         * @author Jack Hsu [@jackhsu978]{@link https://github.com/jackhsu978}
         * @author Terrence Lam [@skyuplam]{@link https://github.com/skyuplam}
         */
        var locale = {
          code: "zh-TW",
          formatDistance: _index.default,
          formatLong: _index2.default,
          formatRelative: _index3.default,
          localize: _index4.default,
          match: _index5.default,
          options: {
            weekStartsOn: 1,
            /* Monday */
            firstWeekContainsDate: 4,
          },
        };
        var _default = locale;
        exports.default = _default;
        module.exports = exports.default;

        /***/
      },
      /* 716 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ =
          __webpack_require__(40);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils_type__ =
          __webpack_require__(30);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_date_fns__ =
          __webpack_require__(20);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_events__ =
          __webpack_require__(59);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__templates_timepicker__ =
          __webpack_require__(717);
        /* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__defaultOptions__ =
          __webpack_require__(718);
        var _extends =
          Object.assign ||
          function (target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source) {
                if (Object.prototype.hasOwnProperty.call(source, key)) {
                  target[key] = source[key];
                }
              }
            }
            return target;
          };

        var _createClass = (function () {
          function defineProperties(target, props) {
            for (var i = 0; i < props.length; i++) {
              var descriptor = props[i];
              descriptor.enumerable = descriptor.enumerable || false;
              descriptor.configurable = true;
              if ("value" in descriptor) descriptor.writable = true;
              Object.defineProperty(target, descriptor.key, descriptor);
            }
          }
          return function (Constructor, protoProps, staticProps) {
            if (protoProps) defineProperties(Constructor.prototype, protoProps);
            if (staticProps) defineProperties(Constructor, staticProps);
            return Constructor;
          };
        })();

        function _classCallCheck(instance, Constructor) {
          if (!(instance instanceof Constructor)) {
            throw new TypeError("Cannot call a class as a function");
          }
        }

        function _possibleConstructorReturn(self, call) {
          if (!self) {
            throw new ReferenceError(
              "this hasn't been initialised - super() hasn't been called"
            );
          }
          return call &&
            (typeof call === "object" || typeof call === "function")
            ? call
            : self;
        }

        function _inherits(subClass, superClass) {
          if (typeof superClass !== "function" && superClass !== null) {
            throw new TypeError(
              "Super expression must either be null or a function, not " +
                typeof superClass
            );
          }
          subClass.prototype = Object.create(
            superClass && superClass.prototype,
            {
              constructor: {
                value: subClass,
                enumerable: false,
                writable: true,
                configurable: true,
              },
            }
          );
          if (superClass)
            Object.setPrototypeOf
              ? Object.setPrototypeOf(subClass, superClass)
              : (subClass.__proto__ = superClass);
        }

        var timePicker = (function (_EventEmitter) {
          _inherits(timePicker, _EventEmitter);

          function timePicker() {
            var options =
              arguments.length > 0 && arguments[0] !== undefined
                ? arguments[0]
                : {};

            _classCallCheck(this, timePicker);

            var _this = _possibleConstructorReturn(
              this,
              (timePicker.__proto__ || Object.getPrototypeOf(timePicker)).call(
                this
              )
            );

            _this.options = _extends(
              {},
              __WEBPACK_IMPORTED_MODULE_5__defaultOptions__["a" /* default */],
              options
            );

            _this._clickEvents = ["click", "touch"];
            _this._supportsPassive =
              __WEBPACK_IMPORTED_MODULE_0__utils__[
                "a" /* detectSupportsPassive */
              ]();
            _this._id =
              __WEBPACK_IMPORTED_MODULE_0__utils__["c" /* uuid */](
                "timePicker"
              );
            _this.node = null;

            _this.onPreviousHourStartTimePicker =
              _this.onPreviousHourStartTimePicker.bind(_this);
            _this.onNextHourStartTimePicker =
              _this.onNextHourStartTimePicker.bind(_this);
            _this.onPreviousMinuteStartTimePicker =
              _this.onPreviousMinuteStartTimePicker.bind(_this);
            _this.onNextMinuteStartTimePicker =
              _this.onNextMinuteStartTimePicker.bind(_this);
            _this.onPreviousHourEndTimePicker =
              _this.onPreviousHourEndTimePicker.bind(_this);
            _this.onNextHourEndTimePicker =
              _this.onNextHourEndTimePicker.bind(_this);
            _this.onPreviousMinuteEndTimePicker =
              _this.onPreviousMinuteEndTimePicker.bind(_this);
            _this.onNextMinuteEndTimePicker =
              _this.onNextMinuteEndTimePicker.bind(_this);

            _this._init();
            return _this;
          }

          /****************************************************
           *                                                  *
           * PRIVATE FUNCTIONS                                *
           *                                                  *
           ****************************************************/

          _createClass(timePicker, [
            {
              key: "_init",
              value: function _init() {
                this._open = false;
                this.lang = this.options.lang;
                this.format = this.options.format || "HH:mm";
                this.min = this.options.min;
                this.max = this.options.max;

                this._time = {
                  start:
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "H" /* startOfToday */
                    ](),
                  end: __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "j" /* endOfToday */
                  ](),
                };

                this.start =
                  __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                    this.options.startTime,
                    this.format,
                    "HH:mm"
                  ) ||
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "H" /* startOfToday */
                  ]();
                this.end = this.options.isRange
                  ? __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                      this.options.endTime,
                      this.format,
                      "HH:mm"
                    )
                  : __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "j" /* endOfToday */
                    ]();

                this._build();
                this._bindEvents();

                this.emit("ready", this);
              },
            },
            {
              key: "_build",
              value: function _build() {
                this.node = document.createRange().createContextualFragment(
                  Object(
                    __WEBPACK_IMPORTED_MODULE_4__templates_timepicker__[
                      "a" /* default */
                    ]
                  )({
                    locale: this.locale,
                    isRange: this.options.isRange,
                    editTimeManually: this.options.editTimeManually,
                    icons: this.options.icons,
                  })
                );

                this._ui = {
                  container: this.node.firstChild,
                  start: {
                    container: this.node.querySelector(".timepicker-start"),
                    hours: {
                      container: this.node.querySelector(
                        ".timepicker-start .timepicker-hours"
                      ),
                      input: this.node.querySelector(
                        ".timepicker-start .timepicker-hours input"
                      ),
                      number: this.node.querySelector(
                        ".timepicker-start .timepicker-hours .timepicker-input-number"
                      ),
                      previous: this.node.querySelector(
                        ".timepicker-start .timepicker-hours .timepicker-previous"
                      ),
                      next: this.node.querySelector(
                        ".timepicker-start .timepicker-hours .timepicker-next"
                      ),
                    },
                    minutes: {
                      container: this.node.querySelector(
                        ".timepicker-start .timepicker-minutes"
                      ),
                      input: this.node.querySelector(
                        ".timepicker-start .timepicker-minutes input"
                      ),
                      number: this.node.querySelector(
                        ".timepicker-start .timepicker-minutes .timepicker-input-number"
                      ),
                      previous: this.node.querySelector(
                        ".timepicker-start .timepicker-minutes .timepicker-previous"
                      ),
                      next: this.node.querySelector(
                        ".timepicker-start .timepicker-minutes .timepicker-next"
                      ),
                    },
                  },
                  end: {
                    container: this.node.querySelector(".timepicker-end"),
                    hours: {
                      container: this.node.querySelector(
                        ".timepicker-end .timepicker-hours"
                      ),
                      input: this.node.querySelector(
                        ".timepicker-end .timepicker-hours input"
                      ),
                      number: this.node.querySelector(
                        ".timepicker-end .timepicker-hours .timepicker-input-number"
                      ),
                      previous: this.node.querySelector(
                        ".timepicker-end .timepicker-hours .timepicker-previous"
                      ),
                      next: this.node.querySelector(
                        ".timepicker-end .timepicker-hours .timepicker-next"
                      ),
                    },
                    minutes: {
                      container: this.node.querySelector(
                        ".timepicker-end .timepicker-minutes"
                      ),
                      input: this.node.querySelector(
                        ".timepicker-end .timepicker-minutes input"
                      ),
                      number: this.node.querySelector(
                        ".timepicker-end .timepicker-minutes .timepicker-input-number"
                      ),
                      previous: this.node.querySelector(
                        ".timepicker-end .timepicker-minutes .timepicker-previous"
                      ),
                      next: this.node.querySelector(
                        ".timepicker-end .timepicker-minutes .timepicker-next"
                      ),
                    },
                  },
                };
              },
            },
            {
              key: "_bindEvents",
              value: function _bindEvents() {
                var _this2 = this;

                this._clickEvents.forEach(function (clickEvent) {
                  _this2._ui.start.hours.previous.addEventListener(
                    clickEvent,
                    _this2.onPreviousHourStartTimePicker
                  );
                  _this2._ui.start.hours.next.addEventListener(
                    clickEvent,
                    _this2.onNextHourStartTimePicker
                  );
                  _this2._ui.start.minutes.previous.addEventListener(
                    clickEvent,
                    _this2.onPreviousMinuteStartTimePicker
                  );
                  _this2._ui.start.minutes.next.addEventListener(
                    clickEvent,
                    _this2.onNextMinuteStartTimePicker
                  );

                  if (_this2.options.isRange) {
                    _this2._ui.end.hours.previous.addEventListener(
                      clickEvent,
                      _this2.onPreviousHourEndTimePicker
                    );
                    _this2._ui.end.hours.next.addEventListener(
                      clickEvent,
                      _this2.onNextHourEndTimePicker
                    );
                    _this2._ui.end.minutes.previous.addEventListener(
                      clickEvent,
                      _this2.onPreviousMinuteEndTimePicker
                    );
                    _this2._ui.end.minutes.next.addEventListener(
                      clickEvent,
                      _this2.onNextMinuteEndTimePicker
                    );
                  }
                });
              },
            },
            {
              key: "_select",
              value: function _select() {
                var time =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : undefined;
                var emit =
                  arguments.length > 1 && arguments[1] !== undefined
                    ? arguments[1]
                    : true;

                if (
                  !__WEBPACK_IMPORTED_MODULE_1__utils_type__["b" /* isDate */](
                    time
                  )
                ) {
                  time = __WEBPACK_IMPORTED_MODULE_0__utils__[
                    "b" /* newDate */
                  ](time, this.format, "HH:mm");
                }

                if (
                  this.options.isRange &&
                  (!this._isValidTime(this.start) ||
                    (this._isValidTime(this.start) &&
                      this._isValidTime(this.end)))
                ) {
                  this.start = time;
                  this.end =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "j" /* endOfToday */
                    ]();
                  if (emit) this.emit("select:start", this);
                } else if (
                  this.options.isRange &&
                  !this._isValidTime(this.end)
                ) {
                  if (
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["s" /* isBefore */](
                      time,
                      this.start
                    )
                  ) {
                    this.end = this.start;
                    this.start =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "j" /* endOfToday */
                      ]();
                    if (emit) this.emit("select", this);
                  } else if (
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["r" /* isAfter */](
                      time,
                      this.start
                    )
                  ) {
                    this.end = time;
                    if (emit) this.emit("select", this);
                  } else {
                    this.start = time;
                    this.end =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "j" /* endOfToday */
                      ]();
                    if (emit) this.emit("select:start", this);
                  }
                } else {
                  this.start = time;
                  this.end =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "j" /* endOfToday */
                    ]();
                  if (emit) this.emit("select", this);
                }
              },
            },
            {
              key: "_isValidTime",
              value: function _isValidTime(time, min, max) {
                try {
                  if (!time) {
                    return false;
                  }
                  if (
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["w" /* isValid */](
                      time
                    )
                  ) {
                    if (!min && !max) {
                      return true;
                    }
                    if (min && max) {
                      return __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                        "x" /* isWithinInterval */
                      ](time, { start: min, end: max });
                    }
                    if (max) {
                      return (
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "s" /* isBefore */
                        ](time, max) ||
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "t" /* isEqual */
                        ](time, max)
                      );
                    }
                    return (
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["r" /* isAfter */](
                        time,
                        min
                      ) ||
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["t" /* isEqual */](
                        time,
                        min
                      )
                    );
                  } else {
                    return false;
                  }
                } catch (e) {
                  return false;
                }
              },

              /****************************************************
               *                                                  *
               * GETTERS and SETTERS                              *
               *                                                  *
               ****************************************************/
              /**
               * Get id of current TimePicker
               */
            },
            {
              key: "onPreviousHourStartTimePicker",

              /****************************************************
               *                                                  *
               * EVENTS FUNCTIONS                                 *
               *                                                  *
               ****************************************************/
              value: function onPreviousHourStartTimePicker(e) {
                var _this3 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.start = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "K" /* subHours */
                ](this.start, 1);

                setTimeout(function () {
                  _this3._ui.start.hours.number.classList.add(
                    "is-decrement-hide"
                  );

                  setTimeout(function () {
                    _this3._ui.start.hours.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this3.start,
                        "HH"
                      );
                    _this3._ui.start.hours.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this3.start,
                        "HH"
                      );
                    _this3._ui.start.hours.number.classList.add(
                      "is-decrement-visible"
                    );
                    _this3.emit("select", _this3);
                  }, 100);

                  setTimeout(function () {
                    _this3._ui.start.hours.number.classList.remove(
                      "is-decrement-hide"
                    );
                    _this3._ui.start.hours.number.classList.remove(
                      "is-decrement-visible"
                    );
                  }, 1100);
                }, 100);
              },
            },
            {
              key: "onNextHourStartTimePicker",
              value: function onNextHourStartTimePicker(e) {
                var _this4 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.start = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "b" /* addHours */
                ](this.start, 1);

                setTimeout(function () {
                  _this4._ui.start.hours.number.classList.add(
                    "is-increment-hide"
                  );

                  setTimeout(function () {
                    _this4._ui.start.hours.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this4.start,
                        "HH"
                      );
                    _this4._ui.start.hours.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this4.start,
                        "HH"
                      );
                    _this4._ui.start.hours.number.classList.add(
                      "is-increment-visible"
                    );
                    _this4.emit("select", _this4);
                  }, 100);

                  setTimeout(function () {
                    _this4._ui.start.hours.number.classList.remove(
                      "is-increment-hide"
                    );
                    _this4._ui.start.hours.number.classList.remove(
                      "is-increment-visible"
                    );
                  }, 1100);
                }, 100);
              },
            },
            {
              key: "onPreviousMinuteStartTimePicker",
              value: function onPreviousMinuteStartTimePicker(e) {
                var _this5 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.start = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "L" /* subMinutes */
                ](this.start, this.options.minuteSteps);

                setTimeout(function () {
                  _this5._ui.start.minutes.number.classList.add(
                    "is-decrement-hide"
                  );

                  setTimeout(function () {
                    _this5._ui.start.minutes.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this5.start,
                        "mm"
                      );
                    _this5._ui.start.minutes.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this5.start,
                        "mm"
                      );
                    _this5._ui.start.minutes.number.classList.add(
                      "is-decrement-visible"
                    );

                    _this5.emit("select", _this5);

                    if (
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this5.start,
                        "HH"
                      ) !== _this5._ui.start.hours.input.value
                    ) {
                      _this5._ui.start.hours.number.innerText =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this5.start, "HH");
                      _this5._ui.start.hours.input.value =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this5.start, "HH");
                      _this5._ui.start.hours.number.classList.add(
                        "is-decrement-visible"
                      );
                    }
                  }, 100);

                  setTimeout(function () {
                    _this5._ui.start.minutes.number.classList.remove(
                      "is-decrement-hide"
                    );
                    _this5._ui.start.minutes.number.classList.remove(
                      "is-decrement-visible"
                    );

                    _this5._ui.start.hours.number.classList.remove(
                      "is-decrement-hide"
                    );
                    _this5._ui.start.hours.number.classList.remove(
                      "is-decrement-visible"
                    );
                  }, 1100);
                }, 100);
              },
            },
            {
              key: "onNextMinuteStartTimePicker",
              value: function onNextMinuteStartTimePicker(e) {
                var _this6 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.start = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "c" /* addMinutes */
                ](this.start, this.options.minuteSteps);

                setTimeout(function () {
                  _this6._ui.start.minutes.number.classList.add(
                    "is-increment-hide"
                  );

                  setTimeout(function () {
                    _this6._ui.start.minutes.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this6.start,
                        "mm"
                      );
                    _this6._ui.start.minutes.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this6.start,
                        "mm"
                      );
                    _this6._ui.start.minutes.number.classList.add(
                      "is-increment-visible"
                    );

                    _this6.emit("select", _this6);

                    if (
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this6.start,
                        "HH"
                      ) !== _this6._ui.start.hours.input.value
                    ) {
                      _this6._ui.start.hours.number.innerText =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this6.start, "HH");
                      _this6._ui.start.hours.input.value =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this6.start, "HH");
                      _this6._ui.start.hours.number.classList.add(
                        "is-increment-visible"
                      );
                    }
                  }, 100);

                  setTimeout(function () {
                    _this6._ui.start.minutes.number.classList.remove(
                      "is-increment-hide"
                    );
                    _this6._ui.start.minutes.number.classList.remove(
                      "is-increment-visible"
                    );

                    _this6._ui.start.hours.number.classList.remove(
                      "is-increment-hide"
                    );
                    _this6._ui.start.hours.number.classList.remove(
                      "is-increment-visible"
                    );
                  }, 1100);
                }, 100);
              },
            },
            {
              key: "onPreviousHourEndTimePicker",
              value: function onPreviousHourEndTimePicker(e) {
                var _this7 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.end = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "K" /* subHours */
                ](this.end, 1);

                setTimeout(function () {
                  _this7._ui.end.hours.number.classList.add(
                    "is-decrement-hide"
                  );

                  setTimeout(function () {
                    _this7._ui.end.hours.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this7.end,
                        "HH"
                      );
                    _this7._ui.end.hours.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this7.end,
                        "HH"
                      );
                    _this7._ui.end.hours.number.classList.add(
                      "is-decrement-visible"
                    );
                    _this7.emit("select", _this7);
                  }, 100);

                  setTimeout(function () {
                    _this7._ui.end.hours.number.classList.remove(
                      "is-decrement-hide"
                    );
                    _this7._ui.end.hours.number.classList.remove(
                      "is-decrement-visible"
                    );
                  }, 1100);
                }, 100);
              },
            },
            {
              key: "onNextHourEndTimePicker",
              value: function onNextHourEndTimePicker(e) {
                var _this8 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.end = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "b" /* addHours */
                ](this.end, 1);

                setTimeout(function () {
                  _this8._ui.end.hours.number.classList.add(
                    "is-increment-hide"
                  );

                  setTimeout(function () {
                    _this8._ui.end.hours.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this8.end,
                        "HH"
                      );
                    _this8._ui.end.hours.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this8.end,
                        "HH"
                      );
                    _this8._ui.end.hours.number.classList.add(
                      "is-increment-visible"
                    );
                    _this8.emit("select", _this8);
                  }, 100);

                  setTimeout(function () {
                    _this8._ui.end.hours.number.classList.remove(
                      "is-increment-hide"
                    );
                    _this8._ui.end.hours.number.classList.remove(
                      "is-increment-visible"
                    );
                  }, 1100);
                }, 100);
              },
            },
            {
              key: "onPreviousMinuteEndTimePicker",
              value: function onPreviousMinuteEndTimePicker(e) {
                var _this9 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.end = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "L" /* subMinutes */
                ](this.end, this.options.minuteSteps);

                setTimeout(function () {
                  _this9._ui.end.minutes.number.classList.add(
                    "is-decrement-hide"
                  );

                  setTimeout(function () {
                    _this9._ui.end.minutes.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this9.end,
                        "mm"
                      );
                    _this9._ui.end.minutes.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this9.end,
                        "mm"
                      );
                    _this9._ui.end.minutes.number.classList.add(
                      "is-decrement-visible"
                    );

                    _this9.emit("select", _this9);

                    if (
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this9.end,
                        "HH"
                      ) !== _this9._ui.end.hours.input.value
                    ) {
                      _this9._ui.end.hours.number.innerText =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this9.end, "HH");
                      _this9._ui.end.hours.input.value =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this9.end, "HH");
                      _this9._ui.end.hours.number.classList.add(
                        "is-decrement-visible"
                      );
                    }
                  }, 100);

                  setTimeout(function () {
                    _this9._ui.end.minutes.number.classList.remove(
                      "is-decrement-hide"
                    );
                    _this9._ui.end.minutes.number.classList.remove(
                      "is-decrement-visible"
                    );
                  }, 1100);
                }, 100);
              },
            },
            {
              key: "onNextMinuteEndTimePicker",
              value: function onNextMinuteEndTimePicker(e) {
                var _this10 = this;

                if (!this._supportsPassive) {
                  e.preventDefault();
                }
                e.stopPropagation();

                this.end = __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                  "c" /* addMinutes */
                ](this.end, this.options.minuteSteps);

                setTimeout(function () {
                  _this10._ui.end.minutes.number.classList.add(
                    "is-increment-hide"
                  );

                  setTimeout(function () {
                    _this10._ui.end.minutes.number.innerText =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this10.end,
                        "mm"
                      );
                    _this10._ui.end.minutes.input.value =
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this10.end,
                        "mm"
                      );
                    _this10._ui.end.minutes.number.classList.add(
                      "is-increment-visible"
                    );

                    _this10.emit("select", _this10);

                    if (
                      __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                        _this10.end,
                        "HH"
                      ) !== _this10._ui.end.hours.input.value
                    ) {
                      _this10._ui.end.hours.number.innerText =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this10.end, "HH");
                      _this10._ui.end.hours.input.value =
                        __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                          "l" /* format */
                        ](_this10.end, "HH");
                      _this10._ui.end.hours.number.classList.add(
                        "is-increment-visible"
                      );
                    }
                  }, 100);

                  setTimeout(function () {
                    _this10._ui.end.minutes.number.classList.remove(
                      "is-increment-hide"
                    );
                    _this10._ui.end.minutes.number.classList.remove(
                      "is-increment-visible"
                    );
                  }, 1100);
                }, 100);
              },

              /****************************************************
               *                                                  *
               * PUBLIC FUNCTIONS                                 *
               *                                                  *
               ****************************************************/
            },
            {
              key: "isRange",
              value: function isRange() {
                return this.options.isRange;
              },
            },
            {
              key: "show",
              value: function show() {
                if (!this._open) {
                  this._ui.container.classList.add("is-active");
                  this._open = true;
                  this._focus = true;

                  this.emit("show", this);
                }
              },
            },
            {
              key: "hide",
              value: function hide() {
                this._open = false;
                this._focus = false;
                this._ui.container.classList.remove("is-active");
                this.emit("hide", this);
              },
            },
            {
              key: "toggle",
              value: function toggle() {
                if (!this._open) {
                  this.show();
                } else {
                  this.hide();
                }
              },

              /**
               * Get / Set TimePicker value
               * @param {null|time|Object|String} time optional if null then return the current time as String
               */
            },
            {
              key: "value",
              value: function value() {
                var _value =
                  arguments.length > 0 && arguments[0] !== undefined
                    ? arguments[0]
                    : null;

                // Set
                if (_value) {
                  if (this.options.isRange) {
                    if (
                      __WEBPACK_IMPORTED_MODULE_1__utils_type__[
                        "e" /* isString */
                      ](_value)
                    ) {
                      _value = _value.split(" - ");
                    }

                    if (Array.isArray(_value)) {
                      if (_value.length)
                        this.start = __WEBPACK_IMPORTED_MODULE_0__utils__[
                          "b" /* newDate */
                        ](_value[0], this.format, "yyyy-MM-dd");
                      if (_value.length === 2)
                        this.end = __WEBPACK_IMPORTED_MODULE_0__utils__[
                          "b" /* newDate */
                        ](_value[1], this.format, "yyyy-MM-dd");
                    }
                  } else {
                    this._select(_value, false);
                  }

                  this.refresh();

                  return;
                }

                // Get
                var string = this._isValidTime(this.start)
                  ? __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.start,
                      this.format,
                      { locale: this.locale }
                    )
                  : "";

                if (this.options.isRange && this._isValidTime(this.end)) {
                  string +=
                    " - " +
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.end,
                      this.format,
                      { locale: this.locale }
                    );
                }

                return string;
              },

              /**
               * Refresh Timepicker with new year/month days
               * @method _refreshTimepicker
               * @return {[type]}        [description]
               */
            },
            {
              key: "refresh",
              value: function refresh() {
                this._ui.start.hours.input.value =
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                    this.start,
                    "HH"
                  );
                this._ui.start.hours.number.innerText =
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                    this.start,
                    "HH"
                  );
                this._ui.start.minutes.input.value =
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                    this.start,
                    "mm"
                  );
                this._ui.start.minutes.number.innerText =
                  __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                    this.start,
                    "mm"
                  );

                if (this.options.isRange) {
                  this._ui.end.hours.input.value =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.end,
                      "HH"
                    );
                  this._ui.end.hours.number.innerText =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.end,
                      "HH"
                    );
                  this._ui.end.minutes.input.value =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.end,
                      "mm"
                    );
                  this._ui.end.minutes.number.innerText =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__["l" /* format */](
                      this.end,
                      "mm"
                    );
                }

                return this;
              },
            },
            {
              key: "clear",
              value: function clear() {
                this.time = {
                  start:
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "H" /* startOfToday */
                    ](),
                  end: __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                    "j" /* endOfToday */
                  ](),
                };
                this.refresh();
              },
            },
            {
              key: "render",
              value: function render() {
                this.refresh();
                return this.node;
              },
            },
            {
              key: "id",
              get: function get() {
                return this._id;
              },
            },
            {
              key: "time",
              set: function set(time) {
                if (
                  __WEBPACK_IMPORTED_MODULE_1__utils_type__["d" /* isObject */](
                    time
                  ) &&
                  time.start &&
                  time.end
                ) {
                  this._time = time;
                }
                return this;
              },
              get: function get() {
                return (
                  this._time || {
                    start: undefined,
                    end: undefined,
                  }
                );
              },

              // Set TimePicker language
            },
            {
              key: "lang",
              set: function set(lang) {
                try {
                  this._locale = __webpack_require__(24)(
                    "./" + lang + "/index.js"
                  );
                } catch (e) {
                  lang = "pt-BR";
                  this._locale = __webpack_require__(24)(
                    "./" + lang + "/index.js"
                  );
                } finally {
                  this._lang = lang;
                  return this;
                }
              },

              // Get current TimePicker language
              get: function get() {
                return this._lang;
              },
            },
            {
              key: "locale",
              get: function get() {
                return this._locale;
              },
            },
            {
              key: "start",
              set: function set(time) {
                if (!time) {
                  this._time.start =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "H" /* startOfToday */
                    ]();
                  return this;
                }

                time = __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                  time,
                  this.format,
                  "HH:mm"
                );

                if (this._isValidTime(time, this.min, this.max)) {
                  this._time.start = time;
                }

                return this;
              },
              get: function get() {
                return this._time.start;
              },
            },
            {
              key: "end",
              set: function set(time) {
                if (!time) {
                  this._time.end =
                    __WEBPACK_IMPORTED_MODULE_2_date_fns__[
                      "j" /* endOfToday */
                    ]();
                  return this;
                }

                time = __WEBPACK_IMPORTED_MODULE_0__utils__["b" /* newDate */](
                  time,
                  this.format,
                  "HH:mm"
                );

                if (this._isValidTime(time, this.min, this.max)) {
                  this._time.end = time;
                }

                return this;
              },
              get: function get() {
                return this._time.end;
              },

              // Set min
            },
            {
              key: "min",
              set: function set(time) {
                this._min = __WEBPACK_IMPORTED_MODULE_0__utils__[
                  "b" /* newDate */
                ](time, this.format, "HH:mm");
                return this;
              },

              // Get min
              get: function get() {
                return this._min;
              },

              // Set max
            },
            {
              key: "max",
              set: function set(time) {
                this._max = __WEBPACK_IMPORTED_MODULE_0__utils__[
                  "b" /* newDate */
                ](time, this.format, "HH:mm");
                return this;
              },

              // Get max
              get: function get() {
                return this._max;
              },

              // Set time format (set to HH:mm by default)
            },
            {
              key: "format",
              set: function set(format) {
                this._format = format;
                return this;
              },

              // Get time format
              get: function get() {
                return this._format;
              },
            },
          ]);

          return timePicker;
        })(__WEBPACK_IMPORTED_MODULE_3__utils_events__["a" /* default */]);

        /* harmony default export */ __webpack_exports__["a"] = timePicker;

        /***/
      },
      /* 717 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            '<div class="timepicker' +
            (data.editTimeManually ? " is-hidden" : "") +
            '">\n    <div class="timepicker-start">\n      <div class="timepicker-hours">\n        <span class="timepicker-next">+</span>\n        <div class="timepicker-input">\n          <input type="number">\n          <div class="timepicker-input-number"></div>\n        </div>\n        <span class="timepicker-previous">-</span>\n      </div>\n      <div class="timepicker-time-divider">:</div>\n      <div class="timepicker-minutes">\n        <span class="timepicker-next">+</span>\n        <div class="timepicker-input">\n          <input type="number">\n          <div class="timepicker-input-number"></div>\n        </div>\n        <span class="timepicker-previous">-</span>\n      </div>\n    </div>\n    ' +
            (data.isRange
              ? '<div class="timepicker-end">\n      <div class="timepicker-hours">\n        <span class="timepicker-next">+</span>\n        <div class="timepicker-input">\n          <input type="number">\n          <div class="timepicker-input-number"></div>\n        </div>\n        <span class="timepicker-previous">-</span>\n      </div>\n      <div class="timepicker-time-divider">:</div>\n      <div class="timepicker-minutes">\n        <span class="timepicker-next">+</span>\n        <div class="timepicker-input">\n          <input type="number">\n          <div class="timepicker-input-number"></div>\n        </div>\n        <span class="timepicker-previous">-</span>\n      </div>\n    </div>'
              : "") +
            "\n  </div>"
          );
        };

        /***/
      },
      /* 718 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var defaultOptions = {
          timeFormat: "HH:mm",
          editTimeManually: false,
          color: "primary",
          isRange: false,
          lang: "pt-BR", // internationalization
          startTime: undefined,
          endTime: undefined,
          minTime: null,
          maxTime: null,
          minuteSteps: 5,
        };

        /* harmony default export */ __webpack_exports__["a"] = defaultOptions;

        /***/
      },
      /* 719 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        var defaultOptions = {
          type: undefined,
          color: "primary",
          isRange: false,
          allowSameDayRange: true,
          lang: navigator.language || "pt-BR", // internationalization
          dateFormat: "d/M/yy",
          timeFormat: "HH:mm",
          navigationMonthFormat: "MMMM",
          navigationYearFormat: "yyyy",
          headerMonthYearFromat: "MMMM yyyy",
          displayMode: "default",
          editTimeManually: false,
          position: "auto",
          showHeader: true,
          headerPosition: "top",
          showFooter: true,
          showButtons: true,
          showTodayButton: true,
          showClearButton: true,
          cancelLabel: "Cancelar",
          clearLabel: "Limpar",
          todayLabel: "Hoje",
          nowLabel: "Agora",
          validateLabel: "Validar",
          enableMonthSwitch: true,
          enableYearSwitch: true,
          startDate: undefined,
          endDate: undefined,
          minDate: null,
          maxDate: null,
          disabledDates: [],
          disabledWeekDays: undefined,
          highlightedDates: [],
          weekStart: 0,
          startTime: undefined,
          endTime: undefined,
          minuteSteps: 5,
          labelFrom: "",
          labelTo: "",
          closeOnOverlayClick: true,
          closeOnSelect: true,
          toggleOnInputClick: true,
          onReady: null,
          onValidate: null,
          icons: {
            previous:
              '<svg viewBox="0 0 50 80" xml:space="preserve">\n      <polyline fill="none" stroke-width=".5em" stroke-linecap="round" stroke-linejoin="round" points="45.63,75.8 0.375,38.087 45.63,0.375 "/>\n    </svg>',
            next: '<svg viewBox="0 0 50 80" xml:space="preserve">\n      <polyline fill="none" stroke-width=".5em" stroke-linecap="round" stroke-linejoin="round" points="0.375,0.375 45.63,38.087 0.375,75.8 "/>\n    </svg>',
            time: '<svg version="1.1" x="0px" y="0px" viewBox="0 0 60 60" xml:space="preserve">\n      <g>\n        <path fill="currentcolor" d="M30,0C13.458,0,0,13.458,0,30s13.458,30,30,30s30-13.458,30-30S46.542,0,30,0z M30,58C14.561,58,2,45.439,2,30S14.561,2,30,2s28,12.561,28,28S45.439,58,30,58z"/>\n\t      <path fill="currentcolor" d="M30,6c-0.552,0-1,0.447-1,1v23H14c-0.552,0-1,0.447-1,1s0.448,1,1,1h16c0.552,0,1-0.447,1-1V7C31,6.447,30.552,6,30,6z"/>\n      </g>\n    </svg>',
            date: '<svg version="1.1" x="0px" y="0px" viewBox="0 0 60 60" xml:space="preserve">\n      <g>\n        <path d="M57,4h-7V1c0-0.553-0.447-1-1-1h-7c-0.553,0-1,0.447-1,1v3H19V1c0-0.553-0.447-1-1-1h-7c-0.553,0-1,0.447-1,1v3H3C2.447,4,2,4.447,2,5v11v43c0,0.553,0.447,1,1,1h54c0.553,0,1-0.447,1-1V16V5C58,4.447,57.553,4,57,4z M43,2h5v3v3h-5V5V2z M12,2h5v3v3h-5V5V2z M4,6h6v3c0,0.553,0.447,1,1,1h7c0.553,0,1-0.447,1-1V6h22v3c0,0.553,0.447,1,1,1h7c0.553,0,1-0.447,1-1V6h6v9H4V6zM4,58V17h52v41H4z"/>\n        <path d="M38,23h-7h-2h-7h-2h-9v9v2v7v2v9h9h2h7h2h7h2h9v-9v-2v-7v-2v-9h-9H38z M31,25h7v7h-7V25z M38,41h-7v-7h7V41z M22,34h7v7h-7V34z M22,25h7v7h-7V25z M13,25h7v7h-7V25z M13,34h7v7h-7V34z M20,50h-7v-7h7V50z M29,50h-7v-7h7V50z M38,50h-7v-7h7V50z M47,50h-7v-7h7V50z M47,41h-7v-7h7V41z M47,25v7h-7v-7H47z"/>\n      </g>\n    </svg>',
          },
        };

        /* harmony default export */ __webpack_exports__["a"] = defaultOptions;

        /***/
      },
      /* 720 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            "<div id='" +
            data.id +
            '\'>\n    <div class="datetimepicker-dummy is-hidden">\n      <div class="datetimepicker-dummy-wrapper">\n        <input style="display: none" placeholder="' +
            data.labelFrom +
            '" readonly="readonly" class="datetimepicker-dummy-input' +
            (data.isRange ? " is-datetimepicker-range" : "") +
            '" type="text">\n        ' +
            (data.isRange
              ? '<input  style="display: none" placeholder="' +
                data.labelTo +
                '" readonly="readonly" class="datetimepicker-dummy-input" type="text">'
              : "") +
            '\n      </div>\n      <button class="datetimepicker-clear-button" type="button">\uFF0B</button>\n    </div>\n    <div class="datetimepicker-wrapper' +
            (data.displayMode === "dialog" ? " modal" : "") +
            '">\n        <div class="modal-background' +
            (data.displayMode === "dialog" ? "" : " is-hidden") +
            '"></div>\n        <div class="datetimepicker">\n          <div class="datetimepicker-container' +
            (data.headerPosition === "top" ? "" : " has-header-bottom") +
            '"></div>\n        </div>\n    </div>\n  </div>'
          );
        };

        /***/
      },
      /* 721 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            '<div class="datetimepicker-header' +
            (data.type === "time" ? " is-hidden" : "") +
            (data.type === "date" ? " is-date-only" : "") +
            '">\n\t\t<div class="datetimepicker-selection-details">\n\t\t\t<div class="datetimepicker-selection-from' +
            (data.labelFrom === "" ? " is-hidden" : "") +
            '">' +
            data.labelFrom +
            '</div>\n\t\t\t<div class="datetimepicker-selection-start' +
            (data.isRange ? "" : " is-centered") +
            '">\n\t\t\t\t<div class="datetimepicker-selection-wrapper">\n\t\t\t\t\t<div class="datetimepicker-selection-day"></div>\n\t\t\t\t\t<div class="datetimepicker-selection-date">\n\t\t\t\t\t\t<div class="datetimepicker-selection-month"></div>\n\t\t\t\t\t\t<div class="datetimepicker-selection-weekday"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t' +
            (data.type !== "date"
              ? '<div class="datetimepicker-selection-time">\n\t\t\t\t\t<div class="datetimepicker-selection-time-icon">\n\t\t\t\t\t\t<figure class="image is-16x16">\n\t\t\t\t\t\t\t' +
                (data.icons ? data.icons.time : "") +
                '\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="datetimepicker-selection-hour' +
                (data.editTimeManually ? " editable " : "") +
                '">\n\t\t\t\t\t\t' +
                (data.editTimeManually
                  ? '\n\t\t\t\t\t\t\t<input type="text" class="datetimepicker-selection-input-hours" maxlength="2">:\n\t\t\t\t\t\t\t<input type="text" class="datetimepicker-selection-input-minutes" maxlength="2">\n\t\t\t\t\t\t'
                  : "") +
                "\n\t\t\t\t\t</div>\n\t\t\t\t</div>"
              : "") +
            "\n\t\t\t</div>\n\t\t</div>\n\t\t" +
            (data.isRange
              ? '\n\t\t<div class="datetimepicker-selection-details">\n\t\t\t<div class="datetimepicker-selection-to ' +
                (data.labelTo === "" ? " is-hidden" : "") +
                '">' +
                data.labelTo +
                '</div>\n\t\t\t<div class="datetimepicker-selection-end">\n\t\t\t\t<div class="datetimepicker-selection-wrapper">\n\t\t\t\t\t<div class="datetimepicker-selection-day"></div>\n\t\t\t\t\t<div class="datetimepicker-selection-date">\n\t\t\t\t\t\t<div class="datetimepicker-selection-month"></div>\n\t\t\t\t\t\t<div class="datetimepicker-selection-weekday"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t' +
                (data.type !== "date"
                  ? '<div class="datetimepicker-selection-time">\n\t\t\t\t\t<div class="datetimepicker-selection-time-icon">\n\t\t\t\t\t\t<figure class="image is-16x16">\n\t\t\t\t\t\t\t' +
                    (data.icons ? data.icons.time : "") +
                    '\n\t\t\t\t\t\t</figure>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="datetimepicker-selection-hour' +
                    (data.editTimeManually ? " editable " : "") +
                    '">\n\t\t\t\t\t\t' +
                    (data.editTimeManually
                      ? '\n\t\t\t\t\t\t\t<input type="text" class="datetimepicker-selection-input-hours" maxlength="2">:\n\t\t\t\t\t\t\t<input type="text" class="datetimepicker-selection-input-minutes" maxlength="2">\n\t\t\t\t\t\t'
                      : "") +
                    "\n\t\t\t\t\t</div>\n\t\t\t\t</div>"
                  : "") +
                "\n\t\t\t</div>\n\t\t</div>"
              : "") +
            "\n\t</div>"
          );
        };

        /***/
      },
      /* 722 */
      /***/ function (module, __webpack_exports__, __webpack_require__) {
        "use strict";
        /* harmony default export */ __webpack_exports__["a"] = function (
          data
        ) {
          return (
            '<div class="datetimepicker-footer">\n\t\t<button type="button" class="datetimepicker-footer-validate has-text-success  buttonCalendar is-small is-text ' +
            (data.displayMode === "inline" ? "is-hidden" : "") +
            '">' +
            (data.icons.validate ? data.icons.validate : "") +
            data.validateLabel +
            ' </button>\n\t\t<button type="button" class="datetimepicker-footer-today has-text-warning  buttonCalendar is-small is-text">' +
            (data.icons.today ? data.icons.today : "") +
            data.todayLabel +
            '</button>\n\t\t<button type="button" class="datetimepicker-footer-clear has-text-danger  buttonCalendar is-small is-text">' +
            (data.icons.clear ? data.icons.clear : "") +
            data.clearLabel +
            '</button>\n\t\t<button type="button" class="datetimepicker-footer-cancel  buttonCalendar is-small is-text ' +
            (data.displayMode === "inline" ? "is-hidden" : "") +
            '">' +
            (data.icons.cancel ? data.icons.cancel : "") +
            data.cancelLabel +
            "</button>\n\t</div>"
          );
        };

        /***/
      },
      /******/
    ]
  )["default"];
});
